[{"answer_id":268977,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/268977#268977","body":"<h1>Google Sheets, 113 bytes</h1>\n<p>It assumes the input string is in A1.</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>=OR(MAP({1,0},LAMBDA(o,LEN(REDUCE(A1,SORT(CHAR(ROW(65:90)),1,o),LAMBDA(a,c,REGEXREPLACE(a,&quot;(?i)^&quot;&amp;c&amp;&quot;+&quot;,))))=0)))\n</code></pre>\n"},{"answer_id":268975,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/268975#268975","body":"<h1><a href=\"https://uiua.org\" rel=\"nofollow noreferrer\">Uiua</a> <sup><a href=\"https://www.uiua.org/pad?src=0_7_1__IyBTaW5nbGUtYnl0ZSBjaGFyYWN0ZXIgZW5jb2RpbmcgZm9yIFVpdWEgMC44LjAKIyBXcml0dGVuIGhhc3RpbHkgYnkgVG9ieSBCdXNpY2stV2FybmVyLCBAVGJ3IG9uIFN0YWNrIEV4Y2hhbmdlCiMgMjcgRGVjZW1iZXIgMjAyMwojIEFQTCdzICLijbUiIGlzIHVzZWQgYXMgYSBwbGFjZWhvbGRlci4KCkNPTlRST0wg4oaQICJcMOKNteKNteKNteKNteKNteKNteKNteKNteKNtVxu4o214o21XHLijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbXijbUiClBSSU5UQUJMRSDihpAgIiAhXCIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0-P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXF1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8fX7ijbUiClVJVUEg4oaQICLiiJjCrMKxwq_ijLXiiJril4vijIrijIjigYXiiaDiiaTiiaXDl8O34pe_4oG_4oKZ4oan4oal4oig4oSC4qe74paz4oeh4oqi4oeM4pmtwqTii6_ijYnijY_ijZbiipriipviip3ilqHii5XiiY3iip_iioLiio_iiqHihq_imIfihpnihpjihrvil6vilr3ijJXiiIriipfiiKfiiLXiiaHiip7iiqDijaXiipXiipziipDii4XiipniiKnCsOKMheKNnOKKg-KqvuKKk-KLlOKNouKsmuKNo-KNpOKGrOKGq-Kags63z4DPhOKInuK4ruKGkOKVreKUgOKVt-KVr-KfpuKfp-KMnOKMn-KVk-KVn-KVnCIKQVNDSUkg4oaQIOKKgiBDT05UUk9MIFBSSU5UQUJMRQpTQkNTIOKGkCDiioIgQVNDSUkgVUlVQQoKRW5jb2RlIOKGkCDiipc6U0JDUwpEZWNvZGUg4oaQIOKKjzpTQkNTCgpQYXRoVUEg4oaQICJ0ZXN0MS51YSIKUGF0aFNCQ1Mg4oaQICJ0ZXN0Mi5zYmNzIgoKRW5jb2RlVUEg4oaQICZmd2EgUGF0aFNCQ1MgRW5jb2RlICZmcmFzCkRlY29kZVNCQ1Mg4oaQICZmd2EgUGF0aFVBIERlY29kZSAmZnJhYgoKIyBFeGFtcGxlczoKIwojIFdyaXRlIHRvIC51YSBmaWxlOgojICAgICAmZndhIFBhdGhVQSAi4oqP4o2PLuKKneKWveKJoOKHoeKnuyziipdAQi4iCiMgRW5jb2RlIHRvIGEgLnNiY3MgZmlsZToKIyAgICAgRW5jb2RlVUEgUGF0aFVBCiMgRGVjb2RlIGEgLnNiY3MgZmlsZToKIyAgICAgRGVjb2RlU0JDUyBQYXRoU0JDUwo=\" rel=\"nofollow noreferrer\">SBCS</a></sup>, 9 bytes</h1>\n<pre><code>∊:⊏⊟⊃⍖⍏..\n</code></pre>\n<p><a href=\"https://uiua.org/pad?src=0_7_1__ZiDihpAg4oiKOuKKj-KKn-KKg-KNluKNjy4uCgpmICJBQkNERUYiCmYgIlpZWCIKZiAibm8iCmYgInRyZWUiCmYgInEiCmYgIkFCQ0RDIgpmICJ5ZXMiCmYgImRlZWQiCg==\" rel=\"nofollow noreferrer\">Try it!</a></p>\n"},{"answer_id":268972,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/268972#268972","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 14 bytes</h1>\n<pre><code>{^(&lt;x;&gt;x)?!#x}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJw1jt0KgkAQRu/nKSYLNCiqWzeKsnoCL/qhcMsRRdPaXWFF7NlTa+/ON8PMdyK3vjlLzVZ6vB4MdQOg3Hp0qT7CjRBRs6BImRNEPMmYZhUT42sD6mJttt5uf7DY/Nql8+loMC8MKUH054n1NtPu0LPYog8VSYMhUdgzzMAnqfDBJUkAX5QqrsAUQt8FXQ38GlrL6XSFKiZ8lplKXhmhTbbEsMhthXdBPO23hQhJQGsCcOCZ/P/02j+dBvwM4Av7y02Z\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Returns <code>0</code> for &quot;truthy&quot; inputs and <code>1</code> for &quot;falsy&quot; inputs.</p>\n<ul>\n<li><code>!#x</code> generate <code>0..len(x)</code></li>\n<li><code>(&lt;x;&gt;x)</code> create a two-length list containing the grade up and grade down of the input</li>\n<li><code>(...)?...</code> find the indices in the list; if the indices (as a whole) are not present, this returns <code>0N</code> (the integer null). otherwise, the 0-based index of the matching element is returned (i.e. <code>0</code> or <code>1</code>)</li>\n<li><code>^</code> null - returns <code>1</code> if its input is null, and <code>0</code> otherwise</li>\n</ul>\n"},{"answer_id":157634,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157634#157634","body":"<h1>C++ (gcc), <s>125</s> <s>124</s> <s>123</s> 115 bytes</h1>\n<p>Very boring obvious solution.  We use GCC's internal header to save many includes.  Conveniently, <code>std::ranges::is_sorted()</code> accepts equal adjacent elements, so we don't need to pass a <code>std::less_equal&lt;&gt;()</code> to it.</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#include&lt;bits/stdc++.h&gt;\nint f(auto s){using namespace std::ranges;return is_sorted(s)|is_sorted(s|views::reverse);}\n</code></pre>\n<p>Demo program:</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;cstdio&gt;\n#include &lt;string&gt;\n\nint main(int argc, char **argv)\n{\n    for (int i = 1;  i &lt; argc;  ++i)\n        std::printf(&quot;  %s -&gt; %d\\n&quot;, argv[i], f(std::string{argv[i]}));\n}\n</code></pre>\n"},{"answer_id":262042,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/262042#262042","body":"<h1><a href=\"https://github.com/AlephAlpha/Nekomata\" rel=\"nofollow noreferrer\">Nekomata</a> + <code>-e</code>, 4 bytes</h1>\n<pre><code>oᶜ↔=\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70iLzU7PzexJHFNtJJurpKOgpJuqlLsgqWlJWm6FivyH26b86htiu2S4qTkYqjggpvGSo5Ozi6ubkpcSlGREUAyLx9IlBSlpgKpQiAGSTsD6crUYiCZkpqaogTRCwA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>o       Sort\n ᶜ↔     Optionally reverse\n   =    Check equality\n</code></pre>\n"},{"answer_id":262039,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/262039#262039","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 39 bytes</h1>\n<pre class=\"lang-arturo prettyprint-override\"><code>$-&gt;s[some?@[reverse&lt;=split s]=&gt;sorted?]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?MUX9rS\" rel=\"nofollow noreferrer\">Try it!</a></p>\n<pre><code>$-&gt;s[                      ; a function taking an argument s\n    some?@[...]=&gt;sorted?   ; is at least one item in the list [...] sorted?\n    split s                ; convert s from string to block of length-1 strings\n    &lt;=                     ; duplicate\n    reverse                ; reverse; both stack items get trapped in the list\n]                          ; end function\n</code></pre>\n"},{"answer_id":262028,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/262028#262028","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 28 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>(:&gt;&gt;+(A|:==%:sort)&amp;:any?)%:~\n</code></pre>\n<p>This is equivalent to the below Ruby code, with <code>A</code> equivalent to <code>chars</code> and <code>:~</code> equivalent to <code>reverse</code>:</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{[s,s.reverse].any?{_1.chars==_1.chars.sort}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboWezSs7Oy0NRxrrGxtVa2K84tKNNWsEvMq7TVVreogSm6qFSi4RSs5Ojm7uCrFcoE5rs4uTo4wTkVlVVWlUixE9YIFEBoA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":262025,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/262025#262025","body":"<h1><a href=\"https://github.com/Thunno/Thunno2\" rel=\"nofollow noreferrer\">Thunno 2</a>, 5 <a href=\"https://github.com/Thunno/Thunno2/blob/main/docs/codepage.md\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>r,sṠƇ\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m728JKM0Ly_faMGCpaUlaboWK4p0ih_uXHCsfUlxUnIxVHDBkpKi1FQIGwA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h4>Explanation</h4>\n<pre class=\"lang-python prettyprint-override\"><code>r,sṠƇ  # Implicit input\nr,     # Pair the input with its reverse\n  sṠ   # Sort the input\n    Ƈ  # Is this in the list?\n       # Implicit output\n</code></pre>\n"},{"answer_id":253260,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/253260#253260","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 19 bytes</h1>\n<pre><code>{t:!#x;(t~&lt;x)|t~&gt;x}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6ousVJUrrDWKKmzqdCsKamzq6jl4tJXCCkqLcmo5EqLVnJ0cnZxdVOKBbEjIqMgjKjICAgjLx9ClxSlpgJZQJ1uiTnFqXCdzhDpytRiCCMlNTVFKRYAT8Yi2w==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>A little bit lengthy. I have considered using inline assignment, but it seems to be on the same length as this one. Returns <code>0</code> for false and <code>1</code> for true.</p>\n<p>Explanations:</p>\n<pre><code>{t:!#x;(t~&lt;x)|t~&gt;x}  Main function. Takes x as input\n t:                  Assign variable t to\n   !                 Range between 0 to\n    #x;              Length of x (exclusive)\n       (  &lt;x)        Ascended version of x\n         ~           Matches (deep equal)\n        t            Variable t\n             |       Or\n                &gt;x   Descended version of x\n               ~     Matches\n              t      Variable t\n</code></pre>\n"},{"answer_id":253246,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/253246#253246","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 39 bytes</h1>\n<p>Returns <code>false</code> for ordered and <code>true</code> for unordered.</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{!(s+$/+s.reverse)[s.chars.sort*&quot;&quot;]}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsEiN9ulpSVpuhY31XXtiqsVNYq1VfS1i_WKUstSi4pTNaOL9ZIzEouK9Yrzi0q0lJRia6HK1QoU3KKVHJ2cXVyVYrnAHFdnFydHGKeisqqqUikWonrBAggNAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253240,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/253240#253240","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>ÞȮ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwiw57IriIsIiIsIlwiQUJDREVGXCJcblwiWllYXCJcblwibm9cIlxuXCJ0cmVlXCJcblwicVwiXG5cIkFCQ0RDXCJcblwieWVzXCJcblwiZGVlZFwiIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Simple means <code>is ordered?</code></p>\n"},{"answer_id":180963,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/180963#180963","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 49 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)$a-in(0,1|%{-join($a|% t*y|sort -d:$_)})\n</code></pre>\n\n<p><a href=\"https://tio.run/##ZdDNCsIwDADg@54ijExaWUGvguD/M6iXUWxEZbqt7dCx7dln/ReaU/iSEJI8u5I2B0rTDvcwhrrLpZZnhpKjFMcLG8TDJqrFKXM5yiYC268ak2kLQo0w4S3v2iCYsABcxCyczuaL5SqMAa0uiX94u1l7dsk8sprIw8KTx5L5Q/cyNT@uyPioiNSfcmgggvpZReOcbjntLCl3PCYv1mTK1DrouZ@geWKI7O2Ciu8QH326w6Dt7g\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":112720,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112720#112720","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/UnprintableName\" rel=\"nofollow noreferrer\">√ å ı ¥ ® Ï Ø ¿</a> , 3 bytes</h1>\n<pre><code>Ißo\n</code></pre>\n<p>This is a stack-based language that uses cp-1252 encoding. Full description at the link in the title.</p>\n<h2>How it works</h2>\n<pre><code>I   - Take input and convert to characters\n ß  - Is sorted?\n  o - Output\n</code></pre>\n"},{"answer_id":163346,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/163346#163346","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 75 bytes</h1>\n\n<pre><code>proc L s {expr {[set C [split $s \"\"]] in [list [lsort $C] [lsort -de $C]]}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##NY2xDsIwDET3fIVlsfIDbBBg6gdAQwbUeIgU2hAbCRTl24MrxPLOdyf5ZEq957JMMABDpXcuUB2TgAXHOUWBDQOi9xBncCmyKHkpmlv/P7eBVutb6@lxz@sng/uDPZ7OaHC8XpTzopBCpPJE8@utmg@xMhAFNA1qfgnr5u4GblD1rX8B\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157565,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157565#157565","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 13 bytes</h1>\n\n<pre><code>L,B#b+dbRB]Ae\n</code></pre>\n\n<p><a href=\"https://tio.run/##lVPdbtMwFL52nuIoTAqIILVwMYkKKWuHisSQEGW7YIqYE5@umVIntZ2OaNoN9zwD94in4gl4g3KOk6BKjAlkJXac78/HtlSqrne7k3j6IHussnfT9Ah3x3EuyzJO4nEaBMexq6wzhb6kiTAKVXK1FWICi8aYqtEKrgu3ggjcCjXgVpZMuaoKTXDBwJlB6RAkLBudu6LS4CpgAGQtXOgLsLXM0QbCo19@kuu6JLi5bNaonX0uQJyfRzLLFS4jGKVpILLTZ09nHv62sSuS9hITIRbvj2av4QXs4SlaRJREnSXzLk9VtxzBVfXfGTB8stvJ4cHH1nMf6ieHj/rA95E7S3JMPO1NtUX6NZj@SRvaiGg3Q71vu7R6i8Yxt5u9jx6NvO@rfp06p8Jreu6ICsBY3l20Lo4DEXbzIYTOIFK3CYf6OtO4VQu0tw0v@w5/plC3YfuwRUt0hajC31u0lKXFf5OAiATozQKsN03VWXbql7SQVEc6aFAW1v2fyo/P32/4VN96oTk6r2PQNqXbDzQCbmMYe@d5Ms094UNRdwedy7WP3z@ZFKTz98NN3/scYx75LDTs4/Ad6OOYQsGyMmvpJkFwwB7dbfj59cu33S8\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a> Based on <a href=\"https://codegolf.stackexchange.com/users/66833/caird-coinheringaahing\">@caird coinheringaahing</a>'s <a href=\"https://codegolf.stackexchange.com/a/157468/39244\">answer</a>.</p>\n\n<h2>Explanation</h2>\n\n<pre><code>L,            [arg]                   Lambda with no flags\n  B#          [sorted(arg)]           Sort every item in stack\n    b+        [sorted]                Reduce top item by addition (string join)\n      d       [sorted sorted]         Duplicate\n       bR     [sorted reversed]       Reverse top item\n         B]   [[sorted reversed]]     Clear stack and add stack as single stack item (sorted + reversed)\n           A  [[sorted reversed] arg] Add arguent\n            e [result]                Top item is found in second top item (Python's \"x in y\")\n</code></pre>\n"},{"answer_id":157675,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157675#157675","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"nofollow noreferrer\">Retina</a>, 26 bytes</h1>\n<pre><code>O`.\nV`\n$\n¶$+¶$+1¶\n(.+)¶\\1¶\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxLNPz/3z9BjyssgUuF69A2FW0QNjy0jUtDT1vz0LYYIPP/f0cnZxdnAA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a></p>\n<p>I still haven't seen a Retina program anywhere making use of the history feature, so here it is.</p>\n<h3>Explanation</h3>\n<pre><code>O`.\n</code></pre>\n<p>Sort the input</p>\n<pre><code>V`\n</code></pre>\n<p>Reverse it</p>\n<pre><code>$\n¶$+¶$+1¶\n</code></pre>\n<p>Append at the end of the string a newline <code>¶</code>, followed by the original input to the program <code>$+</code>, another newline, the result of the first stage <code>$+1</code>, and a final newline. What we get is &quot;input sorted descending¶original input¶input sorted ascending¶&quot;</p>\n<pre><code>(.+)¶\\1¶\n</code></pre>\n<p>Count the pairs of consecutive identical lines. This can be either <code>0</code>, if the input was unordered, or <code>1</code> if the input was ordered.</p>\n"},{"answer_id":157631,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157631#157631","body":"<h1>C, 68 bytes</h1>\n\n<p>This assumes the use of a character encoding such as ASCII where the letters are in ascending (or descending) order.</p>\n<pre class=\"lang-c prettyprint-override\"><code>f(char*s){for(int a=3;*s&amp;&amp;a;++s)a&amp;=s[1]&lt;=*s|2*(s[1]&gt;=*s);return!*s;}\n</code></pre>\n<p>We use variable <code>a</code> to store two flags - bit 0 is set if everything we've seen so far is consistent with an ascending sequence, and bit 1 if it's consistent with descending.  Before we've seen anything, both are true.</p>\n<p>If both these flags become false before the end of string, we exit the loop before <code>s</code> points at the terminating NUL and so return false (<code>0</code>).</p>\n<p>If we reach the end of string, then we return true (<code>1</code>).</p>\n<h2>Test program</h2>\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main(int argc, char **argv)\n{\n    for (int i = 1;  i &lt; argc;  ++i)\n        printf(&quot;  %s -&gt; %d\\n&quot;, argv[i], f(argv[i]));\n}\n</code></pre>\n"},{"answer_id":157468,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157468#157468","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, <s>28</s> 18 bytes</h1>\n\n<pre><code>L,2]dbRAº=\nL^,bU#\n</code></pre>\n\n<p><a href=\"https://tio.run/##lVPBbtNAED2vv2JkKrkIIznlUKlRJTcpyoEgIUJ6oDJ07d00rpy1s7tOsapcuPMNvXFAfAHHfgpfwB@EmXUMkSgVaGXv2vvem7czs1yIqtpsxuFBItLXJ3ffjr3xuzCdPtqchhkvijAOe4nnnYa2NFbn6hJ/@IEv4qsVY32Y1FqXtRJwnds5BGDnUoFc8YIoV2WuEM4IONSSWwkcZrXKbF4qsCUQANIGLtQFmIpn0njMoZ9/4IuqQLi@rBdSWXPEgJ2fBzzNhJwFECWJx9Lps4Ohg7@qzRylnUSfscmbk@ELOIYdPFoLkBKLs3jU@imrhizYsvo7A7pPijY@3HvfOO6@enr4eGv4IXIbEiPGjvayXEnc6oL@SetGhLSbLt/r1q1aSW2J2/59iB5ELu7d5yfbk6oMU6/wuccsAKGpvtLY8Cj0mN9u@OBbLSVOS79LsdW1nTeA5a3p5PdYIApOS3LgN9IgXUgp/F9VmvHCyH@TgAAF8E0CpDdIxFk6dWeacEwl9hoUubH/p/L949cbauy1ExpJ63S0NHVhdw31gEbkijFIRvEgc4S3edX2OuVrF/87di9BI218t1xuZ@cjopXz0jYx2aFrsFbOjs4FzEq94LbveXsUo70QP24/fdn8BA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157476,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157476#157476","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 9 <a href=\"https://codegolf.meta.stackexchange.com/a/9429/43319\" title=\"When can APL characters be counted as 1 byte each?\">bytes</a><sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\" title=\".dyalog files using a single byte character set\">SBCS</a></sup></h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>∨/⍬∘⍋⍷⍒,⍋\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24RHHSv0H/WuedQx41Fv96Pe7Y96J@kAWf//q4cUlZZkVFqpc6mrc6UpPOqb6hXs76egruTo5Ozi6qaEKhgVGYEmkpePJlBSlJqKJlSoBDZd3S0xpxiHTc5oWipTi9FEUlJTU6DmeOaVJeZkpmCa5JGak4PuHjRuTB5QAAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>∨/</code> Is it anywhere true that (lit. OR-reduction of)</p>\n\n<p><code>⍬∘⍋</code> the indices (viz. those that would put the argument into its current order)</p>\n\n<p><code>⍷</code> are found in (each position of)</p>\n\n<p><code>⍒</code> the indices that would put the argument into descending order</p>\n\n<p><code>,</code> followed by</p>\n\n<p><code>⍋</code> the indices that would put the argument into ascending order?</p>\n"},{"answer_id":108715,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108715#108715","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 33 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>(%)=scanl1\nf s=s==max%s||s==min%s\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/X0NV07Y4OTEvx5ArTaHYttjWNjexQrW4pgbEysxTLf6fYxut5Ojk7OLqpqSjFBUZASTz8oFESVFqKpAqBGKQtDOQrkwtBpIpqakpSrFcuYmZeQq2CrmJBb4KBUWZeSUKKiCOQppCzn8A\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n\n\n<p><em>Thanks to Ørjan Johansen for 1 byte with aliasing <code>scanl1</code> infix.</em> </p>\n\n<p>Haskell is an interesting language to golf sorting-based challenges because it does not have a built-in sort, barring a lengthy <code>import Data.List</code>. This encourages finding a way to do the task by hand without explicitly sorting.</p>\n\n<p>The code uses <code>scanl1</code>, which folds an operation over the list from left to right, keeping track of the intermediate results. So, <code>scanl1 max</code> has the effect of listing the cumulative maxima of the list, i.e. the maxima of progressively longer prefixes. For example, <code>scanl1 max [3,1,2,5,4] == [3,3,3,5,5]</code>.</p>\n\n<p>The same with <code>min</code> checks whether the list is decreasing. The code checks the two cases and combines them with <code>||</code>.</p>\n\n<p>Compare to other expressions:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(%)=scanl1;f s=s==max%s||s==min%s\n\nf s=or[s==scanl1 q s|q&lt;-[min,max]]\nf s=s==scanl1 max s||s==scanl1 min s\nf s=any(\\q-&gt;scanl1 q s==s)[min,max]\nf s=any((==s).(`scanl1`s))[min,max]\nf s=elem s$(`scanl1`s)&lt;$&gt;[min,max]\n</code></pre>\n"},{"answer_id":151043,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/151043#151043","body":"<h1>q/kdb+, 20 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>{x in(asc;desc)@\\:x}\n</code></pre>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>q){x in(asc;desc)@\\:x}\"tree\"\n1b\nq){x in(asc;desc)@\\:x}\"yes\"\n0b\nq){x in(asc;desc)@\\:x}\"ABCDEF\"\n1b\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<pre><code>{x in(asc;desc)@\\:x} / the solution\n{                  } / anonymous lambda function\n                   x / implicit input\n               @\\:   / apply (@) each left (\\:) to x\n     (asc;desc)      / list of two functions, sort ascending and descending respectively\n x in                / is x in either sorted/unsorted list?\n</code></pre>\n\n<p><strong>Notes:</strong></p>\n\n<p>Closest equivalent in K4 would be <code>{x in x@(&gt;:;&lt;:)@\\:x}</code> for 20 bytes too...</p>\n"},{"answer_id":150956,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/150956#150956","body":"<h1>APL NARS <s>30</s> 19 chars</h1>\n<pre><code>{(⊂⍵[⍋⍵])∊(⊂⍵),⊂⌽⍵}\n</code></pre>\n<p><s>{(⍵[⍋⍵]≡⍵[⍳⍴⍵])∨⍵[⍋⍵]≡⍵[⌽⍳⍴⍵]}</s></p>\n<p>Copy the algo of 'Emigna' in APL...Test</p>\n<pre><code>  f¨'ABCDEF' 'ZYX' 'tree' 'q'\n1 1 1 1 \n  f¨'ABCDC' 'yes' 'deed' \n0 0 0 \n</code></pre>\n"},{"answer_id":112434,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112434#112434","body":"<h1><a href=\"https://developer.apple.com/swift/\" rel=\"nofollow noreferrer\">Swift 4</a>, 70 bytes</h1>\n\n\n\n<pre class=\"lang-swift prettyprint-override\"><code>var o=Array(readLine()!);var g=o.sorted();print(o==g||o==g.reversed())\n</code></pre>\n\n<p><a href=\"https://tio.run/##Ky7PTCsx@f@/LLFIId/WsagosVKjKDUxxSczL1VDU1HTGiSRbpuvV5xfVJKaoqFpXVCUmVeikW9rm15TAyL1ilLLUouKQXKa//87Ojm7uLoBAA\" rel=\"nofollow noreferrer\" title=\"Swift 4 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150556,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/150556#150556","body":"<h1><a href=\"http://www.mlton.org/\" rel=\"nofollow noreferrer\">Standard ML (MLton)</a>, <s>99</s> 93 bytes</h1>\n\n\n\n<pre class=\"lang-ml prettyprint-override\"><code>open Char\nfun g(x::y::r)c=c(x,y)andalso g(y::r)c|g&amp;c=1=1\n(fn$ =&gt;g$op&lt;=orelse g$op&gt;=)o explode\n</code></pre>\n\n<p><a href=\"https://tio.run/##XY3BasMwDIbveQphSomhHeSaTYEmXV@gl62MjRAracGxUtsdCezdU6e7zNPt@/T/kuv1tteezTzzQAaqc22T9magS8c8n/LcygabdNxMsjaq1o7D5lf/dOsGM8yS71pDi2lrVoBFt@LhBdmSdgQLFCgZaBw0K5qXqCfnAWGwF@OBIfTAYeE@xYcRMoiSWT95PvoQ6AK3jwdfoZImEObRF7uy2r8exPMfdXp/i9hwhN4SReIa6N/FKgpM5CJWRErI@Q4\" rel=\"nofollow noreferrer\" title=\"Standard ML (MLton) – Try It Online\">Try it online!</a> The last line is an anonymous function. Example usage: <code>((fn$ =&gt;g$op&lt;=orelse g$op&gt;=)o explode) \"somestring\"</code>. Returns <code>true</code> or <code>false</code>.</p>\n\n<p><strong>Ungolfed code:</strong></p>\n\n<pre class=\"lang-ml prettyprint-override\"><code>open Char\nfun g (x::y::r) c = c(x,y) andalso g (y::r) c\n  | g     _     c = true\nfun h s = g s op&lt;= orelse g s op&gt;=\nval f = h o explode\n</code></pre>\n"},{"answer_id":108700,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108700#108700","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl</a>, 35 bytes</h1>\n\n<p><i>Saved 4 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/72767/xcali\">@Xcali</a> directly, and 4 more indirectly.</i></p>\n\n<p>31 bytes of code + <code>-pF</code> flag.</p>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>@b=reverse@a=sort@F;$_=/@a|@b/x\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/98hybYotSy1qDjVIdG2OL@oxMHNWiXeVt8hscYhSb/iv7WCSryCtq2CwX9HJ2cXVzeuqMgIrrx8rpKi1FSuQi6QoDNXZWoxV0pqasq//IKSzPy84v@6vqZ6BoYG/3VzCtwA\" rel=\"nofollow noreferrer\" title=\"Perl – TIO Nexus\">Try it online!</a></p>\n\n<p>The code sorts the input, and checks if the inputs matches itself sorted (or in reverse order).</p>\n"},{"answer_id":108723,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108723#108723","body":"\n<h1>R, 48 <s>50</s> <s>61</s> bytes</h1>\n<p>As an unnamed function</p>\n<pre class=\"lang-R prettyprint-override\"><code>function(s)sd(range(sign(diff(utf8ToInt(s)))))&lt;1\n</code></pre>\n<p>Thanks to @guiseppe for a few extra bytes.</p>\n<p><code>charToRaw</code> takes <code>s</code> and splits into a raw vector. This is converted to integers and a <code>diff</code> applied.  <code>sign</code> makes the diffs a single unit.  <code>range</code> reduces the vector to it's minimum and maximum.  Then if the standard deviation <code>sd</code> is less than 1 it is TRUE</p>\n<p><a href=\"https://tio.run/##Pck9DoAgDIbh3YtQRjcHPYC7F@CnJSwloeX8FUPiNz353m50GQ1OWhuDeMnQAxcEqYUhVyIYSsfTbtaZv527EThFUee3qRDTQophISP2pY6Y/2/KXg\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":108738,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108738#108738","body":"<h1>Scala, 47 bytes</h1>\n\n<pre><code>def f(x:String)=x==x.sorted|x==x.sorted.reverse\n</code></pre>\n"},{"answer_id":116657,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/116657#116657","body":"<h2><a href=\"https://github.com/m-ender/alice\" rel=\"nofollow noreferrer\">Alice</a>, 15 bytes, non-competing</h2>\n\n<pre><code>/o.zz./\n@inssR\\\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/alice#@6@fr1dVpafP5ZCZV1wcFPP/f0lRaioA\" rel=\"nofollow noreferrer\" title=\"Alice – TIO Nexus\">Try it online!</a></p>\n\n<p>Prints nothing (or rather an empty string) as the falsy value and <code>Jabberwocky</code> as the truthy value.</p>\n\n<h3>Explanation</h3>\n\n<pre><code>/.../\n@...\\\n</code></pre>\n\n<p>This is a template for linear string-processing programs that operate entirely in Ordinal mode. However, the code in between is executed in a zig-zag pattern first from left to right and then right to left. Unfolding this part, the actual program we get looks like this:</p>\n\n<pre><code>i.szR.szno\n</code></pre>\n\n<p>And here is what that does:</p>\n\n<pre><code>i   Read all input as a string.\n.s  Duplicate and sort it.\nz   \"Drop to substring\". If the original contains the sorted version (which means\n    they're equal) this results in the empty string, otherwise we get the original back.\nR   Reverse the string.\n.sz Do the same thing again.\n    If either the original or the reversed original was sorted, we end up\n    with an empty string (falsy), otherwise we get the reverse of the original\n    (truthy, because it's non-empty).\nn   Logical NOT. Turns non-empty strings into empty (falsy) strings and\n    empty strings into \"Jabberwocky\".\no   Print the result.\n</code></pre>\n"},{"answer_id":112545,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112545#112545","body":"<h1>8086 machine code, <s>68</s> <s>61</s> <s>48</s> <s>46</s> <s>45</s> 39 bytes</h1>\n<pre><code>00000000  b2 31 be 82 00 ac 9f 88  c3 ac 3c 0d 74 14 38 c3  |.1........&lt;.t.8.|\n00000010  74 f5 e3 03 b1 00 9f 77  05 9e 76 ea eb 03 9e 77  |t......w..v....w|\n00000020  e5 4a b4 02 cd 21 c3                              |.J...!.|\n00000027\n</code></pre>\n<p>Assembled from:</p>\n<pre><code>org 0x100\nuse16\n    mov dl, 0x31\n    mov si, 0x82\n    lodsb\na:  lahf\nb:  mov bl, al\n    lodsb\n    cmp al, 0x0d\n    je y\n    cmp bl, al\n    je b\n    jcxz @f\n    mov cl, 0\n    lahf\n@@: ja @f\n    sahf\n    jbe a\n    jmp n\n@@: sahf\n    ja a\nn:  dec dx\ny:  mov ah, 0x02\n    int '!'\n    ret\n</code></pre>\n"},{"answer_id":112473,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112473#112473","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 5 bytes</h1>\n\n<p>I've tried to find a 4 bytes solution without success, so for now here's the most interesting 5 bytes solution I've found:</p>\n\n<pre><code>:No₎?\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/brachylog2#@2/ll/@oqc/@/3@l1JTkpEQlAA\" rel=\"nofollow noreferrer\" title=\"Brachylog – TIO Nexus\">Try it online!</a></p>\n\n<p><code>o</code>, the ordering function, can take a parameter: <code>0</code> means ascending order, <code>1</code> means descending order. We set that parameter to an unbound variable <code>N</code>. Brachylog will try different values for <code>N</code> (only <code>0</code> or <code>1</code> are possible), try to unify the result with the input, and return whether any of those tries succeeded.</p>\n"},{"answer_id":112437,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112437#112437","body":"<h1><a href=\"https://gitjub.com/fergusq/roda\" rel=\"nofollow noreferrer\">Röda</a>, 75 bytes</h1>\n\n<pre><code>f s{x=[split(s,sep=\"\")];[s=[sort(x)]&amp;\"\"or s=[sort(x,cmp={|a,b|[a&gt;b]})]&amp;\"\"]}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/roda#PYpBCsIwEEWvMsxCWsgNpIJWPUM1BEltCgXbxEwWlaRnjxkXbt77PH4egeLaSHKvKVQkyLgGsVZ7SSVaH6q1VjtE6@EfxHN2TUxa9EnqQ6@230NtedbTAhEkHk/t@XJFAXi/dazgjWEvlvlm8Kfl8THEGowZUEGCER6Fzk9LKGvLXw\" rel=\"nofollow noreferrer\" title=\"Röda – TIO Nexus\">Try it online!</a></p>\n\n<p>Alternative solution:</p>\n\n<pre><code>f s{x=[split(s,sep=\"\")];[s in[[sort(x)]&amp;\"\",[sort(x,cmp={|a,b|[a&gt;b]})]&amp;\"\"]]}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/roda#LYpRCsIwEESvsuyHtJAbSAWteoZqWKS1KQRsGrP5qCQ9e@2KP@/NMLMOwGmuNPuXjQUrNr5CLGmvGazTmqcQi7mkHaL6F/UcfZVyq7qs20NHy28lWtaxtQ4SaDye6vPligrwfmtEMRgjdpPwLZBPLeFjWNQb0yNBhgEeG32wLm5pWb8\" rel=\"nofollow noreferrer\" title=\"Röda – TIO Nexus\">Try it online!</a></p>\n\n<p>It is possible that shorter solutions exist, but I couldn't find them now.</p>\n"},{"answer_id":112436,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112436#112436","body":"<h2>Python 3.5+, 37 bytes</h2>\n\n<pre><code>lambda a:sorted(a)in([*a],[*a][::-1])\n</code></pre>\n"},{"answer_id":108697,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108697#108697","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, <s>12</s> 11 bytes</h1>\n\n<pre><code>q_$_W%+\\#)g\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/cjam#@18YrxIfrqodo6yZ/v9/SVFqKgA\" rel=\"nofollow noreferrer\" title=\"CJam – TIO Nexus\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>q            Push the input\n _$          Duplicate and sort\n   _W%       Duplicate and reverse\n      +      Concatenate the sorted and the reversed strings\n       \\     Bring input to the top\n        #    Find the index of the input in the other string; returns -1 if not found\n         )   Increment\n          g  Signum (coerces to 0 or 1)\n</code></pre>\n"},{"answer_id":110291,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/110291#110291","body":"<h1>SmileBASIC, <s>91</s> <s>89</s> 84 bytes</h1>\n<pre><code>DIM A[1]INPUT S$WHILE LEN(S$)&gt;1PUSH A,ASC(POP(S$))-ASC(POP(S$))WEND?MIN(A)*MAX(A)==0\n</code></pre>\n<p>Makes an array of the differences between consecutive characters (and an extra 0), and checks if either the min or max is 0.</p>\n"},{"answer_id":110215,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/110215#110215","body":"<h1>PHP 7, 63 bytes</h1>\n<pre><code>for($s=$argv[1];$s[++$i]&amp;a;)${$s[$i-1]&lt;=&gt;$s[$i]}=1;echo!$${-1};\n</code></pre>\n"},{"answer_id":109027,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/109027#109027","body":"<h2>GNU sed, 97 + 1(r flag) = 98 bytes</h2>\n\n<p>If the letters are ordered, the script returns <strong><code>1</code></strong>, otherwise <strong><code>0</code></strong>. In sed there are no data types.</p>\n\n<pre><code>s:$: zyxwvutsrqponmlkjihgfedcba:\ns:(.*(.)(.).* ).*\\2.*\\3.*:\\1abcdefghijklmnopqrstuvwxyz:i\n//c0\nc1\n</code></pre>\n\n\n\n<p>To check if all letters are arranged in ascending order, I do a table lookup of each pair of consecutive letters in a descending alphabet, that is I try to find a counter example. Note that <code>//</code> actually repeats the last regular expression match! <em>(see lines 2 and 3)</em></p>\n\n<p><strong>Run example:</strong> the script can test multiple input words, one per line</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>me@LCARS:/PPCG$ echo -e \"tree\\nABCDC\" | sed -rf word_ordered.sed\n1\n0\n</code></pre>\n\n\n"},{"answer_id":108909,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108909#108909","body":"<h1><a href=\"https://racket-lang.org/\" rel=\"nofollow noreferrer\">Racket</a>, 93 bytes</h1>\n\n<pre><code>(define(f s)(let([t(string-&gt;list s)])(or(equal?(sort t char&lt;=?)t)(equal?(sort t char&gt;=?)t))))\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/racket#bYxNDoJADEb3nKIZN@3CGyhEUc/gT1xMoIPEcZCZsvD02JAYg7GL16Rfv7fwNjQQbXVnGbFm1wZGB4nQs@BFMElsQ7PMfZtEz1fCLiL3g/UFpi4KCFQ3G1frgoT@BPkU6HzsIJxkKXFgwElqNttytz8YMOfTURk6hURmXb0hyvBhn@C@PcqymctZn2ayUpsvTsqauf5VTO80vgE\" rel=\"nofollow noreferrer\" title=\"Racket – TIO Nexus\">Try it online!</a></p>\n\n<p>Ungolfed:</p>\n\n<pre><code>(define (lex-sorted? string)\n  (let ([char-list (string-&gt;list string)])\n    (or\n     (equal? (sort char-list char&lt;=?) char-list)\n     (equal? (sort char-list char&gt;=?) char-list))))\n</code></pre>\n\n<p>Using the sort then compare to original approach</p>\n"},{"answer_id":108736,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108736#108736","body":"<h1>Clojure, <s>69</s> 66 bytes</h1>\n\n<pre class=\"lang-clj prettyprint-override\"><code>#(let[s(apply str(sort %))](or(= % s)(= %(apply str(reverse s)))))\n</code></pre>\n<p>-3 by inlining <code>reversed</code>.</p>\n<p>My original try ended up being a longer version of the other Clojure answer, so I went the &quot;sorted&quot; route. Checks if the original string is equal to a sorted version of itself, or a reversed sorted string. Amazingly, <code>(apply str (reverse s)</code> ended up being shorter than using the built-in reverse string method.</p>\n<pre class=\"lang-clj prettyprint-override\"><code>(defn lex? [s]\n  ; (apply str ...) basically just turns a list into a string\n  (let [sorted (apply str (sort s))\n        reversed (apply str (reverse sorted))]\n    (or (= s sorted) (= s reversed))))\n</code></pre>\n"},{"answer_id":108875,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108875#108875","body":"<h1>C++, 138 bytes</h1>\n\n<pre><code>#import&lt;algorithm&gt;\nusing namespace std;f(string s){string u,t=s;sort(t.begin(),t.end());u=t;reverse(u.begin(),u.end());return s==t||s==u;}\n</code></pre>\n"},{"answer_id":108767,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108767#108767","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 44 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{[s,s.reverse].include?s.chars.sort.join}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/ruby#lYxBCsIwFET3nuKTdf03UNGqZ1BLFiUZ2ookmp8K0nr2yF@4FjfzGHgzZbmWqZFKOOGJJLA8BHcbPTbCrm@TsMSU@RqH8C7d6h990Zjtrt4fjqYiczmfFCFq5gQoH8YyWtfTRHOG5JnuYxbqGi2Wvg@1ui@IwgP@x6qUDw\" rel=\"nofollow noreferrer\" title=\"Ruby – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108797,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108797#108797","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"noreferrer\">C (gcc)</a>, 70 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>o(s,a)char*s;{for(a=0;s[1];s++)a|=s[1]-*s&amp;64|*s-s[1]&amp;32;return a!=96;}\n</code></pre>\n\n<p>I was hoping to find a shorter solution based on a recursive function, but it didn't work out due to the output requirement. So here's an imperative approach. At least, C's operator precedence works nicely for the inner loop statement.</p>\n\n<p><a href=\"https://tio.run/nexus/c-gcc#VY7LCsIwEEX3/YoxoiS1ii8EjRV8foPPRWwiFjTVTFyI@u21UURyV3PPzJ2ZPKMYCZYchQmRPw6ZoSJucty0dhxrNSaesavrIVZ73WeIdeeqnTY3yt6MBlGK@z3@ysupTk43qWCIVqZZ4zgKglRbsAotULceQmTwCKDQxRStAyUVHEBFbjWJACMoPmGMB69v8CxSTX8Bt4WS8WQ6my9IMfNn69XSBzrzvTVK@USIfeKTq2/dnamP7gp9IJWTJJ@H8zc\" rel=\"noreferrer\" title=\"C (gcc) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108774,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108774#108774","body":"<h1>Octave, 24 bytes</h1>\n<pre><code>@(s)issorted(s,'either')\n</code></pre>\n<p><a href=\"https://tio.run/#z36e7\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n"},{"answer_id":108729,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108729#108729","body":"<h2>Scala, 52 bytes</h2>\n\n<pre><code>def p(s:String)=List(s,s.reverse).contains(s.sorted)\n</code></pre>\n"},{"answer_id":108711,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108711#108711","body":"<h1>Pyth, 5 bytes</h1>\n<pre><code>}Q_BS\n</code></pre>\n<p>A program that takes input of a <code>&quot;quoted string&quot;</code> and prints <code>True</code> or <code>False</code> as appropriate.</p>\n<p><a href=\"http://pyth.herokuapp.com/?code=%7DQ_BS&amp;test_suite=1&amp;test_suite_input=%22ABCDEF%22%0A%22ZYX%22%0A%22no%22%0A%22tree%22%0A%22q%22%0A%22ABCDC%22%0A%22yes%22%0A%22deed%22&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n<p><strong>How it works</strong></p>\n<pre><code>}Q_BS   Program. Input: Q\n}Q_BSQ  Implicit variable fill\n Q      Is Q\n}       in\n    SQ  Q sorted\n   B    or\n  _     Q sorted reversed?\n        Implicitly print\n</code></pre>\n"},{"answer_id":108698,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108698#108698","body":"<h1><a href=\"https://github.com/FTcode/Pushy\" rel=\"nofollow noreferrer\">Pushy</a>, 7 bytes</h1>\n\n<pre><code>ogoGo|#\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/pushy#@5@fnu@eX6P8//9/pZKi1FQlAA\" rel=\"nofollow noreferrer\"><strong>Try it online!</strong></a></p>\n\n<p>Explanation:</p>\n\n<pre><code>      \\ Implicit: Input on stack as charcodes\nog    \\ Check if the stack is sorted ascendingly (Push 0/1)\noG    \\ Check if the stack is sorted descendingly (Push 0/1)\n      \\   - Note that this will work regardless of the first check, as input\n      \\     is guaranteed to be /[A-Za-z]+/\no|    \\ Bitwise OR\n#     \\ Print the result\n</code></pre>\n"},{"answer_id":108726,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108726#108726","body":"<h1>PHP, 66 bytes</h1>\n<pre class=\"lang-php prettyprint-override\"><code>$a=$s=$r=str_split($argv[1]);sort($s);rsort($r);echo$s==$a|$r==$a;\n</code></pre>\n<p>takes input from command line argument. Run with <code>-r</code>.</p>\n"},{"answer_id":108725,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108725#108725","body":"<h2>Mathematica, 33 bytes</h2>\n\n<pre><code>0&lt;=##||##&gt;=0&amp;@@ToCharacterCode@#&amp;\n</code></pre>\n\n<p>Based on <a href=\"https://codegolf.stackexchange.com/a/47929/8478\">this tip</a>. Unfortunately, I have to use <code>ToCharacterCode</code> instead of <code>Characters</code>, because <code>&lt;=</code> and <code>&gt;=</code> don't compare strings.</p>\n"},{"answer_id":108719,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108719#108719","body":"<h2>Clojure, 47 bytes</h2>\n\n<pre><code>#(let[c(map int %)a apply](or(a &lt;= c)(a &gt;= c)))\n</code></pre>\n"},{"answer_id":108706,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108706#108706","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>4</s> 5 bytes</h1>\n\n<pre><code>Ṣm0ẇ@\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/jelly#@/9w56Jcg4e72h3@H91zuP1R0xpvII78/1/d0cnZxdVNXUdBPSoyAkTl5YPIkqLUVBBdCCJAapxBjMrUYhDl4urqog4A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>Originally was <code>Ṣm0w</code> at four bytes.</p>\n\n<h2>Explanation</h2>\n\n<pre><code>Ṣm0ẇ@  Input: string S\nṢ      Sort S\n m0    Concatenate sort(S) with reverse(sort(S))\n   ẇ@  Sublist exists? Check if S is contained in the previous result\n</code></pre>\n"},{"answer_id":108710,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108710#108710","body":"<h2>Haskell, <s>54</s> 50 bytes</h2>\n\n<pre><code>t a=or[and(zipWith(&lt;=)`f`tail$a)|f&lt;-[(=&lt;&lt;),(&lt;*&gt;)]]\n</code></pre>\n\n<p>Usage example: <code>t \"defggh\"</code> -> <code>True</code>. <a href=\"https://tio.run/nexus/haskell#BcFBCoAgEADAryziQaN@sPaNDiK4YOpCmcieor/bzBQg9wxPLZmX@8FSDTobcxTiS5P9Mm7eOES7Glx2G8K8iRs46IObgAYBlc5cSlUwfw\" rel=\"nofollow noreferrer\" title=\"Haskell – TIO Nexus\">Try it online!</a>.</p>\n\n<p>Maybe using <code>sort</code> like may other answers is shorter although it requires <code>import Data.List</code>. Here's a different approach:</p>\n\n<p>For every function <code>f</code> from <code>[(=&lt;&lt;),(&lt;*&gt;)]</code>, calculate <code>and(zipWith(&lt;=)`f`tail$a)</code> and require any of the results to be <code>True</code>. The functions are</p>\n\n<pre><code>((=&lt;&lt;) (zipWith(&lt;=)) tail) a\n((&lt;*&gt;) (zipWith(&lt;=)) tail) a\n</code></pre>\n\n<p>which both perform comparisons of neighbor elements of the input list <code>a</code> with <code>&lt;=</code>, but one with the arguments flipped resulting in a <code>&gt;=</code>. <code>and</code> checks if all comparisons are <code>True</code>.   </p>\n"},{"answer_id":108682,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108682#108682","body":"<h1>JavaScript (ES6) <s>74</s> <s>62</s> <s>50</s> <s>47</s> 43 bytes</h1>\n<pre><code>([...a],b=a+'')=&gt;b==a.sort()|b==a.reverse()\n</code></pre>\n<p>After some golfing and bugfixing, this answer ended up being pretty much the same as ETHProduction's, so please check his answer out and give it a <code>+1</code>.</p>\n"},{"answer_id":108714,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108714#108714","body":"<h1>Pyth, 5 bytes</h1>\n\n<pre><code>}SQ,_\n</code></pre>\n\n<h3>Explanation:</h3>\n\n<pre><code>}SQ,_\n}SQ      Check if the sorted input is a member ...\n   ,_QQ  ... of [reversed input, input]\n</code></pre>\n"},{"answer_id":108708,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108708#108708","body":"<h1><a href=\"http://perl6.org/\">Perl 6</a>, 25 bytes</h1>\n\n<pre><code>{[le] .comb or[ge] .comb}\n</code></pre>\n\n<h3>How it works:</h3>\n\n<ul>\n<li><code>.comb</code> splits the input into a sequence of characters.</li>\n<li><code>le</code> and <code>ge</code> are the <em>\"less or equal\"</em> and <em>\"greater or equal\"</em> string comparison operators.</li>\n<li><code>[ ]</code> around an infix operator, reduces (\"folds\") the argument list with that operator. (It's smart enough to return True if the input has only zero or one characters.)</li>\n<li><code>or</code> returns True if the expressions on either side of it is true.</li>\n</ul>\n"},{"answer_id":108713,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108713#108713","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 46 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.List\nf s=sort s`elem`[s,reverse s]\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/haskell#TYtBCsIwEEX3nuIzK4XgDVrQVlceQC2FBjqFgEnTzCB4@pgsBDfvwee/7Hxck6K3ao83J7pbII3USSZ@sZ8GMYnfnIQhY/bWBTSIyQXFHt5GLBjodO76y5UMPR/3wrAWaGIu2mjEAW37a/6Tjgzow1I1M8/1mr8\" rel=\"nofollow noreferrer\" title=\"Haskell – TIO Nexus\">Try it online!</a> Usage: <code>f \"somestring\"</code>, returns <code>True</code> or <code>False</code>.</p>\n\n<p>Not as interesting as <a href=\"https://codegolf.stackexchange.com/a/108710/56433\">nimi's approach</a>, but some bytes shorter.</p>\n\n<p>Given a string <code>s</code>, we check whether <code>s</code> sorted is euqal to the original or reversed string.</p>\n"},{"answer_id":108701,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108701#108701","body":"<h1>Bash + coreutils, 59 bytes</h1>\n\n<pre><code>f()(sed 's/\\(.\\)/\\1\\\n/g'&lt;&lt;&lt;$s|grep .|sort -c$1)\ns=$1\nf||f r\n</code></pre>\n\n<p>The input string is passed as an argument.</p>\n\n<p>The output is returned in the exit code (0 for truthy, 1 for falsy, as usual), as allowed by <a href=\"http://meta.codegolf.stackexchange.com/questions/2447/default-for-code-golf-input-output-methods/5330#5330\">PPCG I/O methods</a>.</p>\n"},{"answer_id":108704,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108704#108704","body":"<h1><a href=\"https://github.com/lmendo/MATL\">MATL</a>, 7 bytes</h1>\n\n<pre><code>dZSuz2&lt;\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/matl#@58SFVxaZWTz/7@6o5Ozi6ubOgA\" title=\"MATL – TIO Nexus\">Try it online!</a> Or <a href=\"https://tio.run/nexus/matl#S/ifEhVcWmVk898l5L@6o5Ozi6ubOpd6VGQEkMzLBxIlRampQKoQiEHSzkC6MrUYSKakpqaoAwA\">verify all test cases</a>.</p>\n\n<pre><code>d     % Implicitly input string. Push array of consecutive differences of code points\nZS    % Sign. Transforms each entry into 1, 0 or -1\nu     % Unique\nz     % Number of nonzeros\n2&lt;    % Is it less than 2? Implicit display\n</code></pre>\n"},{"answer_id":108703,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108703#108703","body":"<h2>Pyke, 5 bytes</h2>\n<pre><code>SD_]{\n</code></pre>\n<p><a href=\"http://pyke.catbus.co.uk/?code=SD_%5D%7B&amp;input=abcd\" rel=\"nofollow noreferrer\">Try it here!</a></p>\n<pre><code>S     -   sorted(input)\n   ]  -  [^, v]\n D    -    ^\n  _   -   reverse(^)\n    { - input in ^\n</code></pre>\n"},{"answer_id":108692,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108692#108692","body":"<h1><a href=\"https://docs.python.org/2/\">Python 2</a>, <s>53</s> <s>44</s> <s>40</s> 39 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:`sorted(a)`[2::5]in(a,a[::-1])\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/python2#S7ON@Z@TmJuUkqiQaJVQnF9UkpqikaiZEG1kZWUam5mnkaiTGG1lpWsYq/k/Lb9IIVMhMw@ICkpLNDStuBQKijLzShQyddQVdO0U1HXSNDI1/0crOTo5u7i6KekoRUVGAMm8fCBRUpSaCqQKgRgk7QykK1OLlWK5AA\" title=\"Python 2 – TIO Nexus&quot;/ZgIyGm9eSaOZk25@MkQogyyNDjXbkesIWVg4CiZP8Wga2DOHAuw1dDuQdtgGOugDsfu1J@VVbfrRRiToGTvRYv0f3fir1/V2PwA &quot;Python 2 – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108690,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108690#108690","body":"<h1>MATL, 8 bytes</h1>\n<pre><code>tPvGSXma\n</code></pre>\n<p><a href=\"https://tio.run/nexus/matl#@18SUOYeHJGb@P@/uqOTi7OLOgA\" rel=\"nofollow noreferrer\"><strong>Try it Online!</strong></a></p>\n<p><strong>Explanation</strong></p>\n<pre><code>        % Implicitly grab the input as a string\ntP      % Create a copy that is reversed\nv       % Vertically concatenate these\nGS      % Grab the input again and sort it\nXm      % Check if each row of the normal and reversed matrix is equal to the sorted one\na       % Check if either row matched\n        % Implicitly display the result\n</code></pre>\n"},{"answer_id":108687,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108687#108687","body":"<h1>MATLAB / Octave, 38 bytes</h1>\n<pre><code>@(x)any(all([x;flip(x)]'==sort(x)',1))\n</code></pre>\n<p><a href=\"http://ideone.com/613pjC\" rel=\"nofollow noreferrer\">Online demo</a></p>\n"},{"answer_id":108688,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108688#108688","body":"<h2><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, 36 bytes</h2>\n\n<p>Byte count assumes ISO 8859-1 encoding.</p>\n\n<pre><code>$\n¶$_¶$_\nO^#`\\G.\nOr`.\\G\n(.+)\\D*\\b\\1$\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#U9VwT/ivwnVom0o8CHP5xyknxLjrcfkXJejFuHNp6GlrxrhoxSTFGKr8/@/o5Ozi6sYVFRnBlZfPVVKUmspVyAUSdOaqTC2GsJwcAQ\" rel=\"nofollow noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108683,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108683#108683","body":"<h1>JavaScript (ES6), 43 bytes</h1>\n\n<pre><code>([...s],q=s+\"\")=&gt;q==s.sort()|q==s.reverse()\n</code></pre>\n"},{"answer_id":108681,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108681#108681","body":"<h1>TI-Basic, 66 + 78 = 144 bytes</h1>\n\n<pre><code>Input Str1\nFor(I,1,length(Str1\ninString(Str2,sub(Str1,I,1-&gt;L1(I\nEnd\nL1-&gt;L2\nAns-&gt;L3\nSortA(L2\nSortD(L3\nL1=L2 or L1=L3\n</code></pre>\n\n<p>And in <code>Str2</code> you must have this (+78 bytes):</p>\n\n<pre><code>`ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\n</code></pre>\n"},{"answer_id":108680,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108680#108680","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell</a>, 61 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)$a-in-join(($b=[char[]]$a)|sort),-join($b|sort -des)\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/powershell#@1@QWJSYq6GSqKmSqJuZp5uVn5mnoaGSZBudnJFYFB0bC5SpKc4vKtHUgcipJIG5CropqcWa////r0wtBgA\" rel=\"nofollow noreferrer\" title=\"PowerShell – TIO Nexus\">Try it online!</a></p>\n\n<p>Takes input <code>$a</code>, then checks whether it's <code>-in</code> a two-element array. The array is formed by taking <code>$a</code>, casting it as a <code>char</code>-array, storing that in <code>$b</code> for later, piping it to <code>sort-object</code> which sorts lexically. The other element is <code>$b</code> sorted in <code>-des</code>cending order.</p>\n"},{"answer_id":108679,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108679#108679","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 5 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>,Ue@Ṣ\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/nexus/jelly#@68TmurwcOei////lxSlpgIA\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></strong></p>\n\n<h1>How?</h1>\n\n<pre><code>,Ue@Ṣ - Main link: string\n,     - pair string with\n U    - reverse(string)\n    Ṣ - sorted(string)\n  e@  - exists in with reversed arguments\n</code></pre>\n"},{"answer_id":108676,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108676#108676","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 5 bytes</h1>\n\n<pre><code>Â)¤{å\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@3@4SfPQkurDS///ryxOBQA\" rel=\"noreferrer\" title=\"05AB1E – TIO Nexus\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>Â)     # pair the input with it's reverse in a list\n  ¤{   # get a copy of the reverse and sort it\n    å  # check if the sorted copy is in the list of [input,reverse_input]\n</code></pre>\n"}]