[{"answer_id":266436,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/266436#266436","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, <s>13</s> 12 bytes</h1>\n<p>-1 byte from @ovs' improvement</p>\n<pre><code>+/1_!'/|1!:\\\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJw1kMtuGzEMRdfVV9BAgLQI65FEPWY8qy666KqLdpcGjeHYsRE7k2bGgIM+vr33OghEihJfos5mcdWEn7PL5k+YLX44Ny1+X1y//HtebETk1N8OD/37281yt+9P/Uv//OHmL3Iur8PVrMTei5eAlcSkxQpRgknEXiW2YkGsUDJSqpQkJUj1Uqt0SM8SvElgUcQ5JglIDIY+pb5qC1+HXgE+lERD9wRbOokZljHkGOqND1onBn9CX6tJUoBGLyl1knKS7LOkLkqOHdRLzia5tlIsS24LJsxSarxxrnHbaXoaF02zGu7W98N+Mx+n5ephfVptl4/36/lqODS/jutx2g2PYxPQuVhzGO6O++P4cTweDktGnPu+3Y0C+fr5yzf55H3CX+fOvfMqkHCWpGIq7VlChOIWaSssfIYcK6+amQ9/QVHBuaJLxb1jeVYiVTJlJ14j8gKLwFUJ9W1rGej4QmCA9cCr5KsErCSsRMwhOCL72XkeQ9QYTXwNpJWolayVsJW0lbiVvJXAuSEK5ErmSuhK6vwLTuDu/gNzfYnZ\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<ul>\n<li><code>|1!:\\</code> generate a two-item list containing <code>(0..n; n)</code></li>\n<li><code>!'/</code> mod <code>n</code> by each of <code>0..n</code></li>\n<li><code>1_</code> drop the first result, corresponding to <code>n % 0</code></li>\n<li><code>+/</code> take the sum and (implicitly) return</li>\n</ul>\n"},{"answer_id":266434,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/266434#266434","body":"<h2>Malbolge Unshackled, 1,828,225 bytes.</h2>\n<p>Available <a href=\"https://github.com/kspalaiologos/codegolf-submissions/blob/master/150563.mb\" rel=\"nofollow noreferrer\">on GitHub</a> as StackExchange does not allow posting answers this long.</p>\n<p>Use as, having obtained fast20 or any Malbolge Unshackled interpreter:</p>\n<pre><code>$ echo -ne &quot;\\xFF&quot; | time ./fast20 150563.mb | xxd\n00000000: c3\n</code></pre>\n"},{"answer_id":266103,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/266103#266103","body":"<h1><a href=\"https://dyalog.com\" rel=\"nofollow noreferrer\">APL(Dyalog Unicode)</a>, <sup><s></s></sup>8 bytes <sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre><code>+/⊢|⍨1↓⍳\n</code></pre>\n<p><a href=\"https://razetime.github.io/APLgolf/?h=AwA&amp;c=09Z/1LWo5lHvCsNHbZMf9W4GAA&amp;f=e9Q39VHbhDQFQxMA&amp;i=AwA&amp;r=tryapl&amp;l=apl-dyalog&amp;m=train&amp;n=f\" rel=\"nofollow noreferrer\">Try it on APLgolf!</a></p>\n"},{"answer_id":266014,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/266014#266014","body":"<h1><a href=\"https://uiua.org\" rel=\"nofollow noreferrer\">Uiua</a>, 7 <a href=\"https://www.uiua.org/pad?src=U0JDUyDihpAgK0BcMOKKlwpEZWNvZGUg4oaQIOKHjOKKjy0x4pa9wrEu4o2Y4ouv4oav4oqCwq8x4qe74ouv4qe7LOKHjOKItSjihpjCrzHii68rMjU2KSAtQFwwKzEKJnAg4oqCIjggYml0IGVuY29kaW5nOlx0IiBTQkNTICLih4ziio8tMeKWvcKxLuKNmOKLr-KGr-KKgsKvMeKnu-KLr-Knuyzih4ziiLUo4oaYwq8x4ouvKzI1NikiIOKKgitAXDDih6ExMjkiLiziiLY74oiYwqzCscKv4oy14oia4peL4oyK4oyI4oGFPeKJoDziiaQ-4omlKy3Dl8O34pe_4oG_4oKZ4oan4oal4oig4qe74paz4oeh4oqi4oeM4pmt4ouv4o2J4o2P4o2W4oqa4oqb4oqd4pah4oqU4omF4oqf4oqC4oqP4oqh4oav4oaZ4oaY4oa74per4pa94oyV4oiK4oqXL-KIp1xc4oi14omh4oi64oqe4oqg4o2l4oqV4oqc4oip4oqT4oqD4oqZ4ouF4o2Y4o2c4o2a4qyaJz_ijaPijaQh4o6L4oas4pqCzrfPgM-E4oiefl9bXXt9KCnCr0AkXCLihpB8IyIKJnAg4oqCImRlY29kZWQ6XHQiIERlY29kZSAiwqPCsS0xwrjChy7DjMKlwrPCsMKIMcKfwqXCnyzCo8K_KMK1wogxwqUrMjU2KSIg4oqCK0BcMOKHoTEyOSIuLOKItjviiJjCrMKxwq_ijLXiiJril4vijIrijIjigYU94omgPOKJpD7iiaUrLcOXw7fil7_igb_igpnihqfihqXiiKDip7vilrPih6HiiqLih4zima3ii6_ijYnijY_ijZbiipriipviip3ilqHiipTiiYXiip_iioLiio_iiqHihq_ihpnihpjihrvil6vilr3ijJXiiIriipcv4oinXFziiLXiiaHiiLriip7iiqDijaXiipXiipziiKniipPiioPiipnii4XijZjijZzijZrirJonP-KNo-KNpCHijovihqzimoLOt8-Az4TiiJ5-X1tde30oKcKvQCRcIuKGkHwjIg==\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>/+◿+1⇡.\n</code></pre>\n<p><a href=\"https://uiua.org/pad?src=ZiDihpAgLyvil78rMeKHoS4KCuKItWbih6ExNA==\" rel=\"nofollow noreferrer\">Try it!</a></p>\n<pre><code>/+◿+1⇡.\n      .  # duplicate\n     ⇡   # range\n   +1    # plus one\n  ◿      # mod\n/+       # sum\n</code></pre>\n"},{"answer_id":261793,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/261793#261793","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 21 bytes</h1>\n<pre class=\"lang-arturo prettyprint-override\"><code>$-&gt;n[∑map n'x-&gt;n%x]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?D0JmQn\" rel=\"nofollow noreferrer\">Try it!</a></p>\n"},{"answer_id":261792,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/261792#261792","body":"<h1><a href=\"https://github.com/bbrk24/Trilangle\" rel=\"nofollow noreferrer\">Trilangle</a>, 45 bytes</h1>\n<pre><code>&lt;'?0'1...Lj2'&lt;.zj2'.......L-)S+%,7#..@!,,,/^S\n</code></pre>\n<p>Try it on <a href=\"https://bbrk24.github.io/Trilangle/#%3C%27%3F0%271...Lj2%27%3C.zj2%27.......L-)S%2B%25%2C7%23..%40!%2C%2C%2C%2F%5ES\" rel=\"nofollow noreferrer\">the online interpreter</a>!</p>\n<p>TODO: add colorized explanation</p>\n<pre><code>&lt;'?0'1...Lj2'&lt;.zj2'.......L-)S+%,7#..@!,,,/^S\n\n  ?                                           Get number from stdin\n   0'                                         Start sum at 0\n '   1                                        Start counter at 1\n          j2'  zj2'       L-     7            Compare the counter and the input\n                                     @!,,,/   If they're the same, print the sum and exit\n                            )S+%,           S Otherwise, add one iteration and increment the counter\n             &lt;      .             #        ^  Loop\n</code></pre>\n"},{"answer_id":261788,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/261788#261788","body":"<h1><a href=\"https://codewithrockstar.com/\" rel=\"nofollow noreferrer\">Rockstar</a>, 91 bytes</h1>\n<pre><code>listen to N\nD's 0\nO's 0\nwhile N-D\nlet D be+1\nlet M be N/D\nturn M down\nlet O be+N-M*D\n\nsay O\n</code></pre>\n<p><a href=\"https://codewithrockstar.com/online\" rel=\"nofollow noreferrer\">Try it</a> (Code will need to be pasted in)</p>\n"},{"answer_id":261779,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/261779#261779","body":"<h1><a href=\"https://github.com/Thunno/Thunno2\" rel=\"nofollow noreferrer\">Thunno 2</a> <code>S</code>, 2 bytes</h1>\n<pre><code>R%\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m728JKM0Ly_faGm0UrBS7IKlpSVpuhaLglSXFCclF0O5CxYZmkBYAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h4>Explanation</h4>\n<pre class=\"lang-python prettyprint-override\"><code>R%  # Implicit input.\nR   # Range. Push [1..input].\n %  # Mod. Vectorises.\n    # S flag sums.\n    # Implicit output.\n</code></pre>\n"},{"answer_id":252889,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252889#252889","body":"<h1>Mathematica, 20 bytes</h1>\n<pre><code>Sum[Mod[#,i],{i,#}]&amp;\n</code></pre>\n<p><a href=\"https://www.wolframcloud.com/obj/2d8e8611-e52e-4dc7-a490-2fe0d8c580fa\" rel=\"nofollow noreferrer\">View it on Wolfram Cloud!</a></p>\n"},{"answer_id":252888,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252888#252888","body":"<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 52 bytes</h1>\n<pre><code>import sugar,sequtils\nn=&gt;toSeq(1..n).foldl(a+n%%b,0)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704LzN3wU31gqL8ZIVijTQrBRBLI88qM69EE0wo2CqkJmfkK6RpGJpoLi0tSdO1uGmemVuQX1SiUFyanlikU5xaWFqSmVPMVayRZ2tXkh-cWqhhqKeXp6mXlp-TkqORqJ2nqpqkY6AJ1b4ASkFpAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252886,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252886#252886","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 16 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>~x=sum(x.%(1:x))\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/v67Ctrg0V6NCT1XD0KpCU/N/dEFRZl5JTp5GTkFiikamjpGmjpKVgpIOmFuXqWOsqamQll@kkKmQmadgaGVoGvsfAA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252788,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252788#252788","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 52 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func(n int)(o int){for k:=1;k&lt;=n;k++{o+=n%k};return}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY1NCoMwFIT3OcUjICTElv4tSmM2PUEP0E2wpjyCLxJiN-JJupFCD-VtqtbF8MHAN_P-PMMw8saW3j4rqC0Sw7oJMcGWuzpx9rIRHJhvm9zmPJ5cS6UgQEpShAWdCxH8xey1Lwxpr1QXlKHM9zpWqY3Ur-51dpcLIaFjs4azhoU57DQqNZW3OE06wbPjA6bcieeYgxMoJevZujQMf_4A\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252786,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252786#252786","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 16 bytes (Non-competitive)</h1>\n<pre><code>{+/{x!g}'1+!g-1}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6rW1q+uUEyvVTfUVkzXNazl4kq3MjThSouOVdBXMDYE8owMoDwzEM8YxjM0tgAA73sOtQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Non-competitive, because required the use of a global variable called <code>g</code> to get input. The reason is because lambda functions in K cannot access variables  of another function if they are in that function.</p>\n<p>Explanation:</p>\n<pre><code>{+/{x!g}'1+!g-1}    Main function. Takes g as input (g=14)\n           !        Generate a range from 0 to\n            g-1     g - 1 (exclusive)               (g-1=13=&gt;range=0..12)\n         1+         + 1 for each element            (range=1..13)\n        '           For each element\n   {   }            Execute a function that returns\n    x!g             g mod x (x = element)\n +/                 Sum\n</code></pre>\n"},{"answer_id":252750,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252750#252750","body":"<h1>Rust, 27 characters</h1>\n<pre class=\"lang-rust prettyprint-override\"><code>|n|(1..n).map(|i|n%i).sum()\n</code></pre>\n<p>Based on <a href=\"https://codegolf.meta.stackexchange.com/questions/25156/should-rust-anonymous-functions-fully-specify-parameter-types\">Should rust anonymous functions fully specify parameter types?</a> I assume that return type inference is also fine.</p>\n<p><a href=\"https://tio.run/##LctNCoMwEEDhtZ5iKhRmQALRrio9TJAUBpJR8rNKPHsaqOv3vZBjal8Bb1iQyjg4m2B3R8zBwgdalYpaKSHlzYmVqzyZVMweqQ3bnwcbs0tv4HXpyz2jflHvZ2BJTh44lWuab9rD1X4\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252747,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252747#252747","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 24 bytes</h1>\n<p>Equivalent to <a href=\"https://codegolf.stackexchange.com/a/150569/11261\">my Ruby answer</a>.</p>\n<pre><code>(:-&amp;(:&amp; &amp;:%|:+&amp;:sum))%:+\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBojTbpaUlaboWOzSsdNU0rNQU1KxUa6y01ayKS3M1NVWttCHSywsU0qINTWIhvAULIDQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n\n"},{"answer_id":230241,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230241#230241","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell Core</a>, <s>37</s> 30 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)1..$a|%{$r+=$a%$_}\n$r\n</code></pre>\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNydFNzi9K/f@/ILEoMVdDJVHTUE9PJbFGtVqlSNtWJVFVJb6WS6Xo////hiYA\" rel=\"nofollow noreferrer\" title=\"PowerShell Core – Try It Online\">Try it online!</a></p>\n<p><em>-7 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/80745/mazzy\">@mazzy</a>!</em></p>\n"},{"answer_id":230061,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230061#230061","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, <s>15</s> 13 bytes</h1>\n<pre><code>ns,[:lf%f,]&amp;+\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/z@vWCfaKidNNU0nVk37/39DEwA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p><em>Thanks LyricLy for the tip that dropped 2 chars.</em></p>\n<p>This generates the modulo numbers on a stack, then sums them and relies on the default action to print the stack to show the answer.</p>\n<pre><code>ns,             # Read the N req from STDIN, stash it away, then decrement\n    [     ,]    # Loop to decrement the top of stack and exit then that's 0\n     :l         # Duplicate the top of stack, restore N from backup cell\n       f%f      # Flip top two stack enrtries, do modulo math, flip again\n             &amp;+ # Sum the stack\n                # Ends with one entry on the stack, which prints as a number\n</code></pre>\n"},{"answer_id":230062,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230062#230062","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a>, 30 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>;=x+=s=y 0P;W&gt;x=y+yT=s+s%x yOs\n</code></pre>\n<p><a href=\"https://tio.run/##rVhbU9tGFH62f8XiDJbWlhtJuDMZy7KHpJBhSiCBpHkANzWyDJoRskeSG2igfz095@yutGubtGnLg8Tunuu35yZHveso@vosyaJ0NYuHRTlLFj/cjJr6TppcGVtReb@M14jyJLs2tsrkVtDM4nmSxSxNWbrIrulRbb4/@fCGefXy/P0Z8@vlL/tnrF8vD09esRf18uwD82riw@Nzjfbkw7FG@uHkzf75z3bBmQ2P9p/ej7w62z8HpeIoupnmHV4R6zRgp2Ifjfr1ycnBRzzK4Ah9eYD/hkPzHMXTOfzzYKcph5VB8PL09Jgo4DEGrwbgiqb77LU4BNbKuN@n6Srm/CKb8GaTzIYbiKe34Vnr4PTQ/hqEd92wCO@Z@zb4OLoL77v378OiW@zesfvT4isHolbQhCtZTvMitjn70mwkWcmSoNmAXRLvsM58lUWwgwpYBOvydukUy@zCn4RfXMd9DJrAxkJBD28XiD/fJGlsgzlAaAurHNa6LC@zy/llzr48XkxsPnjW4qS0kcyZLY1nYcisZxZnQoTa3YHdywy2u12xA0oacVrE@sajVMzspJgl10mp2EENWug5lZHi3WGey7qsI03sdjnrMcu1QBaalHCWx@Uqz0SIPjABORsOWZ9XXiZFuvgc53YEYpU@9vDAlA0RrSJy7JPFpbvJFleS0HMA3bDaXjMCMwGMgOhhQJLNVksbL4NJjHoMVlyyCX2XllUrb1kCbaACUyvt7PlzBvkK/4MJy2lRsvImBpnTvARiCWhHIYQ3EaGShrIK0/XvrIKnx8UNaV5jFLkTsCVSvhar5RKh5Or@1Y4OrB4pAKgmEGWooFtmEHFQLTDGpKkChvcWG1PdGMiNQ9zAyjHAioHhrKKEio3wzcY0QFOnabqI7L7reBw9wm3TCSH0TAP@rVWZQJIVm4dsMvm2Wb9/8PLVb@92jn861ZwwJPibEnYMEa@Pzp/i3dvkFea@tirLj56wvG/ymiSPWFPyVYawBVSYoGgsClvVFIpCiK8yiRidXq3mF35/Io0Q4Lcp5yrtxRJ6Szm3gRS82k3TWUsl82gE2eigkHUBEJmVAFHhhX6Dbsi8PdNJ9BzjY8xaZb6KWxAX1T6GCezPp5CveNDKVmnaqiFAP9F1WZsRjE8vF4sUDq5MAJ50tfbqW/50vt8h3cqrdSvxzspF9r/aCJFYLtLU1k11mOtA1f0XJmcbJmOzerP/9sTBliXiDJZHF57ruhPqbLBUqyL5I/5UMnwFzTpCNW8RAVg5@PDpuRd6qvNh0cHmhy96@uK1BwSHR8cHHTaHehU0qsiW@rAURtOlk8YZNUoNK1t2FYEZ5NxTYKwzYiPAPjJf5FAzqeVCfxsSFgEU9gQPq2IQ3S7XboBASiZ1XUCYkgmqKT4nZXRjd2jOYOagARgx@Rdhr7D2rQFDLYIgREBxUIHCyNvklBQv5yMjZHlALa@moAGszLF90Ax2MeFf6jCDOYPKrVB8BopN2fk0m9m87d7N4a8mfAuEIFRAdB2XKQxTdpuuso0XhF1qlmQ8SOa2TdeJzTe6ydEUB8KUc3HLoRtsNRVeaJfSdyD0UXeiWiDxCJS5iJGsm7WVL2t3BH118qo@QU4d4YrmN6DBYIDwC5eLZZzZmmKnlbeoW4NV4a3oXRCOoe/2X9C@7O@2GArmYPoMnYKpCCLWwZEJyKF90wp1gGoVXTZssm5IYwcmLFByCTfIIV0ENUrohMzXx4YaxtqTd@BJfAcjEyb7hp87xqXTvLyDhWyD8HgjOkBLauKikf9kDeRMtiWOq8In@0/rZHV7BfMIdiCuWhB@DNRD3EY1VKzn9H1k7xbIaObCJjPACcOIrhcKKW/VpOoAu0s8zaTYpxqY7Fj6DaiGLlA4rVHAxIArlKCJ@zSgY@02nl70ekg6EZPmJY22DWXW7g@dAuyxYcWZSrVcM39VFur2q5gQ05cwqFsZRGUSyiVWZAwt7XrEQNswb1t8qCE1zNhMxZIv7hxHUEoGcQFEhduY5aHy0ufbQzWaluol50CvW8PE1f8oi8N86NC7lDVC@tXbiE4t2nFaNu0VTJ36dragsN6dt@DQ2cBB3Os2FG63uNYhmlAXQgzQgmyqkKF1Cd9NSBT0eiRPAkUdc/2iBaKlkf3PvwnM8@3A7H6TaXc706@EpuGQGOZpz9e9DCTsAvWQ9bwKZaIF6D3Is54HOebpxP53Ug@hPBq0YYikpHegdlwFOQHtj1yJtc9pWumEhH9zPSHoUOtSQ/J/rZZiHhmpFpqJNmZ6PA11ZJF1IH7bAGZBMGbG6EGbDtMSDGW4glNVcV@UFqTdCaGAaSaP/rvJo//B5JEyeWeLzaG0WZo8ftpkoXWLyXg8ZgaBX1H4qvbubLOzXlTuqaDVBVTmtevMQV@2lZWxzimjsOJ/@Cf8Mnw1MRV/YA10amNCWqcN64Q1j797BFZjUT0DI13DmIOrLCIalDgJDW4tw5ADKbrdik2Y/BHcEz9h6DOK4R3T255kOzIHPiTV@Mf@YE@D5bWYNkOtOXf12rU5XWdyZnWqXNgzZqFzAfSa0GC9WvrbquUer1qIX3H3afNveikahm@8iqiaG6tOqrdVHzxErV0P@yv1FhH/4pBeRNGVmQDaZ/F8ukpL8EwNJ0kGh8mMfn2YRmWcQyOJLBxXcIezJ75/UBjNp/K3rEf6Ar2dJpnN8ScN@gjBn7xtlxSbw/7jV6//Fw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p>Pretty straightforward.</p>\n<pre class=\"lang-php prettyprint-override\"><code># init x with input converted to number,\n# and sum and y to 0\n; = x + (= sum = y 0) PROMPT\n# for 1..x\n; WHILE (&gt; x (= y + y 1))\n    # sum += x % y\n    : = sum + s (% x y)\n: OUTPUT sum\n</code></pre>\n"},{"answer_id":230063,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230063#230063","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.unicode</code>, 33 bytes</h1>\n<pre><code>[ dup [1,b) [ mod ] with map Σ ]\n</code></pre>\n<p><a href=\"https://tio.run/##S0tMLskv@h8a7OnnbqWQnVqUl5qjkJtYkqFXlJiXnloMZisUpxaWpuYlQ7l6pXmZyfkpqQoFRaklJZUFRZl5JQrWXFyGJv@jFVJKCxSiDXWSNBWiFXLzUxRiFcozgSbkJhYonFusEPs/OTEnR0HvPwA\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<ul>\n<li><p><code>dup</code> Duplicate the input.</p>\n<p><strong>Stack:</strong> (e.g.) <code>14 14</code></p>\n</li>\n<li><p><code>[1,b)</code> Make a range from <code>1</code> inclusive to <code>14</code> exclusive.</p>\n<p><strong>Stack:</strong> <code>14 { 1 2 ... 13 }</code></p>\n</li>\n<li><p><code>[ mod ] with map</code> Do <code>14 1 mod</code>, <code>14 2 mod</code>, <code>14 3 mod</code>, etc. and collect the results in a sequence the same length as the range.</p>\n<p><strong>Stack:</strong> <code>{ 0 0 2 2 4 2 0 6 5 4 3 2 1 }</code></p>\n</li>\n<li><p><code>Σ</code> Sum.</p>\n<p><strong>Stack:</strong> <code>31</code></p>\n</li>\n</ul>\n"},{"answer_id":230058,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230058#230058","body":"<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>ɽ%∑\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=&amp;code=%C9%BD%25%E2%88%91&amp;inputs=14&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>s</code>, 2 bytes</h1>\n<pre><code>ɽ%\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=s&amp;code=%C9%BD%25&amp;inputs=14&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":230056,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230056#230056","body":"<h1>MMIX, 32 bytes (8 instrs)</h1>\n<pre><code>00000000: c1020000 e3010000 1cff0002 25020201  Ḋ£¡¡ẉ¢¡¡÷”¡£%££¢\n00000010: feff0006 200101ff 5b02fffc f8020000  “”¡© ¢¢”[£”‘ẏ£¡¡\n</code></pre>\n<pre><code>modsum  SET  $2,$0              // i = n\n        SET  $1,0               // s = 0\n0H      DIV  $255,$0,$2\n        SUB  $2,$2,1\n        GET  $255,rR\n        ADD  $1,$1,$255         // loop: s += n % i--\n        PBNZ $2,0B              // if(i) goto loop\n        POP  2,0                // return [s,n]\n</code></pre>\n"},{"answer_id":211572,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/211572#211572","body":"<h1><a href=\"https://github.com/m-ender/labyrinth\" rel=\"nofollow noreferrer\">Labyrinth</a>, 38 bytes</h1>\n<pre><code>?_&quot;):}}:{%={\n@ ;        {\n!{{=-{:}}:}+\n</code></pre>\n<p><a href=\"https://tio.run/##y0lMqizKzCvJ@P/fPl5J06q21qpa1baay0HBWgEKqrkUq6ttdatBcrXa//8bmgAA\" rel=\"nofollow noreferrer\" title=\"Labyrinth – Try It Online\">Try it online!</a></p>\n<p>Slight improvement to <a href=\"https://codegolf.stackexchange.com/a/150760/78410\">existing answer</a>.</p>\n<h3>How it works</h3>\n<p>Stack notation is <code>a b ... c | d e ... f</code> where <code>a b ... c</code> part is the main stack, <code>d e ... f</code> is auxiliary, and <code>c</code> and <code>d</code> are the top of two stacks. I found this notation useful in developing and explaining the answer.</p>\n<pre><code>        Start at the top left\n?_&quot;     Push input and a 0, going straight through the junction\n        n i=0 | sum=0\n)       Increment i\n:}}     n | i i sum\n:{%=    n i | n%i sum\n{{+}    n i | sum'=sum+n%i\n:}}:{-  n n-i | i sum'\n={      n i n-i | sum'\n;       If n-i is nonzero, turn right and discard n-i, continuing the loop\n{!@     Otherwise go straight, print sum and terminate\n</code></pre>\n"},{"answer_id":170974,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170974#170974","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 23 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{eval [*0..n]*\"+n%\"}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6vOrUsMUchWstATy8vVktJO09Vqfa/hqGenqGJpl5uYkF1TUVNgUJadEVs7X8A\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<p>Evaluates a string like <code>0+n%1+n%2+n%3+n%4+n%5</code> for n=5. </p>\n"},{"answer_id":170973,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170973#170973","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 9 bytes</h1>\n\n<pre><code>⟨gz⟦₆⟩%ᵐ+\n</code></pre>\n\n<p><a href=\"https://tio.run/##ASUA2v9icmFjaHlsb2cy///in6hneuKfpuKChuKfqSXhtZAr//8xNP9a\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170966,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170966#170966","body":"<h1><a href=\"https://github.com/ajc2/ahead\" rel=\"nofollow noreferrer\">Ahead</a>, 21 bytes</h1>\n\n<pre><code>I&amp;l@O+K&lt;\n~&gt;td-! ntd%~\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8xITUz5/99TLcfBX9vbhqvOriRFV1EhryRFte7/f0MTAA\" rel=\"nofollow noreferrer\" title=\"Ahead – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170945,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170945#170945","body":"<h2>F#, 35 bytes</h2>\n<pre><code>let s v=Seq.sumBy(fun x-&gt;v%x){1..v}\n</code></pre>\n<p><a href=\"https://tio.run/##SyvWTc4vSv3/Pye1RKFYocw2OLVQr7g016lSI600T6FC165MtUKz2lBPr6z2f7SNa15JUWVAfmZeiV0sF0hLbmJmnkJiUXqZgi2XAhAUKxiagBk1dgoFRUB1aXkKSqqZSmAxg/8A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Pretty straight-forward.</p>\n"},{"answer_id":170937,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170937#170937","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, 31 bytes</h1>\n\n<pre><code>[dz%rdz&lt;B]sBd1&lt;B0*0[+z1&lt;C]dsCxp\n</code></pre>\n\n<p><a href=\"https://tio.run/##LcuxDsIgFIXh3ae4iXHRBUpba8JS@gIM3QgTVw0JNo23Q@Xl0UtcvuX8B0ORbXGYT2/M2ngyKLURZ@EuWerJI037WkY72uBw6QarGvsv0m8JnmYAOALF15ri4wPbnba4PA8yzTs0jGJapmN65soMzI2RotZVVe35Wr4\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p>Assume our input is the only value on the stack. Macro <code>B</code> duplicates top of stack, calculates stack depth, and performs modulo. Runs until stack depth is equal to the input. This works for numbers greater than 1, so we don't run <code>B</code> automatically, but instead only if it's greater than 1 (<code>d1&lt;B</code>). <code>B</code> leaves the input value on top-of-stack, so we multiply by 0. Since 0 is the desired result for an input of 1, this is fine for 1 as well. However, 1 doesn't leave us enough items on the stack to do the initial summation in macro <code>C</code>, so we put another 0 on the stack just in case. Macro <code>C</code> simply adds the two values on top of the stack, and keeps going until the stack only has a single value. Finally, we <code>p</code>rint.</p>\n"},{"answer_id":170935,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170935#170935","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <code>-mx</code>, 3 bytes</h1>\n\n<pre><code>N%U\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn/30819P9/QxMF3dwKAA\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170933,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170933#170933","body":"<h1><a href=\"http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/\" rel=\"nofollow noreferrer\">Forth (gforth)</a>, 35 bytes</h1>\n\n<pre class=\"lang-forth prettyprint-override\"><code>: f 0 over 1 do over i mod + loop ;\n</code></pre>\n<p><a href=\"https://tio.run/##JYtBCoAgFAX3nWJwG0pWq4Quk1lB8UWq65vS6s3AvCDp3vUW6uQ8EeiQd01YvPx0cImn5RSJuNJE/BPpMQmjQM@o8huqLwnX2JGYPw\" rel=\"nofollow noreferrer\" title=\"Forth (gforth) – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>Loops over all numbers from 1 to n-1 and adds n%i to the sum</p>\n<h3>Code Explanation</h3>\n<pre class=\"lang-forth prettyprint-override\"><code>: f            \\ start a new word definition\n  0 over       \\ add a 0 to the stack and place a copy of n above it\n  1 do         \\ start a counted loop from 1 to n-1\n    over i     \\ copy n to the the top of the stack and place the loop index above it\n    mod +      \\ take n%i and add it to the sum\n  loop         \\ end the counted loop\n;              \\ end the word definition\n  \n</code></pre>\n"},{"answer_id":150939,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150939#150939","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 61 bytes</h1>\n\n<p><em>-2 bytes for removing the closing tag</em></p>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?php $z=fgets(STDIN);for($y=1;$y&lt;$z;$y++){$x+=$z%$y;}echo$x;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@P/fxr4go0BBpco2LT21pFgjOMTF00/TOi2/SEOl0tbQWqXSRqUKSGpra1arVGjbqlSpqlRa16YmZ@SrVFj//29oAgA\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150569,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150569#150569","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>28</s> <s>27</s> 23 bytes</h1>\n\n<p>-4 bytes thanks to @daniero.</p>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{(1..n).sum{|i|n%i}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyflmf7X9cur1rDUE8vT1OvuDS3uiazJk81s7b2f4FCWl60oUnsfwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<h2>Ruby, 28 bytes</h2>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>f=-&gt;n{n&gt;($.+=1)?n%$.+f[n]:0}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvz/P81W1y6vOs9OQ0VP29ZQ0z5PFchIi86LtTKo/V@gkBZtaBL7HwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150648,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150648#150648","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, <s>69</s> 68 bytes</h1>\n\n<pre><code>&#9;N =INPUT\nA&#9;I =I + 1\n&#9;S =LT(I,N) S + REMDR(N,I)&#9;:S(A)\n&#9;OUTPUT =S\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87LT8rPMfn/n9NPwdbTLyA0hMuR0xPIVNBWMOTiDFaw9QnR8NTx01QIBooEufq6BGn46XhqcloFazhqcnH6h4YA9SjYBnO5@rn8/28GAA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n\n<pre><code>&#9;N =INPUT&#9;&#9;&#9;&#9;;* read in input\nA&#9;I =I + 1&#9;&#9;&#9;&#9;;* I is initialized to 0 so this increments it to 1\n&#9;S =LT(I,N) S + REMDR(N,I)&#9; :S(A)&#9;;* similarly with S, add to the remainder\n&#9;LT(I,N) :S(A)&#9;&#9;&#9;&#9;;* on success (I &lt; N), goto A\n&#9;OUTPUT =S&#9;&#9;&#9;&#9;;* output the sum\nEND&#9;&#9;&#9;&#9;&#9;&#9;;* terminate the program\n</code></pre>\n"},{"answer_id":151172,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151172#151172","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 44 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sum(map(lambda x:x%(n-x),range(n)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##LcgxCoAwDAXQ3VP8RUiggjoWvIlLRauCjaVWiKevg77xxSdvp/TFYxjL4cI0O4i97kDBRfpDrdYkjbJJTtaFhJmLPxMUu@C7rm3ZVgBi2iVDDTwplxc\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>EDIT: Changed range(0,n) to range(n)</p>\n"},{"answer_id":150638,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150638#150638","body":"<h1>T-SQL, <s>80</s> 79 bytes</h1>\n\n<p><em>-1 byte thanks to @MickyT</em></p>\n\n<pre><code>WITH c AS(SELECT @ i UNION ALL SELECT i-1FROM c WHERE i&gt;1)SELECT SUM(@%i)FROM c\n</code></pre>\n\n<p>Receives input from an integer parameter named <code>@</code>, something like this:</p>\n\n<pre><code>DECLARE @ int = 14;\n</code></pre>\n\n<p>Uses a Common Table Expression to generate numbers from <code>1</code> to <code>n</code>. Then uses that cte to sum up the moduluses. </p>\n\n<p>Note: a cte needs a <code>;</code> between the previous statement and the cte. Most code I've seen puts the <code>;</code> right before the declaration, but in this case I can save a byte by having it in the input statement (since technically my code by itself is the only statement).</p>\n\n<p><a href=\"https://data.stackexchange.com/codegolf/query/edit/770634\" rel=\"nofollow noreferrer\">Try it (SEDE)</a></p>\n\n<hr>\n\n<p>The less \"SQL-y\" way is only 76 bytes. This time the input variable is <code>@i</code> instead of <code>@</code> (saves one byte). This one just does a <code>while</code> loop.</p>\n\n<pre><code>DECLARE @ int=2,@o int=0WHILE @&lt;@i BEGIN SELECT @o+=@i%@,@+=1 END PRINT @o\n</code></pre>\n"},{"answer_id":151084,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151084#151084","body":"<h1><a href=\"https://github.com/FTcode/Pushy\" rel=\"nofollow noreferrer\">Pushy</a>, 13 bytes</h1>\n\n<pre><code>&amp;1{:2d%vh;OS#\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/##Kygtzqj8/1/NsNrKKEW1LMPaP1j5////hiYA\" rel=\"nofollow noreferrer\" title=\"Pushy – Try It Online\">Try it online!</a></strong></p>\n\n<pre><code>&amp;1{                 \\ Make the stack [n, 1, n]\n   :     ;          \\ n times do (this consumes last n):\n    2d              \\    Copy the last two items\n      %v            \\    Get remainder and put result on stack\n        h           \\    Increment divisor\n          OS        \\ Sum the second stack\n            #       \\ Output the result\n</code></pre>\n"},{"answer_id":151076,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151076#151076","body":"<h1>Befunge-93, 36 bytes</h1>\n<pre><code>p&amp;:10p1&gt;-#1:_$v_g.@\n :p00+g00%\\g01&lt;^\n</code></pre>\n<p><a href=\"https://tio.run/##S0pNK81LT/3/v0DNytCgwNBOV9nQKl6lLD5dz4FLwarAwEA73cBANSbdwNAm7v9/QxMA\" rel=\"nofollow noreferrer\">Try It Online</a></p>\n"},{"answer_id":151060,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151060#151060","body":"<h1>Common Lisp, <s>50</s> 47 bytes</h1>\n\n<pre><code>(lambda(n)(loop as i from 1 to n sum(mod n i)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcZLCsAgDAXAq7xlshR6oVQpBPIRbc@fuhmmm@5ZNJdGBxWZ@D2EgskyJ2RD8ax0NLyJwP6cPMeZMnO16/AD\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":150778,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150778#150778","body":"<h1><a href=\"https://clean.cs.ru.nl\" rel=\"nofollow noreferrer\">Clean</a>, 39 bytes</h1>\n\n<p>Literally just <a href=\"https://codegolf.stackexchange.com/a/150580/18730\">Bruce Forte's Haskell answer</a>, but in Clean.</p>\n\n<pre><code>import StdEnv\n@x=sum(map((rem)x)[1..x])\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85JTcz7n5ufUpqTqpCbmJn3PzO3IL@oRCG4JMU1r4zLocK2uDRXIzexQEOjKDVXs0Iz2lBPryJW839wSSJQma2Cg4Khyf9/yWk5ienF/3U9ff67VOYl5mYmFwMA\" rel=\"nofollow noreferrer\" title=\"Clean – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150690,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150690#150690","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, <s>70</s> 62 bytes</h1>\n\n<pre><code>(([{}])&lt;&gt;)({&lt;&lt;&gt;(({})&lt;&lt;&gt;{(({})){({}())&lt;&gt;}{}}&gt;)&lt;&gt;&gt;{}[({}())]}{})\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X0Mjuro2VtPGTlOj2sbGTkOjulYTSFeDGZrVQFJDEyhbW11bawek7aproyFisUAhzf//DU0A\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>It turns out that the straightforward approach is better.  Also, keeping a copy of n on the third stack instead of the first stack saves bytes.</p>\n\n<pre><code>(([{}])&lt;&gt;)                                                      Initialize both stacks with -n\n           {                                              }{}   For all k from n down to 1:\n             &lt;&gt;(({})&lt;                      &gt;)                   Store -n on third stack\n                     &lt;&gt;{(({})){({}())&lt;&gt;}{}}                     Main part of standard modulus program\n                                                                (except that the arguments are negative)\n                                             &lt;&gt;\n            &lt;                                  &gt;                Ignore evaluation of -n\n                                                {}[({}())]      Recover n mod k, and decrement k for the next iteration\n          (                                                  )  Sum over all iterations and push\n</code></pre>\n"},{"answer_id":150768,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150768#150768","body":"<h1>J, 14 Bytes</h1>\n\n<pre><code>M=:+/@:|~}.@i.\n</code></pre>\n\n<h3>How it works:</h3>\n\n<pre><code>M=:                 | Define the verb M\n            i.      | Get integers in the range [0, input)\n         }.@        | Remove the leading 0\n       |~           | Take the original input mod each of these integers, making a new array\n   +/@:             | Sum this array\n</code></pre>\n\n<h3>Example:</h3>\n\n<pre><code>    M 14\n31\n    M\"0 &gt;:i.20    NB. Apply M to each of the integers from 1-20 inclusive\n0 0 1 1 4 3 8 8 12 13 22 17 28 31 36 36 51 47 64 61\n</code></pre>\n"},{"answer_id":150596,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150596#150596","body":"<h2>Windows Batch (CMD), 63 bytes</h2>\n\n<pre><code>@set s=0\n@for /l %%i in (1,1,%1)do @set/as+=%1%%%%i\n@echo %s%\n</code></pre>\n\n<p>Previous 64-byte version:</p>\n\n<pre><code>@set/ai=%2+1,s=%3+%1%%i\n@if %i% neq %1 %0 %1 %i% %s%\n@echo %s%\n</code></pre>\n"},{"answer_id":150760,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150760#150760","body":"<p><strong>Labyrinth - 45 Characters</strong></p>\n\n<pre><code>?:}}\"\"):={%={{+\n     ;        \"\n@!{{{-{=:}}}::}\n</code></pre>\n\n<p>Basically, it sets up by taking the input of the number that we are modulo summing. It then starts at one, takes the modulo of that number, and checks if it has reached the target number yet. If it hasn't, take the modulo again and add it to the previous one.</p>\n\n<p>(I left out a lot of stack manipulations if you hadn't guessed, and yes, it actually does output the sum of the modulus up to that number)</p>\n"},{"answer_id":150641,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150641#150641","body":"<h1><a href=\"http://perl6.org/\" rel=\"nofollow noreferrer\">Perl 6</a>, <s>21</s> 16 bytes</h1>\n\n<p><s>{sum $_ «%«(1..$_)}</s></p>\n\n<pre><code>{sum $_ X%1..$_}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/urg0V0ElXiFC1VBPTyW@9r@1QnFipUKahqGJpvV/AA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>-5 bytes (!) thanks to Brad Gilbert.</p>\n"},{"answer_id":150694,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150694#150694","body":"<h1><a href=\"https://github.com/TehFlaminTaco/Funky\" rel=\"noreferrer\">Funky</a>, 25 bytes</h1>\n<pre><code>n=&gt;fors=~-i=1i&lt;n)s+=n%i++\n</code></pre>\n<p>Just the Naïve answer, seems to work.</p>\n<p><a href=\"https://tio.run/##SyvNy678n2b7P8/WLi2/qNi2TjfT1jDTJk@zWNs2TzVTW/t/QVFmXolGmoahiabmfwA\" rel=\"noreferrer\" title=\"Funky – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://www.desmos.com/calculator\" rel=\"noreferrer\">Desmos</a>, 25 bytes.</h1>\n<pre><code>f(x)=\\sum_{n=1}^xmod(x,n)\n</code></pre>\n<p>Paste into Desmos, then run it by calling <code>f</code>.</p>\n<p>When pasted into Desmos, the latex looks like this</p>\n<p><img src=\"https://a-ta.co/mathjax/%24!ZlxsZWZ0KHhccmlnaHQpPVxzdW1eeF97bj0xfVx0ZXh0e21vZH1cbGVmdCh4LG5ccmlnaHQp.svg\" alt=\"\" /></p>\n<p>The graph however looks like</p>\n<p><img src=\"https://i.gyazo.com/b46a90eaa3fddd3269387480cce10856.png\" alt=\"\" /></p>\n<p>Although it looks random and all over the place, that's the result of only supporting integers.</p>\n<h1><a href=\"https://github.com/TehFlaminTaco/RProgN-2\" rel=\"noreferrer\">RProgN 2</a>, 9 bytes</h1>\n<pre><code>x=x³x\\%S+\n</code></pre>\n<h2>Explained</h2>\n<pre><code>x=x³x\\%S+\nx=          # Store the input in &quot;x&quot;\n  x         # Push the input to the stack.\n   ³x\\%     # Define a function which gets n%x\n       S    # Create a stack from &quot;x&quot; with the previous function. Thus this gets the range from (1,x), and runs (i%x) on each element.\n        +   # Get the sum of this stack.\n</code></pre>\n<p><a href=\"https://tio.run/##Kyooyk/P0zX6/7/CtuLQ5ooY1WDt////G5oAAA\" rel=\"noreferrer\" title=\"RProgN 2 – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/TehFlaminTaco/ReRegex\" rel=\"noreferrer\">ReRegex</a>, 71 bytes</h1>\n<pre><code>#import math\n(_*)_a$/d&lt;$1_&gt;b$1a/(\\d+)b/((?#input)%$1)+/\\+a//u&lt;#input\n&gt;a\n</code></pre>\n<p><a href=\"https://tio.run/##K0otSk1Prfj/XzkztyC/qEQhN7Ekg0sjXkszPlFFP8VGxTDeLknFMFFfIyZFWzNJX0PDXjkzr6C0RFNVxVBTWz9GO1Ffv9QGIsZll/j/v6EJAA\" rel=\"noreferrer\" title=\"ReRegex – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/TehFlaminTaco/ARBLE\" rel=\"noreferrer\">ARBLE</a>, 19 bytes</h1>\n<pre class=\"lang-lua prettyprint-override\"><code>sum(range(1,a)|a%i)\n</code></pre>\n<p><a href=\"https://tio.run/##SyxKykn9/7@4NFejKDEvPVXDUCdRsyZRNVPz////hiYA\" rel=\"noreferrer\" title=\"ARBLE – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/TehFlaminTaco/MaybeLater\" rel=\"noreferrer\">MaybeLater</a>, 56 bytes</h1>\n<pre><code>whenf is*{n=0whenx is*{ifx&gt;0{n=n+f%x x--}elseprintn}x=f}\n</code></pre>\n<p><a href=\"https://tio.run/##y02sTErNSSxJLfr/vzwjNS9NIbNYqzrP1gDEqQBzMtMq7AyAQnnaaaoVChW6urWpOcWpBUWZeSV5tRW2abX/0xRsFTSKUhNTEjV1Df4bmgAA\" rel=\"noreferrer\" title=\"MaybeLater – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150669,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150669#150669","body":"<h2>Clojure, 38 bytes</h2>\n\n<pre><code>#(apply +(for[i(range 1 %)](mod % i)))\n</code></pre>\n\n<p>Well this is boring, I was hoping <code>#(apply +(map mod(repeat %)(range 1 %)))</code> would have been shorter as <code>mod</code> gets rarely used in <code>map</code> context.</p>\n"},{"answer_id":150659,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150659#150659","body":"<h1><a href=\"https://github.com/urielieli/py-four\" rel=\"nofollow noreferrer\">4</a>, 67 bytes</h1>\n\n<p><strong>4</strong> doesn't have any <em>modulo</em> built in.</p>\n\n<pre><code>3.79960101002029980200300023049903204040310499040989804102020195984\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYo5DoBADAP7fUVWtAg5BxAX/Juaj4WAprBHmqjy7SQPaAODkdkDR5sjSLghGtffAsxOQr8Yyp0ZVXOMRaZc4r7Kc/fRjBc\" rel=\"nofollow noreferrer\" title=\"4 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150572,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150572#150572","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, <s>6</s> 5 bytes</h1>\n\n<p><em>Saved 1 byte thanks to @Shaggy</em></p>\n\n<pre><code>Æ%XÃx\n</code></pre>\n\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.5&amp;code=xiVYw3g=&amp;input=MTQ=\" rel=\"nofollow noreferrer\">Test it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>         Implicit: U = input number\nÆ        Create the range [0, U),\n %XÃ       mapping each item X to U%X. U%0 gives NaN.\n    x    Sum, ignoring non-numbers.\n         Implicit: output result of last expression\n</code></pre>\n"},{"answer_id":150593,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150593#150593","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 9 bytes</h1>\n\n<pre><code>-~1#.i.|]\n</code></pre>\n\n<h2>How it works</h2>\n\n<pre><code>        ] - the argument \n       |  - mod   \n     i.   - list from 0 to argument - 1\n  1#.     - sum (base 1 conversion)\n-~        - subtract the argument (to get rid of the n mod 0)  \n</code></pre>\n\n<p><a href=\"https://tio.run/##y/qfbmulYKAAxP916wyV9TL1amL/a3Ip6SmopynY6qkr6CjUWimkc6UmZ@QrpCkYmsBYJob/AQ\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150642,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150642#150642","body":"<h1><a href=\"https://github.com/splcurran/Gaia\" rel=\"nofollow noreferrer\">Gaia</a>, 8 bytes</h1>\n\n<pre><code>@:…)¦%¦Σ\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0/MTPz/38HqUcMyzUPLVA8tO7f4/39DEwA\" rel=\"nofollow noreferrer\" title=\"Gaia – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150637,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150637#150637","body":"<h1>MATLAB, 19 bytes</h1>\n\n<pre><code>@(n)sum(mod(n,1:n))\n</code></pre>\n\n<p>Very straightforward, <code>mod</code> calculates <code>n%x</code> for each natural number below <code>n</code>. and <code>sum</code> just sums them all. Test:</p>\n\n<pre><code>@(n)sum(mod(n,1:n))\nans(14)\nans = \n\n    @(n)sum(mod(n,1:n))\nans =\n    31.0000e+000\n</code></pre>\n"},{"answer_id":150635,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150635#150635","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 14 bytes</h1>\n\n<pre><code>L,RAdx$p@BcB%s\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99HJ8gxpUKlwMEp2Um1@P///4YmAA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<h2>How it works</h2>\n\n<pre><code>L,   - Create a lambda function.\n     - Example argument:     [7]\n  R  - Range;        STACK = [[1 2 3 4 5 6 7]]\n  A  - Argument;     STACK = [[1 2 3 4 5 6 7] 7]\n  d  - Duplicate;    STACK = [[1 2 3 4 5 6 7] 7 7]\n  x  - Repeat;       STACK = [[1 2 3 4 5 6 7] 7 [7 7 7 7 7 7 7]]\n  $p - Swap and pop; STACK = [[1 2 3 4 5 6 7] [7 7 7 7 7 7 7]]\n  @  - Reverse;      STACK = [[7 7 7 7 7 7 7] [1 2 3 4 5 6 7]]\n  Bc - Zip;          STACK = [[7 1] [7 2] [7 3] [7 4] [7 5] [7 6] [7 7]]\n  B% - Modulo each;  STACK = [0, 1, 1, 3, 2, 1, 0]\n  s  - Sum;          STACK = [8]\n</code></pre>\n"},{"answer_id":150633,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150633#150633","body":"<h1>Julia 0.4, 15 bytes</h1>\n\n<pre><code>x-&gt;sum(x%[1:x])\n</code></pre>\n\n<p><a href=\"https://tio.run/##yyrNyUz8n2b7v0LXrrg0V6NCNdrQqiJW839BUWZeSU6eRpqGoYmm5n8A\" rel=\"nofollow noreferrer\" title=\"Julia 0.4 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150621,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150621#150621","body":"<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 17 bytes</h1>\n\n<pre><code>n-&gt;sum(m=1,n,n%m)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gsytRNL/ifpmCr8D9P1664NFcj19ZQJ08nTzVX839BUWZeiUaahqGJpuZ/AA\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150612,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150612#150612","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 5 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>+/⍳|⊢\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R2wRt/Ue9m2sedS0Ccg@tALKNDAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><strong>How?</strong></p>\n\n<p>Monadic train - </p>\n\n<p><code>+/</code> - sum</p>\n\n<p><code>⊢</code> - <code>n</code></p>\n\n<p><code>|</code> - vectorized modulo</p>\n\n<p><code>⍳</code> - the range of <code>n</code></p>\n"},{"answer_id":150610,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150610#150610","body":"<h1>APL+WIN, 10 bytes</h1>\n<pre><code>+/(⍳n)|n←⎕\n</code></pre>\n<p>Prompts for screen input.</p>\n"},{"answer_id":150606,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150606#150606","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Mathematica</a>, 18 bytes</h1>\n\n<pre><code>#~Mod~i~Sum~{i,#}&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b7X7nONz@lLrMuuDS3rjpTR7lW7X9AUWZeSXRatKFJbOx/AA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150605,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150605#150605","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, 45 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>n-&gt;{int m=n,s=0;for(;m--&gt;1;)s+=n%m;return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##bU49a8MwFNz9K46Awa4/SLsqNnTMEDqETqWD6o8g13oS0nPABP92V07bqR0eB3f37m6QV1kY29HQfq5KW@MYQ@DKidVYPojoD@fZdVL/K/UTNawMbaKdPkbVoBml9zhJRbhFwA/rWXKAq1EtdNCSMztFl7d3SHfx6d0KHIlfSbr5xXZOsnHoUa1U1DdFDF1R7qu96I1LhC6K@lGkPqso1sJ1PDmCF8sq7kGbZ/tRqLAXAQ542jDLfquA8@y506WZuLRhC/fJLm5R1IjbmHY5VI6@lNaO87MPwxKVpt/hS7Tdsn4B\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150603,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150603#150603","body":"<h1>Neim, 3 bytes</h1>\n\n<p><a href=\"https://tio.run/##y0vNzP3//8PcCR0f5k5tAdJr/v83NAEA\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n\n<pre><code>𝐈𝕄𝐬\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>𝐈      # Inclusive range\n 𝕄    # Modulo each element with input\n   𝐬   # Sum the list\n</code></pre>\n"},{"answer_id":150599,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150599#150599","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 23 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{(1..n).sum{|i|n%i}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6vWsNQTy9PU6@4NLe6JrMmTzWztvY/SMzQRFMvN7GguqaipkAhLboitvY/AA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150598,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150598#150598","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 7 bytes</h1>\n\n<pre><code>$+a%\\,a\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8gs@P9fRTtRNUYn8f///4YmAA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n\n<pre><code>         a is 1st cmdline arg\n    \\,a  Inclusive range from 1 through a\n  a%     Take a mod each of those numbers (a%a is 0, so doesn't affect the sum)\n$+       Fold on +\n         Output (implicit)\n</code></pre>\n"},{"answer_id":150597,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150597#150597","body":"<h1>R, 20 bytes</h1>\n<pre><code>sum((n=scan())%%1:n)\n</code></pre>\n<p><a href=\"https://tio.run/##K/r/v7g0V0Mjz7Y4OTFPQ1NTVdXQKk/zv6HJ//8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150592,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150592#150592","body":"<h1><a href=\"http://www.mlton.org/\" rel=\"nofollow noreferrer\">Standard ML (MLton)</a>, <s>53</s> 51 bytes</h1>\n\n<pre class=\"lang-ml prettyprint-override\"><code>fn&amp; =&gt;let fun f 1a=a|f%a=f(% -1)(a+ &amp;mod%)in f&amp;0end\n</code></pre>\n<p><a href=\"https://tio.run/##TYsxC8IwFIT3/oqjkJIglUbdJN2dXUUJNE8K6YuYp5P/vcYu9qbv7vjyFNspSuL57SPIzcQNXB@DgF4MgvXOf0h5R1qhtUb7DZopDcqM5W66wMOiSsgCh8dzZEGCJkZ2fb7WF65NGU4sW0lnKf@9VKp@0q0YukLJotvjn3cr3q/YHtal68z8BQ\" rel=\"nofollow noreferrer\" title=\"Standard ML (MLton) – Try It Online\">Try it online!</a></p>\n<p><strong>Ungolfed:</strong></p>\n<pre class=\"lang-ml prettyprint-override\"><code>fn n =&gt;\n   let fun f 1 a = a\n         | f x a = f (x-1) (a + n mod x)\n   in  \n       f n 0\n   end\n</code></pre>\n<hr />\n<h3>Previous 53 byte version:</h3>\n\n<pre class=\"lang-ml prettyprint-override\"><code>fn n=&gt;foldl op+0(List.tabulate(n-1,fn i=&gt;n mod(i+1)))\n</code></pre>\n<p><a href=\"https://tio.run/##TYyxDgIhDIb3e4rmJsh5BtTNwG7i5mo0mDsMCZSLVF8f6y3S6fvb/2tJcUyRMtaPi@BN9QhorM9xipCXQYlzKLQl93hHR7PAUW@4EoxFSHkSYdBSylWmuRAYWF4BCTIIrhVjy62/Yi95cUL@ky/E9ydH3/2kOxuiA55V18c/7xreN6wPbVBK1i8\" rel=\"nofollow noreferrer\" title=\"Standard ML (MLton) – Try It Online\">Try it online!</a></p>\n<p><strong>Explanation:</strong></p>\n<p><code>List.tabulate</code> takes an integer <code>x</code> and a function <code>f</code> and generates the list <code>[f 0, f 1, ..., f(x-1)]</code>. Given some number <code>n</code>, we call <code>List.tabulate</code> with <code>n-1</code> and the function <code>fn i=&gt;n mod(i+1)</code> to avoid dividing by zero. The resulting list is summed with <code>foldl op+0</code>.</p>\n"},{"answer_id":150590,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150590#150590","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, 4 bytes</h1>\n\n<pre><code>t:\\s\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/v8Qqpvj/f0MTAA\" rel=\"noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>t      % Duplicate input. Stack: {n, n}\n :     % Range 1...n. Stack: {n, [1...n]}\n  \\    % Modulo. Stack: {[0,0,2,2,4,...]}\n   s   % Sum. Implicitly display result.\n</code></pre>\n"},{"answer_id":150589,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150589#150589","body":"<h1><a href=\"https://github.com/nickbclifford/Ohm\" rel=\"nofollow noreferrer\">Ohm v2</a>, 4 bytes</h1>\n\n<pre><code>D@%Σ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8/INfr/38VB9dzi//8NTQA\" rel=\"nofollow noreferrer\" title=\"Ohm v2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150586,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150586#150586","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 9 bytes</h1>\n\n<pre><code>ＩΣＥＮ﹪Ｉθ⊕ι\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMM5sbhEI7g0V8M3sUDDM6@gtMSvNDcptUhDU8c3P6U0Jx@iolBTR1tbI1MTDKz//zc0@a9blgMA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a></p>\n\n<p>Link is to the verbose version of the code:</p>\n\n<pre><code>Print(Cast(Sum(Map(InputNumber(),Modulo(Cast(q),++(i))))));\n</code></pre>\n"},{"answer_id":150584,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150584#150584","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 3 bytes</h1>\n\n<pre><code>L%O\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f/fR9X//39DEwA\" rel=\"noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150578,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150578#150578","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 5 bytes</h1>\n\n<pre><code>s%LQS\n</code></pre>\n\n<hr>\n\n<pre><code>s%LQS - Full program, inputs N from stdin and prints sum to stdout\ns     - output the sum of\n %LQ  - the function (elem % N) mapped over \n    S - the inclusive range from 1..N\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsyfj/v1jVJzD4/39DEwA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150580,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150580#150580","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 22 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f x=sum$mod x&lt;$&gt;[1..x]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P02hwra4NFclNz9FocJGxS7aUE@vIvZ/bmJmnoKtQnpqiXN@XklqXkmxgp2drUJBUWZeiYKeQhoQF6Umpvw3NAEA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>Yes.</p>\n"},{"answer_id":150579,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150579#150579","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 23 + 1 (<code>-p</code>) = 24 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>//;map$\\+=$'%$_,1..$_}{\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/19f3zo3sUAlRttWRV1VJV7HUE9PJb62@v9/Q5N/@QUlmfl5xf91fU31DAwN/usWAAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150575,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150575#150575","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 6 bytes</h1>\n\n<pre><code>ÎGIN%+\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f//cJ@7p5@q9v//ZkYA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>My first 05AB1E program ;)</p>\n\n<p><s>Btw I got two 39s, 1 for JS6 and 1 for python, but I was too late</s></p>\n\n<p>Explanation:</p>\n\n<pre><code>ÎGIN%+\nÎ                      # Push 0, then input, stack = [(accumulator = 0), I]\n G                     # For N in range(1, I), stack = [(accumulator)]\n  IN                   # Push input, then N, stack = [(accumulator), I, N]\n    %                  # Calculate I % N, stack = [(accumulator), I % N]\n     +                 # Add the result of modulus to accumulator\n</code></pre>\n"},{"answer_id":150571,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150571#150571","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 5 bytes</h1>\n\n<pre><code>ΣṠM%ḣ\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv7//9zihzsX@Ko@3LH4////hiYA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>ΣṠM%ḣ  -- implicit input x, example: 5\n ṠM%   -- map (mod x) over the following..\n    ḣ  -- ..the range [1..x]: [5%1,5%2,5%3,5%4,5%5] == [0,1,2,1,0]\nΣ      -- sum: 0+1+2+1+0 == 4\n</code></pre>\n"},{"answer_id":150567,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150567#150567","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:sum(a%k for k in range(1,a))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHRqrg0VyNRNVshLb9IIVshM0@hKDEvPVXDUCdRU/M/SDARSdDAQNOKSwEICooy80o00pSqE2utFKrTNBI1a5U0/wMA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150566,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150566#150566","body":"<h1>JavaScript (ES6), 26 bytes</h1>\n\n<pre class=\"lang-js prettyprint-override\"><code>f=(n,k=n)=&gt;n&amp;&amp;k%n+f(n-1,k)\n</code></pre>\n\n<h3>Demo</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=(n,k=n)=&gt;n&amp;&amp;k%n+f(n-1,k)\r\n\r\nfor(n = 1; n &lt; 30; n++) {\r\n  console.log('a(' + n + ') = ' + f(n))\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":150565,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150565#150565","body":"<h1>C, 43 bytes</h1>\n\n<pre><code>s,m;f(n){for(s=m=0;m++&lt;n;s+=n%m);return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYsxCsMwDAB3v0IEDBJ2IelUqvgnXYpTFw1Wi51OIW93ndx4x8XLO8bWqs@cUGlLn4I15DBydm5Wri6ozcTltf6KQuW9ia6Qn6JIZjPQ6Q/gYSVMDDKH6XpjcE7ozAff0nvCwS53sMtDBw/iIaEQsdnbHw\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<h1>C (gcc), 38 bytes</h1>\n\n<pre><code>s,m;f(n){for(s=m=0;m++&lt;n;s+=n%m);s=s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYoxCsMwDAB3v0IEDBJ2IelUqugnXYqDgwarJe4W8nbH6Y13l25rSq3VWDij0Z4/G1YpMnIJYTauQcwX4iqVj6b2g/JWQ3K7g07fAS@rMjHoLNP9wRCC0j9ffLfeMw5@eYJfXjZE0AgZlYjd0U4\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":150564,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150564#150564","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 3 bytes</h1>\n\n<pre><code>%RS\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>%RS\n R   Range(input)  [1...n]\n%    Input (implicit) modulo [1...n]-&gt;[n%1,n%2...n%n]\n  S  Sum of the above\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/181KPj///@GJgA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"}]