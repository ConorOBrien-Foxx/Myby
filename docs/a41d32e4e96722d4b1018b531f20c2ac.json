[{"answer_id":256316,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/256316#256316","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 47 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;f=i=&gt;1/x[i|i]?[x.splice(i,1)[0],...f(-~i)]:x\n</code></pre>\n<p><a href=\"https://tio.run/##BcFBCoMwEADAe1@yC@u2sfWiRG9@IuQgaSwrwYgpkoP49TizTMeU3C7bv1rj15dRl6z7WYvu1TMbOcUOJnPagjgPQgrNyxIzz1BdgrbNpXu4uKYYPIf4gxGMopre9KHGIiCWGw\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 50 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;(i=a=[]).concat(x.filter(v=&gt;i++%2||!a.push(v)))\n</code></pre>\n<p><a href=\"https://tio.run/##DcpLCoAgEADQfbdoEYxkQr9VTBeJFoNpGZKRJi26u7V@b6dIXl7mDNXhFpU0pgdHMEg4zUxId0gK8AhtbFAXRBxNWRbN@@YkzttvEBljacj@6J1VwroVNEw1b3jLO97Pv34\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Not shortest now but fun</p>\n"},{"answer_id":256315,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/256315#256315","body":"<h1><a href=\"https://rust-lang.org\" rel=\"nofollow noreferrer\">Rust</a> 109 bytes</h1>\n<pre><code>fn f(x:Vec&lt;u8&gt;)-&gt;Vec&lt;u8&gt;{x.iter().cloned().step_by(2).chain(x.iter().cloned().skip(1).step_by(2)).collect()}\n</code></pre>\n<p>&quot;at least it's shorter than C#&quot;</p>\n"},{"answer_id":256312,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/256312#256312","body":"<h1>Haskell + <a href=\"https://gitlab.com/wheatwizard/haskell-golfing-library\" rel=\"nofollow noreferrer\">hgl</a>, 25 bytes</h1>\n<pre class=\"lang-haskell prettyprint-override\"><code>lH(F~&lt;zdm&lt;&lt;lpW[]&lt;lg)&lt;mm p\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m708I7E4OzUnZ2W0km6Ec0CAUuxN1czcgvyiEoXC0sSczLTM1BSFgKLUnNKUVC6oRABXmm3M0tKSNF2LnTkeGm51NlUpuTY2OQXh0bE2OemaNrm5CgUQ-ZsGuYmZebYp-VwKCrnxCgVFCioKaQrRSvZKOkoREUo6CkqGRsYgSlUVRDooxUL0LVgAoQE\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Explanation</h2>\n<p>To build the matrix we use a fold, each step adding a new diagonal. So the bulk of this answer is the function that takes a partial matrix and adds a new diagonal.</p>\n<p>The way this process works is that we want to zip the new diagonal with the matrix.  If the diagonal is longer than the matrix so far (length of the matrix is the number of rows), then we want to start the zip with the two aligned at the front.</p>\n<pre><code>1 ####      1####\n2  ###       2###\n3   ##  --&gt;   3##\n4    #         4#\n5               5\n</code></pre>\n<p>If the diagonal is shorter we want to align it at the bottom:</p>\n<pre><code>  #####     #####\n  #####     #####\n1  #### --&gt; 1####\n2   ###      2###\n3    ##       3##\n</code></pre>\n<p>To do this we pad the diagonal out to the length of the list with empty values. (<code>lpW[]&lt;lg</code>)  If it's longer this does nothing, but if it's shorter it aligns the two at the bottom.</p>\n<p>Then we zip the two with <code>zdm</code>.  This is the &quot;monoidal&quot; zip, so it pads the shorter value to the length of the longer and combines with the monoid operation.</p>\n<p>The one hitch is that for this all to work we need to convert the integers in the diagonals to lists, that way we can have empty values in the padding.</p>\n<h2>Reflection</h2>\n<p>This is a very elegant solution, but it does suggest improvements.</p>\n<ul>\n<li>It hurts me to use <code>lg</code>.  Because there's nothing to bind the type <code>l</code> won't work. <code>lpW^.lg</code> should probably be builtin, padding one list to the length of another seems like a useful operation.  This would save 3 bytes here.</li>\n<li><code>fb F</code> seems like a useful combinator.  However it would need to be a 1 byte operator to save anything in this particular scenario.</li>\n</ul>\n"},{"answer_id":256309,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/256309#256309","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 37 bytes</h1>\n<pre class=\"lang-javascript prettyprint-override\"><code>f=(v,a=0)=&gt;v.map(z=&gt;z.at?f(z,a):a+=z)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=bVFLDoIwEI1bT-HGpI1PtKBYNdWDNF00Cm5QTPwsuIobF3ooPY0DWIJCmsmk896b7-1xSLfR_f68nOOhfPVjxa6waszV6urt7ZFlapV59ryOWQbLF3agMl6S353bJj2c0iTyknTHYqYN58veaNTTpvuHyAqSDUzAR1DhAgHCFs731XikwgTTBlcLg69V7HqsmbtNQVHfOGvvmZC8BWIY-pJgAgkdGuoJ_u9A0BKC2p8WZIk51Qrg50VmRCaNEC2DwBUod-R8bawiuRgXUL445015I3fYDw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Port of several of the other answers.</p>\n"},{"answer_id":216718,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/216718#216718","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>5</s> 4 bytes</h1>\n<p><em>Ties <a href=\"https://codegolf.stackexchange.com/a/256288\">emanresu A's Vyxal answer</a> for #1.</em></p>\n<pre><code>2(вO\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/fSOPCJv///3WNAQ\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<pre><code>2(вO  # full program\n   O  # push sum of...\n  в   # list of base-10 values of base...\n (    # negative...\n2     # literal....\n  в   # digits of...\n      # implicit input\n      # implicit output\n</code></pre>\n"},{"answer_id":255767,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255767#255767","body":"<h1>Python 3.8+, <s>183 156 127 117</s> 111 bytes</h1>\n<p>-29 bytes thanks to ElPedro<br>\n-10 bytes thanks to Neil\n-6 bytes thanks to help from the Discord (mainly by dzaima and me)</p>\n<pre class=\"lang-python prettyprint-override\"><code>def x(n):m.j='aeiou',0;return''.join([((m,m.upper())[i&lt;'a'][j%5],j=j+1][0]if i.lower()in m else i for i in n])\n</code></pre>\n"},{"answer_id":256301,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/256301#256301","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 11 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>0-indexed</p>\n<pre><code>gUòò@T±1ÃcÔ\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=Z1Xy8kBUsTHDY9Q&amp;input=MTE\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":256299,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256299#256299","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 8 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>Gave Jacob my initial solution, so here's an alternative.</p>\n<pre><code>k òÎmÊÍÔ\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=ayDyzm3KzdQ&amp;input=Njg2MA\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>k òÎmÊÍÔ     :Implicit input of integer\nk            :Prime factors\n  ò          :Partition between elements where\n   Î         :  The sign of their differences is truthy (non-zero)\n    m        :Map\n     Ê       :  Length\n      Í      :Sort\n       Ô     :Reverse\n</code></pre>\n"},{"answer_id":256297,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/256297#256297","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 19 bytes</h1>\n<pre><code>1-]-0.5*:@&lt;.@+%:@+:\n</code></pre>\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuo2CgYAXEunoKzkE@bv8NdWN1DfRMtawcbPQctFWtHLSt/mtypSZn5CukKRjCGEYwhjGMYQJXA2dZWhogmHCthgYGBgi2sSkS2wzONjI2Mf0PAA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a> Uses the formula from <a href=\"https://codegolf.stackexchange.com/a/117883/31957\">Arnauld's answer</a>.</p>\n<pre><code>1-]-0.5*:@&lt;.@+%:@+:\n                 +:    2n\n              %:@      sqrt(^)\n    0.5      +         0.5 + ^\n          &lt;.@          floor(^)\n       *:@             square(^)\n  ]-                   input - ^\n1-                     1 - ^\n                       (computes - input + 1 in a golfier way)\n</code></pre>\n<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 43 bytes</h1>\n<pre><code>1+;@((#{.[:;(1&lt;@,#&amp;0)&quot;0)&lt;@|.;.1&gt;:)@i.@+:i.]\n</code></pre>\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuo2CgYAXEunoKzkE@bv8Nta0dNDSUq/Wiraw1DG0cdJTVDDSVDDRtHGr0rPUM7aw0HTL1HLStMvVi/2typSZn5CukKRjCGEYwhjGMYQJXA2dZWhogmHCthgYGBgi2sSkS2wzONjI2Mf0PAA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<p>Shortest non-formula solution I could think of. The array form of <code>;.</code> is really unwieldly for code golf, and it doesn't help that ragged lists aren't that golfy either.</p>\n<pre><code>1+;@((#{.[:;(1&lt;@,#&amp;0)&quot;0)&lt;@|.;.1&gt;:)@i.@+:i.]\n                                  @i.@+:      range [0, 2n)\n    (                       ;.1&gt;:)            segment [1, 2n] according to\n     (                 )                      the indices of triangular numbers:\n            (       )&quot;0                         over each integer in [0, 2n):\n                 #&amp;0                            create that many 0s\n             1  ,                               prepend a 1 (a cut location)\n              &lt;@                                and box it\n         [:;                                    then raze that boxed list\n      #{.                                       and take 2n entries from that array\n                        &lt;@|.                  box and reverse each segment\n  ;@                                          raze this list\n                                        i.]   get the 0-based index of the input in it\n1+                                            and add 1\n</code></pre>\n<p>For generating the indices of triangular number, the invariance under inverse transform <code>(=(-:@*&gt;:)@&lt;.@%:@+:)</code> is 1 byte longer, but much faster.</p>\n"},{"answer_id":256296,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/256296#256296","body":"<h1><a href=\"https://github.com/Thunno/Thunno\" rel=\"nofollow noreferrer\">Thunno</a> <code>D</code> <code>E</code>, <span class=\"math-container\">\\$3 \\log_{256}(96) \\approx\\$</span> 2.47 bytes</h1>\n<pre><code>zni\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhaLq_IyISyowMpoJRclHSVXpdjVhlxGXMZcJlxKpkoQOQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a> Output as <code>[max, min]</code></p>\n<p>Verify some more test cases: <a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhaLq_IyISyowMpoJRclHSVXpdj1hlxGXMZcJlymXGZc5lwWEHkA\" rel=\"nofollow noreferrer\">1</a> <a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhaLq_IyISyowMpoJRclHSVXpdh1plwmXEZcllyGXIYGXKYQaQA\" rel=\"nofollow noreferrer\">2</a> <a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhaLq_IyISyowMpoJRclHSVXpdhN5lwWXIYGXEoeqTk5-UpcplymECUA\" rel=\"nofollow noreferrer\">3</a> <a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhaLq_IyISyowMpoJRclHSVXpdiFhhARAA\" rel=\"nofollow noreferrer\">4</a> <a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhaLq_IyISyowMpoJRclHSVXpdiNSoZKXEpGQGwMxCZKXKYQFQA\" rel=\"nofollow noreferrer\">5</a></p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-python prettyprint-override\"><code>     # Example input: 1, 2, 3, 4, &quot;5&quot;\n     # The E flag tells the interpreter not to evaluate the input strings,\n     # so they end up as &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, '&quot;5&quot;'\n     # The D flag duplicates the input. The zn command will automatically pop the top item.\n     # We want to keep all the items on the stack, so we need the D flag\nzn   # Push [max, min]. As the top item is not a list, it applies it to the stack,\n     # converting each to a float. It can't convert '&quot;5&quot;', so it just ignores it.\n  i  # Convert each to an integer (as the zn command converted to float)\n</code></pre>\n"},{"answer_id":256294,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/256294#256294","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 11 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>'m¬iÔm!rUfâ\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=J22sadRtIXJVZuI&amp;input=WzcsIDgsIDEwLCAiSGVsbG8iLCA1LCA1XQ\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":224001,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224001#224001","body":"<h1>Trivial Built-in Answers</h1>\n<p>This is the post for all of the languages where this is a built-in</p>\n<h2>Vyxal, 1 byte</h2>\n<pre><code>≈\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=&amp;code=%E2%89%88&amp;inputs=&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 1 byte</h1>\n<pre><code>E\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9/1/9HJD3cuftQwR0HXTuFRw9yHOxY93DH/UeO2hzu6Hu6cFna4nevh7i2H2x81rYn8/z/aUEcBHcWCdIYUlaZygWSNdBSMdRRMwIJuiTnFQFEzHQVLHQUoiSKBpNVcR8EciWsCNskAoRoA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/Adriandmen/05AB1E/tree/fb4a2ce2bce6660e1a680a74dd61b72c945e6c3b\" rel=\"nofollow noreferrer\">05AB1E (legacy)</a>, 1 byte</h1>\n<pre><code>Ë\n</code></pre>\n<p><a href=\"https://tio.run/##MzBNTDJM/f//cPf//9GGOgpQFAsA\" rel=\"nofollow noreferrer\" title=\"05AB1E (legacy) – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 5 bytes</h1>\n<pre><code>Equal\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b737WwNDHnf0BRZl5JtLKuXZqDg3KsWl1wcmJeXTVXtaGOAjqq1QELG@koGOsomIB4ZjoKljoKUBIsACLMdRTMQbQJWK1BLVftfwA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p><code>SameQ</code> also works.</p>\n<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 1 byte</h1>\n<pre><code>=\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/pfXa6koGunoFRuX/2obcOjpuZHHcuVSopKU/WUakDMtMScYiC79uGuztqHWyf8t/3/PzraUEcBHcXqgESNdBSMdRRMgBwzHQVLHQUoCeIDsbmOgjmQMgGrM4iNBQA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 1 byte</h1>\n<pre><code>E\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/3/X////RhjpAGAsA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<h1>Haskell + <a href=\"https://gitlab.com/WheatWizard/haskell-golfing-library\" rel=\"nofollow noreferrer\">hgl</a>, 2 bytes</h1>\n<pre><code>lq\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m708I7E4OzUnZ8FN88zcgvyiEoXC0sSczLTM1BSFgKLUnNKUVC6oRABXmoKVlYJPZnGJgmdeiYKunYJTfn7O0tKSNF2LJWm2OYUQ5k1XrtzEzDwFW4WUfC4FhYIiBRWFNIXoWCS2ITLHSAcI0QWMYyGGLVgAoQE\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 3 bytes</h1>\n<pre><code>std\n</code></pre>\n<p><a href=\"https://tio.run/##S0tMLskv@h8a7OnnbqWQVlSpkJtYkqFXXJJYkllckplcrFBQlFpSUllQlJlXolCcWliampecWqxgzVXNpQAE1QqGKLAWLmqkYKxgAuebKVhCMUIExjIHQhjbBKjPAMirVYj@X1yS8j8W6J4CBaBzkrP1/gMA\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Outputs <code>0.0</code> if they're the same, or something else if not. <code>all-eq?</code> and <code>all-equal?</code> are longer built-ins that output booleans. <code>all-equal?</code> uses <code>=</code> (ordinary equality) and <code>all-eq?</code> uses <code>eq?</code> (strict object reference equality), but they behave the same for integers.</p>\n<h1><a href=\"https://github.com/Thunno/Thunno\" rel=\"nofollow noreferrer\">Thunno</a>, <span class=\"math-container\">\\$2 \\log_{256}(96) \\approx\\$</span> 1.65 bytes</h1>\n<pre><code>ze\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhaLqlIhDCh_wfpoQx0FBIqFCAMA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":198757,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198757#198757","body":"<h1>k4, 17 bytes</h1>\n<pre><code>{,/#'[(#x)#1 2]x}\n</code></pre>\n<pre><code>{               } /lambda with implicit arg x\n      (#x)        /count x\n          #1 2    /takes #x items of 1 2\n   #'[        ]x  /take [...] items of x\n ,/               /flatten\n</code></pre>\n"},{"answer_id":237047,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/237047#237047","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 11 chars</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊢(/⍨)1 2⍴⍨⍴\n</code></pre>\n<pre class=\"lang-apl prettyprint-override\"><code>           ⍴   monadic: shape of the right argument (number of elements)\n\n      1 2⍴⍨    repeat numbers 1 and 2 as many times as the right argument\n\n⊢              the right argument\n\n (/⍨)          replicate each element of the left argument as many times as \n               specified by the corresponding elements of the right argument \n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24RHXYs09B/1rtA0VDB61LsFyAKSXI/6pgLl0hTUE5OSU1LV//8HAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256290,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/256290#256290","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>y&quot;f\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwieVwiZiIsIiIsIlswLCAxLCAyLCAzLCA0XVxuWzExMCwgMjIsIDMzMzAsIDQ0NDQsIDU1NTU1LCA2XSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Uninterleave, pair the results and flatten</p>\n"},{"answer_id":256289,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/256289#256289","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>rṀs</code>, 8 bytes</h1>\n<pre><code>ƛkvk⁰&quot;i℅\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJy4bmAcyIsIiIsIsaba3Zr4oGwXCJp4oSFIiwiIiwiNCJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Fun</p>\n"},{"answer_id":231626,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/231626#231626","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-!</code></a>, <s>7</s> 6 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ì´J Åx\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LSE&amp;code=7LRKIMV4&amp;input=LTIwNDg\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":256288,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/256288#256288","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>2Nτ∑\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCIyTs+E4oiRIiwiIiwiLTgiXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/216718/100664\">Makonede's 05AB1E answer</a>, outputting 1 for truthy and anything else for falsy.</p>\n<pre><code>   ∑ # Is exactly one of\n  τ  # Digits in base...\n2N   # -2\n     # Truthy?\n</code></pre>\n"},{"answer_id":256281,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/256281#256281","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a> (builtins only), 35 bytes</h1>\n\n<pre class=\"lang-sh prettyprint-override\"><code>A=(${(n)@//[A-z]});&lt;&lt;&lt;$A[1]\\ $A[-1]\n</code></pre>\n<p><a href=\"https://tio.run/##qyrO@J@moVn939FWQ6VaI0/TQV8/2lG3KrZW09rGxkbFMdowNkYBSOkaxv6v5UpTMFQwUjBWMFEwVTBTMFewAIqYAnlGCpZAGUMDBVOgAFAYxPRIzcnJB8qa/gcA\" rel=\"nofollow noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256280,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/256280#256280","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 38 bytes</h1>\n<pre class=\"lang-arturo prettyprint-override\"><code>$[a][select'a=&gt;integer?@[min a max a]]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?KnGd0V\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":256279,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/256279#256279","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 9 bytes</h1>\n<pre><code>₌0b(dn⁰*꘍\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwi4oKMMGIoZG7igbAq6piNIiwiIiwiMTMsIDE0XG4wLCAxXG4xLCAyXG4xMywgMTFcbjE5LCAxXG42MywgNjNcbjIsIDUiXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Ports the 05AB1E answer, so go upvote that too</p>\n<h2>Explained</h2>\n<pre><code>₌0b(dn⁰*꘍\n₌0b       # Push 0 and the binary of the first input\n   (      # to each bit:\n    d     # double the top of the stack\n     n⁰*  # multiply the bit by the second input\n        ꘍ # and bit xor\n</code></pre>\n"},{"answer_id":256278,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/256278#256278","body":"<h1><a href=\"https://www.gnu.org/software/gawk/manual/gawk.html\" rel=\"nofollow noreferrer\">AWK</a>, 20 bytes</h1>\n<pre><code>$0=$1*($1$2-69?7:$2)\n</code></pre>\n<p><a href=\"https://tio.run/##SyzP/v9fxcBWxVBLQ8VQxUjXzNLe3ErFSPP/fzMFSwA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n<p>This isn't the shortest, but it uses some quirks of <code>AWK</code> so I thought it was worth posting.  It uses the typical pattern of making the test/condition an assignment statement setting <code>$0</code> to something but not defining an associated code block.  As a result the value of <code>$0</code> is printed by default.</p>\n<p>The trick here is in ternary that either uses the second positional parameter as provided, or changes it to <code>7</code> if the input is <code>6 9</code>.  The expression,</p>\n<pre><code>$1$2-69\n</code></pre>\n<p>takes advantage of AWK's willingness to combine strings and mathematical operations as necessary to make sense of the code it's running.  It appends the two numbers passed to the code, the converts it to a number before subtracting.</p>\n"},{"answer_id":256271,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/256271#256271","body":"<h1><a href=\"https://github.com/Thunno/Thunno\" rel=\"nofollow noreferrer\">Thunno</a> <code>Y</code>, <span class=\"math-container\">\\$8 \\log_{256}(96) \\approx\\$</span> 6.58 bytes</h1>\n<pre><code>R{xyAx+Y\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72sJKM0Ly9_wYKlpSVpuhYrgqorKh0rtCMhXKjo0milSKXYRYYGEC4A\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Returns the 0-indexed <span class=\"math-container\">\\$n\\$</span><sup>th</sup> Fibonacci number.</p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-python prettyprint-override\"><code>R{xyAx+Y   # Implicit input\nR{         # Loop that many times:\n  xy  +    #  Add x and y together\n   yAx     #  While storing y in x\n       Y   #  And storing the result in y\n           # After the loop, the Y flag pushes y\n           # Which is output implicitly afterwards\n</code></pre>\n<p>Note that <code>x</code> defaults to 0 and <code>y</code> defaults to 1.</p>\n"},{"answer_id":256265,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256265#256265","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, 36 bytes</h1>\n<pre class=\"lang-r prettyprint-override\"><code>\\(s)trimws(s,,0)%in%c(&quot;&quot;,&quot;.&quot;)&amp;s!=&quot;.&quot;\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGiNNulpSVpuhY3VWI0ijVLijJzy4s1inV0DDRVM_NUkzWUlHSU9JQ01YoVbYE0VO2t5MQSDSW3xJzi1MqYPCVNrjSgOjBpAKUMoAw9OA2T0YOpgDEQUshAD4UHUsEFtjSkqLQkA25pIlynIZRVATctFcpQgAkoQGhtKF8X5jS4O0COhfhwwQIIDQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/256170/55372\">@Albert.Lang's answer</a>.</p>\n<p>Uses the <code>whitespace</code> argument of the <code>trimws</code> function introduced in R 3.6.0.</p>\n"},{"answer_id":244277,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/244277#244277","body":"<h1><a href=\"https://github.com/TryItOnline/seed\" rel=\"nofollow noreferrer\">Seed</a>, <s>4694</s> 4502 bytes</h1>\n<pre><code>39 23345386873944734309285705649562214322923535338513787840726059344836991733232701124858784406171983413525769035739193091317312821286862091673034093258254737808529480740867073160694207283540732802589654087348246306424108351751311067631335648365532710947883728455312678903999543414986443810435493370315134647072481870757046559560767136040676281671376819795324434856453735428264762843673716931661746853554648863000837820618766325590788356124601042099541341483064315601051750207795784533758073620813013115058115202328602261019521188162907432705317709462265407997435677959431637608739188384820535674569023665708824769117130584628086812767619300150936306513016713438624735631896208226558553705578499273228365561706607508974248633654644472401969256417949202545503229189330457914013293106347633234904257897628188377211123547522316430704423351649833550317940803484242023657434716958957587230473447472170005697587796499855927956924703860969370032077181183813997697920001129271041258462117064842855557817828287309864524148521039064850419014169734078927801370682493891194692916817142423371375512874755307643229558474820620773013367601053438535142499961672800471263088573030714197841432529737819978024272023115971994335629080760807110601625840500005576870897474597727212673444634680054468191797452281171657965522840129388173724585980135600170025063620602628298627811946062091546889131371926823568681212834659514998682306098670560578318063077703702015608052686405555782215469820110984687203004291914156230320625462064509758167591458209331235212640744714944466265540624319127738893716421169144022527159634296736260757337640921918849758954315864968212488657203226533587353649351778992581839569265033006103790337825946891770665589403131544197363786202809251067880755092540881383788858825619755294045426872602952477879200662412263820311579658891410984567942455376104064634087560919309116469779337448222971714205506106434861563361065264676346668562754032388044586603191705003186050941101737238753507972188516844227916598403811945061789829209022797794856907795280845148337927336190754837895578035971541077446106601429711198909985434167448288125565008326994953358507196336677928811063398215196756813330927829954298340363790942335608247284708980931664255175263323494474655761771711383684020341286483311232450751637188832338282365001980619004736926421020545780168645284628043949398052855672494054844858796879547004560821501647027627620931639915989753539985160519138882067784198444595441811191399424880792691274895217945599103951284792036009843684640644727200173221626567038906492094115422297154223582626065131092394499833564570471955561529154762920901660552470118203300492660926353444889031479441391716424199093929419050805652092712224713014163928963683320445942834620765638299957157761471954992453965174566767052457734421384797861892548612233678879032571407415763995799697084460449481011980933595196444998930307697403672188673825999360332797937744985054511100836407779016165673872373310879592118399300133957780585475517066306666920397584925551254210311998315301028471463539416320653567122160674748915331494295984381121190145666938252633808615711556028673805375510446823318750130981978154654997326727239404525161535622829359058005003740269566983082692378752252198224696254750416200980706704359975518565261545420238758226454680563033057001226125143840414367435620075434502664984902148647078854467653648067041037379150849558209574954581189083630370505506375071080959718696461782683034278484505125465265492405192125616634322283908654348532913099106491870966062276727286614470801650571178850146397543614007581120988735292604484768834605242986004904531743614154630006898576385883749714930636531225280325429278056803694383205579251797535306160456389603169599349989707250713018909969811190663566801819447003975601708056252841800628364818930316430260043879135073603348919031644234002981192629576497660461677947610006543231706577837438811265977164354969644885825582261812180155492583995120383156018469389467006878690072374841382066122175919585112489442594496493463386891710103741087324632245353507660394419350165419526162955982962335197477336304033108148298040661871462588450794544521467248068540365914505422139306015926783904272029251862004795498004645359369772500371366215160030879374914060894959826814924777847813129579229461420328680050563398486579073401384070598971755243256100966805691895631455236232588087146040702221938793149485419052426135144305222421870942178316091451568136489010664122415628294236744095902991276097097917\n</code></pre>\n<p><a href=\"https://tio.run/##LdiJlV03DAPQVlKC9if2E1eQ/s/kQuM4sTN/kUgQAPH8358///78zPpnzLn2vOd@s9b65pqtxt1f22fVPmP0NceoMbdf8@4@v/vd1b5x2q651p2nqn9zjjm@1vtYd@cTq53@9bpz9bnH/k61uV3Syw19@kYfd/jv3DO8cr7Z5mo1x75jq@S77e5R67ZvtXu@5hunnVrD5XduNcxxm4/X8YMG1h3rzHbWWL35RP@U23s735l9Th0pdm919lbru3c6aHmhj/Nd9VXVXgpedc9a8/a23FNzfm12Z62zlKHDfv0JpOU4KLXvfH2etnLVuD0/fef2@sptToLJAfPnNE07xafW1PLXT2kLVOtcEG9X3KuJpoHvDiDe7xyg7GqpeB8In6YyoKm2p9ybplWY19N1A5GrTcHMvg3BCePbZwseu@3r99FM7J42xumt1x69X6UP96yMEizfByccCL5fldf3ycHlsqPDgF6@NS/ofcG7axv0mOdA55qHuXc8mO50kpGCZYDrhAdNLTUzsp3aAhvUj285anaDVXWu39eUlJSWqobBjzdKuLUD/t2u6gzmTC/DEJXH0tWpAfn@1Sr9bsNuobOj52xrf9V9ag4zaGcqNjReBVw31ZtlWPLBppPA@vYYWicSs1@0s/2A4zPn5pZ2kfiqJOjCwOgzYhzd5vANl@Lp@pSn9EZllde/ckxpUm/4VBBogGjq17aSzbMbGqQ7lgL100@L3CpsXn08fHvwyP2OClgdhfwirTB6j3DFoDE9H9u@V60vBSoKvZx1weEMk6t5jc78C16m9vW0hU8@sDfhasJUcP85hBlpK4xNsWEafj9CZqa4ka8T2DFmPIAD1U0c2RF@czq53BW7ofrIv2uUvtf4AibGFj9BPdxAUqQ@@S36Rp3033YLpLyGPEMIbCzDgzWBg507kJmP@D/HG5hPoFIYalh8JD9hBELQgiLGQr0KKMTVMrKxMUWPhIMeA65Aezi152PYd28MDlA1AOmbj/QQczu76Bl13nBGxdgcbVb47mTYGf1HwZHzbdsRR2dvnNzY8QVkXZeBYxTs0JWtAhAwM2SBxkqJi7zQC@Lb23yV2maIHEAMHBEVE1xORMa@BmUXgX76r7jTwikSZufDXD5DgOGoE0eJ8Bg/AtgZPUawcl08tG9V14nBx8926oyQDQ8b9/Rm/BnlCJTI5mP9oSLt8KP5seMYIK854PyicxSjMMhCIWzhHF@WBzo5JT5/EYIU/USJpBIPxTBGxCrUln1C9msEORPkeksRT0wwICOcBFPYFjpkkutBzdpsniwL1hWjD5f4nyH9XWmwoqMv28JWHCTxPc2YXTo62QLHiOjCT@a6spdAz/hxSMW8RwPLoHha5vCF0XiBH4zYzB8lp1vnZsh4rTnaZEV8A4UVyjfCxtwJXQQ19Ja3lZY1VG81xInXzuaAND9Vkzf2CmAVqlnW6rdffBw/emxWM15zul0Zt8qqPK9ZWNtQxmdrDXlAdMikFcmCHZ6tkQ/FZaeiLFMUIgwukcBh0FlmI3GhZawuePZKAiZEkxG0MWdXMucsufHXrOOmJ6JHEoBn6BAhINXZb2kx5m12GszaApoqhRnynalZQy39x5vDQpz3dcsibniecf4uryUjlfqpksHyMbf7HPyTedAdsirFsNRtufUEBusu/77imTcJ8abEqWAo0sBC0TfW@cUBDREHKhy/QTuOn92G24qLOtfNujZPC6Pi5rHjFRYLIWFrEDgh6Yr7xbior0fkJ4sl7h9eoBTQH1Pzp4mNqDrbGOlHEmG97QaCL46NGoRERT6vpcctE0HxbCz7aTwBO9yLftOkXm6yVVefjuSF5yraNONpt2QH7TgdTYQKNOiw5IEVvIYUoB2zjjIAERe1YrQywxqLlVZN/5WXdCD0kG5PFKEwGvLKF/sfYFYFz7D/WYQ/NT1jG7EbO7/HFB2XOTEA6xfv0N/VxEN//ZFwxsUrKQM89daXT4a5T5LMMcZVog04Ij1WSifGHVaZaXQSAyYL@PWMZSYdEKLkmoSVNKaIZCSKUT@AbgLIfpHH7vBPBh7HhffOSt5hLrZnaN1qRuMbi88cKmii2EtpPWxAt2xss3Sr/rhhqINzLk8u2LkirURqiW6QwRjkHq9Hqz31tGxTOEqqGJ@okU2eTZVxYN4JCedzXjbtlGzw7E446qo9lwMfcrtS7cSjtzxp7GwdoKPEqay1L6HF/N0ig5muTFpx9n5DIIfH3tszyUTHlX2MWzPEROIWi4eUnMEkEjfOi7VO/GJosvNJpBMCPfrcF/iZ7IpZZ23dd2cWFJOicB/cb7HKeuiXZI3tN6E2gfWZP5QYIYpXPPVqZMWcLaE88jA/DuKTmV9agJrsimCWJ7UZdgIW3jv37PcwIbEG6MpaqTyM1En8SLAGtfVhYWMubjnXzNJCCw8qTXo33WbQYMw@puRwHFmEF/qKZhJtImVTE23ftzLTPJrYyDciyWY1uEqKmIlFeZQaWS4zXHxxksnThdjGc5PNsqm/X/9juideyZCy70wf4Z@k8pQVzFD47RqkiBOG@BiiLxRLh4/@J7ksF@Vmnqm@PB3kKS3afHF9pBWcANvO0xA2hPn13rZpADJyBxzIQKKRsdWWsMq2svKdCjo5FOsiR30nIwpSyZi5xNwy2pXAMfZjX0/uU@7OTHcEbcoM@PdZjUcnZKNWIGVLVlBMwBx6UsiJP/VkNw8Q@z1a6zqRaOV5wZxmntzjqC2MzFMvuXl5xARfSEiSiO/SWtiw8qB38pRndVDgec8wicrJAJ5O2nMgzAdHYk6ePxFH8eFoVg4XpowsP1q4iS3npcuWFcLfE2vtuDxSzzxJJb1n6Elqdkg8OvE/z8ObQyagP/17gD4JBiY144EhFqLapIkTFbn0KOPLkuQvqBaPtr2MaSVf3pftI3Y7eiV1yjQzD3j5C4v29m5PCMwzRkZa53lDHgfzvGmdCgQjfwPB7dJ2y/doD3ypKC5591tY9HF6HmqQa2djjSdDfyTJJxQy@hdwEJGZQjLp8mV02KJcklMcATrZ6b7i@wj6/fz8Dw\" rel=\"nofollow noreferrer\" title=\"Seed – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256262,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/256262#256262","body":"<h1><a href=\"https://raku.org\" rel=\"nofollow noreferrer\">Raku</a>, 25 bytes</h1>\n<pre><code>{$^a-6&amp;&amp;$^b-9??$a*$b!!42}\n</code></pre>\n<p><a href=\"https://glot.io/snippets/ggwc6n0mhi\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":256261,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/256261#256261","body":"<h1><a href=\"https://pythonhosted.org/PyFunge/\" rel=\"nofollow noreferrer\">Befunge-98 (PyFunge)</a>, 39 bytes</h1>\n<pre><code>31p132p&gt;31g32g:.+ v\n       ^,p23p13g23&lt;\n</code></pre>\n<p><a href=\"https://tio.run/##S0pNK81LT9W1tNAtqAQz//83NiwwNDYqsDM2TDc2SrfS01Yo41KAgDidAiNjoGy6kbHN//8A\" rel=\"nofollow noreferrer\" title=\"Befunge-98 (PyFunge) – Try It Online\">Try it online!</a></p>\n<p>I'll throw this into my Seed generator and see if it gives me anything good.</p>\n"},{"answer_id":256259,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/256259#256259","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, <s>29</s> 23 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>!n=round((2n)^.5)^2-n+1\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/XzHPtii/NC9FQ8MoTzNOz1Qzzkg3T9vwf0FRZl5JTp6GooahpiYXEs8ElWtkbGKqqfkfAA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/117883/109916\">Arnauld's JS</a> answer.</p>\n<p>-6 thx to @steffan</p>\n"},{"answer_id":256258,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/256258#256258","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>37</s> <s>35</s> 32 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:round((2*n)**.5)**2-n+1\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHPqii/NC9FQ8NIK09TS0vPFEgY6eZpG/4vKMrMK9FI0zDU1OSCs02QOUbGJqaamv8B\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/117883/109916\">Arnauld's JS</a> answer.</p>\n<p>-3 thx to @Steffan</p>\n"},{"answer_id":256260,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/256260#256260","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 8 bytes</h1>\n<pre><code>dɾ:ẇRfJi\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJkyb464bqHUmZKaSIsIiIsIjQwMCJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":256252,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/256252#256252","body":"<h2>Pascal, 69 characters</h2>\n<pre class=\"lang-pascal prettyprint-override\"><code>function p(x,y:integer):integer;begin p:=x*y-12*ord(x=6)*ord(y=9)end;\n</code></pre>\n<p>expanded</p>\n<pre class=\"lang-pascal prettyprint-override\"><code>function product(x, y: integer): integer;\nbegin\n    product := x * y - 12 * ord(x = 6) * ord(y = 9)\nend;\n</code></pre>\n"},{"answer_id":256247,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/256247#256247","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, <s>18</s> 9 bytes</h1>\n<pre><code>69f⁼[42|Π\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwiNjlm4oG8WzQyfM6gIiwiIiwiWzksNl1cbls2LDldXG5bNCwyXSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Sigh terrible first re-try at Vyxal after a few months.</p>\n<h2>Explanation</h2>\n<pre><code>69f⁼[42|Π\n69f⁼      # list equals [6,9]\n    [     # if statement block\n     42   # return 42 if true\n          # else product of list\n</code></pre>\n<p>-9 thx to @Lyxal</p>\n"},{"answer_id":256248,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256248#256248","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 16 bytes</h1>\n<pre><code>aRM0N&quot;.&quot;&amp;!aQ&quot;.&quot;\n\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCJGYVtcbltcIlwiXVxuW1wiMFwiXVxuW1wiMDAwXCJdXG5bXCIuMFwiXVxuW1wiLjAwXCJdXG5bXCIwLlwiXVxuW1wiMDAuXCJdXG5bXCIwLjAwXCJdXG5bXCIwMDAwMDAwMDAwMDAwLjAwMDAwMDAwMDAwMDAwXCJdXG5bXCJhXCJdXG5bXCIwMDAxXCJdXG5bXCIweDAwXCJdXG5bXCIwZTBcIl1cbltcIiAwXCJdXG5bXCIwIFwiXVxuW1wiKzBcIl1cbltcIi0wXCJdXG5bXCIuXCJdXG5bXCIwLjAuMFwiXVxuXXtcblAoU1RhKS5cIiAtPiBcIi5bXCJGYWxzZVwiO1wiVHJ1ZVwiXUB7IiwiYVJNME5cIi5cIiYhYVFcIi5cIlxuIiwifVZhXG59IiwiXCIuMDAwLjAwXCIiLCItcCJd\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>Non-trivial pip answer, port of <a href=\"https://codegolf.stackexchange.com/a/256170/110555\">@Albert.Lang's answer</a></p>\n"},{"answer_id":256178,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256178#256178","body":"<h1><a href=\"//github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 11 bytes</h1>\n<pre><code>`+- `₈ĿṅsEḃ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJgKy0gYOKCiMS/4bmFc0XhuIMiLCIiLCJcIiswXCIiXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Port of Kevin Cruijssen's 05AB1E (legacy) answer.</p>\n<h3>Explanation</h3>\n<pre class=\"lang-python prettyprint-override\"><code>`+- `₈ĿṅsEḃ\n      Ŀ     # Transliterate the (implicit) input,\n`+- `       # Replacing the characters &quot;+&quot;, &quot;-&quot; and &quot; &quot;\n     ₈      # With the characters &quot;2&quot;, &quot;5&quot; and &quot;6&quot; respectively\n       ṅ    # Join the list created by nothing\n        s   # Sort the string\n         E  # Evaluate the string\n          ḃ # And convert to a boolean (Python-style)\n</code></pre>\n"},{"answer_id":256230,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256230#256230","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>73</s> <s>72</s> <s>67</s> <s>66</s> 64 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda v:not re.match(&quot;^(0+(\\.0*)?|0*\\.0+)$&quot;,v)and&quot;&quot;&lt;v\nimport re\n</code></pre>\n<p><a href=\"https://tio.run/##jY7BagMhEIbvPsUw9KDZVCy9LV1KL32C3pIWbOKyC64rapcE8u4bHXNoKYUO@Dv@g/N//pyG2T2ufbdfrZ4@jxqW1s0JgpGTToeB4wdXDd9LtRHPF7XJTSPucLsI7Y6ITwsbJz@H8mH1YXSJ46u20ZxbFKyfAyzawuhgh7hFVY4qKquQIcklvTnfS/54KXxvGeTSMZqc2vO8X0DXAaXSqGIE4wMNBauGYLcG38JXGn4D6hr9UK4TgQDRQJamdPcEXTnl3yR5/T9BXqyFZGKCg44mgs@rUKxX\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>Golfed reference implementation from @DLosc.</p>\n"},{"answer_id":256228,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/256228#256228","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a>, 7 bytes</h1>\n\n<pre class=\"lang-sh prettyprint-override\"><code>&lt;&lt;&lt;$1:e\n</code></pre>\n<p><a href=\"https://tio.run/##qyrO@J@moVn938bGRsXQKvV/LVeaQkamXklFCZCRnFhUlF@il5uamwrk5eTnAMnyjMQSPb3MYj29kgwQmZaZA5LUS0oszihKBrKUQgwMfB3yjL0TA6L0MgzKnaNjM5SA4onpqXklegYGBv8B\" rel=\"nofollow noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n"},{"answer_id":210383,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/210383#210383","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 8 bytes</h1>\n<pre><code>@R:a^&quot;.&quot;\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJAUjphXlwiLlwiIiwiIiwiYWJjLnh5eiIsIi1wIl0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>-2 from emanresu A.</p>\n"},{"answer_id":256028,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/256028#256028","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, <s>110</s> <s>96</s> <s>94</s> 86 bytes</h1>\n\n<pre class=\"lang-php prettyprint-override\"><code>try{for(;;)if(!~~$c=fgetc(STDIN))$x++;else{echo$x?:&quot;&quot;,$c;$x=0;}}finally{echo$x?$x:&quot;&quot;;}\n</code></pre>\n<p><a href=\"https://tio.run/##K8go@G9jXwAkS4oqq9PyizSsrTUz0zQU6@pUkm3T0lNLkjWCQ1w8/TQ1VSq0ta1Tc4pTq1OTM/JVKuytlJR0VJKtVSpsDaxra9My8xJzciphkioVQGnr2v//DY2MTUwNDIzNjAwMDExMTICkAQA\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n<p>Takes input via STDIN, outputs via STDOUT.</p>\n"},{"answer_id":256160,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256160#256160","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 8 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>-6 thanks to @Shaggy</p>\n<pre><code>k ü mÊñn\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=ayD8IG3K8W4&amp;input=Njg2MA\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>k ü mÊñn\nk        Get the prime factors of the input\n  ü      Group the factors to lists of the same element\n    mÊ   Map each group to its length\n      ñn Sort them in descending order\n</code></pre>\n"},{"answer_id":198889,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198889#198889","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, <s>20</s> 18 <a href=\"https://codegolf.meta.stackexchange.com/a/9429/43319\" title=\"When can APL characters be counted as 1 byte each?\">bytes</a><sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\" title=\".dyalog files using a single byte character set\">SBCS</a></sup></h1>\n\n<p>-2 thanks to Bubbler.</p>\n<p>Anonymous tacit prefix function. Returns list of Progressive Mean™, Standard Mean, Trend.</p>\n<pre class=\"lang-apl prettyprint-override\"><code>(2÷⍨+)⌿∘⌽(,,-)+⌿÷≢\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///X8Po8PZHvSu0NR/17H/UMeNRz14NHR1dTW0gFyjRueh/2qO2CY96@x71TfX0f9TVfGi98aO2iUBecJAzkAzx8Az@n6ZgqGCkYMyVpmAMpA2BtKGBgpGBgrEBSMgAxDYAChlAJAzBHCDbBAgtFSyAmi0UzIAsQ4hWMATJmQHFLYDilkBRS7BKkDqQDFgNAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n<p>This consists of three parts: <code>(2÷⍨+)⌿∘⌽</code> <code>(,,-)</code> <code>+⌿÷≢</code></p>\n<p><code>+⌿ ÷ ≢</code> is the sum divided by the count</p>\n<p><code>(</code>…<code>)⌿∘⌽</code> reverses the list and then reduces from right to left using the function:<br />\n <code>2÷⍨+</code> add next value to previous value and divide that by two</p>\n<p><code>(,,-)</code> is the concatenation of the PM and the SM, concatenated to their difference</p>\n"},{"answer_id":256223,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/256223#256223","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 57 bytes</h1>\n<pre><code>$[b][a:average b@[p:fold.seed:b\\0b[x y][//x+y 2]a p p-a]]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?AGxlmX\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":256221,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/256221#256221","body":"<h1><a href=\"https://raku.org\" rel=\"nofollow noreferrer\">Raku</a>, 12 bytes</h1>\n<pre><code>m/.&lt;-[.]&gt;*$/\n</code></pre>\n<p>14 to make it a callable block:</p>\n<pre><code>{m/.&lt;-[.]&gt;*$/}\n</code></pre>\n<p><a href=\"https://glot.io/snippets/gguqljm6us\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":256219,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/256219#256219","body":"<h1><a href=\"//docs.python.org/3.8\" rel=\"nofollow noreferrer\">Python 3</a>, 42 bytes</h1>\n<p>Python translation of <a href=\"https://codegolf.stackexchange.com/users/58563/arnauld\">@Arnauld</a>'s JavaScript solution</p>\n<pre><code>lambda a:eval('0x'+a.replace(':','0+0x'))\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM7YoKPqfZhvzPycxNyklUSHRKrUsMUdD3aBCXTtRryi1ICcxOVVD3UpdR0HdQBsoqqn5v6AoM69EIw2oCAisQARQlAsuaggEViACRTQNCDDVQkUNQaL/AQ\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256148,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256148#256148","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>∆ǐsṘ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLiiIbHkHPhuZgiLCIiLCIxMjM0NTYiXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>So uh turns out the prime exponents built-in doesn't include 0s by complete accident - it's not a bug, just a consequence of how it's implemented and a different understanding of what a prime exponents built-in should do lol.</p>\n<h2>Explained</h2>\n<pre><code>∆ǐsṘ\n∆ǐ   # prime exponents of the input\n  s  # sorted\n   Ṙ # reversed\n</code></pre>\n"},{"answer_id":256218,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256218#256218","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 6 bytes</h1>\n<pre><code>↔OmLgp\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//1HbFP9cn/SC////GxoZm5iaAQA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<pre><code>     p  # get the prime factors\n    g   # group identical elements\n  mL    # get the length of each group\n        # (these are the prime exponents)\n O      # sort into ascending order\n↔       # and reverse\n</code></pre>\n"},{"answer_id":256217,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256217#256217","body":"<h1><a href=\"https://github.com/FMNSSun/Burlesque\" rel=\"nofollow noreferrer\">Burlesque</a>, 7 bytes</h1>\n<pre><code>fCf:)-]\n</code></pre>\n<p><a href=\"https://tio.run/##LYy5CsJQEEX78ycWwpvlbbZ@hJWNkICQxkgq8dufY8gUc7kL57Gty/R@bdP4rM8xX@fL6Xwf39syBMXIVERwOprxjqhQkIQ4kgnX0NhEa26hSAQJbUihxTga9RQ4xxPZyQVLuFIKNWEalWE74o8Odi9oWFHz45dDKlmq98A3a62kRt9Pfg\" rel=\"nofollow noreferrer\" title=\"Burlesque – Try It Online\">Try it online!</a></p>\n<pre><code>fC   # Prime factors\nf:   # Count occurrences \n)-]  # Map-Take counts\n</code></pre>\n"},{"answer_id":256216,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256216#256216","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, 71 bytes</h1>\n<pre><code>f=\\(n,m=2,l=0)`if`(n%%m,-sort(-c(if(l)l,if(n&gt;1)f(n,m+1))),f(n/m,m,l+1))\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGq4sz0vMSS0qJU26WlJWm6Fjfd02xjNPJ0cm2NdHJsDTQTMtMSNPJUVXN1dIvzi0o0dJM1MtM0cjRzdIBUnp2hZhpIsbahpqamDpCpn6uTq5MD4kKNS4NboGGmqaCsYKhgyIUQMjQCiRmhiBmZgMSMgSqRBI0NoJpRlBqbQbQbcUFsW7AAQgMA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Recursive function that directly calculates prime exponents, and sorts them on every recursive call (which is unneccessary except for the outermost call, so overflows the stack for large inputs).</p>\n<hr />\n<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, 74 bytes</h1>\n<pre><code>\\(n,f=\\(n,m)if(n&gt;1)`if`(n%%m,f(n,m+1),c(m,f(n/m,m))))-sort(-table(f(n,2)))\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGq4sz0vMSS0qJU26WlJWm6Fje9YjTydNJsQWSuZmaaRp6doWZCZlqCRp6qaq5OGkhY21BTJ1kDzNHPBaoCAt3i_KISDd2SxKScVA2QIiOgINTEPcmJJRpwezTMNHWUYvKUNBWUFQwVDLlQJQ2NELJGGLJGJghZY6BuNGljAxSjMbQbmyEbboRhtbGJKZIKM7AJED8sWAChAQ\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Uses recursive helper function <code>f</code> to calculate prime factors, and then sorts their exponents a single time (and thus copes with much larger inputs, but at the expense of 3 more bytes of code).</p>\n"},{"answer_id":256215,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/256215#256215","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, 34 bytes</h1>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|p|p.extension().or(p.file_stem())\n</code></pre>\n<p>Usable as a <code>fn(&amp;std::path::Path) -&gt; Option&lt;&amp;std::ffi::OsStr&gt;</code>.</p>\n<p><a href=\"https://tio.run/##jY5NCsIwEIX3PUXsQiagOcD4s3NdwQOUVic0YJOYmWJFPXstulB04@Yx8L75eKljGaxXbeU8aHXNjiTKovUwZTkgxkoaxO2Yer4uorjgl6/GWodY8E7SWq2GW7xFQ72Q5xEBbUKCaKw7UslCLWg9LLKOST1/AyN23vWflk0vi6xipiQlnSZgfxYgejpD3jgjveRaz9QutARfa8Y7hbasL0IMdf5C9X9qU1fcpP2/7jc@@u/DAw\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256214,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/256214#256214","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 44 bytes</h1>\n<pre class=\"lang-arturo prettyprint-override\"><code>$[s][+*16from.hex take s 4from.hex drop s 5]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?yvmCST\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":256213,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/256213#256213","body":"<h1>Python 3, 25 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda f:f.split('.')[-1]\n</code></pre>\n<p>Everyone probably knows this works, so I'm not gonna put a TIO link.</p>\n"},{"answer_id":256212,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/256212#256212","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 24 bytes</h1>\n<pre class=\"lang-arturo prettyprint-override\"><code>$[s]-&gt;last split.by:&quot;.&quot;s\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?1oRzQC\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":256201,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/256201#256201","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 50 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>p;char*f(char*s){for(;*s;)p=*s++^46?p:s;return p;}\n</code></pre>\n<p><a href=\"https://tio.run/##hc5Ni8IwEAbgs/srwoDQtDoElEUMxYU9iuBhT35BNqQmYGNIsiiIv72rlQoq1BwyM294mMj@Vsqqclxq4dMiqUugp2LvE54GTl2ehizbDD8nbhy4V/HPW@L4uSqFsQk9fXScNzYWCXT7o0DynHTDykKPXBJtMB4jkIdDewTuMeVtXgrv9xFLVSp49E3U7g9aREQTEKO@3oXZKah93b31@CuC9hJe/988tPsfxmZfdjAV8wVqdvherjXcfDO1e7FVNiJjDJ73N9nFn6t/\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 45 bytes skipping <code>return</code></h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>p;char*f(char*s){for(;*s;)p=*s++^46?p:s;s=p;}\n</code></pre>\n<p><a href=\"https://tio.run/##hc5Ra8IwEAfwZ/cpwoHQtHoElCGG4mCPQ9jDnuYUstA2ARtDLqAgfvbMdXTgBjUPubt/@HHR00brlLzURoW8zrpC/FwfQiZzktyXORXFbv648kuSVHp5Sa2yLuPnh5EP1sU6g/F0Qaws2Zg@HEzYNTEW4ykCuzl8wuA35nLIaxXCIWJbtRXc@j4a9kejIqIlxGi@79ruK@h81931@KnIBA3//98/DPs3IdZPbvaiXt/RiOPzZmvgx/fTsFdN5SIKIeDv/j67@kv6Ag\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 24 bytes by ceilingcat</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>#define f(s)rindex(s,46)\n</code></pre>\n<p><a href=\"https://tio.run/##hc5NC8IwDAbgs/6KEhmssIWCIoIMBI8iePDkx6F23VpwVdbCBuJvn3NSQYXZQ0je8JCKOBeiaUapzLSRJAstLbVJZR3aaDKlTcG1CeltOLi2sctCCOKZJUlCAnswELUAlEZXOyAfj0YE3jGd93nBy/LisJCFhE/vo35fKe4QtUV06lkzfZbQ@a776/HErSoF/P7fL/r9lrH1woxXfLNDxarl/qjg5f3U73kujUPGGHzf91nr780D\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":120944,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120944#120944","body":"<h1>POSIX Shell, 13</h1>\n<pre><code>echo ${1##*.}\n</code></pre>\n<p><a href=\"https://tio.run/nexus/bash#NYzNCsIwEITvPsWwrRchC54F3yW0GxJIs5IsKEifPY1C5/DB/DBBK0yaLb4JUgHFxPYxAi2@VjXeZJPhsubBd/TGnBqzxR9DykIPrHrB0KumYgF0bXBPEObv@bz/@yYG5zCfaZcl6ljdp@nGe1@1SD8A\" rel=\"nofollow noreferrer\">Try it online</a>.</p>\n"},{"answer_id":256177,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256177#256177","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 75 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>i;f(char*s){return*s==48?i+=2,f(s+1):*s-46||i++&amp;1?s=i!=1&amp;!*s,i=0,s:f(s+1);}\n</code></pre>\n<p><a href=\"https://tio.run/##VYzdCoJAEIXv5ylMSHZdlTEkUll8kOpCzJ@FWsIxCtRn33brpoYZ@M7MmdPEfdMYo8qONUM9hsTnsZ0eow5JyuxQKSF3UcdIpLwIKc72y6KECNKKpNrINNiEFCmJERVfU7maW6004zO4PI@OeX4u4Tmoa8v6diJGnMN9VHrqmL@9nLQfeZ1blrAaBESExLXFxCo7H/6t5E8h1O6cAr4se9brgUCIbYj7TfAN\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256162,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256162#256162","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 77 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=(n,i=2,w)=&gt;n%i?n-!w?f(n,i+1).concat(w||[]).sort((a,b)=&gt;b-a):[]:f(n/i,i,-~w)\n</code></pre>\n<p><a href=\"https://tio.run/##ZcqxDsIgFIXh3bdwMOFGwFDrYBPsgzQdKIK52kBTiCSm8dFFHByMZ/zOf1V3FfSMU2TOn03OVhJHUVY0gTy5DbaOrVNrP7gVwLV3WkWSlqXrgQc/R0IUHUo7MAVN1zcl3SFFyp4JcsmDHw0f/YVYIgBWv1L/iaj29aFofvkpYrkyC1HpGwv4MPL43Rs\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Thank Arnauld for -1 or real<code>[]</code>ify(was two solutions)</p>\n"},{"answer_id":256175,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256175#256175","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 7 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>„+-₂‡{Ā\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//UcM8bd1HTU2PGhZWH2n4/1/bAAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeX/Rw3ztHUfNTU9alhYfaThv87/aCUlHSUDEDYAkXoQAiygBxYFk1ARZKCHwgNKKyglQtQYgqgKsA4FsDYFIKENYumCTYcYCLYpOhZIpCXmFKcCaSOQBFiJAVi1QaqBUiwA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>    ‡    # Transliterate in the (implicit) input-string\n„+-      # all &quot;+&quot; and &quot;-&quot;\n   ₂     # to &quot;2&quot; and &quot;6&quot; respectively\n     {   # Sort all characters in this string (based on codepoint)\n      Ā  # 'Python-style' truthify this sorted string\n         # (which is output implicitly as result)\n</code></pre>\n<p>The new 05AB1E is built in Elixir.<br />\nWith just <code>Ā</code>, the <code>0.</code> and <code>00.</code> test cases are incorrectly truthy instead of falsey and the <code>+0</code>, <code>-0</code>, and <code>0e0</code> test cases are incorrectly falsey instead of truthy. The sort <code>{</code> is to fix <code>0.</code>, <code>00.</code>, and <code>0e0</code> and the transliterate <code>„+-₂‡</code> to fix <code>+0</code> and <code>-0</code>.</p>\n<hr />\n<h1><a href=\"https://github.com/Adriandmen/05AB1E/tree/fb4a2ce2bce6660e1a680a74dd61b72c945e6c3b\" rel=\"nofollow noreferrer\">05AB1E (legacy)</a>, 8 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre class=\"lang-python prettyprint-override\"><code>…+- ₁‡{Ā\n</code></pre>\n<p><a href=\"https://tio.run/##MzBNTDJM/f//UcMybV2FR02NjxoWVh9p@P/fINUAAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##MzBNTDJM/V9Waa@k8KhtkoKSfeX/Rw3LtHUVHjU1PmpYWH2k4b/O/2glJR0lAxA2AJF6EAIsoAcWBZNQEWSgh8IDSisoJULUGIKoCrAOBbA2BSChDWLpgk2HGAi2KToWSKQl5hSnAmkjkARYiQFYtUGqgVIsAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-python prettyprint-override\"><code>     ‡    # Transliterate in the (implicit) input-string\n„+-       # all &quot;+&quot;, &quot;-&quot;, and &quot; &quot;\n    ₁     # to &quot;2&quot;, &quot;5&quot;, and &quot;6&quot; respectively\n      {Ā  # Same as above\n          # (after which the result is output implicitly)\n</code></pre>\n<p>The legacy version of 05AB1E is built in Python 3.<br />\nWith just <code>Ā</code>, the <code> 0</code>, <code>0 </code>, <code>+0</code>, <code>-0</code>, and <code>0e0</code> test cases are incorrectly falsey instead of truthy. The transliterate <code>…+- ₁‡</code> is to fix <code> 0</code>, <code>0 </code>, <code>+0</code>, and <code>-0</code>, and sort <code>{</code> is to fix <code>0e0</code> (thanks to <em>@JonathanAllan</em> for noticing a bug with this <code>0e0</code> test case).</p>\n<hr />\n<h1><a href=\"https://github.com/Adriandmen/2sable/blob/master/Info.txt\" rel=\"nofollow noreferrer\">2sable</a>, <s>11</s> <s>10</s> 9 <a href=\"https://en.wikipedia.org/wiki/Windows-1252#Codepage_layout\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre class=\"lang-python prettyprint-override\"><code>'.Q«Ô0Þså\n</code></pre>\n<p>Outputs an inverted boolean.</p>\n<p><a href=\"https://tio.run/##MypOTMpJ/f9fXS/w0OrDUwwOzys@vPT/fz0A\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##MypOTMpJ/V9Waa@k8KhtkoKSfaXLf3W9wEOrD08xODyv@PDS/zr/o5WUdJQMQNgAROpBCLCAHlgUTEJFkIEeCg8oraCUCFFjCKIqwDoUwNoUgIQ2iKULNh1iINim6FggkZaYU5wKpI1AEmAlBmDVBqkGSrEA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-python prettyprint-override\"><code>'.Q       '# Check if the (implicit) input is equal to &quot;.&quot;\n   «       # Append this 1 or 0 to the (implicit) input\n    Ô      # Connected uniquify (uniquifies groups of adjacent equal characters)\n     0     # Push integer 0\n      Þ    # Floatify and then stringify it: &quot;0.0&quot;\n       så  # Check if the connected uniquify string is a substring of this\n           # (so one of &quot;&quot;, &quot;0&quot;, &quot;0.&quot;, &quot;.0&quot;, &quot;0.0&quot;, or &quot;.&quot;†)\n           # (which is output implicitly as result)\n</code></pre>\n<p>2sable is built in Python 3 as well, and is the oldest of the three versions and predecessor of the legacy 05AB1E version.<br />\nIt lacks a lot of the builtins, including the <code>Ā</code> we use in the other two programs, so I had to find an alternative. I ended up using the connected uniquify builtin <code>Ô</code> and check whether the result is one of <code>&quot;&quot;</code>, <code>&quot;0&quot;</code>, <code>&quot;0.&quot;</code>, <code>.0&quot;</code>, <code>&quot;0.0&quot;</code>. I do this by checking whether it's a substring of <code>&quot;0.0&quot;</code>.<br />\n† After which only the <code>&quot;.&quot;</code> test case would incorrectly give a truthy instead of falsey result, which I've fixed by adding a leading <code>'.Q«</code>.</p>\n"},{"answer_id":256185,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256185#256185","body":"<h1><a href=\"https://factorcode.org\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.unicode</code>, 45 bytes</h1>\n<pre><code>[ dup &quot;0&quot;without &quot;.&quot;subseq? swap &quot;.&quot;≠ and ]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=VU8xDsIwDNx5hdUVNQImBANsiIUFMSGG0KZqVUhD46ggxAN4A0sW-AAbP-nKS4gTBoiUu_jss-PbI-MJVrVtX6vlfDEbQSlqKXagBWoHByNkIjTsOebMyCKpUgGqFognVRcSYdw5QxRB1KPbI2QBvMC86vGr_B72F7n0hZrxUNYnOnoTeKfjqEuv2A8IPWnY5W4wi4dtvIbUKPpKU2BeGaQqbbZuiwnohiuK31cLXKawCaYnmqSEtdtPAYMNDLbFNGSsDfwB\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Returns <code>t</code> for falsey and <code>f</code> for truthy.\nWith zeros removed, is it a sub-sequence of <code>&quot;.&quot;</code>? And is the original input not equal to <code>&quot;.&quot;</code>?</p>\n"},{"answer_id":256180,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256180#256180","body":"<h1><a href=\"https://doc.sagemath.org\" rel=\"nofollow noreferrer\">SageMath</a>, 45 bytes</h1>\n\n<pre class=\"lang-sagemath prettyprint-override\"><code>lambda n:sorted(e for p,e in factor(n))[::-1]\n</code></pre>\n<p><a href=\"https://sagecell.sagemath.org/?z=eJxdUNtqhDAQfRf8h3lLAlnYXLysYH_E9cG6kcq2KiYLS8V_7yRmW-hAMueczC0z1Nc0-ey-3m8dTJWdV2du1MAwr7BwA-MEQ9e7eaUTY01VnUSbJmnijHVQAxUcJAfNIedQchBIBEKJijrjQa5yryudRfeiecEhE4W-SEwsVVnmZwSXYIKliXkupsdhfJum5dAIf8mAsIT3KiiR6KBE4iMizGKQ_Kfnf_A3NHzlqKqOljhI_2H6u1n9HOT6kIXuCYeAhCL47lfljlV9jwv1q-Hwmp5VaQJoFtMH6tjBlnWcHB3I5nY4vcFmd9him8bWtWl3wn4AEbhkqA==&amp;lang=sage&amp;interacts=eJyLjgUAARUAuQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":256173,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256173#256173","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, <s>16</s> 15 bytes</h1>\n<pre><code>1`0\\.|\\.0\n\n^0*$\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7w3zDBIEavJkbPgIsrzkBL5f9/Ay4DAwMuPRACMvWAPCAGs5GBHgrPgCsRJG3IZVABZCsA1SpwaRtw6QINAenVMwAA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n<pre><code>1`0\\.|\\.0\n\n</code></pre>\n<p>Delete at most one <code>.</code> adjacent to a <code>0</code>.</p>\n<pre><code>^0*$\n</code></pre>\n<p>Match any number of zeros.</p>\n"},{"answer_id":256176,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256176#256176","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 71 bytes</h1>\n<p><code>-4</code> bytes for both code segments thanks to <code>Neil</code>.<br />\n<code>-8</code> bytes thanks to <code>corvus_192</code></p>\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sorted(factorint(n).values())[::-1]\nfrom sympy import*\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=NVDLboMwELzzFXuEyonwAzBIOfcj0hxoAwpSsBE4lfiWXJCi9p_6Lb10FhpL1oxnZ3atvX8Pc7h4tzymw9vXLbQ7-_N6rfv3c02umvwYmnPc1h_Bj50LsUv2n_X11kxxkhyraidPUTv6nqa5H-a9C5fGjzN1_YDgy3-739aP5KhzdJSClCAtKBNUCJJ4G0ElVAgGKBWkHJjioiShs2QBHGCfNpoZLqswKqBEyHKWHcqkPAl5g3IGzFDW4AaxHLwA14o96KW3tutYnluCKZak0uYJ-RPxjUwWpuSpVlubpyDleuSpioiGdVMTdpVE2wqWZcM_\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 128 bytes</h1>\n<p>Uses a recursive helper <a href=\"https://codegolf.stackexchange.com/a/152433/110265\">function</a> to calculate the prime factors of a number.<br />\nFailed on the test cases <code>1234567, 9999991</code> due to <code>RecursionError: maximum recursion depth exceeded</code></p>\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sorted(Counter(f(n)).values())[::-1]\nf=lambda n,i=2:n//i*[0]and f(n,i+1)if n%i else[i]+f(n//i)\nfrom collections import*\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=TVDdSsMwGMXbPsXnhazZMtf8tGsLuxJ8idqL2qYY6JLSZOIQwffwZiD6Tvo0flkZGAjn5Hzn5IR8fI9H_2TN6dPtHr4Ovl_nP-9Ds3_sGjCls5NXXXxnD8arKe5jQ8jtczMclIsJqcpyzeqo3138VO94aTYbvaySujEdYIDqFSO6B3OjQQ1OVbpeoYwmEvWT3UNrh0G1XlvjQO9HbFzO7_i9Sns7gQFtoGIUOAVBIaWwpcDwLCkUqKIgERlHKUNMcOOIoR6kHCEEgk9IERjuoKKRIzIM5SEbHFwmoQnzEscpYopjgVxiLEO-RS548OBdYr72XBt6C2Q8SIwLeYHsgviMlG1lEVpzkedZgqQ4L1aXEYCfjgEAxkkbH7vw3XhWL60a_f9Jv7hv9KA6sAa8ch7axil4NW_XCxLNv3c6zfgH\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":256174,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256174#256174","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"noreferrer\">Charcoal</a>, 9 bytes</h1>\n<pre><code>∧№.⁻θ0⁻.θ\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMMxL0XDOb8UyFLSU9JR8M3MKy3WKNRRUDJQ0tSE8cFShZqamtb//@v91y3LAQA\" rel=\"noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Outputs <code>.</code> for truthy, nothing for falsy. Note: Due to bugs in Charcoal's input, you need to input an empty string using a blank line. Explanation: Port of @Albert.Lang's Python answer.</p>\n<pre><code> №          Count of\n    θ       Input string\n   ⁻ 0      With `0`s removed\n  .         In literal string `.`\n∧           Logical And\n       .    Literal string `.`\n      ⁻ θ   With input string removed\n</code></pre>\n"},{"answer_id":256172,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256172#256172","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 5 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Ó0K{R\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//8GQD7@qg///NLMwMAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##LY27DcJAEERbsRy/4PZz57vIBZCRIgKQCIgIkJAscgqAkuiERo4FeYMdzc7o7eV6OJ5P/bbM4/B5PIdxXvr7lTb3bafvBMXITIjgNDTjDVGhIAlxJBOuotGJ1NxCkTgktCKFGuVI1FPgHE9kJxcs4UopTAnTiAz7I37oYLeChhU1X3dZZSLL5C3w1WotqdL@E4/C7b8\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>Ó      # Get a list of the prime factorization of the (implicit) input-integer\n 0K    # Remove all 0s\n   {   # Sort it (from lowest to highest)\n    R  # Reverse it (from highest to lowest)\n       # (after which the result is output implicitly)\n</code></pre>\n"},{"answer_id":256170,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256170#256170","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, 29 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:s.strip(&quot;0&quot;)in&quot;.&quot;!=s\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhZ7cxJzk1ISFYqtivWKS4oyCzSUDJQ0M_OU9JQUbYsham7uLSjKzCvRiE7TyNRUSMsvUshUyMxT0FBS0uECqgYRBmBKD0pCxPQgMhAKJogM9FB4QGtjNblw2JQI1WwIpisghilAjFQAkdpgti7EAVAb9SBGQjyxYAGEBgA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Outputs True for falsy and False for truthy.</p>\n"},{"answer_id":256169,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256169#256169","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 106 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>import.&quot;regexp&quot;\nfunc f(s string)bool{return len(s)&gt;0&amp;&amp;!MustCompile(`^(0+(\\.0*)?|0*\\.0+)$`).MatchString(s)}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=dVHdTsIwFI63fYpDFdLCWOadWYKGGLwSIQPjhairs8XpWJetIyTIk3hDTHwovPRJ7Nb5l0CTnp6e0_N953x9fZvK9aaVsOCZTTnMWBgjFM4SmSobi5nCP5dMpWE8zfB7rkT7aPP0HU_5lC8SjEQeByBIBuYhvZcyWqZc5WkMEY9JRo-dRqPWzzN1KmdJGHHi3xKnRSa206QnL05TOy164FO7z1TwOCphdNnKMH7sfZYUw18KMri-qdwlkuB2YJREoSKZhScxpkjIFO4s7nZSFuvhJCwH0AGWJDx-IAMLPJ5ELODdKCLc8rFv-T6lK2SaRitkZio0IRSWSLAo41lBMyQ-xgg7xXYKaxtTBuwyWtoq8nfZ_24O9ilCKs1_cZmpOCyORVkPJQho0yq8dsll4G0DUA1aQJhRq1YrVQThFIVCC1DrmJTOwFALpwTBPc8beC5cdS_GcNY9H_VcqO_PoT7XGlrALZBUa7HawmL63kZSZHZxjL3LXRTVV6_X5vwC\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Port of the reference regexp.</p>\n"},{"answer_id":256168,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256168#256168","body":"<h1><a href=\"https://nodejs.org\" rel=\"noreferrer\">JavaScript (Node.js)</a>, 23 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;/[^0.]/.test(s)|s!=0\n</code></pre>\n<p><a href=\"https://tio.run/##VY49DsIwDIV3nyJMTYTqmrlKN07BjxqVFopKU8UWYuDuwWUCy5a@J/s9@R6egbs0LlLO8dLnwWf2TXU4E54qlJ7FsnvzxlMW400LBEQEuLYiqtL58m/hnyII63oH9FI2emtgS1BqyOrVsBYljQ/rkJdpFFsc58LVIDjEtA/dzbLxjenizHHqcYpXO@hbztX5Aw\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256167,"question_id":256166,"link":"https://codegolf.stackexchange.com/questions/256166/is-it-true-ask-pip/256167#256167","body":"<h1>Trivial <a href=\"https://github.com/dloscutoff/pip\" rel=\"noreferrer\">Pip</a> answers, 1 byte</h1>\n<p>Thanks to <a href=\"/questions/tagged/decision-problem\" class=\"post-tag\" title=\"show questions tagged &#39;decision-problem&#39;\" aria-label=\"show questions tagged &#39;decision-problem&#39;\" rel=\"tag\" aria-labelledby=\"decision-problem-container\">decision-problem</a> defaults, the identity function/program is a solution in Pip, since it turns falsey inputs into falsey outputs and truthy inputs into truthy outputs. Therefore, either of these full programs will work when given input as a command-line argument:</p>\n<pre><code>a\ng\n</code></pre>\n<p>This program will work when given input on stdin:</p>\n<pre><code>q\n</code></pre>\n<p>And this works as a function solution:</p>\n<pre><code>_\n</code></pre>\n<p>While we're at it, logically negating the input gives some two- and three-byte solutions:</p>\n<pre><code>!a\n!q\n\\!_\n</code></pre>\n<p>I'm making this post as a community wiki to head off these obvious answers (and other trivial solutions such as <code>@g</code> or <code>{a}</code> that are basically the same thing but longer). You are encouraged to post your own <em>non</em>-trivial Pip solutions.</p>\n"},{"answer_id":256164,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/256164#256164","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a>, 32 bytes</h1>\n\n<pre class=\"lang-zsh prettyprint-override\"><code>for a b (`fold -1`)printf $a$b$b\n</code></pre>\n<p><a href=\"https://tio.run/##qyrO@P8/Lb9IIVEhSUEjIS0/J0VB1zBBs6AoM68kTUElUSVJJen/f0MjYxNjU1MTYxMzk/8A\" rel=\"nofollow noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256161,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256161#256161","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"noreferrer\">Charcoal</a>, 56 bytes</h1>\n<pre><code>Ｎθ≔²ηＷ⊖θ¿﹪θη≦⊕η«≔⁰ζＷ¬﹪θη«≦⊕ζ≧÷ηθ»⊞υζ»≔⟦⟧ζＷ⁻υζＦ№υ⌈ι⊞ζ⌈ιＩζ\n</code></pre>\n<p><a href=\"https://tio.run/##dY89T8MwEIZn51fceJaCBBUIUKaqXTqkqlgRg0nc@iTHbv1RUFF/u7GbAOrA6Pee5/Vdp4TrrNAprcw@hnUc3qXDA2@qufe0MzirQeXXhyItAZeyc3KQJsg@QxxoC9jaPmqLhwJyaMV@Mlfmlx07pPYSvio2zW9rOOWUTdVrG66reGHZP30X82/4QjsVMhGWdKReZr@GcgQ7V2wTvcI4Kuefs17fxmD6vCUT/Qhx2FoHuLDRhJK04pOGOCCVjS5dp6uwqTaOMroQPmDWm5Qe7h7vn2dP6eaovwE\" rel=\"noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>Ｎθ\n</code></pre>\n<p>Input the integer.</p>\n<pre><code>≔²η\n</code></pre>\n<p>Start trial division at <code>2</code>.</p>\n<pre><code>Ｗ⊖θ¿﹪θη≦⊕η\n</code></pre>\n<p>Until the integer has been reduced to <code>1</code>, keep incrementing the trial divisor until it divides the integer.</p>\n<pre><code>«≔⁰ζＷ¬﹪θη«≦⊕ζ≧÷ηθ»⊞υζ»\n</code></pre>\n<p>Calculate the multiplicity of the trial divisor and push it to the predefined empty list.</p>\n<pre><code>≔⟦⟧ζＷ⁻υζＦ№υ⌈ι⊞ζ⌈ιＩζ\n</code></pre>\n<p>Sort the list in descending order and output the result.</p>\n<p>36 bytes by importing Python modules:</p>\n<pre><code>≔▷”8±J≧∕*}G⦃⬤t；⁼hsλ”ＮθＩ⮌▷SＥ▷listθ§θι\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/9@xuDgzPU/DtSwxJyyxSEOpuDK3oFIvryQjNb@oUi8tMbkkvygzr0RJRyHaM6@gtMSvNDcptUhDM1ZTR6FQ05orACSr4ZxYXKIRlFqWWlScimRWflFJagpIq29iAUI4J7MYbF4hyAzHEs@8lNQKjUIdhUxNoKlAYP3/v6mhuYmlkcV/3bIcAA\" rel=\"noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>≔▷”8±J≧∕*}G⦃⬤t；⁼hsλ”Ｎθ\n</code></pre>\n<p>Use <code>sympy.ntheory.factorint</code> to get a dictionary of prime factors and their multiplicities.</p>\n<pre><code>Ｉ⮌▷SＥ▷listθ§θι\n</code></pre>\n<p>Extract the multiplicities, sort them, and output the reversed result.</p>\n<p>This can be reduced to 26 bytes if you run the latest version of Charcoal locally:</p>\n<pre><code>Ｉ⮌▷SＥ▷”8±J≧∕*}G⦃⬤t；⁼hsλ”Ｎι\n</code></pre>\n<p>Unfortunately you can't try this online because the version of Charcoal on TIO can't enumerate dictionaries and the version of Charcoal on ATO can't import <code>sympy</code>.</p>\n"},{"answer_id":256155,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256155#256155","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, <s>6</s> <s>9</s> 8 bytes</h1>\n<pre><code>Đϼ1\\⇹ḋɔŞ\n</code></pre>\n<p><a href=\"https://tio.run/##ARgA5/9weXT//8SQz7wxXOKHueG4i8mUxZ7//zE\" rel=\"nofollow noreferrer\" title=\"Pyt – Try It Online\">Try it online!</a></p>\n<pre><code>Đ            implicit input (n); duplicate top of stack\n ϼ           get the unique prime factors of n\n  1\\        remove any pesky 1s\n     ⇹ḋ      get the prime factors of n (with duplicates)\n       ɔ     count the number of occurrences of each unique prime factor\n        Ş    sort in descending order\n</code></pre>\n"},{"answer_id":256159,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256159#256159","body":"<h1><a href=\"https://www.jsoftware.com\" rel=\"nofollow noreferrer\">J</a>, 12 bytes</h1>\n<pre><code>__\\:~@{:@q:]\n</code></pre>\n<p>Independently found, but essentially a port of <a href=\"https://codegolf.stackexchange.com/a/256150/110888\">Adám's APL answer</a>. An exact port would be <code>1\\:~@{__ q:]</code>, at 12 bytes as well.</p>\n<p><a href=\"https://ato.pxeger.com/run?1=LY-xSkNBEEV7v-JgYQyYsDM7u293gxIIWFlZG1IEH2IjglZCfiTNs7DzB-z8Df8mY14GZi4z93Jg9p_Pw8_5fNJz3ZhwRaB5z-as7u9uv97f-ln53mwe2m750ZavbT2e_n6nZ4_bpxcu-8VuPb24QVAiiQ4RjIomrCIqZCQghiR8K6hn3I0WXRE_BLQgmeJhd9SC4wwLJCNlYsCUnOkCUd2KxCPiH-3smlFfRaOdZj5JR5LOquNLLCWHQj2WjH8Mw6gH\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>__\\:~@{:@q:]\n__       q:]  NB. find prime exponents excluding zero\n      {:@     NB. take the tail of the result\n  \\:~@        NB. descending sort the result       \n</code></pre>\n"},{"answer_id":256158,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256158#256158","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 59 bytes</h1>\n<pre><code>.+\n$*\nm(+`\\A(1+)(\\1)+$\n$1¶$#2\n(?=(¶.+))(\\1)+$\n¶$#2\n1A`\nO^#`\n</code></pre>\n<p><a href=\"https://tio.run/##NYwxbsJAEEX7dw0bac0itDO7HtZFhFxRcgGEnCIFBRQoZ/MBfDFnIEnxR1/z/3/Pr@/b43PdhNO07iPtlnuI02UMErtwkS62tLLMbaOE40dY5n3s/oPft4wT52szrcvMbhWUTKHHOFAZkIQI4sWC9IghFU2oVwvaowe0khPZp0ZJFKUM9E4xzDmJ6oTkIH2RHDIY@pqWTHbZ2ychv1PN5e8aNddqqf4A\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Outputs prime signature on separate lines but link is to test suite that joins on commas for convenience. Explanation:</p>\n<pre><code>.+\n$*\n</code></pre>\n<p>Convert to unary.</p>\n<pre><code>m(`\n</code></pre>\n<p>Run the rest of the script in multiline mode where <code>$</code> matches at the end of any line.</p>\n<pre><code>+`\\A(1+)(\\1)+$\n$1¶$#2\n</code></pre>\n<p>Repeatedly extract the smallest prime factor of the input number. (<code>$#2</code> is actually one less than the smallest prime factor but it's consistent and we only care about the multiplicities anyway.) As this is slow for large numbers the test suite omits some of the slower cases.</p>\n<pre><code>(?=(¶.+))(\\1)+$\n¶$#2\n</code></pre>\n<p>Get the multiplicities of each factor.</p>\n<pre><code>1A`\n</code></pre>\n<p>Remove the <code>1</code> remaining after all of the prime factors have been extracted.</p>\n<pre><code>O^#`\n</code></pre>\n<p>Sort the multiplicities in descending numeric order.</p>\n"},{"answer_id":256157,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256157#256157","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a>, <s>58</s> <s>51</s> 47 bytes</h1>\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(n)-sort(-diff(find(diff([0 factor(n) n&lt;2]))))\n</code></pre>\n<p><a href=\"https://tio.run/##y08uSSxL/Z9mq6en999BI09Ttzi/qERDNyUzLU0jLTMvRQPMijZQSEtMLskvAqpQyLMxitUEgv9pGoZGxiamZpr/AQ\" rel=\"nofollow noreferrer\"><strong>Try it online!</strong></a></p>\n<h3>Explanation</h3>\n<pre class=\"lang-matlab prettyprint-override\"><code>@(n)                                              % Define anonymous function\n                             factor(n)            % Prime factors of input\n                          [0                      % Prepend 0 and...\n                                       n&lt;2]       % ...postpend 1 if n&lt;2, 0 otherwise\n                     diff(                 )      % Consecutive differences\n                find(                       )     % Indices of nonzeros\n           diff(                             )    % Consecutive differences\n    -sort(-                                   )   % Negate, sort, negate\n</code></pre>\n"},{"answer_id":256154,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256154#256154","body":"<h1><a href=\"https://pari.math.u-bordeaux.fr\" rel=\"noreferrer\">PARI/GP</a>, 27 bytes</h1>\n<pre><code>n-&gt;-vecsort(-factor(n)[,2])\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=NVBbCsIwEETwIEu_WkigebRNP-xFikgoVgRpQ62CZ_GnIOIhvImncbalgTCzszO7Ic9P8MP5cArTq6Xd-za20n07Wcn7sbn2wxjL1jdjP8RdUgu9TxbHb7P1IVwesSdZURjO3QgacRFRG_skEVQrQVqQEZQJKgQp1FZQCRWCBSoNKQemuGgp6Cw5AAfYZ6xhhssqjBqoEHKcZYe2KW9C3qKdATO0DbhFLAcvwI1mD2aZZey8lveWYJolpY1dIV8Rz8hUYUve6oxzeQpSzketnzFNC_4B\" rel=\"noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":256153,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256153#256153","body":"<h1><a href=\"https://factorcode.org/\" rel=\"noreferrer\">Factor</a> + <code>math.primes.factors</code>, 37 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ group-factors values [ &gt;=&lt; ] sort ]\n</code></pre>\n<p><a href=\"https://tio.run/##NczLCsIwEEbhfZ/ifwEDilLvW3HTjbgqXYQ4raVpEmamgk8fpeL6fJzWOo2c77drddljtPo0ifuRxLRzEViR6AQSWfvQ/UjkBzESk@r7y4NiIA7kcSiKzbJc71bbXKPjOKXF//OyfiJBjfPpiGb@ocnOeg@TPw\" rel=\"noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>group-factors</code> Get the prime factorization of an integer as an assoc where keys are factors and values are exponents.</li>\n<li><code>values</code> Get the exponents.</li>\n<li><code>[ &gt;=&lt; ] sort</code> Sort into descending order.</li>\n</ul>\n"},{"answer_id":256152,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256152#256152","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, 5 bytes</h1>\n<pre><code>_YFSP\n</code></pre>\n<p>Try at <a href=\"https://matl.io/?code=_YFSP&amp;inputs=5174928&amp;version=22.7.4\" rel=\"noreferrer\"><strong>MATL Online</strong></a>!</p>\n<h3>Explanation</h3>\n<pre><code>_YF   % Implicit input. Prime factor exponents without zeros\nS     % Sort\nP     % Flip. Implicit display\n</code></pre>\n"},{"answer_id":256150,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256150#256150","body":"<h1><a href=\"https://github.com/abrudz/dyalog-apl-extended\" rel=\"noreferrer\">APL (Dyalog Extended)</a>, 6 bytes</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>∨2⌷2⍭⊢\n</code></pre>\n<p><a href=\"https://tio.run/##TY4xbsMwDEX3nkIHkAGTkmV57pKuTS4QwHaXoMnQoZ0LBIFRB82QC2TKkCBLgO4@Ci/ifkkeIkDi1yM/yeVmldVfy9X6LWs@P5r3uqnHUXZnlp8/lv4q3WlsZfsr/V66b@kv0t@Hm5HtQfbH@esz3sXsZT62w1nRU3hZK6NVoVWpFSVktaq0YjCLSJyog8xxkSWkJuqhgjNUG2siI/SkkEA5@4Tg9qSVC3Vs82k2elkUFYiFi8jga@F3MJR5QhwsWNJgSiJxl7BMBcUTJTb2QbkHWUZdUGmraSFvvHd50lU89A8\" rel=\"noreferrer\" title=\"APL (Dyalog Extended) – Try It Online\">Try it online!</a></p>\n<p><code>∨</code> descending sort of…</p>\n<p><code>2⌷</code> the second row of…</p>\n<p><code>2⍭</code> the table of primes (in the first row) and their exponents (in the second row) of…</p>\n<p><code>⊢</code> the argument</p>\n"},{"answer_id":256149,"question_id":256147,"link":"https://codegolf.stackexchange.com/questions/256147/find-the-prime-signature/256149#256149","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 6 bytes</h1>\n<pre><code>ÆE¹ƇṢU\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8//9wm@uhncfaH@5cFPr//38LYwsLMwMLAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>A port of my vyxal answer.</p>\n<h2>Explained</h2>\n<pre><code>ÆE¹ƇṢU\nÆE     # Prime exponents of the input - contains 0s\n  ¹Ƈ   # so filter out those 0s\n    Ṣ  # sort the list\n     U # and reverse it\n</code></pre>\n"},{"answer_id":256145,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/256145#256145","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$4\\log_{256}(96)\\approx\\$</span> 3.292 bytes</h1>\n<pre><code>n2@h\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJuMkBoIiwiYWJjZGUiXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>n2@h\nn @  # For every\n 2   # Second character\n   h # Double\n</code></pre>\n"},{"answer_id":256144,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/256144#256144","body":"<h1><a href=\"https://www.wikipedia.org/wiki/Python_(programming_language)\" rel=\"nofollow noreferrer\">Python</a>, 62 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:''.join(c if i%2==0 else 2*c for i,c in enumerate(s))\n</code></pre>\n<p><a href=\"https://tio.run/##DclBCoAgEADAr@wl1IiIukTgT7qorbRRq6gder15nYlfOQMva0zV673e5rGHgbwJMV6BWDogD9TNWk@Ad0aYewc@JKChFQPy@2AyBWVWqsZEXKSXwlh3oGjyAw\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198782,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198782#198782","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Raku</a>, 14 bytes</h1>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{S:g[.&lt;(.]x=2}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/OtgqPVrPRkMvtsLWqPZ/cWKlQpqCUmJSckpqmtJ/AA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p>Regex that matches every other character and substitutes it with itself string multiplied by 2.</p>\n"},{"answer_id":198861,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198861#198861","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>5</s> 4 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>€Ðιθ\n</code></pre>\n<p>I/O as a list of characters, which is <a href=\"https://codegolf.meta.stackexchange.com/a/2216/52210\">allowed by default</a>.</p>\n<p><s>I have the feeling 4 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a> might be possible, but I'm unable to find it.</s><br />\nIt is possible, by porting <a href=\"https://codegolf.stackexchange.com/a/236924/52210\"><em>@emanresuA</em>'s Vyxal answer</a> (so make sure to upvote him/her as well).</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//UdOawxPO7Ty34///aKVEJR2lJCBOBuIUIE5VigUA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>      #  (example input = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;])\n€Ð    # Triplicate each character (which remains a flattened list)\n      #  → [&quot;a&quot;,&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;c&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d&quot;,&quot;d&quot;,&quot;e&quot;,&quot;e&quot;,&quot;e&quot;]\n  ι   # Uninterleave this list into two parts\n      #  → [[&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;e&quot;],[&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d&quot;,&quot;e&quot;]]\n   θ  # Pop and leave just the second part\n      #  → [&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;d&quot;,&quot;e&quot;]\n      # (which is output implicitly as result)\n</code></pre>\n"},{"answer_id":256138,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/256138#256138","body":"<h1><a href=\"https://factorcode.org\" rel=\"nofollow noreferrer\">Factor</a> + <code>sequences.repeating</code>, 19 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 3 repeat &lt;odds&gt; ]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70sLTG5JL9owU2v0GBPP3crheLUwtLUvOTUYr2i1ILUxJLMvHQksdSKkqLEYoXMfISYQnZqUV5qjoI1F5dSYlJySqrS0tKSNF2LzdEKxgoQMxRs8lNSiu0UYiEyq5ITc3IUCooy80ogAgsWQGgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Repeat each character three times and take every other character starting with the second one. Port of emanresu A's <a href=\"https://codegolf.stackexchange.com/a/236924/97916\">Vyxal answer</a>.</p>\n"},{"answer_id":256120,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/256120#256120","body":"<h1><a href=\"https://www.wikipedia.org/wiki/Python_(programming_language)\" rel=\"nofollow noreferrer\">Python 3</a>, <s>120</s> 119 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>def f(s):\n    c=0;r=''\n    for d in s:\n        if d=='0':c+=1\n        else:r+=f'{c if c!=0 else&quot;&quot;}'+d;c=0\n    return r+f'{c if c!=0 else&quot;&quot;}'\n</code></pre>\n<p><a href=\"https://tio.run/##bcxNDoIwEAXgdTnFyKaQuhgoIEJ6mv5EElPIgAtjPHstRg1RZzffvHnTdTmNXrYThWCsA5fNeZcwrbAnxXnC3EhgYPAwR2aDA6MUR95poYoI9jzbjoRy/KYhXvVOIayYpncuTB@LEkZ2uZAHEn9TYaLBL5nLeFHKqkaUTYmIVYU838MvvxQ386Znsjm0x@3nuuM3fD6wRBlbsY6RPDwA\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255922,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255922#255922","body":"<h1><a href=\"https://github.com/DJMcMayhem/V\" rel=\"nofollow noreferrer\">Vim</a>, 28 bytes</h1>\n<p><code>:s/0\\+/\\=len(submatch(0))/g</code>\n<kbd>Enter</kbd></p>\n<p><a href=\"https://tio.run/##K/v/36pY3yBGWz/GNic1T6O4NCk3sSQ5Q8NAU1M/nev/f0MjYxNTAwNjMyMDAwMTEwMkAAA\" rel=\"nofollow noreferrer\" title=\"V (vim) – Try It Online\">Try it online!</a></p>\n<p>We cannot use <code>0*</code> because it matches the empty string between digits.</p>\n"},{"answer_id":255836,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255836#255836","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 7 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>0ÃηRāR:\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/f4HDzue1BRxqDrP7/NzQyNjE1MDA2MzIwMDAxMQAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<ul>\n<li>-6 thanks to Kevin Cruijssen</li>\n</ul>\n<h4>Explanation</h4>\n<pre><code>0ÃηRāR:   # Implicit input\n0Ã        # List intersection with [0]\n  ηR      # Reversed prefixes\n    āR    # Reversed length range\n      :   # Infinite replacement\n</code></pre>\n<p>Previous 13 byte answer</p>\n<pre><code>.γ}εD0.åig}}J   # Implicit input\n.γ}             # Group by consecutive items\n   ε       }    # For each group:\n    D           #  Duplicate the group\n     0.åi }     #  If 0 is in the group:\n         g      #   Push its length\n            J   # Join everything into a single string\n</code></pre>\n"},{"answer_id":256099,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/256099#256099","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 7 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>':¡H16β\n</code></pre>\n<p>Outputs as an integer.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f9f3erQQg9Ds3Ob/v93AwIrAwNDAwA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeV/datDCz0Mzc5t@u9in6GkoGFQcXi/ppLO/2glAyCwAhFKOkqGQGAFIoBsNyCAiUPZhgZKsQA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>':¡     '# Split the (implicit) input-string on &quot;:&quot;\n   H     # Convert both strings in the pair from hexadecimal to base-10 integers\n    16β  # Convert this list to a base-16 integer\n         # (which is output implicitly as result)\n</code></pre>\n"},{"answer_id":255825,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255825#255825","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 7 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>F·Xs‚ZK\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/f7dD2iOJHDbOivP//NwUA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<p>Port of lyxal's Vyxal answer.</p>\n<ul>\n<li>-1 thanks to Kevin Cruijssen</li>\n</ul>\n<h3>Explanations:</h3>\n<pre class=\"lang-python prettyprint-override\"><code>F·Xs‚ZK   # Implicit input (n)\nF         # for i in range(a):\n ·        #  Double\n  Xs‚     #  Get [1, that] (X defaults to 1)\n     ZK   #  Push the list without the maximum\n</code></pre>\n<p>Previous 8 byte answer:</p>\n<pre class=\"lang-python prettyprint-override\"><code>L&lt;o`¸¹G‚   # Implicit input (n)\nL&lt;         # range(0, n)\n  o        # 2 to the power of each\n   `¸      # Dump onto stack, putting the last one in a list\n     ¹G    # n-1 times:\n       ‚   #  Pair\n</code></pre>\n<p>Previous 13 byte answer:</p>\n<pre class=\"lang-python prettyprint-override\"><code>&lt;Do¸sE¹&lt;N-o‚R   # Implicit input (n)\n&lt;               # Reduce n by 1\n Do¸            # Duplicate and push [2**(n-1)] to the stack\n    sE          # Swap and loop through range(0, n-1):\n      ¹&lt;N-      #  Subtract from n-1\n          o     #  Raise 2 to the power of this number\n           ‚R   #  Pair and reverse\n</code></pre>\n"},{"answer_id":256098,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/256098#256098","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, 6 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Æ∞1\\αç\n</code></pre>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/255805/52210\"><em>@lyxal</em>'s Vyxal answer</a>.</p>\n<p><a href=\"https://tio.run/##y00syUjPz0n7//9w26OOeYYx5zYeXv7/vyGXEZcxlwmXKZcZlzmXoQEA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>Æ       # Loop the (implicit) input amount of times,\n        # using the following five characters as inner code-block:\n ∞      #  Double all current values (the stack contains a 0 by default)\n  1\\α   #  Pair it with a leading 1\n     ç  #  Falsey filter to remove the 0\n        # (after the loop, the entire stack is output implicitly as result)\n</code></pre>\n"},{"answer_id":256084,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/256084#256084","body":"<h1>Java 19, 100 bytes</h1>\n<p>Partial program assuming <code>n</code> is the given number:</p>\n<pre class=\"lang-java prettyprint-override\"><code>var m=0;var s=String.valueOf(n);for(var i=1;i&lt;s.length();i+=2)m+=s.charAt(i)-48;System.out.print(m);\n</code></pre>\n<p>Full program using standard input:</p>\n<pre class=\"lang-java prettyprint-override\"><code>interface A{\n    static void main(String[]a){\n        var n=Integer.parseInt(a[0]);\n        //\n        var m=0;\n        var s=String.valueOf(n);\n        for(var i=1;i&lt;s.length();i+=2)m+=s.charAt(i)-48;\n        System.out.print(m);\n        //\n    }\n}\n</code></pre>\n"},{"answer_id":255689,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255689#255689","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>40</s> <s>32</s> 31 bytes</h1>\n<p>-8 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/18535/g-b\">G B</a><br>\n-1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/94303/armand-fardeau\">Armand Fardeau</a></p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{eval&quot;#{n}&quot;.scan(/.(.)/)*?+}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsEiN9ulpSVpuhb7de3yqlPLEnOUlKvzapX0ipMT8zT09TT0NPU1tey1ayGq1hUouEWbmlhYGpoaWxjGQgQXLIDQAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":256062,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/256062#256062","body":"<h1>Java 19, 156 <s>161</s> <s>162</s> bytes</h1>\n<pre class=\"lang-java prettyprint-override\"><code>interface A{static void main(String[] a){var i=0;var s=&quot;&quot;;for(var c:a[0].toCharArray())if(c==48)i++;else{s+=i&gt;0?i+&quot;&quot;+c:c;i=0;}System.out.print(i&gt;0?s+i:s);}}\n</code></pre>\n<h2>Without Java's golfing tax, 113 bytes</h2>\n<pre class=\"lang-java prettyprint-override\"><code>var i=0;var s=&quot;&quot;;for(var c:a[0].toCharArray())if(c==48)i++;else{s+=i&gt;0?i+&quot;&quot;+c:c;i=0;}System.out.print(i&gt;0?s+i:s);\n</code></pre>\n<p><a href=\"https://tio.run/##LYzRCoIwFEB/Zfi0IclNLcJhIX2Cj@LDZc26pi7mEkT89pXU04Fz4LQ44a69Pb2nwWnboNKsWEaHjhSbDN1YjzTw0lka7lXNUCwTWkY5yI0mL@fR6T4ybycbYxnfrMqwgjpy5vpAW1iLMxeCGq7yPD0JCkOpu1EvJnp9r47TGS4UBkGoMiXktl7/qRt@MQsCIdfVe7@Pk/QAkBxjAEhT@AA\" rel=\"nofollow noreferrer\" title=\"Java (JDK) – Try It Online\">Try it online!</a></p>\n<p>Edit: replaced <code>'0'</code> with <code>48</code> as suggested in the comments. Thanks!</p>\n<p>Edit: String concatentation is shorter than doing <code>var o=System.out;</code></p>\n"},{"answer_id":256078,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/256078#256078","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 17 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>žMIlåÅÏžM¾è¼s.uiu\n</code></pre>\n<p>I/O as a list of characters.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//6D5fz5zDSw@3Hu4HMg/tO7zi0J5KvdLM0v//o5WclXSU8oE4BYhTgVgBiN2hYjlAnAbEilBxTyidA5UvQ9JDjDl6SOaUQNmZQFwMZYPEMpD0J0HZxVA5PaVYAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##PcoxCsIwGAXgvad47WxzhVIqSAUnpc4p/tJA2ohJrRVXXQXvIHgBN3Fo8CJeJGZReMP7Hk9pXgpyx12fRPicr4iSfj6O3Ps109Le7MlefB1e9j48NWtF6yJWTEdseLhMrQgTJdchcki1I/wXhtxAaJiKUJI2LFhUnj4cxjvEz7Tn9UYSmrYuaQvTKRakzQopFv6HpTAVMr4RhksUqiOpmYvjRsWSH/ov\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>žM           # Push string &quot;aeiou&quot;\n  I          # Push the input-list\n   l         # Convert each letter to lowercase\n    å        # Check for each letter if it's in the vowels-string\n     ÅÏ      # Apply on the truthy indices of the (implicit) input-list:\n       žM    #  Push string &quot;aeiou&quot; again\n         ¾è  #  Get the (modular) 0-based `¾`'th vowel\n           ¼ #  Then increase `¾` by 1\n       s     #  Swap so the current character is at the top\n        .ui  #  Pop, and if it's uppercase:\n           u #   Uppercase the indexed vowel as well\n             # (after which the list of characters is output implicitly as result)\n</code></pre>\n"},{"answer_id":256033,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/256033#256033","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 68 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>def f(n):\n&#9;for i in range(n):l=i and[l[0]//2,l]or[2**n//2]\n&#9;return l\n</code></pre>\n<p><a href=\"https://tio.run/##Tci9CoAgFEDhOZ/ijhqBZT9D0JOIQ5CWINe42NDTWw2B23fOeacjYp@nvFkHjqOYWeUigQePQCvu9nth8bDipoNujZSqCSaSVnWNbxhWkU0XIYR8ksfEHe@EYL9V4b7wUHgsPL3ODw\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256043,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/256043#256043","body":"<p><code>awk</code> solution - different solutions for <code>mawk-1/2</code> and <code>gawk/nawk</code> :</p>\n<pre><code>jot 16 | \n</code></pre>\n<blockquote>\n<pre><code>mawk 'function __(_){return $_=--_?_+=_=__(_):!_}__(NF=$_)' OFS=,\n</code></pre>\n</blockquote>\n<blockquote>\n<pre><code>nawk\ngawk 'func __(_){return $++_=--_?__(_)/_*(_+_):!_}__(NF=$-_)' OFS=,\n\n * &quot;function&quot; is normally preferred, but this is Pebble Beach…\n</code></pre>\n</blockquote>\n<pre><code>1\n1,2\n1,2,4\n1,2,4,8\n1,2,4,8,16\n1,2,4,8,16,32\n1,2,4,8,16,32,64\n1,2,4,8,16,32,64,128\n1,2,4,8,16,32,64,128,256\n1,2,4,8,16,32,64,128,256,512\n1,2,4,8,16,32,64,128,256,512,1024\n1,2,4,8,16,32,64,128,256,512,1024,2048\n1,2,4,8,16,32,64,128,256,512,1024,2048,4096\n1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192\n1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384\n1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768\n1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536\n</code></pre>\n<p>Different solutions needed stemming from their different order of precedence of something not clearly specified in <code>POSIX</code> -</p>\n<ul>\n<li><p><code>mawk</code>s go <em><strong>strictly</strong></em> left-to-right, even for assignments,</p>\n<p>— so <code>$_ = ...</code> is equivalent to <code>$(func-input-val) = ...</code>,</p>\n</li>\n<li><p>while <code>gawk/nawk</code> handles all of RHS first, with LHS taking on final value of <code>_</code></p>\n</li>\n</ul>\n<p>To make nesting sublists out of that :</p>\n<pre><code> for __ in $(jot 7); do \n  \n    echo &quot; $__ :: $( echo &quot;$__&quot;  | \n      \n       mawk 'function __(_){ORS=&quot;]&quot;ORS;return $_=\\\n             --_?_+=_=__(_):!_}$!__(NF=$(OFS=&quot;,[&quot;))=&quot;[&quot;$_' \n\n    )&quot;\n done\n\n 1 :: [1]\n 2 :: [1,[2]]\n 3 :: [1,[2,[4]]]\n 4 :: [1,[2,[4,[8]]]]\n 5 :: [1,[2,[4,[8,[16]]]]]\n 6 :: [1,[2,[4,[8,[16,[32]]]]]]\n 7 :: [1,[2,[4,[8,[16,[32,[64]]]]]]]\n</code></pre>\n"},{"answer_id":255991,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255991#255991","body":"<h1>Julia, 28 bytes</h1>\n<pre><code>f(n)=sum(digits(n)[2:2:end])\n</code></pre>\n"},{"answer_id":256030,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/256030#256030","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 76 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.List\nr s=concat[case t!!0 of '0'-&gt;show$length t;_-&gt;t|t&lt;-group s]\n</code></pre>\n<p><a href=\"https://tio.run/##XYvNCoJAGEX3PcWnCK6Mm38VpauWvUFEDGY6pDPDzBduevdJWlR0V4d7OL1w93YYvJej0ZbpIFgsj9LxwpKrGq0awadGuJY4CED6RjHipHa9nqKhVR33xLtLUvOT90ln9cOQO/tRSFUZKxVHozBko0nbqwtXaZYXQFamAPIc9HcQfkZ423K92dKH8MXZI0U2dygQ@hc\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":256019,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/256019#256019","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 17 bytes</h1>\n<pre><code>{(x-1)(1,,2*)/,1}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6rWqNA11NQw1NEx0tLU1zGs5eJKUzDlAgBOBQVb\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h5>Explanation:</h5>\n<pre><code>{(x-1)(1,,2*)/,1}\n              ,1  start with list one\n (x-1)       /    do n-1 times\n      (1,,2*)     1 joined with double the current value enlisted\n</code></pre>\n"},{"answer_id":256010,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/256010#256010","body":"<h1><a href=\"http://www.swi-prolog.org\" rel=\"nofollow noreferrer\">Prolog (SWI)</a>, 53 bytes</h1>\n<pre><code>\\X:-get(_),get(C),C&gt;0,Z is X+C-48,\\Z;write(X).\n:- \\0.\n</code></pre>\n<p><a href=\"https://tio.run/##KyjKz8lP1y0uz/z/PybCSjc9tUQjXlMHRDlr6jjbGehEKWQWK0RoO@uaWOjERFmXF2WWpGpEaOpxWekqxBjo/f9vZGhibmJhbGZiDgA\" rel=\"nofollow noreferrer\" title=\"Prolog (SWI) – Try It Online\">Try it online!</a></p>\n<p>Full program.</p>\n"},{"answer_id":256009,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/256009#256009","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, 7 bytes</h1>\n<pre><code>ąĐƩ⇹ƧƩ-\n</code></pre>\n<p><a href=\"https://tio.run/##AR4A4f9weXT//8SFxJDGqeKHucanxqkt//81NDg5MTUzODE\" rel=\"nofollow noreferrer\" title=\"Pyt – Try It Online\">Try it online!</a></p>\n<pre><code>ąĐƩ⇹ƧƩ-\ną         implicit input (n); convert n to array of digits\n Đ        duplicate top of stack\n  Ʃ       sum the digits of n\n    ⇹     swap the top two items on the stack\n     ƧƩ   sum every other digit of n, starting with the first\n      -   subtract; implicit print\n</code></pre>\n"},{"answer_id":256006,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/256006#256006","body":"<p>ultra verbose <code>awk</code> solution:</p>\n<pre><code>echo '43213\n8645\n342\n99991' | \n</code></pre>\n<blockquote>\n<pre><code>awk '$!NF=sprintf(&quot;%c%c%c%c%c&quot;,___+(__+$(_=($(_&lt;_)=sprintf(&quot;%.*d%s&quot;,5-NF,\n         _=_&lt;_,$_))^_))^!!$_,___+(__+$++_)^!!$_,(__+$++_)^!!$_+___,\n        ___+(__+$++_)^!!$_,___+(__+$++_)^!!$_)' __=32 ___=64 FS=\n</code></pre>\n</blockquote>\n<pre><code>dcbac\nAhfde\nAAcdb\niiiia\n</code></pre>\n"},{"answer_id":253017,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/253017#253017","body":"<h1>x86-16 machine code, 20 bytes</h1>\n<pre><code>00000000: fc51 b104 b041 f3aa 59fd 03f1 4eac 0430  .Q...A..Y...N..0\n00000010: aae2 fac3                                ....                                 \n</code></pre>\n<p>Callable function, custom calling convention. Input string at <code>DS:[SI]</code>, <code>CX</code> = input string length (1-5), output string buffer at <code>ES:[DI]</code>.</p>\n<p>Listing:</p>\n<pre><code>FC          CLD                 ; string direction forward\n51          PUSH CX             ; save original input length\nB1 04       MOV  CL, 4          ; pad only first 4 chars\nB0 41       MOV  AL, 'A'        ; AL = pad char\nF3 AA       REP  STOSB          ; write 4 padding chars and\n                                ; DI = last char of output buffer\n59          POP  CX             ; restore input length\nFD          STD                 ; string direction reverse\n03 F1       ADD  SI, CX         ; SI = end of input string\n4E          DEC  SI             ; SI = last char of input\n    A_LOOP:\nAC          LODSB               ; load next char\n04 30       ADD  AL, 'a'-'1'    ; aaaaaa convert\nAA          STOSB               ; write to output\nE2 FA       LOOP A_LOOP\nC3          RET                 ; return to caller\n</code></pre>\n<h4>Test program output:</h4>\n<p><a href=\"https://i.stack.imgur.com/0HRK5.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/0HRK5.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":255786,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255786#255786","body":"<h1><a href=\"https://zsh.sourceforge.io/\" rel=\"nofollow noreferrer\">Zsh</a>, 87 bytes</h1>\n<p><a href=\"https://tio.run/##PYxNC4JAGITv/orJDBTB8FCQJRER4alLnaSD1rv42YquGcn@dtuIhLnMwzzzbpKBmVavZf7Q@ZfdITi1EaV8zXiNHKbRm43nWa60@oIEMts3@nweGt117kqtqtOHYBiR0YXZbGGb03yzcreut7SuUg50SzikpjHoe34nHHnBJghQ8CdhJA4CgbSBSAgxNcLRv8I5UUglglBsgn@nV1RWBeHRljHVEB3/7S/g2IHU@0E5J7RI9eED\" rel=\"nofollow noreferrer\">Try it Online!</a>\n  <sub><s><a href=\"https://tio.run/##PYxNa8JAGITv@RVjTGGXFHVLrDU0FClScvJST@Ih1nfJl64km6Qk7G9Pt5QKc5mHZ6av01EyPoxtxBYI8AIR4GnBkUcBuiihTDWbbbzbO1JVKMC8gdVhyIXhQ0kauR95QzE/eN1xLoxzq7Krlrgja0@5x1gfTYvXtXh7Xobr1WPvt4f8YemLI@fGmJG@UgXjOBLuuzoTPlQpJ4hRqpZwJzPEGlkNnRJOVOuZ@zv4TC2ySaAtm@C/03dyuZWEa3M5UQXdqT9/D4UNyL5v7WaHBpk7/gA\" rel=\"nofollow noreferrer\">123 bytes</a></s></sub>\n  <sub><s><a href=\"https://tio.run/##PYzBToNAAETvfMWUYrMbtJU2tIIS0xhjOHmwHgzhAHXJAluWwIIGgr@ONI0mc5mXN9PVfEwI7cfWI1sbWwe7DXYO7mx6n3k3lpbICjmI0ZPadak10D4IYOSugPeDIGKpbEKE4WJBiGlmlGpllRYqgdHnq2D/7L@@X5zV9DCnBiGdN88fHOvx1t2srzuzDbIr27RCSodhGNmRSwyalkB/kp8ML1IkM/gQsmX4J0v4CmkNxRliVqulfh4c@ISmRFATm@Gvs@/oVAqGojnFrIL6khf/QzYVRFMc@dnai5JHMVN4k02pj78\" rel=\"nofollow noreferrer\">133 bytes</a></s></sub></p>\n<pre class=\"lang-zsh prettyprint-override\"><code>w=UAEIOuaeio;for k (${(s::)1}){let j+=${k/[$w]/1}\nprintf ${k/[$w]/$w[j%5+(#k&lt;91?1:6)]}}\n</code></pre>\n"},{"answer_id":255984,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255984#255984","body":"<h1><a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow noreferrer\">Ruby (2.5.5)</a>, 113 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;(x){p,i='aeiou',0;x.chars.map{|t|(p.include?t.downcase)?(r=p[i%5];o=(t==t.upcase)?(r.upcase):r;i+=1;o):t}.join}\n</code></pre>\n<p><a href=\"https://tio.run/##PY1Nb4JAEIbv/RUjSSOkumkPvUi2HjgYT73Yk/GwwBDGALOBWaVRfztdqpjMYT7e55nWpb9DoYflV9hHF7sgPTdI7OaL97hXWWnaTtXGXq5yDa2iJqtcjmtROZ@bzHQYrcNW2z29fh5i1qFoLcrZ6TK1qzamN/0Rc7SSmzoyNbfBQrEPg4RzhA1XxQy2UPEJ4blRsBWgDqRESLETFUQH0BqCxIwJGplvqNzJQII5PZgfAfNgaGRe7n92pTf5MiBeNYNpxt7UtkJoXJ1iC3Lm55td6UXoUyB8R1w3urEnj/A/YkYEVTD8AQ\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255734,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255734#255734","body":"<h1><a href=\"https://www.jsoftware.com\" rel=\"nofollow noreferrer\">J</a>, <s>11</s> 19 bytes</h1>\n<pre><code>1(#.]*0 1$~#),.&amp;.&quot;:\n</code></pre>\n<p>Updated to reflect challenge requirements. Thanks to Jonah for the modifications.</p>\n<p><a href=\"https://ato.pxeger.com/run?1=m70wa8FOJT31NAVbKwV1BR0FAwUrINbVU3AO8nFbWlqSpmux2VBDWS9Wy0DBUKVOWVNHT01PyQoic9Nekys1OSNfQSPNui5WU81OwRCoygAIDRVMTSwsDU2NLQwVLMFAwcjQxNzEwtjMxBwqAgQQYxYsgNAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>1(#.]*0 1$~#),.&amp;.&quot;:\n             ,.&amp;.&quot;:  NB. equivalent to &quot;. ,. &quot;: y, convert to digit list\n1(          )        NB. dyadic hook\n           #         NB. use length of right arg to\n      0 1$~          NB. reshape 0 1, reuses elements to create alternating 1's\n    ]*               NB. multiply by the right arg\n  #.                 NB. 1 #. y sums the result \n</code></pre>\n<h1>Alternate 15 bytes</h1>\n<p>All credit goes to <a href=\"https://codegolf.stackexchange.com/users/72244/rdm\">Raul</a>.</p>\n<pre><code>[:+/_2}.\\,.&amp;.&quot;:\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70wa8FOJT31NAVbKwV1BR0FAwUrINbVU3AO8nFbWlqSpmuxPtpKWz_eqFYvRkdPTU_JCiJ6016TKzU5I19BI826LlZTzU7B0ACIgNBQwdTEwtLQ1NjCUMESDBSMDE3MTSyMzUzMoSJAADFmwQIIDQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>[:+/_2}.\\,.&amp;.&quot;:\n         ,.&amp;.&quot;:  NB. same as above\n    _2}.\\        NB. behead each non-overlapping window of size 2\n[:+/             NB. sum the resulting column\n</code></pre>\n"},{"answer_id":255983,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255983#255983","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 13 bytes</h1>\n<pre><code>+/(2!!#:)#10\\\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxFj01ugzAQhdedUxCli0SV4x/AgH2CrnqANFKIMQQl2Ck2Fahqz14TpGRmMfPpvcV7tXjDG7ZarcV2TckngBc/r/vprxd1FEWjPNqL3Bzrsr3KUU6y3x5+g2dPiSSH+w1LJZ3/NMkLmsY5lYzPXNxHsmwGRpMsyWOeZJIVT3U2xMENgOHs/c0JjJWtdGOv9c75Ul30qM6lafRO2Q5/Ddr51hqHWZrylGA3dEh/635CTitrKlS1TetRa1CJzNCddA/wbm6Dj15Cnehj8OEHShYksORfiMKjQSDGYcm3iCyDZ4WABTwKBDXm/3A5VUY=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<ul>\n<li><code>10\\</code> convert (implicit) input integer to a list of its digits</li>\n<li><code>(2!!#:)#</code> only keep elements at odd indices (0-indexed)</li>\n<li><code>+/</code> calculate (and implicitly return) the sum</li>\n</ul>\n"},{"answer_id":254800,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/254800#254800","body":"<h1>POSIX Shell Command Language + Utilities, 26 bytes</h1>\n\n<pre class=\"lang-sh prettyprint-override\"><code>printf %05d $1|tr 0-9 Aa-i\n</code></pre>\n<p>Self-explanatory: printf renders the argument padded to five columns with zeroes, then tr does the transformation per spec.</p>\n<p>Transcript of test cases:</p>\n<pre class=\"lang-sh prettyprint-override\"><code>$ cat a.sh; echo; wc -c a.sh\nprintf %05d $1|tr 0-9 Aa-i\n26 a.sh\n$ ./a.sh 8645; echo\nAhfde\n$ ./a.sh 43213; echo\ndcbac\n$ ./a.sh 8645; echo\nAhfde\n$ ./a.sh 342; echo\nAAcdb\n$ ./a.sh 99991; echo\niiiia\n</code></pre>\n"},{"answer_id":255975,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255975#255975","body":"<h1><a href=\"https://www.gnu.org/software/bash/\" rel=\"nofollow noreferrer\">Bash</a>, 49 bytes</h1>\n<pre><code>for z in `fold -1`;{((i++%2))&amp;&amp;let t+=z;}\necho $t\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70kKbE4Y8GCpaUlaboWNw3T8osUqhQy8xQS0vJzUhR0DROsqzU0MrW1VY00NdXUclJLFEq0bausa7lSkzPyFVRKIBqh-hesMjI0MTexMDYzMYeIAAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255960,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255960#255960","body":"<h1>Lua 68 bytes</h1>\n<pre><code>s=io.read(&quot;*a&quot;)for i=#s,1,-1 do s=s:gsub((&quot;0&quot;):rep(i),i)end print(s)\n</code></pre>\n"},{"answer_id":255920,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255920#255920","body":"<h1><a href=\"https://www.wolfram.com/mathematica/\" rel=\"nofollow noreferrer\">Mathematica</a> 39 bytes</h1>\n<p>With <code>n=5</code></p>\n<pre><code>s=Nothing;Do[s={2^--i,s},{i,n,1,-1}];s\n</code></pre>\n<blockquote>\n<p>{1, {2, {4, {8, {16}}}}}</p>\n</blockquote>\n"},{"answer_id":255770,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255770#255770","body":"<h1>Excel (ms365), <s>183</s>, 164 bytes</h1>\n<p>-19 bytes thanks to @<a href=\"https://codegolf.stackexchange.com/users/41374/jdt\">jdt</a></p>\n<p><a href=\"https://i.stack.imgur.com/eoqgJ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/eoqgJ.png\" alt=\"enter image description here\" /></a></p>\n<p>Formula in <code>B1</code>:</p>\n<pre><code>=LET(x,MID(A1,ROW(A:A),1),y,&quot;uaeio&quot;,r,SEARCH(x,y),z,SCAN(0,r,LAMBDA(a,b,IF(ISERR(b),a,a+1))),w,MID(y,MOD(z,5)+1,1),CONCAT(IFERROR(IF(r*(CODE(x)&lt;97),UPPER(w),w),x)))\n</code></pre>\n"},{"answer_id":255941,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255941#255941","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, <s>83</s> 80 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>import.&quot;fmt&quot;\nfunc f(s string)int{l,r:=0,0\nSscanf(s,&quot;%x:%x&quot;,&amp;l,&amp;r)\nreturn l*16+r}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=RU_BasQgFLz7FSJkia1dNNBShL32vNBj24OEGKSJCWpACPslvYSFvfUn-hn7N31vE9o5vMHRN-N8ndth-R5N_WnahvbG-cuU7MPz9ej6cQhpz2yfGLGTr6ktI40pON9y59PciaAPUkjyGmvj4VKwIusiM7HrxC5wEpo0BU-7O_V0H06b78_NCoNKTmdSm9hEqg-gjG-r-QeaEyYBGgfTMiNLQZgCaBwoqqqqFIgvgL-XeJD_orqJats_ETsEGoXDxGA8VF4_MJMjRCdbsiJSmQv5mDd690zghoCCnIPDVmRZVv4F\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Very similar to the other answers with some sort of <code>Scanf</code>: Look for 2 hex numbers, put them into variables, and return the result.</p>\n<ul>\n<li>-3 bytes from @Steffan: <code>var l,r int =&gt; l,r:=0,0</code></li>\n</ul>\n"},{"answer_id":255955,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255955#255955","body":"<h1><a href=\"https://la.mathworks.com/products/matlab.html\" rel=\"nofollow noreferrer\">Matlab</a>, 166 bytes</h1>\n<pre class=\"lang-matlab prettyprint-override\"><code>n = input('Input : ', 's');\nd = str2double(regexp(n,'\\d','match')); %convert n to a unidimensional matrix \ntotal = 0; %stores total sum\n    for i = 2:2:length(d) %traverse the unidimensional matrix [ vector ]\n        total = total + d(i); %sum of every second n\n    end\ndisp(['Output : ', num2str(total)]);\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/z7UE5.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/z7UE5.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":255953,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255953#255953","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, <s>23</s> 18 bytes</h1>\n<pre><code>\\&amp;l:?n&amp;o]\n\\i:'0'-?\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/P0Ytx8o@Ty0/lism00rdQF3X/v9/QyNjE1MDA2MzIwMDAxMTAwA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255895,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255895#255895","body":"<h1>x86 .COM, <s>64</s> 59 bytes</h1>\n<pre><code>0100  BE 82 00 66 31 C9 66 F7-E1 B1 08 66 C1 CA 10 66   ...f1.f....f...f\n0110  C1 C2 04 AC 3C 3A 74 F3-2C 30 D4 10 D5 09 66 01   ....&lt;:t.,0....f.\n0120  C2 E2 EC 66 92 66 99 B1-0A 66 F7 F1 66 85 C0 52   ...f.f...f..f..R\n0130  74 03 E8 F0 FF 58 04 30-CD 29 C3                  t....X.0.).\n</code></pre>\n<p>Thank Peter Cordes\nfor -5 bytes</p>\n<pre><code>    org $100\n    mov si, $82\n    xor ecx, ecx\n    mul ecx\n    mov cl, 8\nb:  ror edx, 16\na:  rol edx, 4\n    lodsb\n    cmp al, ':'\n    je b\n    sub al, '0'\n    aam $10\n    aad 9\n    add edx, eax\n    loop a\n    xchg eax, edx\np:  cdq\n    mov cl, 10\n    div ecx\n    test eax, eax\n    push dx\n    jz q\n    call p\nq:  pop ax\n    add al, '0'\n    int $29\n    ret\n</code></pre>\n<p>Output decimal</p>\n"},{"answer_id":255946,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/255946#255946","body":"<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 148 bytes</h1>\n<pre><code>import random\nrandomize()\nproc x(y:int):string=\n  let l=&quot;bcdfghjklmpqrstvwxyz&quot;;let a=&quot;auioe&quot;;for i in 0..y-1:result.add sample(if(i%%2)==0:l else:a)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=Nc49DoIwGMbxnVO8ISEpgwSZTEkPU2kLr_YD26LAOdxcSIyDR_I2atDpyT_P8rvdLZpleQxRbXavK5re-QieW-FMsg7OkuRJ710DI5ko2pjTED3aliUAWkbQLN03QrXd4ahNf_Ihni_jNKf19-Qs5QM6mdbKeUBAC2VRTJst9TIMOhZcCAjc9FoSVASzrMoZK6kGqYOkPF9tT9l07gOofv03vwE\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255869,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255869#255869","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, <s>12</s> 11 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Æ[2pX]ÃÔr!p\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=xlsycFhdw9RyIXA&amp;input=Ny1R\" rel=\"nofollow noreferrer\">Try it</a></p>\n<p>Explanation:</p>\n<pre><code>Æ[2pX]ÃÔr!p \nÆ     Ã     # Map X in range [0...n):\n  2pX       #  2 to the power of X\n [   ]      #  Wrap in an array\n       Ô    # Reverse\n        r   # Reduce:\n         !p #  Push the previous result at the end of the next item\n</code></pre>\n"},{"answer_id":255940,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255940#255940","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, 51 bytes</h1>\n<pre><code>{it.map{it.code-48}.foldIndexed(0){i,a,c-&gt;i%2*c+a}}\n</code></pre>\n<p>No TIO link as it doesn't have an updated version, ATO borks with it for some reason.</p>\n<pre><code>{it.map{it.code-48}.foldIndexed(0){i,a,c-&gt;i%2*c+a}} // String input\n{                                                 } // Lambda expression\n it.map{it.code-48}                                 // Subtract 48 from each char, turning the string into a list of digits\n                   .foldIndexed(0){i,a,c-&gt;       }  // Fold over the list, starting with 0. i is the index, a is accumulator, and c is the digit\n                                          i%2*c     // Multiply the current digit by the index mod 2. If it is even, it resolves to 1*c, otherwise 0*c\n                                               +a   // Add to accumulator\n</code></pre>\n"},{"answer_id":255939,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255939#255939","body":"<h1>Java, 88 bytes</h1>\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;java.util.regex.Pattern.compile(&quot;0+&quot;).matcher(s).replaceAll(r-&gt;r.group().length()+&quot;&quot;)\n</code></pre>\n<p><a href=\"https://tio.run/##fY7BTsMwDIbP9CminBJNjbK141KoxAMgkCZOiEPI0i4lTSLHnaimPXsJbBLigm/2/9n@BnVU5bD/WOwYAyAZci8mtE50k9dogxcvXsH8FA0oDNAUcXp3VhPtVErkUVlPTgXJlVBhnv@h73YI1vct6e6XVLa/x8H05lM8K0QDXugwRusMo3JFuRgV6oMBlnjGolPaPDjHoGxB9BCmyLhwxvd4YHxFKV@an/dXravFMdg9GbMcuxi8vhEFfeKn4mY3JzSjCBOKmCN0nnVCxehmRtebqt5KWd1upJR1LSnnzf8bci03ssqw3F7ob5dzcV6@AA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":255937,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255937#255937","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 11 bytes</h1>\n<pre><code>sm`|vedhdr8\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/vzg3oaYsNSUjpcji/391A0MDIwNjAwMTA1MDOFAHAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>sm`|vedhdr8Q    # implicitly add Q to the end\n                # implicitly assign Q = eval(input())\n         r8Q    # length encode Q\ns               # concatenate together\n m              # map over lambda d\n  `             # convert to string\n   |            # short circuiting or\n    ved         # evaluate the second element of d\n       hd       # or take the first element of d\n</code></pre>\n"},{"answer_id":255857,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255857#255857","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 14 bytes</h1>\n<pre><code>{,W%{2\\#]W%}%}\n</code></pre>\n<p>Anonymous code block that pops a number from the stack and pushes the nested array.</p>\n<p>The header reads the input. The footer executes the block and prints the string representation of the array.</p>\n<p>Port of my <a href=\"https://codegolf.stackexchange.com/a/255820/36398\">MATL answer</a>.</p>\n<p><a href=\"https://tio.run/##S85KzP1flPm/WidctdooRjk2XLVWtfZ/XcF/UwA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\"><strong>Try it online!</strong></a></p>\n<h3>Code explanation</h3>\n<pre><code>{,W%{2\\#]W%}%}\n\n{            }   e# define code block\n ,               e#   range (0-based)\n  W%             e#   reverse array\n    {      }%    e#   map this code block over the array\n     2\\#         e#     exponential with case 2 \n        ]        e#     pack all stack contents into an array\n         W%      e#     reverse array\n</code></pre>\n"},{"answer_id":255934,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255934#255934","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 11 bytes</h1>\n<pre><code>ḅ{ị0&amp;lṫ|}ᵐc\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r//@GO1uqHu7sN1HIe7lxdU/tw64Tk//@VDI2MTUwNDIzNjAwMDExMDOBA6X8EAA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>I was hoping for some automatic number -&gt; string conversion, but no dice.</p>\n<pre><code>ḅ{ị0&amp;lṫ|}ᵐc\nḅ            Break the input string into blocks of identical characters\n {      }ᵐ   Map this predicate to each block:\n  ị            Convert to integer\n   0           Assert that the result is zero\n    &amp;l         If so, get the length of the block\n      ṫ        and convert to string\n       |       If that failed (because the number wasn't zero), return the block unchanged\n          c  Concatenate the results together into a single string\n</code></pre>\n"},{"answer_id":255874,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255874#255874","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a> <code>-p</code>, <s>18</s> 14 bytes</h1>\n<pre><code>FI[EiUi&lt;a&amp;REa]\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJGSVtFaVVpPGEmUkVhXSIsIiIsIjciLCItcCJd\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>-4 bytes thanks to @DLosc</p>\n<p>Recursively builds the nested lists. <code>FI</code> is used to filter out the <code>0</code> in the last list, otherwise <code>[1;[2;[4;0]]]</code> would be output.</p>\n"},{"answer_id":255927,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255927#255927","body":"<h1><a href=\"https://www.gnu.org/software/bash/\" rel=\"nofollow noreferrer\">Bash</a> <code>--extglob</code>, 57 bytes</h1>\n<pre class=\"lang-bash prettyprint-override\"><code>j=$1;for w in ${1//[1-9]/ };{ j=${j/+(0)/${#w}};}\necho $j\n</code></pre>\n<p><a href=\"https://tio.run/##ZYzdCoIwHMXv9xR/aBdKyM7mtER6kugiQ7MhLZpgMPbsS4VA6Fydjx@nubo@ut6@RsoctZ/xPtiGdUnqozlxWXf2TRM9nsS9FOIss@oiKNSe5tUbsU@QCu53Uwh1YO2tt8RNDIx1JFWuCyAvFQCt8V/NDTZa4kqUh2P1oxePbVgpKOTzAwrELw\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":255929,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255929#255929","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a> <code>-p</code>, 12 bytes</h1>\n<pre><code>LaYFI[1y*2]y\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJMYVlGSVsxeSoyXXkiLCIiLCI3IiwiLXAiXQ==\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<h3>Explanation</h3>\n<p>Same idea as <a href=\"https://codegolf.stackexchange.com/a/255809/16766\">hyper-neutrino's Jelly answer</a>:</p>\n<pre><code>LaYFI[1y*2]y\n              a is command-line argument; y is &quot;&quot; (implicit)\nLa            Loop a times:\n       y*2      Multiply y by 2 (-&gt; 0 if it's &quot;&quot;, element-wise if it's a list)\n     [1   ]     Put 1 and that value in a list\n   FI           Filter, removing falsey values (in this case, 0)\n  Y             Yank, assigning the result back to y\n           y  After the loop, autoprint the final value of y\n</code></pre>\n"},{"answer_id":255837,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255837#255837","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, 86 bytes</h1>\n<pre><code>&#9;I =INPUT\nR&#9;I ARB . L SPAN(0) . X REM . I&#9;:F(O)\n&#9;O =O L SIZE(X)&#9;:(R)\nO&#9;OUTPUT =O I\nEND\n</code></pre>\n<p><a href=\"https://tio.run/##K87LT8rPMfn/n9NTwdbTLyA0hCsIyHQMclLQU/BRCA5w9NMw0ASyIxSCXH2BtCenlZuGvyYXp7@CrT9IhWeUq0aEJqeVRpAmlz@nf2gI0AyQlCeXq5/L//8GhgZGBsYGBiYGpgaGAA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n<pre><code>&#9;I =INPUT&#9;&#9;&#9;&#9;;* read input\nR&#9;I &#9;&#9;&#9;&#9;&#9;;* Match in I:\n&#9;  ARB . L&#9;&#9;&#9;&#9;;*&#9;ARBitrary characters (save as Left part of string) up to\n&#9;&#9;  SPAN(0) . X&#9;&#9;&#9;;*&#9;1 or more 0s (save as X)\n&#9;&#9;&#9;      REM . I&#9;&#9;;*&#9;REMaining characters (save as I)\n&#9;&#9;&#9;&#9;&#9;:F(O)&#9;;* On no match, goto O\n&#9;O =O L SIZE(X)&#9;:(R)&#9;&#9;&#9;;* Append L and # of 0s to O and goto R\nO&#9;OUTPUT =O I&#9;&#9;&#9;&#9;;* Output O and any remaining characters of I that didn't match\nEND\n</code></pre>\n"},{"answer_id":255912,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255912#255912","body":"<h1><a href=\"https://github.com/abrudz/dyalog-apl-extended\" rel=\"nofollow noreferrer\">APL (Dyalog Extended)</a>, 25 bytes</h1>\n\n<p>Anonymous tacit prefix function.</p>\n<pre class=\"lang-apl prettyprint-override\"><code>××(≢⍴v⍨)@(|∊(v←'aeiou')⍨)\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNrShJzUtJTfn///D0w9M1HnUuetS7pexR7wpNB42aRx1dGmWP2iaoJ6Zm5peqa4KE/6cBBR719j3qan7Uuwao@NB640dtEx/1TQ0OcgaSIR6ewf/TFNSd81NSFdzzc9IUFTwVcvLLUhXgInoKniUKmcUKJRmpCkmpxSV66gA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Extended) – Try It Online\">Try it online!</a></p>\n<p><code>×</code> the case of the letters…</p>\n<p><code>×</code> imposed as case onto…</p>\n<p><code>(</code>…<code>)@(</code>…<code>)</code> amend the characters <strong>at</strong> the following locations:</p>\n<p> <code>|</code> where the casefolded characters…</p>\n<p> <code>∊(</code>…<code>)⍨</code> are members of the following constant:</p>\n<p>  <code>v←'aeiou'</code> the vowels (which are assigned to <code>v</code></p>\n<p>… with…</p>\n<p> <code>≢</code> the count of such located vowels</p>\n<p> <code>⍴</code>…<code>⍨</code> cyclically <strong>r</strong>eshaping the following constant:</p>\n<p>  <code>v</code> the previously created <code>v</code></p>\n"},{"answer_id":255861,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255861#255861","body":"<h1>JavaScript (ES6), 33 bytes</h1>\n<p><em>-2 thanks to <a href=\"https://codegolf.stackexchange.com/users/76323/l4m2\">@l4m2</a></em></p>\n<p>Returns an integer.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;eval(s.replace(/:|^/g,'0+0x'))\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@7/Y1i61LDFHo1ivKLUgJzE5VUPfqiZOP11H3UDboEJdU/N/cn5ecX5Oql5OfrpGmoaSARBYgQglTb2S/OCSosy8dA1DM01NBX19BYMKkIwBF5oeQyCwAhHY9RgaGRkZoutxAwI89oCkDXDoMcTnNoX8IpCVYPZ/AA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Turns an input such as <code>&quot;ABCD:1234&quot;</code> into <code>&quot;0+0xABCD0+0x1234&quot;</code> and evaluates it as JS code.</p>\n"},{"answer_id":255897,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255897#255897","body":"<h1>Excel (ms365), 37 bytes</h1>\n<p><a href=\"https://i.stack.imgur.com/G7zZL.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/G7zZL.png\" alt=\"enter image description here\" /></a></p>\n<p>Formula in <code>B1</code>:</p>\n<pre><code>=SUM(HEX2DEC(MID(A1,{1,6},4))*{16,1})\n</code></pre>\n"},{"answer_id":255911,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255911#255911","body":"<h1><a href=\"https://zsh.sourceforge.io/\" rel=\"nofollow noreferrer\">Zsh</a> <code>--extendedglob</code>, 24 bytes</h1>\n<pre class=\"lang-zsh prettyprint-override\"><code>&lt;&lt;&lt;${1//(#m)0##/$#MATCH}\n</code></pre>\n<p><a href=\"https://tio.run/##qyrO@F@cWpJfUKKQWlGSmpeSmpKek5/ElaahWf3fxsZGpdpQX19DOVfTQFlZX0XZ1zHE2aP2fy0XV5qCoZGxiamBgbGZkYGBgYmJAaYQUMQACYC4YBVm5haWMNUgtgEyB6zKwMjAGGiCganBfwA\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":255829,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255829#255829","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 7 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>r+iT Èl\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=citpVCDIbA&amp;input=IjEyMzQ1MDAzNjIwMDA0NDAi\" rel=\"nofollow noreferrer\">Try it here</a></p>\n<pre><code>r+iT Èl     :Implicit input of string\nr           :Replace\n +i         :  &quot;+&quot; prepended with\n   T        :    0, giving the RegEx /0+/g\n     È      :  Pass each match through a function\n      l     :    Length\n</code></pre>\n"},{"answer_id":255901,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255901#255901","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 7 bytes (14 nibbles)</h1>\n<pre><code>`@4.`=$\\$Nhex\n</code></pre>\n<p>Outputs decimal address value.</p>\n<pre><code>`@4.`=$\\$Nhex\n    `=$         # chunk the input by\n       \\$       # its character class:\n         N      #   is it alphanumeric?\n   .            # now map over the 3 chunks\n                # (the middle one is &quot;:&quot;)\n          hex   #   get hex value\n                #   (value of &quot;:&quot; is zero)\n`@4             # and convert the 3-element list\n                # to base-4\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/z8FL0.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/z8FL0.png\" alt=\"enter image description here\" /></a></p>\n<hr />\n<p>For the same bytes, we could also explicitly split <code>%</code> the input on the string <code>&quot;:&quot;</code>, and convert from base-16, similarly to some other answers:<br />\n<code> `@16.%$&quot;:&quot;hex</code></p>\n"},{"answer_id":255900,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255900#255900","body":"<h1><a href=\"https://www.wolfram.com/mathematica/\" rel=\"nofollow noreferrer\">Mathematica (13.1)</a> 54 bytes</h1>\n<pre><code>StringReplace[string,x:&quot;0&quot;..:&gt;ToString@StringLength@x]\n</code></pre>\n"},{"answer_id":255893,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255893#255893","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, <s>7</s> 6 bytes (12 nibbles)</h1>\n<pre><code>+.`=$$?`r$@,\n</code></pre>\n<pre><code>  `=$           # chunk the input by\n     $          # itself,\n .              # now map over each chunk:\n      ?         #   if\n       `r$      #   its value as an integer is nonzero\n          @     #     return itself\n                #   otherwise\n           ,    #     return its length\n+               # finally, join it all together\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/tHZyE.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/tHZyE.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":255826,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255826#255826","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 7 bytes</h1>\n<p>-1 byte by jezza_99 / DLosc</p>\n<pre><code>aR+X0#_\n</code></pre>\n<p>Wow pip is really good at regex</p>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJhUmAwK2AjXyIsIiIsIjEyMzQ1MDAzNjIwMDA0NDAiLCIiXQ==\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<pre><code>aR+X0#_\naR+X0     Replace all occurrences of (regexified zero with a +)\n     #_   with it's length\n</code></pre>\n"},{"answer_id":255775,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255775#255775","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"nofollow noreferrer\">Retina</a>, <s>82</s> 54 bytes</h1>\n<pre><code>i`[aeiou]\na$&amp;\n,Y0`a`v`a.\nT`v`V`.[AEIOU]\n1,2,i`[aeiou]\n\n</code></pre>\n<p><a href=\"https://tio.run/##RYxBCsIwFET3OcUUVFyUYL2BiJSs3KggpZBf/NJA2pT2t3r7mI0KA8N7DDOyuJ6KuN6WNjpbEbsw14pWG5Xfd5bsYkmrS6qb1dXhZM7XWhX5Pv9vYzyGB6MM/pnBwIeF8TMaRuAmSMtoeJL01SZMIUjiDF/mN3WDZ/Rz1/AIeQX9AQ\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n<pre><code>i`[aeiou]\na$&amp;\n</code></pre>\n<p>Prefix <code>a</code>s to all of the vowels, both lower and upper case.</p>\n<pre><code>,Y0`a`v`a.\n</code></pre>\n<p>Cyclically transliterate only the new <code>a</code>s to vowels.</p>\n<pre><code>T`v`V`.[AEIOU]\n</code></pre>\n<p>Uppercase the new vowels that precede old uppercase vowels.</p>\n<pre><code>1,2,i`[aeiou]\n\n</code></pre>\n<p>Delete alternate vowels i.e. the old vowels.</p>\n<p>If the input had all been in (say) lowercase, then it could have been done in 11 bytes:</p>\n<pre><code>Y`v`a\nY`a`v\n</code></pre>\n<p><a href=\"https://tio.run/##PcjLDYAgEEXRPVU8GyCxHHcMOgoJHwMj2j2y0eRuzi0sPtHc@2KaIbUYMq33NW@MI4d9gkfIjfEfDS/wFeIYlqtoJW5wRJDhCZ/5oXgGRrqi5QK5s34B\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a> Link includes test cases. Explanation: Simply cyclically transliterates all the lowercase vowels to <code>a</code>s and back to vowels.</p>\n"},{"answer_id":255870,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255870#255870","body":"<h1><a href=\"https://www.perl.org\" rel=\"nofollow noreferrer\">Perl</a> <code>-aF:</code>, 29 + 4 = 33 bytes</h1>\n<pre><code>print 16*hex($F[0])+hex $F[1]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kILUoZ0W0km6im5VS7IKlpSVpuhZ7C4oy80oUDM20MlIrNFTcog1iNbWBTAUg0zAWogaqdMFKQyCwAhEQAQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255890,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255890#255890","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, <s>44</s> 36 bytes</h1>\n<pre><code>strtoi(scan(,&quot;&quot;,,,&quot;:&quot;),16)%*%c(16,1)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGCpaUlaboWN1WKS4pK8jM1ipMT8zR0lJR0dHSUrJQ0dQzNNFW1VJM1DM10DDUham8xphsAgRWI4OKC6lMyqADxDZQ0uZSJB1zE2MplCARWIALZNkMjIyNDWtjmBgQYfgMJ0sRvUNsMUWwzhAYlJLxhcQQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255835,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255835#255835","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, <s>64</s> <s>58</s> 57 bytes</h1>\n<p><em>Edit: -1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/95126/dominic-van-essen\">@Dominic van Essen</a></em>.</p>\n<pre><code>\\(x){regmatches(x,t)=Map(attr,t&lt;-gregexpr(&quot;0+&quot;,x),&quot;m&quot;)\nx}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=ddBLCsIwFAVQnLqKEAdJMMLLp7aCXYI7cFKkrROx1BQC4kqcVMFF6WqMTf23bxLCPQk3OZ7K-pzFl8pkk-g6W1LL9mWabxKzWqc7arlh8SIpaGJMyc18krswtUVJMYwxt4zjDWZDe_AX3AZhRomQSgcAaioBQGsgbIS2lSkqg2LkU-lCpbUgw39PUK9vOHwMQW5-uEfNsWkYzRryi97pq8BjB534mYpv3Noe3LYACco9CoKuqq6GUFKLQBD_f3Xt1zs\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p><code>R</code> has some weird string manipulation functions...</p>\n"},{"answer_id":255811,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255811#255811","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>36</s> 34 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{*r=k=2**n;n.times{r=k/=2,r};r}\n</code></pre>\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6vWqvINtvWSEsrzzpPryQzN7W4Giigb2ukU1RrXVT7v0AhLdo09j8A\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255892,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255892#255892","body":"<h1>MS-DOS .COM (386 instructions), 71 bytes</h1>\n<p>Takes input from the command line and prints the result. To convert each output character, I use a variant of <a href=\"https://www.felixcloutier.com/x86/aam\" rel=\"nofollow noreferrer\"><code>AAM</code></a> that operates in base 16.</p>\n<pre><code>BE 82 00 E8 2A 00 8B DF 66 C1 E3 04 46 E8 20 00\n66 03 DF 66 C1 CB 10 B9 05 00 8A C3 D4 10 3C 0A\n7C 02 04 07 04 30 CD 29 66 C1 C3 04 E2 EC CD 20\n66 33 FF B9 04 00 C1 E7 04 AC A8 40 74 02 2C 07\n2C 30 03 F8 E2 F0 C3\n</code></pre>\n<p>TASM source:</p>\n<pre><code>IDEAL\nP386\n\nMODEL   TINY\nCODESEG\nORG 100H\n\nMAIN:\n    MOV     SI,82H ; Start of command line\n    CALL    DECODE\n    MOV     BX,DI\n    SHL     EBX,4 ; Adjust segment portion\n    INC     SI\n    CALL    DECODE\n    ADD     EBX,EDI ; Add offset\n    ROR     EBX,16 ; Rotate address to point to first digit\n    MOV     CX,5\nLOOPM:\n    MOV     AL,BL\n    DB      0D4H, 10H ; AAM 10H (base 16: AH=AL/16, AL=AL mod 16)\n    CMP     AL,0AH\n    JL      ASCADJ\n    ADD     AL,7 ; Convert digits &gt; 9 into A-F\nASCADJ:\n    ADD     AL,48\n    INT     29H\n    ROL     EBX,4 ; Next digit\n    LOOP    LOOPM\n    INT     20H\n\nDECODE:\n    XOR     EDI,EDI ; Return register\n    MOV     CX,4\nLOOP1:\n    SHL     DI,4\n    LODSB\n    TEST    AL,40H\n    JZ      DECADJ\n    SUB     AL,7 ; Convert digits A-F to 10-16\nDECADJ:\n    SUB     AL,48\n    ADD     DI,AX\n    LOOP    LOOP1\n    RET\n\nEND MAIN\nENDS\n</code></pre>\n<p>Example results:</p>\n<pre><code>C:\\WORK&gt;segment FFFF:0000\nFFFF0\n</code></pre>\n"},{"answer_id":255783,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255783#255783","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, <s>80</s> 74 bytes</h1>\n<ul>\n<li>-6 thanks to <a href=\"https://codegolf.stackexchange.com/users/20260/xnor\">xnor</a>!</li>\n</ul>\n<pre class=\"lang-python prettyprint-override\"><code>V=v='UuAaEeIiOo'\nfor c in input():print(end=c[c in V:]or(v:=v[2:]+V)[c&gt;V])\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vwYKlpSVpuhY3vcJsy2zVQ0sdE11TPTP989W50vKLFJIVMvOAqKC0REPTqqAoM69EIzUvxTY5GiwRZhWbX6RRZmVbFm1kFasdphmdbBcWqwkxEWrwgps6zvkpqQru-TlpigqeCjn5ZakKcBE9Bc8ShcxihZKMVIWk1OISPYgmAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a> Full program.</p>\n<hr />\n<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, <s>85</s> <s>81</s> 78 bytes</h1>\n<ul>\n<li>-4 thanks to <a href=\"https://codegolf.stackexchange.com/users/92689/steffan\">Steffan</a>!</li>\n<li>-3 thanks to xnor!</li>\n</ul>\n<pre class=\"lang-python prettyprint-override\"><code>lambda s,v='uUaAeEiIoO':''.join(c[c in v:]or(v:=v[2:]+v[:2])[c&lt;'a']for c in s)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PY0xDoJAEEV7TzHSLESloDIbKYwxhkYbrZBigd2wBnYILKuexYbE6J28jShK8pPJ_Dd__u1ZXnWGqr0L__hotJjNX9ucFXHKoJ4anzQHtuRrGeCOUELcE0plJ2ECUoGhEVa2ob4JPRpNTEi9yAmTBWEkEljB96h2fl_LspJK28K2Vphy2GAuxhBAjobD4LgQaJA16IxDzGvtWo4zGoL7rEOdGOiOjeG_8wsrypyDaoqYV6DP-Mn1vW3bzzc\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255889,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255889#255889","body":"<h1>Bash - <s>181</s> 158 chars</h1>\n<p><em>Edit 1: I used <a href=\"https://codegolf.stackexchange.com/a/25802/116162\">this trick</a> for the <code>for</code> loop, remove whitespace, condence an <code>if</code> statement</em></p>\n<pre class=\"lang-bash prettyprint-override\"><code>n=0;for ((i=0;i&lt;${#1};i++));{ c=&quot;${1:$i:1}&quot;;if [ $c = '0' ]; then ((n++)); else [ $n -ne 0 ] &amp;&amp; { echo -n $n;n=0;};echo -n $c;fi;};[ $n -ne 0 ] &amp;&amp; echo -n $n\n</code></pre>\n<h2>Explanation</h2>\n<pre class=\"lang-bash prettyprint-override\"><code># a counter of how far into a sequence of zeros we are\n# this is zero if we're not in a 'zero-sequence'\nn=0\n\n# iterate over all the characters\n# $1 is the first function argument ($0 would be the script name)\nfor (( i=0; i&lt;${#1}; i++ )); do\n    # get the current char\n    c=&quot;${1:$i:1}&quot;\n\n    # if it is a zero, then increment the counter\n    if [ $c = '0' ]; then\n        ((n++));\n    # if it is NOT a zero\n    else\n        # if a zero sequence is over (given that the counter is\n        # not equal to zero and the current char isn't zero)\n        if [ $n -ne 0 ]; then\n            # print the number of zeros in the sequence,\n            # and reset the counter to zero\n            echo -n $n;\n            n=0;\n        fi;\n    echo -n $c;\n    fi\ndone\n# check if there was a zero sequence terminating the string,\n# as we wouldn't otherwise check as there wouldn't be a non-zero\n# char initiating the check\nif [ $n -ne 0 ]; then echo -n $n; fi\n</code></pre>\n<p>I referred to <a href=\"https://stackoverflow.com/a/10552175/20827475\">this SO answer</a> for how to iterate over a string in Bash and <a href=\"https://askubuntu.com/a/385532/1659062\">this AU answer</a> for a short way to increment a variable</p>\n"},{"answer_id":255887,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255887#255887","body":"<h1><a href=\"https://www.jsoftware.com\" rel=\"nofollow noreferrer\">J</a>, 16 bytes</h1>\n<pre><code>'0+'&quot;:@#rxapply]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70wa8EuJT0F9TQFWysFdQUdBQMFKyDW1VNwDvJxW1pakqZrsUHdQFtdycpBuagisaAgpzIWInxztiZXanJGvkKagrqhkbGJqYGBsZmRgYGBiYmBOi4ZhIQBEkASBas3M7ewRDMCJIRuLKoyA0MDIwNjoCUGpgbqECcuWAChAQ\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Fairly simple regex solution:</p>\n<pre><code>'0+' &quot;:@#rxapply ]\n'0+'     rxapply ]    apply to all relevant patterns in the input\n        #             length\n     &quot;:@              casted to string\n</code></pre>\n<h1><a href=\"https://www.jsoftware.com\" rel=\"nofollow noreferrer\">J</a>, 47 bytes</h1>\n<pre><code>' '-.~[:,(1,2~:/\\'0'&amp;=)([`(&quot;:@#)@.('0'&amp;e.));.1]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70wa8EuJT0F9TQFWysFdQUdBQMFKyDW1VNwDvJxW1pakqZrcVNfXUFdV68u2kpHw1DHqM5KP0bdQF3NVlMjOkFDycpBWdNBTwMkkqqnqWmtZxgL1TZbkys1OSNfIU1B3dDI2MTUwMDYzMjAwMDExEAdlwxCwgAJIImC1ZuZW1iiGQESQjcWVZmBoYGRgTHQEgNTA3WIExcsgNAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Horrendously long non-regex solution. This is the only way I could really think of approaching this, since, afaik, J doesn't have a builtin for grouping according to a boolean matrix or similar.</p>\n"},{"answer_id":255886,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255886#255886","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 40 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>i;f(s){sscanf(s,&quot;%x:%x&quot;,&amp;i,&amp;s);s+=i&lt;&lt;4;}\n</code></pre>\n<p><a href=\"https://tio.run/##ZY7RCsIgGIXv9xQiOLQ5cNDV3G57hqB2IZL1Q1nMQYOxV890WzXou/g9fBzh6PystfcgDXVscE4rGxLHpC9Jj3kKPHVMuqyGqtrK0YPt0E2BpSwZEhTQF9VuUHdy3aFBNZplBItAGQ/mP1kEynjWchf4ay6yWEsxpVFOj7m3iMY9UAs5L4BGIsgy9v3waEPBUExc2CZ6sj9azD9djgxdImMyGf1Lm6s6O58/3w\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255885,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/255885#255885","body":"<h1><a href=\"https://osmosianplainenglishprogramming.blog/\" rel=\"nofollow noreferrer\">Plain English</a>, 485 bytes</h1>\n<pre><code>To add any vowel to a string:\nPick a letter of the alphabet.\nIf the letter is any vowel, append the letter to the string; exit.\nRepeat.\n\nTo add any consonant to a string:\nPick a letter of the alphabet.\nIf the letter is any consonant, append the letter to the string; exit.\nRepeat.\n\nTo make a random string given a length:\nIf a counter is past the length, exit.\nAdd any consonant to the random string.\nIf the counter is past the length, exit.\nAdd any vowel to the random string.\nRepeat.\n</code></pre>\n<p>What better way to write some random English than by using Plain English? I have applied a moderate level of golfing to this code; certain things could be shortened, but it would make this less legible, which would be a shame.</p>\n<p>The reason I have defined three routines is because nested loops are forbidden in Plain English, so inner loops must be factored into separate routines.</p>\n<p>Parameters and local variables are written as &quot;a string&quot; or &quot;a length&quot; (for example). These are subsequently referred to as &quot;the string&quot; and &quot;the length.&quot; If you need to refer to more than one string, you could for example introduce &quot;another string&quot; and refer to it with &quot;the other string.&quot; You may also name them whatever you want: &quot;a random string&quot; and refer to it either as &quot;the random&quot; or &quot;the random string.&quot;</p>\n<p>All arguments are passed by reference; even numbers. To output from a routine, you just modify the arguments. Then you simply refer to the object returned by the routine in the same way as you refer to parameters. For example, to use the routine defined above to output a random English word, you could:</p>\n<pre><code>To run:\nStart up.\nMake a random string given 5.\nWrite the random string on the console.\nWait for the escape key.\nShut down.\n</code></pre>\n<p>&quot;To run:&quot; is a special routine that signifies the starting point of the program. When added to the other three routines, this results in a program which will show something similar to the following when compiled and run:</p>\n<p><a href=\"https://i.stack.imgur.com/TBPhm.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/TBPhm.png\" alt=\"Output of the program showing &quot;JAWEF&quot;\" /></a></p>\n"},{"answer_id":255880,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255880#255880","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a> (v2), 35 bytes</h1>\n<pre><code>;=l,=c/^2=pP2;W=p-EpT=l+,=c/c 2,lDl\n</code></pre>\n<p><a href=\"https://knight-lang.netlify.app/#WyI7PWwsPWMvXjI9cFAyO1c9cC1FcFQ9bCssPWMvYyAyLGxEbCIsIjciLCIyLjAiXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Looks golfable.</p>\n"},{"answer_id":255878,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255878#255878","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 23 bytes</h1>\n<pre><code>Uo{aFB16*16E Do}MSa^&quot;:&quot;\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCJGIGEgW1xuW1wiMDAwMDowMDAwXCJdO1xuW1wiMTExMToxMTExXCJdO1xuW1wiRkZGRjowMDAwXCJdO1xuW1wiRkZGRjowMDEwXCJdXG5de1dHIFAoe1xuICIsIlVve2FGQjE2KjE2RSBEb31NU2FeXCI6XCIiLCJ9VmEpVEIxNlxufSIsIiIsIi1wIl0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>I couldn't quite figure out a nice way to multiply the first part by 16, I'm sure @DLosc will be able to save the day</p>\n"},{"answer_id":255865,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255865#255865","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, <s>62</s> 57 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:re.sub(&quot;0+&quot;,lambda s:str(len(s[0])),n)\nimport re\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY3LXMSc5NSEhXyrIpS9YpLkzSUDLSVdKCCxVbFJUUaOal5GsXRBrGamjp5mlyZuQX5RSUKRakQA24x8hYUZeaVaKRpqBsaGZuYGhgYmxkZGBiYmBioa9raQgSNgGLGJiaG6ppcuFRjKEZWa4AEoApRpMH6zMwtLCGSSFw0-0CCSO4CcTEdhTAImzkGhgZGBsZAJxuYQk0C2mdobGRiaAo0ChIqCxZAaAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>-5 bytes thanks to @xnor</p>\n<p>Regex solution, port of <a href=\"https://codegolf.stackexchange.com/a/255826/110555\">@mathcat's Pip answer</a></p>\n"},{"answer_id":255877,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255877#255877","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 42 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ R/ 0+/ [ length &gt;dec ] re-replace-with ]\n</code></pre>\n<p><a href=\"https://tio.run/##bZDdSsNAEIXv8xRjbzXJmKTVRCj0RilILyxelRLiZrIpJLvrZkoVEXwIn9AXidv4QxDP3XyccxhOVQjWtr9fL1c3GViS9GSgo8c9KUEdtAXXgSlsRxaMJeZnY3eK4QqWqwykbipvcbtcrDOYlyRA7dsHsvOOnUkCnMD1UA8YpCl8vL27ZoKa2XRZGJZadEE1GIQuKdBWhkIrJsXhQdvSz3PJee56z0ZvBDW3jffigdPkPIqTKWI8ixAxSXDyL/6mONIPGpyzi8t0nDze@Bf8JjDC2LXi1Fle@w3chYCnIWygISW5/hpi66b0LZmmEOQfdg5v@7YwEPSf\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255876,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255876#255876","body":"<h1><a href=\"https://gcc.gnu.org\" rel=\"nofollow noreferrer\">C (GCC)</a>, 52 bytes</h1>\n<pre><code>main(a,b){scanf(&quot;%X:%X&quot;,&amp;a,&amp;b);printf(&quot;%X&quot;,16*a+b);}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700OT49OXnBgqWlJWm6FjdNchMz8zQSdZI0q4uTE_PSNJRUI6xUI5R01BJ11JI0rQuKMvNKwKJKOoZmWonaQLFaiF6oEQtWugGBlYGBoQFEAAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255805,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255805#255805","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, <s>9</s> 6 bytes</h1>\n<pre><code>(d1$&quot;ꜝ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCI2IiwiKGQxJFwi6pydIiwiIiwiIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Uses the fact that <a href=\"https://codegolf.meta.stackexchange.com/a/22106/78850\">stack languages can have their input placed on the stack before execution</a></p>\n<p><a href=\"https://web.archive.org/web/20221221235837/https://codegolf.meta.stackexchange.com/questions/2447/default-for-code-golf-input-output-methods/22106\" rel=\"nofollow noreferrer\">Proof the meta proposal was +6 at the time of posting</a></p>\n<h2>Explained</h2>\n<p>A port of Jelly</p>\n<pre><code>(d1$&quot;ꜝ\n(      # repeat input times\n d     # double\n  1$&quot;  # [1, that]\n     ꜝ #  keep only truthy items\n</code></pre>\n"},{"answer_id":255875,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255875#255875","body":"<h1><a href=\"https://www.perl.org/\" rel=\"noreferrer\">Perl 5</a> <code>-p</code>, 16 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/0+/length$&amp;/eg\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9r6xYAKQVdAv@F@sbaOvnpOall2SoqOmnpv//b2BoYGRgbGBgYmBqAAA\" rel=\"noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255873,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255873#255873","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 7 bytes</h1>\n<pre><code>\\:/H16β\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwiXFw6L0gxNs6yIiwiIiwiMDAwMDowMDAwXG4xMTExOjExMTFcbkZGRkY6MDAwMFxuRkZGRjowMDEwIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>\\:/H16β\n\\:/     # Split on colon\n   H    # Convert each from hex string to int\n    16β # Convert list from base 16 to decimal\n</code></pre>\n"},{"answer_id":255872,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255872#255872","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 87 bytes</h1>\n<pre><code>:\n0¶0\nO#$`.\n$.%`\n¶\n\nM!`..\n[a-f]\n55$&amp;\nT`l`d\n.\n$*\n+`¶1{16}\n1¶\n1{16}\n\n%M`1\nT`d`l`..\nb\\B|¶\n\n</code></pre>\n<p><a href=\"https://tio.run/##LYsxCgIxEEX7fwsxEVkxZJCsmNLGarGxU2F2iQFBthA79Vo5QC4WJ6yv@Hz@vHneXvexL3p54OJhc7I4zhUbKKMZOQHdjI3BuV/HK5xTC5z4wQFiNFhxTvSm9gsSdWrQHZNIQTR5HC77j9xKsYKvARJ8DURh2v6NLFrB1wC5XfCb7RB/\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n<pre><code>:\n0¶0\n</code></pre>\n<p>Replace the separator with a newline, but also suffixing a <code>0</code> to the first number and prefixing a <code>0</code> to the second number, reducing the problem to hexadecimal addition.</p>\n<pre><code>O#$`.\n$.%`\n¶\n\nM!`..\n</code></pre>\n<p>Transpose the digits.</p>\n<pre><code>[a-f]\n55$&amp;\nT`l`d\n.\n$*\n</code></pre>\n<p>Convert each digit to unary. As they are now transposed, each line now corresponds to the sum of the two digits in unary.</p>\n<pre><code>+`¶1{16}\n1¶\n1{16}\n\n</code></pre>\n<p>Propagate carries, but drop the 20th carry (allowed per spec).</p>\n<pre><code>%M`1\n</code></pre>\n<p>Convert each resulting &quot;digit&quot; to decimal.</p>\n<pre><code>T`d`l`..\nb\\B|¶\n\n</code></pre>\n<p>Convert each decimal number to a hexadecimal digit and join everything together.</p>\n"},{"answer_id":255868,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255868#255868","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 35 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ &quot;:&quot;split1 hex&gt; swap hex&gt; 16 * + ]\n</code></pre>\n<p><a href=\"https://tio.run/##LY2xCsIwFEV3v@LSUaE0i0MER8XFRZzEIZSnLbZp8vIkivjtMW09w@FylnsztQyczqfDca8RXNeKtPaO3khTOsOBGA9iS92U4JhE3o5bK/ARgfyTbE0Bm4WPH1QZPQoqo0dhl5nbf6kK33RBoYvpT6Gh1xYhGjcvtcYSK1xTn0uZfg\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<pre><code>       ! &quot;1111:1111&quot;\n&quot;:&quot;    ! &quot;1111:1111&quot; &quot;:&quot;\nsplit1 ! &quot;1111&quot; &quot;1111&quot;\nhex&gt;   ! &quot;1111&quot; 4369\nswap   ! 4369 &quot;1111&quot;\nhex&gt;   ! 4369 4369\n16     ! 4369 4369 16\n*      ! 4369 69904\n+      ! 74273\n</code></pre>\n"},{"answer_id":255871,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255871#255871","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 14 bytes</h1>\n<pre><code>⍘↨Ｅ⪪Ｓ:⍘ι⊗⁸⊗⁸⊗⁸\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMMpsTg1uATITAczNXwTCzSCC3IySzQ88wpKS6BSmjoKSlZKQBJJeaaOgkt@aVJOaoqGhaamJgoPVcr6/38zILACEf91y3IA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>    Ｓ           Input string\n   ⪪            Split on\n     :          Literal string `:`\n  Ｅ             Map over parts\n       ι        Current part\n      ⍘         Convert from base\n         ⁸      Literal integer `8`\n        ⊗       Doubled\n ↨              Convert from base\n           ⁸    Literal integer `8`\n          ⊗     Doubled\n⍘               Convert to base\n             ⁸  Literal integer `8`\n            ⊗   Doubled\n                Implicitly print\n</code></pre>\n<p>Consecutive integers would require a separator so I double <code>8</code> instead of using a literal <code>16</code>. (The first one doesn't need to be double <code>8</code> but I wanted to be consistent.)</p>\n"},{"answer_id":255867,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255867#255867","body":"<h1>Excel VBA, 100 bytes</h1>\n<pre class=\"lang-vb prettyprint-override\"><code>Sub z()\nFor i=2^15-1To 1Step-1\n[A1]=WorksheetFunction.Substitute([A1],String(i,&quot;0&quot;),i)\nNext\nEnd Sub\n</code></pre>\n<p>Input is in the cell <code>A1</code> of the active sheet. Output is in the same cell. The only clever bit is that Excel only allows 32,767 characters in a cell and counting down from there is less bytes than counting down from the length of the input.</p>\n"},{"answer_id":255866,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255866#255866","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-x</code></a>, 13 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>q': ÔËnG *GpE\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LXg&amp;code=cSc6INTLbkcgKkdwRQ&amp;input=IkZGRkY6MDAwMCI\" rel=\"nofollow noreferrer\">Try it</a></p>\n<p>Output is an integer. <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LXg&amp;code=cSc6INTLbkcgKkdwRQ&amp;footer=IjB4IitVeCBzRyB1&amp;input=IkZGRkY6MDAwMCI\" rel=\"nofollow noreferrer\">This</a> version includes a footer which translates to the format in the test cases (No modulus, so it outputs <code>0x100000</code> for the last test case).</p>\n<p>Explanation:</p>\n<pre><code>q': ÔËnG *GpE\nq':           # Split input where the character ':' appears\n    Ô         # Reverse the array\n     Ë        # Map:\n      nG      #  Treat the string as a base-16 number\n         *    #  Multiply with\n          GpE #  16 to the power of the current index\n\n-x            # Output the sum of the resulting array\n</code></pre>\n"},{"answer_id":255809,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255809#255809","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 7 bytes</h1>\n<pre><code>Ḥ1,¹ƇƲ¡\n</code></pre>\n<p><a href=\"https://tio.run/##AR4A4f9qZWxsef//4bikMSzCucaHxrLCof/Dh8WS4bmY/zc\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>-2 bytes thanks to caird coinheringaahing (use STDIN to avoid needing the leading <code>0</code>, and a shorter way of filtering the <code>0</code>)</p>\n<pre><code>Ḥ1,¹ƇƲ¡    Main Link (input in STDIN, so argument starts at 0)\n      ¡    repeat N times\nḤ          double the current list\n 1,        pair with 1\n   ¹Ƈ      filter by identity; remove falsy elements (filter out the 0 in the first step)\n</code></pre>\n"},{"answer_id":255864,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255864#255864","body":"<h1><a href=\"https://www.gnu.org/software/bash/\" rel=\"noreferrer\">Bash</a>, 35 bytes</h1>\n<pre><code>IFS=:;read a b;echo $[16*0x$a+0x$b]\n</code></pre>\n<p>Takes input from stdin and outputs to stdout</p>\n<p><a href=\"https://ato.pxeger.com/run?1=m70kKbE4Y8GCpaUlaboWN5U93YJtrayLUhNTFBIVkqxTkzPyFVSiDc20DCpUErWBRFIsRClUx4KVhkBgBSIgAgA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255863,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255863#255863","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 31 bytes</h1>\n<pre><code>*+&lt;4+*o{m:g/\\w+/».&amp;{:16(~$_)}}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPtfS9vGRFsrvzrXKl0/plxb/9BuPbVqK0MzjTqVeM3a2v/FiZUKSirxCrZ2CtVpGkAxvaTE4lQNQzPNWiWFtPwiBRsDILACEQqGQGAFIhTcgAAiBmUZGtj9BwA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p>This is two anonymous functions composed together with the <code>o</code> operator.  The first, <code>* +&lt; 4 + *</code> returns its first argument shifted left four bits (ie, multiplied by 16) plus its second argument.  The second, enclosed by braces, extracts the two hexadecimal substrings (<code>m:g/\\w+/</code>) and parses them into integers (<code>:16(~$_)</code>).</p>\n"},{"answer_id":255862,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255862#255862","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 8 bytes</h1>\n<pre><code>ṁ?IosLig\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv6f@6ip8f/DnY32nvnFPpnp////j1YyNDI2MTUwMDYzMjAwMDExUNJBFwKKGCABEBeswszcwhKmGsQ2QOaAVRkYGRgDTTAwNVCKBQA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255785,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/255785#255785","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-mP</code></a>, 12 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>;Ck%+Ugciv¹ö\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LW1Q&amp;code=O0NrJStVZ2Npdrn2&amp;input=Nw\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>;Ck%+Ugciv¹ö     :Implicit map of each U in the range [0,input)\n;C               :Lowercase alphabet\n  k              :Remove\n   %+            :  Append to &quot;%&quot;\n     Ug          :  Index U into\n       civ       :    &quot;c&quot; prepended with &quot;v&quot;\n          ¹      :End remove (&quot;%v&quot;=/[aeiou]/gi &quot;%c&quot;=/[b-df-hj-np-tv-z]/gi)\n           ö     :Random character\n                 :Implicitly join &amp; output\n</code></pre>\n"},{"answer_id":255819,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255819#255819","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 28 bytes</h1>\n<pre><code>FiR,a{YlAEyPE EiUi=a?Y Hy0}y\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJGaVIsYXtZbEFFeVBFIEVpVWk9YT9ZIEh5MH15IiwiIiwiNyIsIi1wIl0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<pre><code>FiR,a{YlAEyPE EiUi=a?Y Hy0}y\nFiR,a{                    }    Loop through [a, 0]\n      YlAEyPE Ei               Set y (initially &quot;&quot;) to y + 2**i wrapped in a list\n                Ui=a?Y Hy0     Remove the empty string if it is the first iteration\n\n<span class=\"math-container\">```</span>\n</code></pre>\n"},{"answer_id":255859,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255859#255859","body":"<h1><a href=\"http://jdk.java.net/\" rel=\"nofollow noreferrer\">Java (JDK)</a>, <strike>125</strike>131 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;{String v=&quot;aeiouAEIOU&quot;,r=&quot;&quot;;int j=0,p;for(var c:s.toCharArray()){p=v.indexOf(c);r+=p&gt;=0?v.charAt((p&gt;4?5:0)+j++%5):c;}return r;};\n</code></pre>\n<p><a href=\"https://tio.run/##PY9RS8MwEMff@ynOgpDQLTSgL6vtCENlD7KH4ZP4kLXpltolIUmLY@yz1xtTA8f9Lvcj/NPJUc675mvSR2d9hA5nNkTds3YwddTWsJdfKJKk7mUI8Ca1gXOSALhh1@saQpQR22h1A0dckm302uw/PkH6faDoAp6/d55u29mtVdBCOYV5db7NMJapVNoO4nm9eU9nvkzTQhtMVuYzV7TWk1F6qBeBRbs6SC@8lydC6dmVI9OmUd@bltS08FnpqjJfjqy@WpEQVz0sHxc5zbosu3@ki7q4eBUHb8AXl2K6ZtyeQlRHZofIHKaJvSEtk871J5KubKPg1fbtHayht6OC/xsG6wg6QDwo2KkQWUppgZ@@JJdpyrMcS2DxSSALZIHMkTkyR84ZOgwdhg6yQBbIHJkjc8Z/AA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>(Edited to add some lambda boilerplate.)</p>\n"},{"answer_id":255858,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255858#255858","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 16 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>gsub /0+/,&amp;:size\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpclm0km6BUuyCpaUlaboWG9KLS5MU9A209XXUrIozq1IhwlDZBXsNjYxNTA0MjM2MDAwMTEwMuAwMDYwMjIFsA1MDiCIA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255855,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255855#255855","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 39 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:int(x[:4],16)*16+int(x[5:],16)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY31XMSc5NSEhUqrDLzSjQqoq1MYnUMzTS1DM20IQKmVmABqPLsgiKQcEZqhUaahroBEFiBCHVNTU0uFClDILACEZhSbkCAQxdUyhAsBbFywQIIDQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255834,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255834#255834","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, 44 bytes</h1>\n<pre><code>f=\\(n,k=1,`+`=list)`if`(n-1,k+f(n-1,k*2),+k)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGCpaUlaboWN3XSbGM08nSybQ11ErQTbHMyi0s0EzLTEjTydA11srXTILSWkaaOdrYmRM_mNA1DTa40DSMQYQwiTKAyMFMB\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255854,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255854#255854","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 8 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Œgċ”0ȯƊ€\n</code></pre>\n<p>A full program that accepts a string of digit characters and prints the result.</p>\n<p><strong><a href=\"https://tio.run/##y0rNyan8///opPQj3Y8a5hqcWH@s61HTmv///6sbGhmbmBoYGJsZGcCBiYk6AA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n<h3>How?</h3>\n<pre><code>Œgċ”0ȯƊ€ - Main Link: list of characters, S\nŒg       - group runs\n       € - for each group:\n      Ɗ  -   last three links as a monad - f(group):\n   ”0    -     literal '0' character\n  ċ      -     count occurrences\n     ȯ   -     logical OR (group)\n         - implicit, smashing print\n</code></pre>\n"},{"answer_id":255853,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255853#255853","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s> 13 </s> 11 <a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p><sup>Jelly has no built-in standard hex string conversion functions :/</sup></p>\n<pre><code>ØHiⱮ’ṣ-ḅ⁴ḅ⁴\n</code></pre>\n<p>A monadic Link that accepts a list of characters (as defined) and yields an integer.</p>\n<p><strong><a href=\"https://tio.run/##y0rNyan8///wDI/MRxvXPWqY@XDnYt2HO1ofNW6BkP///1c3BAIrEKEOAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n<h3>How?</h3>\n<pre><code>ØHiⱮ’ṣ-ḅ⁴ḅ⁴ - Link: list of characters, S\nØH         - hex-characters -&gt; &quot;0123456789ABCDEF&quot;\n   Ɱ       - map across c in S with:\n  i        -   first 1-indexed index of c in the hex-characters or 0\n    ’      - decrement (vectorises)\n      -    - literal -1\n     ṣ     - split the ØHiⱮ’ result at -1's (this is what ':' will have mapped to)\n       ḅ⁴   - convert from base sixteen (vectorises)\n         ḅ⁴ - convert from base sixteen\n</code></pre>\n"},{"answer_id":255852,"question_id":255850,"link":"https://codegolf.stackexchange.com/questions/255850/8086-segment-address-to-linear/255852#255852","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 53 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:int((s:=x.split(':'))[0],16)*16+int(s[1],16)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY3TXMSc5NSEhUqrDLzSjQ0iq1sK_SKC3IySzTUrdQ1NaMNYnUMzTS1DM20QfLF0YZgPlRzdkERSDQjtUIjTUPdAAisQARQnyYXipQhEFiBCEwpNyDAoQsqZQiWgli5YAGEBgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Returns an integer (ok as per OP). Footer on ATO converts to hexadecimal.</p>\n"},{"answer_id":255851,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255851#255851","body":"<h1><a href=\"https://raku.org/\" rel=\"noreferrer\">Raku</a>, 18 bytes</h1>\n<pre><code>{S:g[0+]=$/.chars}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/OtgqPdpAO9ZWRV8vOSOxqLj2f3FipYKSSryCrZ1CdZqCSnytkkJafpGCjaGRsYmpgYGxmZGBgYGJiYECmoCCARJQMADLmplbWCrAWQYIJlDewMjAGKjPwNTA7j8A\" rel=\"noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255849,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255849#255849","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 23 bytes</h1>\n<pre><code>[1],{[1,2 «*«$_]}...*\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1up4FCsYPs/2jBWpzraUMdI4dBqrUOrVeJja/X09LT@WyvoFSdWKqTlFwHVRccZGsT@BwA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p>This is an expression for the infinite sequence of arrays.  The magic is in the <code>«*«</code> operator, which multiplies each element of an arbitrarily-deeply nested structure by a number.</p>\n"},{"answer_id":255847,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255847#255847","body":"<h1><a href=\"https://github.com/dloscutoff/funstack\" rel=\"nofollow noreferrer\">FunStack</a> alpha, 40 bytes</h1>\n<pre><code>Pair 1 Double over iterate Wrap 1 At Dec\n</code></pre>\n<p>Try it at <a href=\"https://replit.com/@dloscutoff/funstack\" rel=\"nofollow noreferrer\">Replit</a>: pass the input number as a command-line argument and enter the program on stdin.</p>\n<h3>Explanation</h3>\n<p>First, we generate the infinite sequence of such nested lists:</p>\n<pre><code>Pair 1\n</code></pre>\n<p>Given <code>x</code>, turn it into <code>[1, x]</code>.</p>\n<pre><code>Double\n</code></pre>\n<p>Multiply by 2 (applies itemwise over lists).</p>\n<pre><code>over\n</code></pre>\n<p>Given two arity-1 functions, this modifier works the same as <code>compose</code> but is 3 bytes shorter. The composed function is &quot;Multiply the argument by 2 and pair 1 with the result.&quot;</p>\n<pre><code>iterate\n</code></pre>\n<p>Repeatedly apply this function and return the infinite list of results...</p>\n<pre><code>Wrap 1\n</code></pre>\n<p>... starting at <code>[1]</code>.</p>\n<p>The resulting infinite list is a value at the left side of the program, so it gets pushed onto the argument list. Then:</p>\n<pre><code>At\n</code></pre>\n<p>Get the nth element, where n is...</p>\n<pre><code>Dec\n</code></pre>\n<p>... the first program argument, decremented (since indexing is 0-based).</p>\n"},{"answer_id":255846,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255846#255846","body":"<h1><a href=\"https://dart.dev/\" rel=\"nofollow noreferrer\">Dart (2.18.4)</a>, 63 bytes</h1>\n<pre class=\"lang-dart prettyprint-override\"><code>r(s)=&gt;s.replaceAllMapped(RegExp('0+'),(m)=&gt;'${m.end-m.start}');\n</code></pre>\n<pre class=\"lang-dart prettyprint-override\"><code>String replaceZerosWithTheirConsecutiveCounts(String src) {\n  return src.replaceAllMapped(\n    RegExp('0+'),\n    (Match match) =&gt; '${match.end - match.start}',\n  );\n}\n</code></pre>\n<ul>\n<li><a href=\"https://tio.run/##fY/dCoIwGIbPu4odBNuo5NuPVoRBBx120h2MNkJQG1MiEK/dppGYVjt8eN733aeVK5vGkYLG@yJwxqbqYg5pelLWGk3O5np8WIJhgemSZF7C8yoLTK5XWVCUPlxjumvut0SjTCU5oaiaIWRdkpfEEcy4kCGAiDgASAmYojhGL8w9FVIyX/An8iUxCsDg9fbY6fLRerN9GwMwnW/5x19bwH6ZY3GyDRyEvwXCvtPPM8ElC7vSunkC\" rel=\"nofollow noreferrer\">Try it online</a>.</li>\n<li><a href=\"https://github.com/alexrintt/algorithms/tree/master/codegolf/replace-0s-in-a-string-with-their-consecutive-counts/dart-2.18\" rel=\"nofollow noreferrer\">Full source</a>.</li>\n</ul>\n"},{"answer_id":255845,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255845#255845","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 21 bytes</h1>\n<pre><code>!n=[n&lt;2||[1,2*!~-n];]\n</code></pre>\n<p><a href=\"https://tio.run/##LcxBCsIwEAXQfU7xM7hIpILpUpuC5yhdFI0wEsYQIqRQvHq66TvA@/wiL662psVPMvTbNrmuP@v/Reb73FTKoZTVVAuPHFJcnsHQybhqqQM9ZCU/Elml3t8MBgvczV0VgJRZShTD8COORrO1Ksir7Q\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>using <code>√</code> instead of <code>!</code> would save a character, since <code>a√b</code> is parsed as <code>a*√b</code> (which doesn't work for <code>!</code>). But of course the byte count would be higher.</p>\n"},{"answer_id":255844,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255844#255844","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 27 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>!x=replace(x,r&quot;0+&quot;=&gt;length)\n</code></pre>\n<p><a href=\"https://tio.run/##fY9fa4MwFMXf8ymuMoiybtz80W4D@7ZPMcaINesyQioawYd@dxfr7Cptd8lDOOf8Lud@d9Yo1g9D1BeNrq3a6qRfNTHex8XGarfzX@nwuW/AgHHQaFVZ43SbpATCfKx@n5o/JRTQ1tb4xEwRFQT1xl@0qx7Y@1EaM@VSqhvjvHWJKjaRmsAokCEHh8PJjV/7Wm@9ruCujFMS@IE9QuuDvQs7KeNCZogi54goJVLYd77u/MnjwRJSMkr4PxyFGxwl4hzDs6Fj5QVGiVyEj4vy9dPzFF2E/zySXRQbdbwCzV64Jr8Kzcw1iJL1sh1yFOF4zC5PCfWY4JJljP4A\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255842,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255842#255842","body":"<h1><a href=\"https://dart.dev/\" rel=\"nofollow noreferrer\">Dart (2.18.4)</a>, 139 bytes</h1>\n<pre class=\"lang-dart prettyprint-override\"><code>r(s,[j=0,v='aeiouAEIOU',t,i=0])=&gt;[for(var c=(l)=&gt;v[(l?0:5)+j++%5];i&lt;s.length;i++)if(v.contains(t=s[i]))c(t.codeUnitAt(0)&gt;96)else t].join();\n</code></pre>\n<ul>\n<li><a href=\"https://tio.run/##TY1Ba8JAEIXv/RXjoWSXhJCLhTZdi0gpnrzoKeSwmrEZWXdld5IKpb893Vgtwlze8L73NdrzMHgRsuqgiqxXiUZy3fx9udokGWekilqqWbV3XvTaw04JE3NfCfNWvExlekjTx2ld0mvIDdpPbktKU0l70ec7Z1mTDYJVqKiWcic4PhvcWOI5i0LOnp8kmoDAdX5wZIUsh95RA0c9Bvh@ADh5siy8SBaRhA9n9hNYgnE9wv8nhyUDBeAWYYuB80SCUpAs9FigEVmB6XoNC2zoimwY9BWhC1Le29Zt3IungePgBG4Zz/p4Mgi2O27RA3@5m2zdxjmMJWD3R3RhNOCZIuEuhB4JvLh@hl8\" rel=\"nofollow noreferrer\">Try it online</a>.</li>\n<li><a href=\"https://github.com/alexrintt/algorithms/tree/master/codegolf/replace-all-vowels-with-repeated-aeiou/dart-2.18\" rel=\"nofollow noreferrer\">Full source</a>.</li>\n</ul>\n"},{"answer_id":255841,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255841#255841","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 20 bytes</h1>\n<pre><code>⭆⪪⁻⪫⪪ＳＩ⁰_0_×_²_∨№ι0ι\n</code></pre>\n<p><a href=\"https://tio.run/##Lc3BCsIwEATQXyk57UKFterJY08KRaHeQyiiCzEJycbfX1PqaYbHwCxvl5fovOo9cxCYpcVrcgnm5Flg4lALXCOHP1xCqrKtAPtudEWAsDVjyZqWD/48Cxhr@m7YfNVbhjHWdsBNaBVGxLMq7WmgA9GRTqS7r/8B\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>     Ｓ                  Input string\n    ⪪                   Split on\n       ⁰                Literal integer `0`\n      Ｉ                 Cast to string\n   ⪫                    Join with\n        _0_             Literal string `_0_`\n  ⁻                     Remove matching substrings\n            _           Literal string `_`\n           ×            Repeated\n             ²          Twice\n ⪪                      Split on\n              _         Literal string `_`\n⭆                       Map over pieces and join\n                №       Count of\n                  0     Literal string `0`\n                 ι      In current piece\n               ∨        Logical Or\n                   ι    Current piece\n</code></pre>\n<p>String separators are only needed between consecutive strings so the code has been tweaked to avoid them to reduce the byte count. <code>⭆Ｓ∨Ｉι_0_</code> also works instead of <code>⪫⪪ＳＩ⁰_0_</code> for the same byte count.</p>\n"},{"answer_id":255840,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255840#255840","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 70 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>n;f(char*a){*a-48?n=!printf(n?&quot;%d&quot;:&quot;%c&quot;,n?:*a++),*a&amp;&amp;f(a):f(a+!!++n);}\n</code></pre>\n<p><a href=\"https://tio.run/##FcnBCsIwDADQb2lgI2k2iFsV6ZB@S4hUdzCM4W347VUv7/JsfJi15ktFe@oelY6oY7oWv4VtX/1d0Qt0d8jQGQxeclRmGqL2fUWl/INDYHZaPu2lqyMdFeE0zeksMl8mEUlJ4N9f\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255839,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255839#255839","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, 28 bytes</h1>\n<pre><code>0i:&quot;0&quot;=?v{:?n}ol?!\n~1+00.  &gt;\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/3yDTSslAyda@rNrKPq82P8dekavOUNvAQE9Bwe7/f0MjYxNTAwNjMyMDAwMTEwMA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255838,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255838#255838","body":"<h1><a href=\"https://www.haskell.org\" rel=\"nofollow noreferrer\">Haskell</a>, 93 bytes</h1>\n<pre class=\"lang-haskell prettyprint-override\"><code>(%&quot;aAeEiIoOuU&quot;)\n(x:r)%u@(v:t:w)|elem x u=c:r%(w++[v,t])|1&gt;0=x:r%u where c|x&gt;'Z'=v|1&gt;0=t\no%_=o\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PY07CsJAGIR7TzEuLib4QDsJrA9EJJWVjRokxj8kuLoh2U1S5CY2goheydsoKlYD8w3fnO-Rnx1IyseadYIkYd41FJub0WFn8PQszvwJzWJXLcyS2TWrdFKbm7GVO9op7IokHVHCiMBJuVW0Wuu8rT276g974j3lBkVEKSGoymFz1RT5h-ia4luhfiejox-fIJCk8UmjgRBsqvaEuZJhHS6kygn_pgtXI86gI8KOMt1lX83l8s0X\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Prettified:</p>\n<pre class=\"lang-haskell prettyprint-override\"><code>import Data.Char\ng vowels@(vowel:vOWEL:rest) (char:chars)\n  | char `elem` vowels\n    = mappedChar : g rotatedVowels chars\n  | otherwise\n    = char : g vowels chars \n  where\n    rotatedVowels = rest ++ [vowel, vOWEL]\n    mappedChar\n      | isUpper char = vOWEL\n      | otherwise = vowel\ng _ &quot;&quot; = &quot;&quot;\n</code></pre>\n<pre class=\"lang-haskell prettyprint-override\"><code>g &quot;aAeEiIoOuU&quot;\n</code></pre>\n"},{"answer_id":255831,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255831#255831","body":"<h1>JavaScript, 31 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;s.replace(/0+/g,x=&gt;x.length)\n</code></pre>\n<p><a href=\"https://tio.run/##BcHhDkAgEADg16khJ/Evz6LlCrtVKzNvf77vdq9rvl7lGVI@kIPlZremKhZyHsUI3Rj7z26fIkzxOSX7nFomVJSjCGKf9GwWgHnVAGAM7FLyDw\" rel=\"noreferrer\">Try it online!</a></p>\n"},{"answer_id":255769,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255769#255769","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, <s>109 106 104</s> 98 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda s,i=0:s and((c:=s[0])in(v:='uaeioUAEIO')and[v[:5],v[5:]][c&lt;'a'][i:=-~i%5]or c)+f(s[1:],i)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PY4xCsIwGEav8luQJNiWOhRKMIOISCcnp5AhbRMaqElp0oKLF3HponfyNjpU1-_xeN_j1d9C6-w8P8egk-JdadbJa9VI8LFhGfUgbYNxTZnnmSDG4okyNEpl3GV_LM-IfDmfOM1FPPGcCsHrHZJIcENZcjfrXLgBarLR2PMtFbEhS6noB2MD1jg6uEbByXV6BSV0blLwX1IoAxgPoVVQKR_SiCz-7_EH\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<ul>\n<li>-6 thanks to Steffan</li>\n</ul>\n<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, <s>117 116 112</s> 111 bytes</h1>\n<h3>(not valid - this is just for fun)</h3>\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:re.sub('[aeiou]',g,s,0,2)\ni=0\ndef g(c):global i;i=-~i%5;return['uaeio','UAEIO'][c[0]&lt;'a'][i]\nimport re\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PY07CsJAFEX7rOIpyCQwhiAIoqYQEUllZRVTTMyb-GDMhPkINm7EJiC6J3ejoljdw4HDvT7aszvoprvJdHf3Tg4nT63EsawE2KnB2PoyZLlA0r5gvOaWJ3wUBZQmQYUS6nAfTWulS6GAZpQOLzQYzww6b5qc-U_HONsuVtmGFfk-T4o5E2-iIqBjq40Dg7_bSWuocaEM-0tdIay1kj3IQOkTwt_EkDkgC-6AUKJ1cT-Kvn3XffcF\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<ul>\n<li>-4 thanks to Steffan</li>\n<li>-1 thanks to pxeger</li>\n</ul>\n<p>Just wanted to try with a Regex-based approach. The function isn't reusable so it's not a valid solution.</p>\n"},{"answer_id":255824,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255824#255824","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>91</s> 90 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:''.join(l&gt;&quot;0&quot;and l or f'{len([*g])}'for l,g in groupby(x))\nfrom itertools import*\n</code></pre>\n<p><a href=\"https://tio.run/##dcuxDsIgFIXh3ae46QI0xlxLdTDRF1EHmhbEAJcgJm2Mz46MOnjG/8uJS75RkEUfL8UpP4wK5gNjmzvZwN2pwUaFERxQAs1ebgr83JqreDNdi1sbsAFMomccFj4LsdKJPNg8pUzkHmB9pJTbEpMNmWvOtp3sd4hy3yFi3yOrn3/4Y/i1CuUD\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p><em>-1 byte thanks to The Thonnu</em></p>\n<p>I use the <code>itertools</code> module's <code>groupby</code> function to group consecutively.</p>\n"},{"answer_id":255772,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255772#255772","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, <s>94</s> <s>81</s> 79 bytes</h1>\n<p><em>Edit: -2 bytes thanks to pajonk</em></p>\n<pre><code>\\(i){u=match(i,v&lt;-el(strsplit(&quot;aAeEiIoOuU&quot;,&quot;&quot;)),0)\ni[!!u]=v[1:5*2-u[!!u]%%2]\ni}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGa5MrknNSy_PLUnGLbpaUlaboWN_1jNDI1q0ttcxNLkjM0MnXKbHRTczSKS4qKC3IySzSUEh1TXTM98_1LQ5V0lJQ0NXUMNLkyoxUVS2Nty6INrUy1jHRLwVxVVaNYrsxaqLERyYklGkjWaaAY6pyfkqrgnp-TpqjgqZCTX5aqABfRU_AsUcgsVijJSFVISi0u0YNYq6lTnFpgC2RBzF-wAEIDAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Input &amp; output as character vectors.<br />\n(Splitting-up an input string and reassembling one for the output costs about +36 bytes, for comparison with any alternative approaches that directly use strings).</p>\n<p><a href=\"https://ato.pxeger.com/run?1=TY2xCsIwFEX3fMUzU0Krs0sGEZVOLgqCVlrjqwaCCU1SEfFLXOrg5g_5N7ZUxOmee4d77o-yfsmL1FiZM2onnsEX_eF7u2GKX7MoEw3Ekh9KtIyuR5Nkvkxp3E4kCBVNiVqraJGKqoGQCm-CtViytnCibqQSTuYnFlPKSQ4ICgwE8rWsZO7Zn52hZs6XzmrlGR2bPcLM6KIHCWhTIfyWASQelAN_RNih8wPaCjiPHVrRUPdf111-AA\" rel=\"nofollow noreferrer\">Previous 94-byte version</a> (using <code>grep</code> and <code>toupper</code>)</p>\n"},{"answer_id":255832,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255832#255832","body":"<h1>&gt;&lt;&gt;, 55 bytes</h1>\n<pre><code>i:'0'= ?v&gt;:0(?;o\n='0':i&lt;1&lt;\\n$v?\n      \\+1~  /\n</code></pre>\n<p><a href=\"https://mousetail.github.io/Fish/#eyJ0ZXh0IjoiaTonMCc9ID92PjowKD87b1xuPScwJzppPDE8XFxuJHY/XG4gICAgICBcXCsxfiAgL1xuICAgICAgICAgIiwiaW5wdXQiOiIxMDAxIiwic3RhY2siOiIiLCJtb2RlIjoibnVtYmVycyJ9\" rel=\"noreferrer\">Try it</a></p>\n"},{"answer_id":255828,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255828#255828","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 8 bytes</h1>\n<pre><code>(0+)\n$.1\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/P9fw0Bbk0tFz/D/fwNDAyMDYwMDEwNTAwA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a></p>\n<h3>How it works</h3>\n<p>Match runs of zeros (<code>0+</code>), capture each match in a group (<code>( )</code>), replace it with the length of the most recent capture (<code>$.1</code>).</p>\n"},{"answer_id":255830,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255830#255830","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"noreferrer\">Retina 0.8.2</a>, 6 bytes</h1>\n<pre><code>0+\n$.&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/P/fQJtLRU/t/39DI2MTUwMDYzMjAwMDExMDLjQBLgMkwGUAljUzt7DkgrMMEEygvIGRgTFQn4GpAQA\" rel=\"noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation: Unary to decimal conversion.</p>\n"},{"answer_id":255827,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255827#255827","body":"<h1><a href=\"https://github.com/abrudz/QuadRS\" rel=\"noreferrer\">QuadR</a>, 5 bytes</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>0+\n⍵L\n</code></pre>\n<p><a href=\"https://tio.run/##KyxNTCn6/99Am@tR71af//8NjYxNTA0MjM2MDAwMTEwMuNAEuAyQAJcBWNbM3MKSC84yQDCB8gZGBsZAfQamBgA\" rel=\"noreferrer\" title=\"QuadR – Try It Online\">Try it online!</a></p>\n<p><code>0+</code> Replace any runs of zeros</p>\n<p><code>⍵L</code> with the match Length</p>\n"},{"answer_id":255823,"question_id":255822,"link":"https://codegolf.stackexchange.com/questions/255822/replace-0s-in-a-string-with-their-consecutive-counts/255823#255823","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"noreferrer\">Vyxal</a> <code>s</code>, 7 bytes</h1>\n<pre><code>ĠṠƛ0cßL\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJzIiwiIiwixKDhuaDGmzBjw59MIiwiIiwiXCIwMDExMTFcIiJd\" rel=\"noreferrer\">Try it Online!</a></p>\n<h2>Explained</h2>\n<pre><code>ĠṠƛ0cßL\nĠ       # Group on consecutive items\n Ṡ      # join each into a single string\n  ƛ     # To each group:\n   0c   #   if it contains 0:\n     ßL #     push the length of the string\n        # the s flag joins into a single string\n</code></pre>\n<p>An alternate 8 byter that uses regex match replacement</p>\n<pre><code>‛0+$⁽Løṙ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLigJswKyTigb1Mw7jhuZkiLCIiLCJcIjEwMDAwMDAwMVwiIl0=\" rel=\"noreferrer\">Try it Online!</a></p>\n<h2>Explained</h2>\n<pre><code>‛0+$⁽Løṙ\n‛0+       # The string &quot;0+&quot;\n   $      # pushed under the input\n    ⁽L    # a function object that returns the length of its argument\n      øṙ  # replace instances of runs of 0 with their length\n</code></pre>\n"},{"answer_id":255821,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255821#255821","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 44 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>e=lambda n,i=1:[i,e(n-1, i*2)]if n&gt;0 else[i]\n</code></pre>\n<p><a href=\"https://tio.run/##DcrBCsIwEEXRvV/xdp1IFKsbCcQfKV1EnOqDdlpiNiJ@e8yFuzvbp7xWu9SqcU7L/ZFgnrEPA72KHXoP7s9u5AS7naDzWweOdVozCBpysqdKU1cXdmhtmVakM0R8f6HdHRteUhF6qNA5V/8\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255817,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255817#255817","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 20 bytes</h1>\n<pre><code>L+[^2b)?qtQbY[yhb)y0\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/30c7Os4oSdO@sCQwKTK6MiNJs9Lg/39zAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<pre><code>L                      # Function y with input as b\n +                     # Append\n  [^2b)                # List with 2^b as only element\n       ?               # Ternary operator\n        qtQb           # If b is equal to input - 1\n            Y          #  empty list (when condition is true)\n             [yhb)     # Call function y with input b+1 and put inside a list (when condition is false)\n                  y0   # Call function y with input 0\n</code></pre>\n"},{"answer_id":255820,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255820#255820","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 12 bytes</h1>\n<pre><code>:qWP&quot;@XhP]&amp;D\n</code></pre>\n<p>Try it at <a href=\"https://matl.io/?code=%3AqWP%22%40XhP%5D%26D&amp;inputs=7&amp;version=22.7.4\" rel=\"nofollow noreferrer\"><strong>MATL online</strong></a>!</p>\n<pre><code>:       % Implicit input, n. Range [1 2 ... n]\nq       % Subtract 1, element-wise\nW       % Powers of 2, element-wise\nP       % Flip. Gives [2^(n-1) 2^(n-2) ··· 1]\n&quot;       % For each number in that vector\n@       % Push current number\n  Xh    %   Concatenate all stack contents into a cell array\n  P     %   Flip\n]       % End\n&amp;D      % String representation. Implicit display\n</code></pre>\n"},{"answer_id":255816,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255816#255816","body":"<h1><a href=\"https://github.com/molarmanful/sclin\" rel=\"nofollow noreferrer\">sclin</a>, 19 bytes</h1>\n<pre><code>[1]&quot;2*1rev ,&quot;;1- *#\n</code></pre>\n<p><a href=\"https://replit.com/@molarmanful/try-sclin\" rel=\"nofollow noreferrer\">Try it here!</a> Takes the argument from the next line. If outputting as an infinite sequence were allowed, then something like <code>1,,&quot;2*1rev ,&quot;itr</code> would be 16 bytes.</p>\n<p>For testing purposes:</p>\n<pre><code>; n&gt;o\n1,,&quot;2*1rev ,&quot;;1- *#\n7\n</code></pre>\n<h2>Explanation</h2>\n<p>Prettified code:</p>\n<pre><code>[1] ( 2* 1rev , ) ;1- *#\n</code></pre>\n<ul>\n<li><code>[1]</code> starting with 1-length array of 1</li>\n<li><code>(...) ;1- *#</code> repeat (next line) - 1 times...\n<ul>\n<li><code>2* 1rev ,</code> vectorized-multiply by 2 and prepend 1</li>\n</ul>\n</li>\n</ul>\n"},{"answer_id":255815,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255815#255815","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"nofollow noreferrer\">Retina</a>, 36 bytes</h1>\n<pre><code>&quot;$&amp;&quot;{`\\d+\n$.(*2*\n.+\n[1, $&amp;]\n, \\d+]\n]\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxLNPyvquGe8F9JRU2pOiEmRZtLRU9Dy0iLS0@bK9pQR0FFLZZLRwEoHssV@/@/IZcRlzGXCZcplxmXOQA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a> Link includes test cases (because fortunately I was able to use <code>$&amp;</code> instead of <code>$+</code>). Explanation:</p>\n<pre><code>&quot;$&amp;&quot;{`\n</code></pre>\n<p>Repeat the program <code>n</code> times (because <code>n</code> is the input).</p>\n<pre><code>\\d+\n$.(*2*\n</code></pre>\n<p>Double all of the integers.</p>\n<pre><code>.+\n[1, $&amp;]\n</code></pre>\n<p>Wrap the list with <code>1</code> in a sublist.</p>\n<pre><code>, \\d+]\n]\n</code></pre>\n<p>Remove the original input.</p>\n"},{"answer_id":255807,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255807#255807","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>48</s> <s>42</s> 40 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n,c=1:n&gt;1and[c,f(n-1,c+c)]or[c]\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P802JzE3KSVRIU8n2dbQKs/OMDEvJTpZJ00jT9dQJ1k7WTM2vyg6OfZ/QVFmXolGmoahpiYXjG2ExDZGYpsgsU2R2GZIbHNNzf8A\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p><em>-6 bytes thanks to l4m2</em></p>\n<p><em>-2 bytes thanks to The Thonnu</em></p>\n"},{"answer_id":255806,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255806#255806","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, 58 bytes</h1>\n<pre><code>&quot;uoiea&quot;&gt;ir[s&lt;l'ZLsf:l' *+fsp~[p' *sp:l-s&gt;pl&lt;psprlr00]pp&gt;o]\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/1@pND8zNVHJLrMoutgmRz3KpzjNKkddQUs7rbigLroAyCousMrRLbYryLEpKC4oyikyMIgtKLDLj/3/3zk/JVXBPT8nTVHBUyEnvyxVAS6ip@BZopBZrFCSkaqQlFpcogcA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p>I thought this would be a &quot;minor&quot; variation on another answer I coded earlier this week.  I was wrong. :)</p>\n<p>The code uses one stack to hold a list of vowels.  They are rotated each time one of them is used.  And it uses a second stack as a &quot;burndown&quot; list of the input characters (codepoints).  It copies one input character at a time to the vowel stack, searches for it, and if found substitutes the &quot;next&quot; vowel for the top of the burndown stack. Then it switches back to the burndown stack and prints the top codepoint as a character.</p>\n<p>The upper/lowercase logic adds a bunch of code to the program and chaos of temporary stack entries...</p>\n<pre><code>&quot;uoiea&quot;&gt;ir  - setup...\n&quot;uoiea&quot;     - push vowels onto the stack\n       &gt;ir  - switch to a new stack, read STDIN into the stack and reverse\n\n[s&lt;l'ZLsf:l' *+fsp~[...if vowel...]pp&gt;o] - process each char\n[                                      ] - loop until empty\n s&lt;l                                     - copy char to vowel stack\n    'ZL                                  - upper case?\n       s                                 - save result\n        f:                               - pull char forward, duplicate\n          l                              - retrieve upper case 1|0\n           ' *+                          - map to lowercase if appropriate\n               f                         - pull original char forward\n                sp                       - save it and delete\n                  ~                      - search for lower case char\n                   [...if vowel...]      - if it's a vowel, do this block\n                                   pp    - clean up the stack\n                                     &gt;o  - switch stack, print top entry\n\np' *sp:l-s&gt;pl&lt;psprlr00 - code block run if we find a vowel\np                      - delete &quot;if&quot; test var\n ' *                   - calculate &quot;should uppercase&quot; delta\n    sp                 - save and delete from stack\n      :                - duplicate current vowel\n       l               - load &quot;uppercase&quot; delta\n        -              - convert case if called for\n         s&gt;            - save vowel to print, switch stacks\n           pl          - delete original vowel, load replacement\n             &lt;         - switch back to rotating vowel stack\n              p        - clean-up stack\n               sprlr   - move vowel on top of stack to the bottom\n                    00 - push entries on stack to match non-vowel state\n</code></pre>\n"},{"answer_id":255814,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255814#255814","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 14 bytes</h1>\n<pre><code>ＦＮ≔Φ⟦¹⊗υ⟧κυ⭆¹υ\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z8tv0hBwzOvoLTErzQ3KbVIQ1NTwbG4ODM9T8MtM6cEKBBtqKPgkl@alJOaolGqGaujkK2po1Cqac0VUJSZV6IRXAKk0n0TCzQMQcKa1v//m/7XLcsBAA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>ＦＮ\n</code></pre>\n<p>Repeat <code>n</code> times...</p>\n<pre><code>≔Φ⟦¹⊗υ⟧κυ\n</code></pre>\n<p>... double the predefined empty list and prepend a <code>1</code> (but on the first pass filter out the list as it is empty).</p>\n<pre><code>⭆¹υ\n</code></pre>\n<p>Pretty-print the final list.</p>\n"},{"answer_id":255773,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255773#255773","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, <strike>37</strike> 21 bytes</h1>\n<p><em>- 14 bytes of mostly DLosc, and jezza_99 getting ninja'd</em><br />\n<em>- 2 bytes thanks to jezza_99</em></p>\n<pre><code>aR-XV{YVW@UvaNz?yUCy}\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJhUi1YVntZVldAVXZhTno/eVVDeX0iLCIiLCJcIkNvZGUgR29sZiEgSSBsb3ZlIENvZGUgR29sZi4gSXQgaXMgdGhlIGJlc3QuXCIiLCIiXQ==\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>I'm bad at golfing in pip lol.</p>\n<pre><code>aR-XV{YVW@UvaNz?yUCy}\naR-XV{                }      Replace (case-insensitive) vowels with ...\n      YVW@Uv                 Set y to the (vth*1) vowel\n            aNz?yUCy         Copy case to y                     \n    \n</code></pre>\n"},{"answer_id":255813,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255813#255813","body":"<h1><a href=\"https://factorcode.org/\" rel=\"noreferrer\">Factor</a> + <code>math.polynomials</code>, 47 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 2 powers reverse 1 cut [ swap 2array ] each ]\n</code></pre>\n<p><a href=\"https://tio.run/##HcsxDsIwDAXQnVP8E1SiYoIDIBYWxFR1sCKjVriJsd1WOX1ATG96L0pRrD0ft/v1jIVi6rRIzWWZSRzOn5VzYsebLbOAzKg61Diiqs05cDmc2oAeWnY2h/H2g3FEWgMDfCdF/38YwZQmjC2RCLr2BQ\" rel=\"noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<pre><code>        ! 4\n2       ! 4 2\npowers  ! { 1 2 4 8 }\nreverse ! { 8 4 2 1 }\n1       ! { 8 4 2 1 } 1\ncut     ! { 8 } { 4 2 1 }\n        ! { 8 } 4              &lt;&lt;first iteration of each&gt;&gt;\nswap    ! 4 { 8 }\n2array  ! { 4 { 8 } }\n        ! { 4 { 8 } } 2        &lt;&lt;second iteration&gt;&gt;\nswap    ! 2 { 4 { 8 } }\n2array  ! { 2 { 4 { 8 } } }\n        ! { 2 { 4 { 8 } } } 1  &lt;&lt;third&gt;&gt;\nswap    ! 1 { 2 { 4 { 8 } } }\n2array  ! { 1 { 2 { 4 { 8 } } } }\n</code></pre>\n"},{"answer_id":255810,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255810#255810","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 31 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=(x,i=1)=&gt;--x?[i,f(x,i*2)]:[i]\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/f8/zVajQifT1lDT1k5Xt8I@OlMnDSSgZaQZaxWdGfu/oCgzr8Q2OT@vOD8nVS8nP50LLKKRpmGoqQlnGyGxjZHYJkhsUyS2GRLbXFPzPwA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255808,"question_id":255804,"link":"https://codegolf.stackexchange.com/questions/255804/create-n-sublists-with-the-powers-of-two-1-2-4-8-16/255808#255808","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"noreferrer\">&gt;&lt;&gt;</a>, 47 bytes</h1>\n<pre><code>1i:?v~~l?^;\n/$-1/\n/on$o&quot;[,&quot;:\n\\2*$:}10./&quot;]&quot;o~60.\n</code></pre>\n<p><a href=\"https://mousetail.github.io/Fish/#eyJ0ZXh0IjoiMWk6P3Z+fmw/Xjtcbi8kLTEvXG4vb24kb1wiWyxcIjpcblxcMiokOn0xMC4vXCJdXCJvfjYwLiIsImlucHV0IjoiXHUwMDAzIiwic3RhY2siOiIiLCJtb2RlIjoibnVtYmVycyJ9\" rel=\"noreferrer\">Try it!</a></p>\n<p><a href=\"https://i.stack.imgur.com/jmOc3.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/jmOc3.png\" alt=\"enter image description here\" /></a></p>\n<p>Generates trailing commas at the end of lists, some languages allow that so that should be OK. Takes input as a char code.</p>\n<p>Uses the length of the stack to keep track of how many <code>]</code> to generate at the end.</p>\n"},{"answer_id":255802,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255802#255802","body":"<h1><a href=\"https://factorcode.org\" rel=\"nofollow noreferrer\">Factor</a>, <s>87</s> 86 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ EBNF[=[ r=([aeiouAEIOU]=&gt;[[96 &gt; 0 -32 ? 0 inc 0 get 1 - 5 mod &quot;aeiou&quot;nth +]]|.)*]=]]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PY_LTsMwEEX3-Ypbr3goEQ-BeCjlpVJlUxZQNpYXTjppLGI7xA6w4DvYdJMNfAL_0r_BJQJpNFf3zNyRZvVVysLbtl9_zO-z2fQMRmpyjSzIQUtfwdFzR2Zjn6g1VKOhZUK5KaEszqOI3dgFYWrrcoQMtX0h_JMEmYdy8BUhJ-cTFrGHKoBQEj6QEf48vUnd1ATT6Zxa-Fe72WafnS_jk_Ujx-R6dstTjjbd4pKU7a4m2d1cpGPOT48xxh7iwwNcBFWmCH1JHvuIcQRtF2C_EWbCR7tCvCfbOyIVYrj-zdG0yngIFFY31hF8qy6HYd8P-gM\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<ul>\n<li><code>[ ... ]</code> Define a quotation, or anonymous function, that takes a string as input from the data stack and leaves a string as output on the data stack.</li>\n<li><code>EBNF[=[ ... ]=]</code> Define an anonymous EBNF parser that automatically runs on an input and produces an output.</li>\n<li><code>r=</code> Name the topmost EBNF rule. There has to be at least one rule, so here it is.</li>\n<li><code>(...|.)*</code> Match any number (<code>*</code>) of ... or (<code>|</code>) anything (<code>.</code>). The <code>.</code> matches consonants which will remain the same.</li>\n<li><code>[aeiouAEIOU]</code> Match any vowel.</li>\n<li><code>=&gt;[[...]]</code> An EBNF action. The code inside the double brackets will run on each token before being added to the parse tree.</li>\n<li><code>96 &gt; 0 -32 ?</code> Is the vowel we matched lowercase? Push <code>0</code> on the data stack if so; otherwise, push <code>-32</code> on the data stack.</li>\n<li><code>0 inc</code> Increment the value stored at <code>0</code>. In Factor, any value (such as <code>0</code>) can be used as a variable (key) to store a value in an implicit hierarchy of hash tables. If <code>0</code> contains <code>f</code>, which all uninitialized variables do by default, <code>inc</code> will cause the value to become <code>1</code>.</li>\n<li><code>0 get</code> Get the value stored at <code>0</code>.</li>\n<li><code>1 -</code> Subtract one. We do this because it's shorter than initializing <code>0</code> to <code>0</code>.</li>\n<li><code>5 mod</code> Modulo five.</li>\n<li><code>&quot;aeiou&quot;nth</code> Get the nth letter in <code>&quot;aeiou&quot;</code>.</li>\n<li><code>+</code> Add this letter to the <code>0</code> or <code>-32</code> from earlier. This is what capitalizes the letter or keeps it lowercase.</li>\n</ul>\n"},{"answer_id":255800,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255800#255800","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 23 bytes</h1>\n<pre><code>ØciⱮðḟ0ØėṁŒs&gt;5$}¡&quot;Ɗż@œp\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8///wjOTMRxvXHd7wcMd8g8Mzjkx/uLPx6KRiO1OV2kMLlY51Hd3jcHRywf/D7Y@a1kT@/6/knJ@SquCen5OmqOCpkJNflqoAF9FT8CxRyCxWKMlIVUhKLS7RU9JRUArJAIoAUaJCCVBIUQHGT61IzC3ISVXIK81NSi1SKCnP11MCAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Jelly isn't great at <a href=\"/questions/tagged/string\" class=\"post-tag\" title=\"show questions tagged &#39;string&#39;\" aria-label=\"show questions tagged &#39;string&#39;\" rel=\"tag\" aria-labelledby=\"string-container\">string</a> challenges. Full program, as we take advantage of Jelly's smash printing.</p>\n<h2>How it works</h2>\n<pre><code>ØciⱮðḟ0ØėṁŒs&gt;5$}¡&quot;Ɗż@œp - Take a string S on the left\nØc                      - Yield &quot;AEIOUaeiou&quot;\n   Ɱ                    - For each character C in S:\n  i                     -   Get the index of C in &quot;AEIOUaeiou&quot;, or 0 if not found\n    ð                   - Begin new dyadic chain, with vowel indices V on the left and S on the right\n     ḟ0                 - Remove zeros from V, call that V'\n                  Ɗ     - Group the previous 3 links into a monad f(V'):\n       Øė               -   Uppercase vowels; &quot;AEIOU&quot;\n         ṁ              -   Repeat to the same length as V'\n                 &quot;      -   For each pair (v, i) with v a vowel and i an index in V':\n                ¡       -     Repeat:\n              $         -       Iteration count:\n               }        -         Is i...\n            &gt;5          -         ...greater than 5?\n          Œs            -       Action: Swapcase\n                     œp - Partition S at the the indices in V\n                   ż@   - Zip the partition and the vowels, with reversed @rguments\n</code></pre>\n"},{"answer_id":255799,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255799#255799","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 33 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/[aeiou]/$&amp;&amp;a|(&lt;A E I O&gt;||U)/ige\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9r6xYAKQVdAv@F@tHJ6Zm5pfG6quoqSXWaNg4KrgqeCr429XUhGrqZ6an/v@flg8Caf4gAAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255778,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255778#255778","body":"<h1><a href=\"http://clang.llvm.org/\" rel=\"noreferrer\">C (clang)</a>, 65 bytes</h1>\n<pre class=\"lang-c prettyprint-override\"><code>i;f(*s){for(i=0;*s++^=2130466&gt;&gt;*s&amp;*s&gt;64?i*5^5%++i^*s&amp;30:0;i%=5);}\n</code></pre>\n<p><a href=\"https://tio.run/##PczLCoJAGIbhfVfxN2DMIcXysGjQFi0i6A4iwcyxgUnDf6iFeOtNRtDu44H3q/zKlG3jnJaKcmSD6nqqs1ByFKLI1qsojNM0zzkuOOZpvNU8KRJPCF1MFIWbUGovS5gc3b3ULWUwzAB0awFtfzpDBkey66417Duj5nAA0z1r@EsABwsawd5quNRoAyKnXNEpZt/16KcrRYlnkCzhp6N7V8qUDTr/9QE\" rel=\"noreferrer\" title=\"C (clang) – Try It Online\">Try it online!</a></p>\n<h2>How?</h2>\n<h3>Detecting vowels</h3>\n<p>We determine whether the current character at <code>*s</code> is a vowel with:</p>\n<pre class=\"lang-c prettyprint-override\"><code>2130466 &gt;&gt; *s &amp; *s &gt; 64\n</code></pre>\n<p>The value <span class=\"math-container\">\\$2130466\\$</span> is a bitmask describing the positions of vowels:</p>\n<pre><code>000001000001000001000100010\n     ^     ^     ^   ^   ^\nzyxwvutsrqponmlkjihgfedcba\n</code></pre>\n<p>The shift amount is interpreted modulo 32 (to my knowledge, this is true for at least Intel and ARM processors). This means that we just have to make sure that the character is a letter (with <code>*s &gt; 64</code>) and can use the same expression for lower and upper case.</p>\n<h3>Turning them into different vowels</h3>\n<p>An interesting thing about vowels is that all their ASCII codes are odd:</p>\n<pre><code>A |  65 | 1000001        a |  97 | 1100001\nE |  69 | 1000101        e | 101 | 1100101\nI |  73 | 1001001        i | 105 | 1101001\nO |  79 | 1001111        o | 111 | 1101111\nU |  85 | 1010101        u | 117 | 1110101\n          ||    |\n          ||    '--&gt; always 1\n          |'-------&gt; 'case' bit\n          '--------&gt; always 1\n</code></pre>\n<p>To turn a vowel of a given case into another vowel with the same case, only bits #1 to #4 (0-indexed) need to be modified. This can be represented with the bitmask <span class=\"math-container\">\\$00011110_2=30_{10}\\$</span>.</p>\n<p>Hence a possible formula:</p>\n<pre><code>new_vowel = old_vowel XOR (x XOR (old_vowel AND 30))\n</code></pre>\n<p>where <span class=\"math-container\">\\$x\\in\\{0,4,8,14,20\\}\\$</span> (for A,E,I,O,U respectively).</p>\n<p>Given <span class=\"math-container\">\\$i\\in[0\\dots4]\\$</span>, we get <span class=\"math-container\">\\$x_i\\$</span> with:</p>\n<p><span class=\"math-container\">$$x_i=(i\\times 5)\\operatorname{xor}(5 \\bmod (i+1))$$</span></p>\n<div class=\"s-table-container\">\n<table class=\"s-table\">\n<thead>\n<tr>\n<th style=\"text-align: center;\">i</th>\n<th style=\"text-align: center;\">i * 5</th>\n<th style=\"text-align: center;\">5 mod (i+1)</th>\n<th style=\"text-align: center;\">xor</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">0</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">5</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">4</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">10</td>\n<td style=\"text-align: center;\">2</td>\n<td style=\"text-align: center;\">8</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">3</td>\n<td style=\"text-align: center;\">15</td>\n<td style=\"text-align: center;\">1</td>\n<td style=\"text-align: center;\">14</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\">4</td>\n<td style=\"text-align: center;\">20</td>\n<td style=\"text-align: center;\">0</td>\n<td style=\"text-align: center;\">20</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>As C code, this gives:</p>\n<pre class=\"lang-c prettyprint-override\"><code>*s ^= i * 5 ^ 5 % ++i ^ *s &amp; 30\n</code></pre>\n<p>which, conveniently, is incrementing <span class=\"math-container\">\\$i\\$</span> at the same time.</p>\n<h3>Putting everything together</h3>\n<pre class=\"lang-c prettyprint-override\"><code>i;                  // i is a counter for vowel replacement\nf(*s) {             // s is the input string\n  for(              // main loop:\n    i = 0;          //   start with i = 0\n    *s++ ^=         //   update the character *s:\n      2130466 &gt;&gt; *s //     if this looks like a vowel\n      &amp; *s &gt; 64 ?   //     and really is a letter:\n        i * 5 ^     //       turn it into a different vowel\n        5 % ++i ^   //       and increment i afterwards\n        *s &amp; 30     //\n      :             //     else:\n        0;          //       leave it unchanged\n                    //   (NB: we stop when the result is NUL)\n    i %= 5          //   make sure to keep i in [0..4]\n  );                // end of loop\n}                   //\n</code></pre>\n"},{"answer_id":255788,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255788#255788","body":"<h1><a href=\"https://raku.org/\" rel=\"noreferrer\">Raku</a>, 44 bytes</h1>\n<pre><code>{$!=0;S:g:ii[&lt;[aeiou]&gt;]=&lt;a e i o u&gt;[$!++%*]}\n</code></pre>\n<p><a href=\"https://tio.run/##PchBC4IwHIbxr/JOrEGGdOpgzkuH8Fw3EZn0Xw5mE52ViJ99eSl4Ls@vo94cfTthqyD8HDJxOF2TR6J1kRaStB3LrBSpBEHDYsyKkEXRZlcufpATgrCCyDArhNUSQNke/GzvhIs1iiGHsS/CX2LkDnqAawg1DS7me/Bbs8qahFuJ4ff0kW1nCM@xramHe9uY@y8\" rel=\"noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p>Most of the magic here is in the <code>samecase</code> flag on the substitution, whose short form is <code>ii</code>.  It makes the match case-insensitive, and furthermore carries the case information forward into the substituted text.</p>\n"},{"answer_id":255784,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255784#255784","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 25 bytes</h1>\n<pre><code>sm?}r0dK&quot;uaeio&quot;r@K=hZrId1\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/vzjXvrbIIMVbqTQxNTNfqcjB2zYjqsgzxfD/fyXn/JRUBff8nDRFBU@FnPyyVAW4iJ6CZ4lCZrFCSUaqQlJqcYmeEgA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>sm?}r0dK&quot;uaeio&quot;r@K=hZrId1dQ    # implicitly add dQ to the end\n                               # implicitly assign Q = eval(input())\n       K&quot;uaeio&quot;                # assign K to &quot;uaeio&quot;\ns                              # sum of\n m                        Q    # map lambda d over Q\n  ?}r0dK                       # ternary, if lowercase(d) in K:\n               r     rId1      #   map case to d of\n                @K             #   (looping) index K at\n                  =hZ          #   increment Z, and assign it to the increment\n                         d     # else: d\n</code></pre>\n"},{"answer_id":255779,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255779#255779","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"noreferrer\">Japt</a> v2.0a0, 21 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"noreferrer\">bytes</a></h1>\n<pre><code>r\\v@T°g`aeiŒ`c^H*XèXu\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=2.0a0&amp;code=clx2QFSwZ2BhZWmMYGNeSCpY6Fh1&amp;input=IkNvZGUgR29sZiEgSSBsb3ZlIENvZGUgR29sZi4gSXQgaXMgdGhlIGJlc3QuIg\" rel=\"noreferrer\">Try it</a></p>\n<pre><code>r\\v@T°g`aei`c^H*XèXu     :Implicit input of string\nr                         :Replace\n \\v                       :RegEx /[aeiou]/gi\n   @                      :Pass each match X through the following function\n    T°                    :  Postfix increment T (initially 0)\n      g                   :  Index into\n       `aei`             :    Compressed string &quot;aeiou&quot;\n             c            :    Map charcodes\n              ^           :      Bitwise XOR with\n               H*         :      32 multiplied by\n                 Xè       :      Count the occurrences in X of\n                   Xu     :        X uppercased\n</code></pre>\n"},{"answer_id":255777,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255777#255777","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 28 bytes</h1>\n<pre><code>≔uaeioθ⭆Ｓ⎇№θ↧ι§⎇№αι↥θθＬ⊞Ｏυιι\n</code></pre>\n<p><a href=\"https://tio.run/##VY3BCsIwDIbvPkXcKYW5F9hp7CAFxYH6AHWLW2G0W5tOffraoQheEvJ/X5J2UK61aoyx8l73BrOgSNssh1mUm8Zpw3jm1PqjmlCaKfBnRJHDhZxR7oW1DUmbczjYB7lWeUItEq9Ymo6e@O@pHHSC12n6urNYv6VtMj0P2AQ/nBJTbB2GVV5vrbWMsbYdwd6O9y1IGO1C8EsKkAzaAw8EN/JcbOJuGd8\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>≔uaeioθ\n</code></pre>\n<p>Get the vowels into a string to reduce repetition, but start with <code>u</code> because they need to be 1-indexed.</p>\n<pre><code>⭆Ｓ⎇№θ↧ι§⎇№αι↥θθＬ⊞Ｏυιι\n</code></pre>\n<p>Loop over the input characters, replacing letters whose lowercase can be found in the string of vowels with letters cyclically chosen from the string or its uppercase according to the number of matches so far.</p>\n"},{"answer_id":255774,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255774#255774","body":"<h1>JavaScript (ES6), 59 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;s.replace(/[aeiou]/gi,c=&gt;&quot;aAeEiIoOuU&quot;[i++%5*2|c&lt;{}],i=0)\n</code></pre>\n<p><a href=\"https://tio.run/##XYzBCoJAFEX3fcVzINA0jaBdChERrtrUSlxM01MnRp84owXVt0@2qEVwN/dyzr3ygWvRydbMG7qgLWKr40SHHbaKC3SjjKOkPo9KGYg4YXyDO5nSoT@xTPr@dDVbPsX68coDGS88K6jRpDBUVLqFy7bjJexJFQ6koGhA@C0hpAakBlMhnFGbkHne5E8/ViMwhoMZCQe@He@8bhVC09dn7MDc6GPbNw\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255771,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/255771#255771","body":"<h1><a href=\"https://zsh.sourceforge.io/\" rel=\"nofollow noreferrer\">Zsh</a> <code>--braceccl</code>, 67 bytes</h1>\n<p><a href=\"https://tio.run/##FcWxDkAwFAXQ3VfcwcDwEo3B4md4WiXSNtoaVL@9GE7O7XXxMlgXMJ8TS@ajUk2bitdRgUwtMDaStUWaeVGr3sk4ChfdOU1yszE/p0cH0f7T2j0cA4hBtSi5Uug/w0cM5QU\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre class=\"lang-zsh prettyprint-override\"><code>shuf -n$1 &lt;(echo {bcdfghj-np-tv-z}{aeiou}|rs 0 1)|rs -g0|cut -c -$1\n</code></pre>\n<p>Similar to the <a href=\"https://codegolf.stackexchange.com/a/255756/15940\">pronounceable word</a> solution.</p>\n"},{"answer_id":255768,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255768#255768","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>130</s> <s>122</s> 120 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>p=print\nv='aeiou'\nn=0\nfor i in input():\n if i.lower()in v:p(end=[v[n],v[n].upper()][i.isupper()]);n=-~n%5\n else:p(end=i)\n</code></pre>\n<p><a href=\"https://tio.run/##PYvBCsIwEETv@Yr1IG1AgyBelJw8SL@h9KB0SxfC7tKkES/@emxBhWFg3mP0lUbhYynqdSJOJvvqjiRzZdgfzCATEBAv0TnV9myABiAX5IlTbReRz1oj977NLXe7tdysusquJUfxN@yF/f7N25MBDBG/L7KlXKVHuEkYNtBAkIzwJw6aBBQhjQgPjMl9AA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p><em>-8 bytes thanks to myself</em></p>\n<p><em>-2 bytes thanks to The Thonnu</em></p>\n"},{"answer_id":255766,"question_id":255765,"link":"https://codegolf.stackexchange.com/questions/255765/replace-all-vowels-with-repeated-aeiou/255766#255766","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"noreferrer\">Vyxal</a>, 11 bytes</h1>\n<pre><code>⟑A[kv¥i$•&amp;›\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLin5FBW2t2wqVpJOKAoibigLoiLCIiLCJUaGlzIGlzIGEgdGVzdCEgVGhpcyBpcyBleGFtcGxlIG51bWJlciB0d28uIl0=\" rel=\"noreferrer\">Try it Online!</a></p>\n<p>If I had a nickel for every time I'd answered a vowel-related challenge with an 11 byte Vyxal answer in the last 2 weeks, I'd have 2 nickels, which isn't a lot but it's weird that it's happened twice. Outputs as a list of characters (add the <code>s</code> flag if you want a string object).</p>\n<h2>Explained</h2>\n<pre><code>⟑A[kv¥i$•&amp;›\n⟑           # To each character:\n A[         #  if it is a vowel:\n   kv¥i     #    get the (register)th item of the string &quot;aeiou&quot; - wraps around if the register &gt; 5\n       $•   #    and give it the same case of the current character\n         &amp;› #    increment the register to get the next vowel\n</code></pre>\n"},{"answer_id":255741,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/255741#255741","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, <s>36</s> 35 bytes</h1>\n<pre><code>000\\&amp;l3-,:{:@)?$&amp;0(?n1[!\n&quot;(?\\+:i:&quot;!\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/38DAIEYtx1hXx6raykHTXkXNQMM@zzBakUtJwz5G2yrTSknx///EpGSF5KREheTkZAA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n<p>Words are separated by spaces (or characters less than space like newline). This uses the length of the stack rather than a counter to get the length of the word.</p>\n"},{"answer_id":255762,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255762#255762","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 45 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>e=lambda n:sum([int(x)for x in str(n)[1::2]])\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P9U2JzE3KSVRIc@quDRXIzozr0SjQjMtv0ihQiEzT6G4pEgjTzPa0MrKKDZW839BEUg@VcPUxMLS0NTYwlBTkwsmZmiAwgFCZFlsOizBAEnAyNDE3MTC2MzEHEMVWOF/AA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":254358,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254358#254358","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, <s>65</s> <s>45</s> 44 40 bytes</h1>\n<pre><code>000i:&quot;!&quot;(?v+$1+$20.\n$~$0(?n00.&gt;@$,:{:@(?\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/38DAINNKSVFJw75MW8VQW8XIQI9LpU7FQMM@z8BAz85BRceq2spBw/7//4zUnJx8haTKVIXy/KKcFAA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n<p>Takes input as a space separated string.</p>\n"},{"answer_id":255720,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255720#255720","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, <s>8</s> 6 bytes</h1>\n<pre><code>ġ₂z₁t+\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r//8jCR01NVY@aGku0//83NbGwNDQ1tjD8HwUA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<p><em>-2 bytes thanks to @DLosc</em>.</p>\n<h3>Explanation</h3>\n<pre><code>ġ₂         Group consecutive digits into sublists of 2 elements\n  z₁       Zip\n     t     Tail\n       +   Sum\n</code></pre>\n"},{"answer_id":255748,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255748#255748","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/Acc!!\" rel=\"nofollow noreferrer\"><em>Acc!!</em></a>, 176 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>48\nCount i while _%60/48 {\n_+_%60*59-2880+0*N+N\n}\n_/60\nCount d while _/10^d {\nCount i while 9/(_/10^d)*(d-i+1) {\nWrite _/10^(d-i)%10+48\n}\n}\n_+1\nCount z while 1/_ {\nWrite 48\n2\n}\n</code></pre>\n<p><a href=\"https://tio.run/##VY7BCsIwEETv@YpcCk2Wkt2aluTsvVdvBtsIBkRBKoKSb48JRsHbMjPvsYdlmeeUtGHb6/2y8sAfp3A@cteMqLThL@ag3HKwXW8MAsoJJhaZUyNWxn8ZRbj3GflXWdV@GiFb3wUgkSe7W1grUULREEJ@IhYzUDU8q4GU@yF51LOY0qCNpWFj6A0\" rel=\"nofollow noreferrer\" title=\"Acc!! – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>As often happens with <em>Acc!!</em>, the majority of the code is taken up by decimal I/O.</p>\n<pre class=\"lang-python prettyprint-override\"><code>### INPUT AND COMPUTATION ###\n# Load a spurious 0 digit into the accumulator\n48\n# Loop while we just read a digit character and not a newline/eof \nCount i while _%60/48 {\n  # Add the digit represented by the character code in _%60 to the running tally in _/60\n  _-_%60+60*(_%60-48)\n  # Read the next character and do nothing with it\n  _+0*N\n  # Read the next character and store it in _%60\n  _+N\n}\n# Set the accumulator to the value in _/60\n_/60\n\n### OUTPUT ###\n# Figure out how many digits the accumulator value has\nCount d while _/10^d {\n  # Once we're on the leftmost digit, loop a number of times equal to the number of digits\n  Count i while 9/(_/10^d)*(d-i+1) {\n    # Output each digit from most significant to least significant\n    Write _/10^(d-i)%10+48\n  }\n}\n# But if the value was zero, this didn't output anything, so...\n# Convert 0 -&gt; 1, other values to numbers greater than 1\n_+1\n# Loop while accumulator is 1\nCount z while 1/_ {\n  # Write a 0 character\n  Write 48\n  # Set accumulator to 2 to break out of the loop\n  2\n}\n</code></pre>\n"},{"answer_id":255747,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/255747#255747","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 36 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:re.sub('.',' ',x)\nimport re\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUaHCqihVr7g0SUNdT11HXUFdp0KTKzO3IL@oRKEo9X9BUWZeiUaahrpHak5OvkJ4flFOiqK6puZ/AA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255678,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255678#255678","body":"<h1><a href=\"https://www.microsoft.com/en-us/microsoft-365/excel\" rel=\"nofollow noreferrer\">Excel</a>, <sup><s>39</s></sup> 32 bytes</h1>\n<ul>\n<li>-7 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/38183/engineer-toast\">Engineer Toast</a>!</li>\n</ul>\n\n<pre class=\"lang-c prettyprint-override\"><code>=SUM(--(0&amp;MID(A1,2*ROW(A:A),1)))\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/CNTII.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/CNTII.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":255651,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255651#255651","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <sup><s>39</s></sup> 32 bytes</h1>\n<p>-7 (pxeger suggested lambda)</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sum(map(int,`n`[1::2]))\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/qfaBvzPycxNyklUSHPqrg0VyM3sUAjM69EJyEvIdrQysooVlPzf0ERUEQhUcPQQJMLwQZCQwTf1MTC0tDU2AJJyBIMEHwjQxNzEwtjMxNzdDUgZf8B\" rel=\"nofollow noreferrer\">TIO</a></p>\n<p><sub>EDIT: new test cases</sub></p>\n"},{"answer_id":255731,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255731#255731","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$3\\log_{256}(96)\\approx\\$</span> 2.469 bytes</h1>\n<pre><code>S]y\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJTXXkiLCJbNSw0LDgsOSwxLDUsMyw4LDFdIl0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Port of Vyxal.</p>\n<pre><code>S]y\n    # Uninterleave\n ]  # Get last\nS   # Sum\n</code></pre>\n<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$6\\log_{256}(96)\\approx\\$</span> 4.939 bytes</h1>\n<pre><code>S-n2'0\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJTLW4yJzAiLCJbNSw0LDgsOSwxLDUsMyw4LDFdIl0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>My original answer before seeing Vyxal.</p>\n<pre><code>S-n2'0 # Input as a digit list\n  n    # For every\n   2   # Second item\n    '  # Replace\n     0 # With a 0\n -     # Subtract this from the original list\nS      # Sum\n</code></pre>\n"},{"answer_id":255667,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255667#255667","body":"<h1><a href=\"https://github.com/molarmanful/sclin\" rel=\"nofollow noreferrer\">sclin</a>, 13 bytes</h1>\n<pre><code>2/`1.: map +/\n</code></pre>\n<p><a href=\"https://replit.com/@molarmanful/try-sclin\" rel=\"nofollow noreferrer\">Try it here!</a></p>\n<p>For testing purposes:</p>\n<pre><code>&quot;548915381&quot; ; n&gt;o\n2/`1.: map +/\n</code></pre>\n<h2>Explanation</h2>\n<p>Prettified code:</p>\n<pre><code>2/` 1.: map +/\n</code></pre>\n<ul>\n<li><code>2/`</code> chunk into pairs</li>\n<li><code>1.: map</code> get second element of each pair</li>\n<li><code>+/</code> sum</li>\n</ul>\n"},{"answer_id":255684,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255684#255684","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, <strike>10</strike> 7 bytes</h1>\n<pre><code>$+@SUWa\n</code></pre>\n<p>First pip answer, so don't sue me plz.</p>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCIkK0BTVVdhIiwiIiwiNTQ4OTE1MzgxIiwiIl0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p><strong>Explanation</strong></p>\n<pre><code>$+@SUWa\n  @SUWa  Uninterweave a, take the second item of the two &quot;every second element&quot; lists \n$+       Sum the string\n\n</code></pre>\n"},{"answer_id":255652,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255652#255652","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a>, 33 bytes</h1>\n<pre class=\"lang-bash prettyprint-override\"><code>for _ c (`fold -1`)let t+=c;&lt;&lt;&lt;$t\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m724qjhjwYKlpSVpuhY3FdPyixTiFZIVNBLS8nNSFHQNEzRzUksUSrRtk61tbGxUSiAKoeoXrDIyNDE3sTA2MzGHiAAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>-3 bytes thanks to roblogic</p>\n<p>Inputs as a string, because there is no way to input as a number in Zsh.</p>\n"},{"answer_id":255713,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/255713#255713","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>71</s> 70 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda l:max(map(lambda s:mean(map(ord,s)),l))\nfrom statistics import*\n</code></pre>\n<p><a href=\"https://tio.run/##XYzNDoIwEITvPgXGHwrh5g1j4nugJqU/UGm7ta0CvjyyxsSE08zOfLNujC3YwyRPl0lTU3Oa6NLQgRjqyC8IpRHUfhPwvAhZVugsW0kPJgmRRhWiYiFRxoGP@eS8spFIUqWt0BrSIkl78JqjqUeRXuftn2HABTYNaIk6P2QdGjGwltpmya/PG2y3uxvKPieL/tELH8enAlchQAOXTXvv9BGv98BetTUFbqYP\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p><a href=\"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/255713#comment566416_255713\"><em>-1 thanks to The Thonnu</em></a></p>\n"},{"answer_id":255707,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255707#255707","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 5 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>2ι`SO\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/f6NzOhGD///9NTSwsDU2NLQwB\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre class=\"lang-python prettyprint-override\"><code>2ι`SO  # Implicit input                          TOP OF STACK:\n2ι     # Get every second character              [&quot;58131&quot;, &quot;4958&quot;]\n  `    # Dump onto the stack                     &quot;4958&quot;\n   S   # Cast to a list of characters            [&quot;4&quot;, &quot;9&quot;, &quot;5&quot;, &quot;8&quot;]\n    O  # Sum it up (implicit cast to integer)    26\n</code></pre>\n"},{"answer_id":255660,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255660#255660","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 41 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sum(int(i)for i in str(n)[1::2])\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHPqrg0VyM6M69EI1MzLb9IIVMhM0@huKRII08z2tDKyig2VvN/QRFIPk0DrCqvoLREQxMI/puaWFgamhpbGAIA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255661,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255661#255661","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-hx</code></a>, 3 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"noreferrer\">bytes</a></h1>\n<pre><code>ì ó\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LWh4&amp;code=7CDz&amp;input=NTQ4OTE1Mzgx\" rel=\"noreferrer\">Try it</a></p>\n<pre><code>ì ó     :Implicit input of integer\nì       :Convert to digit array\n  ó     :Uninterleave\n        :Implicit output of sum of last element\n</code></pre>\n"},{"answer_id":255704,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255704#255704","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, 61 bytes</h1>\n<pre><code>D=floor(logk)\nf(k)=∑_{n=0}^Dmod(n+D,2)mod(floor(k/10^n),10)\n</code></pre>\n<p><a href=\"https://www.desmos.com/calculator/xxkwtnlgsn\" rel=\"nofollow noreferrer\">Try It On Desmos!</a></p>\n<p><a href=\"https://www.desmos.com/calculator/vdlipcgqzy\" rel=\"nofollow noreferrer\">Try It On Desmos! - Prettified</a></p>\n<p>There must be some better way to do this other than separating out the <code>D=floor(logk)</code> lol.</p>\n"},{"answer_id":255703,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255703#255703","body":"<h1><a href=\"https://github.com/pygamer0/flax\" rel=\"noreferrer\">flax</a>, 2 bytes</h1>\n<pre><code>ΣẎ\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJmbGF4IiwiIiwizqPhuo4iLCLPgiciLCIiLCJbWzEwLDEwMTAxMSw1NDg5MTUzODEsOTk5OTk5LDIxNDc0ODM2NDcsOTk5OTk5OTk5XV0iXQ==\" rel=\"noreferrer\">Try It Online!</a></p>\n"},{"answer_id":255698,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255698#255698","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 18 bytes</h1>\n<pre><code>1⊑·+˝⌊‿2⥊'0'-˜•Fmt\n</code></pre>\n<p>Anonymous tacit function that takes a number and returns a number. <a href=\"https://mlochbaum.github.io/BQN/try.html#code=RiDihpAgMeKKkcK3K8ud4oyK4oC/MuKliicwJy3LnOKAokZtdAoKRiA1NDg5MTUzODE=\" rel=\"nofollow noreferrer\">Try it at BQN online!</a></p>\n<h3>Explanation</h3>\n<pre><code>1⊑·+˝⌊‿2⥊'0'-˜•Fmt\n               •Fmt  Format as string\n          '0'-˜      Subtract '0' character from each, giving a list of digits as numbers\n     ⌊‿2⥊           Reshape into an array with two columns, dropping the last digit if\n                     there is an odd number of digits\n  ·+˝                Sum down each column\n1⊑                   Take the element at index 1 (0-indexed) in the resulting list\n</code></pre>\n"},{"answer_id":254456,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254456#254456","body":"<h1><a href=\"https://zsh.sourceforge.io/\" rel=\"nofollow noreferrer\">Zsh</a>, 65 bytes</h1>\n<pre><code>for w;{c=;for a (${(s::)w})((c+=#a,o=1.*c/$#w,m=o&gt;m?o:m));}\n&lt;&lt;&lt;$m\n</code></pre>\n<p><a href=\"https://tio.run/##FclNDoIwFATgPad4BrQtEo1boOo9TExqaUFpeQpo@QlnR9hMZr4ZmmLWlI0ecrB81liDS0bJk7UJoMFImzhmbmKUyj33RYT8dAjlMfBdZDme7QVjy1gyeWmaBnaePA2FMgbBYW0yePRqEYmZghyNhqYVsgTVyUJU@XqRzdUnQILtfcldSMlqH6fqtv8@8X1bVDSZzotXaZJlDJ38PSobkfkP\" rel=\"nofollow noreferrer\">try it online!</a>  <sub><s><a href=\"https://tio.run/##FYlBDoIwFAX3nOIbqm3RaNxSUO9hMKmlBbX1K6BVCWfHsnmZmfdr69Ew3keYg8tHgw140atcTCSBkZ61acr9wBlTy5wcY1lwLjDQdp2oDYl9IVww3Lk9pq4QQ5RlGXHjEBmotbUIHhtbwvmrQ1FYaqjQGmg7qW6gP6qW92q66OwQU6Bkfgq7SBid2tPrpvu@Lvg4hirb0lT19WZFkN9Hvc93t6LjHw\" rel=\"nofollow noreferrer\">74 bytes</a></s></sub></p>\n<p><code>for w;</code> implicitly iterates over the arguments <code>($@)</code>.<br>\n<code>for a (${(s::)w})</code> iterates over each letter in word <code>w</code>.<br>\n<code>c</code> accumulates the ascii sum<br>\n<code>o</code> is the average ord for <code>w</code><br>\n<code>m</code> is the maximum <code>o</code> found</p>\n<p>Edit: Saved 6 bytes by chaining 3 math expressions in the parentheses<code>((,,))</code>!</p>\n"},{"answer_id":255690,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255690#255690","body":"<h1><a href=\"https://factorcode.org/\" rel=\"noreferrer\">Factor</a> + <code>math.unicode</code>, 25 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ &gt;dec &lt;odds&gt; 48 v-n Σ ]\n</code></pre>\n<p><a href=\"https://tio.run/##TY9LTsMwEIb3PsVkT5xn8wJF6gYUCXVTsUIoCo6TVGrsYE8KCHEa7sOVQuq0pf9sRt/882oqhlJNT9ti85CB5m8jF4zr/4zyD1SVhr7Cjg6V0lwt@YEfO0@FUeyYrDkMiiN@DmonEG6h2GTQyn1D1o/FeptBXnMGYuxfuco1zqYWwIJ7cwK4NE3BtufNHDrEQWeOU0umaWPqx/FUqtZhUiAX6LxLVdtl2WJZzmNvru6jHfZ7Qr4IzPJcuMgC98Tm8M7MM2wVJqm3ChLPMD8yMDU6G/3YQN8L4zAJojA2ML1yLmYLgoh8k@l5efhO1rXOIUzgYAv4/YGXqa8GoNMf\" rel=\"noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<pre><code>       ! 548915381\n&gt;dec   ! &quot;548915381&quot;\n&lt;odds&gt; ! &quot;4958&quot;\n48     ! &quot;4958&quot; 48\nv-n    ! { 4 9 5 8 }\nΣ      ! 26\n</code></pre>\n"},{"answer_id":255688,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255688#255688","body":"<h1><a href=\"https://www.perl.org/\" rel=\"noreferrer\">Perl</a> <code>-p</code>, 18 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/.(.)/$\\+=$1/ge}{\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/79YX09DT1NfJUbbVsVQPz21tvr/fyNDE3MTC2MzE/N/@QUlmfl5xf91CwA\" rel=\"noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>Input via STDIN.</p>\n"},{"answer_id":255681,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255681#255681","body":"<h1>Octave, 31 bytes</h1>\n<pre><code>@(s)sum(num2str(s)(2:2:end)-48)\n</code></pre>\n<p>This converts the number to a string, sums up the character codes in the string, then subtracts the ASCII code for <code>0</code> (48) from each character.</p>\n"},{"answer_id":255663,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255663#255663","body":"<h2>Python 3, <strike>28 37 32 30</strike> 35 bytes</h2>\n<pre><code>lambda n:sum(map(int,str(n)[1::2]))\n</code></pre>\n<p>Assuming input is a <strike>string</strike> number</p>\n"},{"answer_id":255686,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255686#255686","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 49 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f s=sum[read[x]|(i,x)&lt;-zip[0..]$show s,mod i 2&gt;0]\n</code></pre>\n<p><a href=\"https://tio.run/##LYxNCoMwGAX3OUUWLhRU8mms8a/7Qm8gLgKJGqpRjKWh9O6pls7bDY8ZuXnIaXKux6Yxz7ndJBet7T6@Cm1QR2@1tiSOO8@MywubcF4EVji5ks7NXOlGLNjW0SD3u9KyWjeld6/3zwi2ZXnTe1CdPwcEATkGKKOsgCxlgIofKAGaU5ZeaP43B18\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255685,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255685#255685","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 30 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>!n=sum(i-&gt;i-'0',&quot;$n&quot;[2:2:end])\n</code></pre>\n<p><a href=\"https://tio.run/##PY1NCoMwFITX5hTPUDCCFuO/Qtx10TOULmJN4RWbilFw4d1t0NKZzcx8i3nNPUq@bJurhZnfDMMGQy/yAnrS9BbXca10d/e352cEBNQwKtn1qJVhPgErGbQgYJCjUWd21VNghh4nhv6BhxH11GsmRePKY3IlCAEtrOuf0ssyqMekOqBB6xN7ufEInIjwyJqDw0mWlhXPktKWOCfVLhsLEvO0SMskTwtbqx/ZYZJ/AQ\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255671,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255671#255671","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, <s>40</s> <s>38</s> 36 bytes</h1>\n<p><em>Edit: -2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/67312/giuseppe\">@Giuseppe</a>.</em></p>\n<pre><code>\\(x)sum(x%/%10^(nchar(x):0)%%10*1:0)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGiNNulpSVpuhY3VWI0KjSLS3M1KlT1VQ0N4jTykjMSi4BiVgaaqkABLUMgA6o2PE3D0EBTmdOAC8QAQkMgxxDIMTWxsDQ0NbYA8Y3MgAKWYADimQN5RoYm5iYWxmYm5iARS7g8RImxGcT4BQsgNAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255679,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255679#255679","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 5 bytes</h1>\n<pre><code>D0ÐoS\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9/F4PCE/OD/h9s1I///NzTQUTA0AEJDHQVTEwtLQ1NjCyDTEgx0FIwMTcxNLIzNTMxhYkAAAA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Also 5 bytes</p>\n<pre><code>DŻm2S\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9/l6O5co@D/h9s1I///NzTQUTA0AEJDHQVTEwtLQ1NjCyDTEgx0FIwMTcxNLIzNTMxhYkAAAA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Also also 5 bytes</p>\n<pre><code>Ds2SṪ\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9@l2Cj44c5V/w@3a0b@/29ooKNgaACEhjoKpiYWloamxhZApiUY6CgYGZqYm1gYm5mYw8SAAAA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<h3>How they work</h3>\n<pre><code>D0ÐoS - Main link. Takes an integer on the left\nD     - Digits\n  Ðo  - To digits in odd positions:\n 0    -   Set them to 0\n    S - Sum\n</code></pre>\n<p>\n<pre><code>DŻm2S - Main link. Takes an integer on the left\nD     - Digits\n Ż    - Prepend a zero\n  m2  - Take every second element\n    S - Sum\n</code></pre>\n<p>\n<pre><code>Ds2SṪ - Main link. Takes an integer on the left\nD     - Digits\n s2   - Slice into pairs\n   S  - Sums\n    Ṫ - Tail\n</code></pre>\n"},{"answer_id":255659,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255659#255659","body":"<h1><a href=\"https://perl1liner.sourceforge.io\" rel=\"nofollow noreferrer\">pl</a> – Perl One-Liner Magic Wand, 12 bytes</h1>\n<p>Use <strong>-o</strong> to loop over command line arguments. Global matching regexp returns every other character, in this case digit. By default List::Util::sum is imported, <code>e(cho)</code> its result. On the <a href=\"https://perl1liner.sourceforge.io/Challenge-and-Golf/#o-e-sum..g-10-101011-548915381-999999\" rel=\"nofollow noreferrer\">blog</a>, hover the ▶ button, or the blue code box, to see the result:</p>\n<pre><code>pl -o 'e sum/.(.)/g' 10 101011 548915381 999999 2147483647 999999999\n</code></pre>\n"},{"answer_id":255669,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255669#255669","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 7 bytes</h1>\n<pre><code>ＩΣΦＳ﹪κ²\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMM5sbhEI7g0V8MtM6cktUjDM6@gtCS4BCiXrqGpo@Cbn1Kak6@RraNgpAkC1v//m5pYWBqaGlsY/tctywEA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>   Ｓ    Cast the input to string\n  Φ     Filter characters where\n     κ  Current index\n    ﹪ ² Is odd\n Σ      Take the sum\nＩ       Cast to string\n        Implicitly print\n</code></pre>\n"},{"answer_id":255668,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255668#255668","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 12 bytes</h1>\n<pre><code>.(.?)\n$1$*\n.\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wX09Dz16TS8VQRYtL7/9/QwMuQwMgNOQyNbGwNDQ1tjDksgQDLiNDE3MTC2MzE3OoCBAAAA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Takes input as a string because Retina has no integer types. Explanation:</p>\n<pre><code>.(.?)\n$1$*\n</code></pre>\n<p>Convert alternate digits to unary, dropping the other digits.</p>\n<pre><code>.\n</code></pre>\n<p>Take the sum and convert back to decimal.</p>\n"},{"answer_id":255666,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255666#255666","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 35 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sum(map(int,f'{n}'[1::2]))\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/6faBvzPycxNyklUSHPqrg0VyM3sUAjM69EJ029Oq9WPdrQysooVlPzf0ERUFAjUcPUxMLS0NTYwhAoBgA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255665,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255665#255665","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>y∑\n</code></pre>\n<p>well.</p>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJ54oiRIiwiIiwiNTQ4OTE1MzgxIl0=\" rel=\"noreferrer\">Try it Online!</a> | <a href=\"https://vyxal.pythonanywhere.com/#WyJzIiwiIiwieSIsIiIsIjU0ODkxNTM4MSJd\" rel=\"noreferrer\">1 byte with <code>s</code></a></p>\n<p><strong>Explanation</strong></p>\n<pre><code>y∑\ny   Uninterleave, push two lists with every second and every second+1 digit\n ∑  Sum the first list\n</code></pre>\n"},{"answer_id":255662,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255662#255662","body":"<h1><a href=\"https://dart.dev/\" rel=\"nofollow noreferrer\">Dart (2.18.4)</a>, <s>92</s> 77 bytes</h1>\n<pre class=\"lang-dart prettyprint-override\"><code>f(n,[i=1])=&gt;[for(;i&lt;(n='$n').length;i+=2)int.parse(n[i])].reduce((v,e)=&gt;v+e);\n</code></pre>\n<ul>\n<li><a href=\"https://tio.run/##bYtBDoIwFET3noKFCf8HQiwUgdR6kaaLRoo00S@pyMZ49kqMmxpnVvPypjd@DmEAypWTTKM8quHmQbgDkEy3lGJxsXSeR@EyWaKjuZiMv1sg5TTqwtv@cbIAS27X75JZFOFqHAEmz02STH59wABshyiivZbFrOZtx@qq/cHdJzErGW94W@1588/96q/wBg\" rel=\"nofollow noreferrer\">Try it online</a>.</li>\n<li><a href=\"https://github.com/alexrintt/algorithms/tree/master/codegolf/sum-every-second-digit-in-a-number/dart-2.18\" rel=\"nofollow noreferrer\">Full source</a>.</li>\n</ul>\n"},{"answer_id":255658,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255658#255658","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 9 bytes</h1>\n<pre><code>tssM%2+1z\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/v6S42FfVSNuw6v9/I0MTcxMLYzMTcwA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<pre><code>      +1z    # Append '1' before the input\n    %2       # Every 2nd element of\n ssM         # Map to integer and take sum\nt            # Decrease by 1\n</code></pre>\n"},{"answer_id":255657,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255657#255657","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"noreferrer\">&gt;&lt;&gt;</a>, 14 bytes</h1>\n<pre><code>0i~i:c%@0(?n+!\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/3yCzLtMqWdXBQMM@T1vx/38jQxNzEwtjMxNzAA\" rel=\"noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n<p><strong>Explanation</strong></p>\n<pre><code>0               # init sum as 0\n i~             # discard an input\n   i:           # duplicate an input\n     c%@        # mod the copy by 12 and move down on stack\n        0(?n    # if the other copy was negative, print the sum\n            +!  # else add copy to sum and skip the next instruction\n</code></pre>\n"},{"answer_id":255653,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255653#255653","body":"<h1>JavaScript (ES6), 30 bytes</h1>\n<p><em>-1 by <a href=\"https://codegolf.stackexchange.com/users/76323/l4m2\">@l4m2</a></em></p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=n=&gt;n&amp;&amp;f(i=n/10|0)+i++%2*n%10\n</code></pre>\n<p><a href=\"https://tio.run/##hYzRCsIgGEbve4rdbGhS@qtTd2HvMtYMY@ho0VXvbjYagQR93@U5nGv/6Jfh5uf7IcTzmJKzwZ5C0zjkbaDAngwTT0jN96EGloYYljiNxylekEMAGFfbKK3YruDsH8/fGplDwVtpOmiFWZXMuSqEbt03wHUhcJBaGqGkztJb6H4WPpEsCJVe\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<hr />\n<h1>JavaScript (ES6), 31 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=n=&gt;n?f(n/10|0)+i++%2*n%10:i=0\n</code></pre>\n<p><a href=\"https://tio.run/##bczfCsIgFMfx@55iNwNNSo86/wTWs4w1wxgaLbrq3c3GIpDOufx@@F37Zz8P93B77GI6jzl7F90xnjyKFNiLYRIIafk2tsAOwbE8pDinadxP6YI8AoZx8z1KG7ape3lYTelQ9U4aC50wCymdqwrY5X4DXFeAg9TSCCV1QR9g/y6sIwUIld8\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<h3>Commented</h3>\n<pre class=\"lang-javascript prettyprint-override\"><code>f = n =&gt;            // f is a recursive function taking the input n\n  n ?               // if n is not equal to 0:\n    f(n / 10 | 0) + //   do a recursive call with floor(n / 10)\n                    //   it's important to understand that:\n                    //     1) n is defined in the local scope of f\n                    //     2) i is defined in the global scope\n                    //     3) we're not going to execute the code that\n                    //        follows until the recursion stops and i\n                    //        has been initialized\n    i++ % 2 *       //   take the parity of i (increment it afterwards)\n    n % 10          //   and multiply by the least significant decimal\n                    //   digit of n\n  :                 // else:\n    i = 0           //   stop the recursion and initialize i to 0\n</code></pre>\n"},{"answer_id":255656,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255656#255656","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 35 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>i;f(n){n=n?f(i=n/10)+i++%2*n%10:0;}\n</code></pre>\n<p><a href=\"https://tio.run/##TctBCoMwEAXQvacIFmHStJjEmJiK9CLdFDWSRQcpXQji2dM0WNo/u/f/9Oep70PwrQOkK3Z4deA7LAWnzDNWyCMWgl94u4XH3SPQNTsMo/M4khkWSuanx5eDvBhumJ8W2mYzOIjflHxTloTvGk/sTVSRtFaNFXXVpCKq1Iltym8sTWIplFFNpZWJ1Yft33p/iFzpbAtv\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p>Port of js solution</p>\n"},{"answer_id":255654,"question_id":255650,"link":"https://codegolf.stackexchange.com/questions/255650/sum-every-second-digit-in-a-number/255654#255654","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"noreferrer\">Raku</a>, 15 bytes</h1>\n\n<pre class=\"lang-raku prettyprint-override\"><code>{sum m:g/.&lt;(./}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/urg0VyHXKl1fz0ZDT7/2f3FipUKahrZetEGspoKtnYJetGGsQlp@kUJOZl5qsZ2dXnl@UUrxf0MDTk4DLkMDIDTk5DTksgQDTk4jcy4jQxNzEwtjMxNzTiNLqARIztgMAA\" rel=\"noreferrer\" title=\"Raku – Try It Online\">Try it online!</a></p>\n<p>Simple regex based sum of every other digit</p>\n"},{"answer_id":255605,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/255605#255605","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, 10 bytes</h1>\n<pre><code>2*Đ√½-Ɩ²+⁻\n</code></pre>\n<p><a href=\"https://tio.run/##ARsA5P9weXT//zIqxJDiiJrCvS3GlsKyK@KBu///MTA\" rel=\"nofollow noreferrer\" title=\"Pyt – Try It Online\">Try it online!</a></p>\n<pre><code>              implicit input\n2*            double\n  Đ           duplicate on the stack\n   √          take the square root of top\n    ½-        subtract 1/2\n      Ɩ²      cast to an integer and square\n        +     add the stack\n         ⁻    decrement\n              implicit output\n</code></pre>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/253320/52210\">loopy walt's Python answer</a></p>\n<p>If floating-point returns are allowed, then 9 bytes is possible:</p>\n<pre><code>2*Đ√⎶⁻²+⁻\n</code></pre>\n<p><a href=\"https://tio.run/##K6gs@f/fSOvIhEcdsx71bXvUuPvQJm0g@f@/oQEA\" rel=\"nofollow noreferrer\" title=\"Pyt – Try It Online\">Try it online!</a></p>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253353#253353\">corvus_192's Rust answer</a></p>\n"},{"answer_id":255538,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/255538#255538","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 136 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>import.&quot;strings&quot;\nfunc f(S[]string,d rune)(O[][]string){for _,s:=range S{O=append(O,FieldsFunc(s,func(r rune)bool{return r==d}))}\nreturn}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=bZFPTgMhFMbjllO8YJrOJNi1sRk3TbozNemybSwFpiUOMAKjaQh77-CmMfEQHkVPI1OclW7g8eV9v_eHt_e9OX22lD3SvQBFpUZStcb6Ca6Vxx-dr6-uv14HzXkr9d5hVHeaQV0sV5ssEQ6206IsFqvNoJWhNhYeiLupLNUJvwyLirat0LxYkLkUDXfzxCkc6XGFzYidMU2wwndWg60qHssyovyOuZ_vizt_bAXMqBOQanXMQ0BLGAqj2ZmEIsp99mMVZUAs5Tu4qVJibw3ofA6ugA_CCpCOOKMEcVS1jcAEc-op4aKRSnrBye4IzChFHY5kTMaR_KU0jZmucbKu8fTF2IbnMEmRwHj6j8cb2AlI29LGp2R_oD41Av4g4KkTzkujz17ovRHlvbJ-lLzZPFlA9wnn6wKPLp9hO2JbqG4hxWuNCbDJsj9mJP3bEJdlov1u9XTK9w8\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":209041,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209041#209041","body":"<h1>Scala, 32 bytes</h1>\n<pre class=\"lang-scala prettyprint-override\"><code>l=&gt;l.transpose==l.map(_.map(-_))\n</code></pre>\n<p>Finally, something that Scala has a builtin for!</p>\n<p>The function's pretty straightforward - it compares the transpose of a <code>List[List[Int]]</code>(doesn't have to be a <code>List</code>, could be any Iterable) to the negative, found by mapping each list inside <code>l</code> and using <code>-</code> to make it negative.</p>\n<p><a href=\"https://scastie.scala-lang.org/oIWhqnLcRhaTGOgoR4HV2Q\" rel=\"nofollow noreferrer\">Try it in Scastie</a></p>\n"},{"answer_id":254662,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/254662#254662","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C++ (gcc)</a>, <s>76</s> 73 bytes</h1>\n<p>-3 thanks to @<a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">ceilingcat</a></p>\n<p>I think this is as much golf as you can get without using a completely different method. Other people <s>will probably prove me wrong the moment I hit &quot;Post.&quot;</s> have in fact proven me wrong.</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#import&lt;ios&gt;\nint f(char*s){int t=0;for(;*s;t+=*s++-97);putchar(t%26+97);}\n</code></pre>\n<p><a href=\"https://tio.run/##jY5BCoMwEEXX9RTBUoiKULpoqdHeJZ0kKo1JSEZaEM9ujT1And2f/3h8cK5sAZbl2A/Oeqx7Gx5Jb5AoCh33ecimmLA5M2U9ZXlgWDR5KIryfsuYGzFiFE@XaxEf82oyoEchSXShl3z4CQfeG5qRKTkomnZSa/u2Xos0Y8khoKgqsCOSuiZbkEbotdhg/gQh1Q4QrJCt1XvQgBxe8rOON63csyHeH24myxc\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a></p>\n<h3>Ungolfed</h3>\n<p>We used <code>#import&lt;ios&gt;</code> so we can <code>putchar()</code>.</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>int f(char* s) {\n    int t = 0;                      // Running total\n    for(;*s != 0;t += *s++ - 97);   // Loop through string until we get to null byte, add to running total\n    putchar(t % 26 + 97);           // Add 97 to final result and print\n}\n</code></pre>\n"},{"answer_id":255451,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/255451#255451","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, 39 bytes</h1>\n<p>Prints the infinite sequence.</p>\n<pre><code>130&gt;$:2+@$:1+@v\n2$-1v!?:$oan:{&lt;}+\n~+}v&gt;\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/39DYwE7FykjbQcXKUNuhjMtIRdewTNHeSiU/Mc@q2qZWm6tOu7bM7v9/AA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, 38 bytes</h1>\n<p>Prints the nth term 1-indexed.</p>\n<pre><code>:8*$2*1v\n}(?!v1+&gt;::*{:\n+1-n&gt;2-2,:1%-:*\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/38pCS8VIy7CMq1bDXrHMUNvOykqr2opL21A3z85I10jHylBV10rr////umWGZgA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n"},{"answer_id":255327,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/255327#255327","body":"<h1>JavaScript, 29 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;(g=x=&gt;s+x.length)(g(g(s)))\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@7/Y1k4j3bbC1q5Yu0IvJzUvvSRDUyMdCIs1NTX/J@fnFefnpOrl5KdrpGkkJMJAAlAOAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":252756,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/252756#252756","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 31 bytes</h1>\n<pre><code>{$[9&gt;t:#x;x,$1+t;x,$#x,($1+t)]}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6pWiba0K7FSrrCu0FEx1C4BUcoVOhogtmZsLRdXWrRSYmKiUiyIASEToQCVh86F8aGUoVIsAKDMH2Y=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>+22 bytes thanks to Dominic van Essen for pointing out a not-working test case (that should have worked)</em></p>\n"},{"answer_id":255215,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/255215#255215","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 4 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>3Fg«\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/f2C390Or//xOhAAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeXhCS7/jd3SD63@X6vzP1opMTFRSUcJiBKhAIkJZhsiC9AM0MWSRKVYAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>3F    # Loop 3 times:\n  g   #  Pop the current string, and push its length\n      #  (which will use the implicit input-string in the first iteration)\n   «  #  Append this length to the (implicit) input-string\n      # (after which the result is output implicitly)\n</code></pre>\n"},{"answer_id":255165,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/255165#255165","body":"<h1><a href=\"https://rust-lang.org\" rel=\"nofollow noreferrer\">Rust</a>, 118 bytes</h1>\n<pre class=\"lang-rs prettyprint-override\"><code>fn main(){let y=&amp;mut&quot;&quot;.into();std::io::stdin().read_line(y);for(i,c)in(0..).zip(y.chars()){if i%2&gt;0{print!(&quot;{c}{c}&quot;)}}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY5RCsIwEESvUgPKLtRQBUFS9CpS0gQX2rSkKRJDTuJPED2UtzFSYT4ezDAzj5edJ5fSe3Z6e_zctCn6hgxg6JQr_GnTz44xTsYNgPXkWiFoECLDL8StatpLR0aBx1oPFqiUmJ2Kc-R3GsFzeW3sBIiBdEHr_bkKo811K2BBxiyGMcZl_v8iPXeHhb4\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Half is just stdin...</p>\n<p>Else,</p>\n<hr />\n<h1><a href=\"https://rust-lang.org\" rel=\"nofollow noreferrer\">Rust</a>, <s>108</s> <s>106</s> 94 bytes</h1>\n<pre class=\"lang-rs prettyprint-override\"><code>|c:&amp;str|{let mut s=format!(&quot;&quot;);for(i,c)in(0..).zip(c.chars()){if i%2&gt;0{s.push(c);s.push(c)}}s}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PY1NCsIwFISvEgPKe1BDcSWWehUJoSGB_pGXbExzEjdZ6N6lV_E2VgOu5mOGmbndXSCfn3pkg7QjYOw7z2T7CF7vj-_Lok478m752UPwjFo9uUH6DXCOzcpgK4VrsxYCxdXOoIQy0hEgRquZ3R7OdSQxBzKgsPlTSpSacvOanR2_izHxSgI3Xd9PHDGVOOeiHw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":255176,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/255176#255176","body":"<h1><a href=\"https://esolangs.org/wiki/Dis\" rel=\"nofollow noreferrer\">Dis</a>, 4 bytes</h1>\n<pre><code>}}{{\n</code></pre>\n<p><a href=\"https://tpaefawzen.github.io/dis.web/#source=%7D%7D%7B%7B&amp;input_enc=utf-8&amp;input=Hello%2C+World%21&amp;output_enc=utf-8\" rel=\"nofollow noreferrer\">Offline interpreter on dis.web</a></p>\n<p>Easy for this kind of task.</p>\n<p>A string of any bytes shall be given from standard input, and outputs to standard output.</p>\n<h2>Explained</h2>\n<pre><code>}    store odd-indexed byte to accumulator\n     59048 is stored if EOF\n }   same for even-indexed byte\n  {  output the accumulator\n     halt if accumulator is 59048\n   { same\n     implicitly NOP until cell 59048\n     loop back to cell 0\n</code></pre>\n"},{"answer_id":255175,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/255175#255175","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/PLIS\" rel=\"nofollow noreferrer\">PLIS</a>, 13 bytes</h1>\n<pre><code>&amp;R($0@@i@VfB)\n</code></pre>\n<p>Defines a function <code>R</code> which takes a sequence as its first and only parameter. The language implements strings as infinite sequences of <code>0</code>s preceded by the string itself. This program works for all sequences, strings included.</p>\n<p>We define a function instead of using command line parameters because it is currently impossible to supply anything besides big integers through command line parameters. This would be 9 bytes if it were possible to supply, say, a string via command line (<code>$0@@i@VfB</code>).</p>\n<pre><code>print(R(&quot;umbrella&quot;))        #=&gt; mmrrllaa\nprint(R(&quot;Hello, World!&quot;))   #=&gt; eell,,WWrrdd\nprint(R(&quot;odd_length!&quot;))     #=&gt; dd__eegghh\n</code></pre>\n<h2>Explanation</h2>\n<p>After expanding shortnames, we have the following, equivalent code:</p>\n<pre><code>&amp;R($0@@A000035@A004526)\n&amp;R(                   )      define a function R\n       A000035               a(n) = n%2 ( 0 1 0 1 0 1 0 1 ... )\n      @                      indices where true; ( 1 3 5 7 9 11 ... )\n                             using shortnames, this is shorter than the equivalent \n                             A005408; compare CwB &lt;=&gt; @i\n              @              index by\n               A004526       non-negative integers repeated ( 0 0 1 1 2 2 ...)\n                             this gives ( 1 1 3 3 5 5 7 7 9 9 ... )\n   $0@                       index input by this sequence\n</code></pre>\n"},{"answer_id":255160,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/255160#255160","body":"<h1><a href=\"https://github.com/urielieli/py-four\" rel=\"nofollow noreferrer\">4</a>, 25 bytes</h1>\n<pre><code>3.72372382352352372372394\n</code></pre>\n<p><a href=\"https://tio.run/##M/n/31jP3MgYiCyMjE3BCMK1NMEjBQA\" rel=\"nofollow noreferrer\" title=\"4 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253037,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/253037#253037","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$4\\log_{256}(96)\\approx\\$</span> 3.292 bytes</h1>\n<pre><code>eh]y\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJlaF15IiwiYWJjZGVmIl0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h2>Explanation</h2>\n<pre><code>eh]y\n   y   Uninterleave the input - return a list like [a[::2], a[1::2]]\n  ]    Get the last element (which is a[1::2])\ne      Over each character...\n h     Double it\n</code></pre>\n"},{"answer_id":255005,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/255005#255005","body":"<h1>Excel, <s>52</s> 50 bytes</h1>\n<pre><code>=INDEX(ROUND((.5+SQRT(5)/2)^ROW(A:A)/SQRT(5),),A1)\n</code></pre>\n<p><sup>Note: Excel will automatically add a leading zero to <code>.5</code> after you input the formula.</sup></p>\n<p>If you put a value in <code>A1</code>, you get that term (1-indexed) from the sequence. If you leave it blank, you get the first 1,474 terms which is when it gets too large for Excel to handle. As you can see below, it also loses accuracy at some point because Excel only keeps the first 15 digits of a number.</p>\n<p><a href=\"https://i.stack.imgur.com/wmq1M.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/wmq1M.png\" alt=\"Screenshot\" /></a></p>\n"},{"answer_id":251595,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251595#251595","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <sup><s>116 99 88</s></sup> 85 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>def f(n,i=1,j=0):\n while j!=n:i+=1;m=2**i-1;j+=all(m%k for k in range(2,m))\n print(m)\n</code></pre>\n<p><a href=\"https://tio.run/##FcbBCoMwDADQu1@RHQaJdrC6nZR8jLB2praxlIr49R17p5evuu76au3jPHhUI2xN4CdNHZyrRAfhxjrJwHZOPPa9POwcBl5ixHTfwO8FNhCFsujX4WgSUQe5iFZM1Dz@I5qPikTU3j8\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<ul>\n<li>(-24 thanks to Jo King)</li>\n<li>(-4 thanks to pxeger)</li>\n</ul>\n<h1><a href=\"https://github.com/nayakrujul/python-plus\" rel=\"nofollow noreferrer\">Python+</a>, <sup><strike>78</strike></sup> 73 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>n=int(§())\ni=1\nj=0\n€j!=n\n i+=1;m=2**i-1;j+=all(m%k£k:range(2,m))\n$(m)\n</code></pre>\n<ul>\n<li>(-1 thanks to pxeger)</li>\n<li>(-4 thanks to Jo King)</li>\n</ul>\n"},{"answer_id":254582,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254582#254582","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, <s>43</s> <s>38</s> <s>36</s> 30 bytes</h1>\n<p>-5 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/92689/steffan\">Steffan</a></p>\n<p>Originally based on <a href=\"https://codegolf.stackexchange.com/a/254232/11261\">TKirishima's Ruby answer</a>.</p>\n<pre><code>:*&amp;:/%[:bytes|:sum,:+@|Q]|:max\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboW-6y01Kz0VaOtkipLUotrrIpLc3WstB1qAmNrrHITKyCKbi4uKC0p1nCLjlbPSM3JyVfXUVAvzy_KSQExkipT1WNjNbngSpLzU1JBEun5OWkgurgkMTkbxEitSM5IzEtHU67ooAySVFGNA1FqWhqo0oXlqUUllaWZ-QXRIPnE4pS09Iys7BxrEK-qIrksKS9XB6QF4tQFCyA0AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Explanation</h2>\n<pre><code>:* &amp; :/ % [ :bytes | :sum, :+@ | Q ] | :max\n\n:* &amp;                                         # Map with...\n            :bytes | :sum                    #   Sum of bytes\n     :/ % [              ,         ]         #   Divided by\n                           :+@ | Q           #   Length converted to float\n                                     | :max  # Get max\n\n</code></pre>\n"},{"answer_id":254808,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/254808#254808","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 8 bytes</h1>\n<p>This is straight from the J-uby README.</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>:++[0,1]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboWK6y0taMNdAxjIdzlBQpu0YYGUN6CBRAaAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Explanation</h2>\n<p>From the README:</p>\n<blockquote>\n<p><code>(F+init).(n)</code> starts an array with init, then applies <code>F</code> to the last <code>init.length</code> entries <code>n</code> times</p>\n</blockquote>\n<p>In this case, <code>init</code> is <code>[0,1]</code> and <code>F</code> is <code>:+</code>, i.e. add.</p>\n"},{"answer_id":254775,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/254775#254775","body":"<h1><a href=\"https://code.kx.com/home/\" rel=\"nofollow noreferrer\">q</a>, 5 bytes</h1>\n<pre><code>where\n</code></pre>\n<h1>k, 2 bytes</h1>\n<pre><code>&amp;:\n</code></pre>\n<p>Built-in <a href=\"https://code.kx.com/q/ref/where/\" rel=\"nofollow noreferrer\">where</a> and indexing does exactly as specified</p>\n"},{"answer_id":252470,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252470#252470","body":"<h1><a href=\"http://clang.llvm.org/\" rel=\"nofollow noreferrer\">C (clang)</a>, <s>59</s> 55 bytes</h1>\n<ul>\n<li>-2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/41374/jdt\">@jdt</a>.</li>\n</ul>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(*a,*b,n){for(;n;)~--*b?printf(&quot;%d &quot;,*a):a++-b++-n--;}\n</code></pre>\n<p><a href=\"https://tio.run/##bVDLbsMgEDybr1i5agQ2pKSPHErSfojFAduhXSvFUWz30Mj9dXexq/YSaRdmhhnQUqnq6MLbNHmeOZmVMoiLb8/cBCO@lcrK19MZQ@95eltDKjMnnl2eq5I6KGXG6QZDdRzqA@y6vsZ2/f7CGAXYh8PAP1usBbuwhBRACY1ZoCss7IH0ZCPhXsKDJLiVoOfaRrbRhGhZs2T8TZXXUk/kmktHFi/4D4QlQEZ4pAREnYYDjiQ31NoAwg46/Dq0HgLc/cFCW0OWfE8Q89yK@V1/GvqOpwX9BNC47dALE2W@ckVjJazKeaOInQ8Wu00jGdk4/QA\" rel=\"nofollow noreferrer\" title=\"C (clang) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":254727,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/254727#254727","body":"<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">jq</a> -n, 24 bytes</h1>\n<pre><code>now|gmtime[0]-range(121)\n</code></pre>\n<p><a href=\"https://tio.run/##yyr8/z8vv7wmPbckMzc12iBWtygxLz1Vw9DIUPP//3/5BSWZ@XnF/3XzAA\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252799,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252799#252799","body":"<h1><a href=\"https://julialang.org\" rel=\"nofollow noreferrer\">Julia</a>, 48 bytes</h1>\n<pre><code>~x=replace(lpad(x,5,'A'),('1':'9'.=&gt;'a':'i')...)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700qzQnM3HBgqWlJWm6FjcN6ipsi1ILchKTUzVyChJTNCp0THXUHdU1dTTUDdWt1C3V9Wzt1BOBrEx1TT09PU2oPs3cxAKNOh2FaBNjI0NjHQULMxNTHQVjEyMdBUsgMIzVVKixUyjOyC-HaIBZCAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, <s>67</s> 65 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>~x=getindex.([Dict(0:9 .=&gt;['A';'a':'i'])],[0;0;0;0;x][end-4:end])\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/v67CNj21JDMvJbVCTyPaJTO5RMPAylJBz9YuWt1R3Vo9Ud1KPVM9VjNWJ9rAGgIrYqNT81J0TayAZKzm/7poEx1jHSMdQx3jWIUaO4WCosy8kpw8rrpoCx0zHRMd01gFBVRxY6CoEUgUTdxSBwINkc35DwA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>-2 bytes thanks to @MarcMush: replace <code>[[0,0,0,0];x]</code> with <code>[0;0;0;0;x]</code></p>\n<ul>\n<li>Function is defined with the unary operater <code>~</code></li>\n<li>The dictionary is wrapped in an array to allow <a href=\"https://discourse.julialang.org/t/how-can-i-access-multiple-values-of-a-dictionary-using-a-tuple-of-keys/56868?u=ashlin_harris\" rel=\"nofollow noreferrer\">passing multiple values</a>.</li>\n<li>For padding, I concatenate a zero array and the input array. Only the last five elements <code>[end-4:end]</code> are used.</li>\n</ul>\n"},{"answer_id":254624,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/254624#254624","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, <s>46</s> 45 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>using Dates\ny=year(now())\nshow([y:-1:y-120;])\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/v7Q4My9dwSWxJLWYq9K2MjWxSCMvv1xDU5OrOANIR1da6RpaVeoaGhlYx2r@/w8A\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<ul>\n<li>-1 byte thanks to @amelies: replace <code>print</code> with <code>show</code></li>\n</ul>\n"},{"answer_id":254596,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/254596#254596","body":"<h1>k, 18 bytes</h1>\n<pre><code>&quot;A&quot;^-5$10h$96+10\\:\n</code></pre>\n"},{"answer_id":254630,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/254630#254630","body":"<h1>k, 7 bytes</h1>\n<p>Similar to the APL solution. Compare (x~) original matrix against negated transpose (-+x}</p>\n<pre><code>{x~-+x}\n</code></pre>\n"},{"answer_id":254622,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/254622#254622","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 28 bytes</h1>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/208998/11261\">Razetime's Ruby answer</a>.</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>:=~&amp;(:transpose|:*&amp;(:*&amp;:-@))\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboWe6xs69Q0rEqKEvOKC_KLU2ustIBcLTUrXQdNTYiSm0EFCm7R0dGGOkAYq4NGx8ZyQaQNdAzAwiDaAEjrGoIZSPK6RkBhI7AYxOQFCyA0AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Explanation</h2>\n<pre><code>:=~ &amp; (:transpose | :* &amp; (:* &amp; :-@))\n\n       :transpose |                   # Transpose input, then\n                    :* &amp; (        )   # Map with\n                          :* &amp; :-@    #   Map with negate\n:=~ &amp; (                            )  # Equal to input\n</code></pre>\n"},{"answer_id":254601,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/254601#254601","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 4.5 bytes (9 nibbles)</h1>\n<pre><code>.~~1+&lt;2\n</code></pre>\n<pre><code>.~~         # append until null (here this means forever)\n   1        # starting with 1\n    +       #   sum of\n     &lt;2     #   take 2 elements (or 1 if there's only 1)\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/aVV7J.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/aVV7J.png\" alt=\"enter image description here\" /></a></p>\n<hr />\n<p><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a> also supports a recursive approach to calculate the <code>n</code>-th element:<br />\n<code> ``; $ -$2 1 + @-$2 @-$~</code> (10 bytes = 20 nibbles)</p>\n<pre><code>``;                      # define a recursive function:\n    $                    # initial input is arg1;\n      -$2                # when input minus 2 is zero or negative:\n          1              # return 1;\n                         # otherwise:\n            +            # add together\n              @-$2       # recursive call with input minus 2\n                   @-$~  # and recursive call with input minus 1\n</code></pre>\n<p>...although simply indexing into the infinite sequence is shorter: <code>=$.~~1+&lt;2</code> (5 bytes = 10 nibbles).</p>\n"},{"answer_id":254392,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/254392#254392","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, <s>17</s> 16 bytes</h1>\n<pre><code>r5l6=.a7+!\n68*+o\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/vyjH1Na@LNFcW5HLzEJLO9/u////usXGJkYA\" rel=\"nofollow noreferrer\">Try it online</a></p>\n<p><strong>Explanation</strong></p>\n<pre><code>r        !    # reverse stack on first iteration\n 5l6=.        # if stack length is 5, move to next row\n      a7+     # else add 17 to stack\n68*+o         # add 48 to each item on stack and print as char\n</code></pre>\n"},{"answer_id":254563,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254563#254563","body":"<h1><a href=\"https://www.raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 27 bytes</h1>\n<pre><code>*».&amp;{.ords.sum/.chars}.max\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPtf69BuPbVqvfyilGK94tJcfb3kjMSi4lq93MSK/9bFiZUKaRo2Gak5OfkK5flFOSkKSZWpdpr/AQ\" rel=\"nofollow noreferrer\" title=\"Try It Online\">Try it online!</a></p>\n<p>Edit: as per advice from @Steffan</p>\n"},{"answer_id":254426,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254426#254426","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C++ (gcc)</a>, <s>166</s> 120 bytes</h1>\n<p>-46 thanks to the combined efforts of <a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">@ceilingcat</a> and <a href=\"https://codegolf.stackexchange.com/users/41374/jdt\">@jdt</a>.</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#import&lt;bits/stdc++.h&gt;\nauto f(auto a,float*r){*r=0;for(char*t:a){int u=0,s=0;for(;*t;u+=*t++)s++;*r=fmax(*r,(0.+u)/s);}}\n</code></pre>\n<p><a href=\"https://tio.run/##rc7NUsIwEADgM32KWJRpmwoInEjL@B7OOBPS9EfSpiYbATt99tpERg9ycYZcdrPJ7resbR8LxoZhWtWtVJDsK9ALDRnDeF7uPGpAojxwgca5kBQiFXaRSpcklypgJVURbGnYVQ0gky5jfXkhERCD0wgwDjXGZGzJa3oKIhUHyzk24UKHpO8H21fTqglC1HnochyEFNdGAPF@yuNe262oNCTO3SHgGp5Qijq/5EJIP0b@USqR2WR/5n5PfkcG7nOMZt9jQ@JN3DwmDaAkuWg2c2XeZGKkJ1fNlTOZzLiVCilyGzVQdrAJP41/m@KKv7qNv3b@3fPUavcPrzbMouCvt76Nt3He@5ErOJtKti8WpDrLi/LtIIi9fZ7Yx76p4787bP65Qz98AQ\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a></p>\n<h2>Original Answer:</h2>\n<p>Attempting to apply general-purpose programming to code golf doesn't seem to work out well.</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#import&lt;bits/stdc++.h&gt;\nauto g(char*a){int t=0,s=0;for(a--;*++a;s++,t+=*a);return(0.0+t)/s;}auto f(std::list&lt;char*&gt;a){float m=0;for(char*t:a)m=m&gt;g(t)?m:g(t);return m;}\n</code></pre>\n<p><a href=\"https://tio.run/##jY7NUoMwFIXX9ikiVScQaFkTQN/DGWdCCAGbEEwutpXh2ZEw3emiq3N/zvnu5cOQSM6XZd/pwVjIqw7c0UHNCTm05Y6NYJDEvGU2YuHU9YCgSGNXpLQxFrMkoREhjDpCYiDF6qFWwGh7nB5SAuHR0XljNHiFZpnqHOQbrVxxjTIMkL7BtjFkLNSFLiWG8FVnXm5EpOm8@Ac063ocomn3sCG5GQHl@XphClqhlAliFJyNVbUvqqsI5tDvN7Poa0X/CXJTC2@XRjVeHTB@8oW4rG/18i7I49veR56eP7y8RPie0NdZWLiOnRnefYq5upHt50lR3/1c@HfV6/gvaF5@AQ\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a></p>\n<h3>Ungolfed:</h3>\n<pre class=\"lang-cpp prettyprint-override\"><code>// Gets the average ord value of a string\nauto g(char* a) {\n    int t=0, s=0;             // Running total and size \n\n    for (a--;*++a;s++,t+=*a); // Loop until a equals 0 and add a onto the running total\n    \n    return (0.0+t) / s;       // Cast to float by adding 0.0 and divide the total by the size.\n}\n\n// &quot;Main&quot; function\nauto f(std::list&lt;char*&gt; a) {\n    float m = 0;           // Maximum value\n    \n    for (char* t : a) {    // Loop through all the strings in the list\n        m = m&gt;g(t)?m:g(t); // If m is greater than the output from the function, return m. Otherwise, return the output of the function\n    }\n    \n    return m;              // m is the final result that we want\n}\n</code></pre>\n"},{"answer_id":254536,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/254536#254536","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 20 bytes</h1>\n<pre><code>{+/t(*=(t:1+!x)!'x)}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6rW1i/R0LLVKLEy1Fas0FRUr9Cs5eJKizY0jQWS5iDCyCAWANRVClQ=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>I honestly didn't know how I manage to make a for-each that find the divisors, lol.</p>\n<p>Explanations:</p>\n<pre><code>{+/t(*=(t:1+!x)!'x)}  Main function. x is input\n    (           'x)   For x amount of times\n               !      Modulo it with\n       (    !x)       Range, create a list of [0..x-1]\n          1+          + 1 to each number in list to turn it into [1..x]\n        t:            Assign it to variable t\n                      Now, we got the modulo results of each number from [1..x],\n                      we now need to\n      =               Group them into a dictionary\n     *                And get the value of the first key\n                      i.e. the occurence positions of the 0s\n                      (Implicit at)\n   t                  The variable t\n +/                   Sum\n</code></pre>\n"},{"answer_id":254534,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/254534#254534","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 19 bytes</h1>\n<pre><code>$[n][sum factors n]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?DdpYnE\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":254530,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/254530#254530","body":"<h1><a href=\"https://github.com/stestoltz/cQuents\" rel=\"nofollow noreferrer\">cQuents</a>, 3 bytes</h1>\n<pre><code>Uz$\n</code></pre>\n<p><a href=\"https://tio.run/##Sy4sTc0rKf7/P7RK5f9/Q1MA\" rel=\"nofollow noreferrer\" title=\"cQuents – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<pre><code>     implicit mode sequence - print nth term in sequence given input n\nU    sum (                           )\n z         divisors (              )\n  $                   current term\n</code></pre>\n"},{"answer_id":254045,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/254045#254045","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, <s>36</s> 26 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>!s=sum([s...].-'a')%26+'a'\n</code></pre>\n<p><a href=\"https://tio.run/##HY1BDoIwEEX3nGKYYGwjNtGFO05CXNR2gEptCQORePlaeJv/Fi/579U7fdtSKrnh9SNaVko91fWsz/J0f1zypi7OILgGLcEF@LlJCBzI@/iNs7dYA@qXsdTtZqKlPvrDedFmpM0MOvR0ZDso6xbHaSCN@5UsIDPNLiw@CKwYKlGyhNyXDE2TXwsKNv0B\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>-10 MarcMush</p>\n"},{"answer_id":142192,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142192#142192","body":"<h2>C, C++, C#, D, Java, <s>65</s> 62 bytes</h2>\n<pre class=\"lang-cpp prettyprint-override\"><code>int d(int n){int s=0,i=1;for(;i&lt;=n;++i)s+=n%i&gt;0?0:i;return s;}\n</code></pre>\n<p>This works in all theses 5 programming languages because of similarities.</p>\n<h3>C, C++ and D optimization : <s>62</s> 60 bytes</h3>\n<p>In C++ and D, integers convert implicitly to booleans ( Zero =&gt; false, Not Zero =&gt; true ), so you don't need to have the <code>!=0</code></p>\n<pre class=\"lang-cpp prettyprint-override\"><code>int d(int n){int s=0,i=1;for(;i&lt;=n;++i)s+=n%i?0:i;return s;}\n</code></pre>\n<h3>D optimization : golfy template system, 55 bytes</h3>\n<pre class=\"lang-d prettyprint-override\"><code>T d(T)(T n){T s,i=1;for(;i&lt;=n;++i)s+=n%i?0:i;return s;}\n</code></pre>\n<h3>C++ optimization by c : 53 bytes</h3>\n<pre class=\"lang-cpp prettyprint-override\"><code>int f(int n,int i=0){return++i&lt;n?f(n,i)+(n%i?0:i):n;}\n</code></pre>\n<p><strong>Code to test</strong> :</p>\n<p>C :</p>\n<pre class=\"lang-c prettyprint-override\"><code>printf(&quot;%d %d %d %d %d&quot;, d(7), d(15), d(20), d(1), d(5));\n</code></pre>\n<p>C++ :</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>std::cout &lt;&lt; d(7) &lt;&lt; ' ' &lt;&lt; d(15) &lt;&lt; ' ' &lt;&lt; d(20) &lt;&lt; ' ' &lt;&lt; d(1) &lt;&lt; ' ' &lt;&lt; d(5);\n</code></pre>\n<p>C# :</p>\n<pre class=\"lang-cs prettyprint-override\"><code>class FindSum\n{\n    int d(int n) { int s = 0, i = 1; for (; i &lt;= n; ++i) s += n % i &gt; 0 ? 0 : i; return s; }\n\n    static void Main(string[] args)\n    {\n        var f = new FindSum();\n        Console.WriteLine(string.Format(&quot;{0}, {1}, {2}, {3}, {4}&quot;, f.d(7), f.d(15), f.d(20), f.d(1), f.d(5)));\n    }\n}\n</code></pre>\n<p>D :</p>\n<pre class=\"lang-d prettyprint-override\"><code>writeln(d(7));\nwriteln(d(15));\nwriteln(d(20));\nwriteln(d(1));\nwriteln(d(5));\n</code></pre>\n<p>Java :</p>\n<pre class=\"lang-java prettyprint-override\"><code>public class FindSum {\n    int d(int n){int s=0,i=1;for(;i&lt;=n;++i)s+=n%i&gt;0?0:i;return s;}\n\n    public static void main(String[] args) {\n        FindSum f = new FindSum();\n        System.out.println(String.format(&quot;%d, %d, %d, %d, %d&quot;, f.d(7), f.d(15), f.d(20), f.d(1), f.d(5)));\n    }\n}\n</code></pre>\n"},{"answer_id":254363,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254363#254363","body":"<h1>T-SQL, 125 bytes</h1>\n<pre class=\"lang-sql prettyprint-override\"><code>WITH C as(SELECT len(x)m,0b,*FROM @\nUNION ALL SELECT m-1,b+ascii(right(x,m)),x\nFROM C WHERE\nm&gt;0)SELECT max(b*1./len(x))FROM c\n</code></pre>\n<p><strong><a href=\"https://dbfiddle.uk/mTX9gZl8\" rel=\"nofollow noreferrer\">Try it online</a></strong></p>\n"},{"answer_id":254454,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/254454#254454","body":"<h1>Zsh, 65 bytes</h1>\n<pre class=\"lang-zsh prettyprint-override\"><code>b=(${(s::)@//[^0-9A-Za-z]});for i ({2..$#b})printf $b[i-1]$b[i]\\ \n</code></pre>\n<p><a href=\"https://tio.run/##dY1RT4MwFIXf9ys6Nh1MoYBspjOETWOiMfpgNEs2N0JZWZswim3nJoTfjg7io8lJvnO/@3AKSetEN8oa@3q/1OVkYkwhXK5tE83MRWQWq8q4SbgADOila1n9Hq6MXLBMJaCPl8x0ViesPkBNYso7VScB2gxrLeI/bppyH9CgKbfpXohv8MUk41lj5mQgCOg53eZ6HOxAlAFyjHZ5Slr3RpkEvwkzrkKQki3DKdHA6aVHQzyMjYvR2jy2Jgii8OzS6fpFb/rPIlUqlxMI1YEpRYQV8x0UHKd8y@IQShWpvYSOh5Dn2NcjezxG6Mob224gfdc@V34yLzYvuSue70YP73RRfL4u0NNBq38A\" rel=\"nofollow noreferrer\">try it online!</a></p>\n<p>There is a a space character after the backslash: <code>\\ </code></p>\n"},{"answer_id":254354,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254354#254354","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">MATLAB</a>, <strike>39</strike> 31 bytes</h1>\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(s)max(cellfun(@(x)mean(x),s))\n</code></pre>\n<p>Matlab unfortunately doesn't convert strings (&quot;&quot;) directly to ASCII values using the double function, and if converted to char type then a string array will be padded with spaces to make a proper matrix. As a result, the input is a cellstr type, which needs to be looped over using the cellfun function with an anonymous function that takes the average of the unicode values of the strings (''). The output is then the maximum of those values.</p>\n<p><a href=\"https://tio.run/##y08uSSxL/f/fQaNYMzexQiM5NScnrTRPw0GjQjM3NTEPSOkUa2r@/w8A\" rel=\"nofollow noreferrer\" title=\"Octave – Try It Online\">Try it online!</a></p>\n<p>edit: -8 bytes thanks to Guiseppe</p>\n"},{"answer_id":254236,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254236#254236","body":"<h1><a href=\"http://clang.llvm.org/\" rel=\"nofollow noreferrer\">C (clang)</a>, <sup><s>87</s></sup> <sup><s>86</s></sup> <sup><s>84</s></sup> 81 bytes.</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>v;*p;f(**t,float*r){for(*r=0;p=*t;*r=fmax(*r,v*1./(p-*t++)))for(v=0;*p;)v+=*p++;}\n</code></pre>\n<p><a href=\"https://tio.run/##nZDfboMgGMXv@xTMrQ2g3frvjpjsAfYG3ZZQBHVFYUjVzvjqcxQTk2a7WMrNdzic7/wS2JJJWqbDUBOsiYAY20hIRS02qBPKQGziFdExtsQpUdDWOVGN149PUC@xDUOE0CVXu5hrQHUYYx2GpB/y0oKC5iVEoJsBd3wvMLw6SUtm3nIZDCyv7Hr/BmLQgZcg41KqIHKqUUYmXh3O3M0V6MlYBP1KBBZjGRptbVydgME8fS1dfHq7Jm0mElMJ9/WpksKLylJ29Iq3LHP/8gd2cxt2O2Hvnu894mH@7ucCw9@U7W2U3UT5bLix51Ou9N5TaJWINPs4SuKvXy2rD2URXchX4N1/wf3wzYSkaTUsmx8\" rel=\"nofollow noreferrer\" title=\"C (clang) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":254238,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254238#254238","body":"<h1>PHP 8.x, <s>75</s> 73 bytes</h1>\n<p>Creates an anonymous function that returns the expect values, hopefully.</p>\n<pre class=\"lang-php prettyprint-override\"><code>fn($x)=&gt;max(array_map(fn($z)=&gt;array_sum(unpack('C*',$z))/strlen($z),$x));\n</code></pre>\n<hr>\n<p>-2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/92689/s%CA%A8%C9%A0%C9%A0an\">Sʨɠɠan</a>.</p>\n<h2>How does it work?</h2>\n<p>This uses the <a href=\"https://www.php.net/manual/en/function.unpack.php\" rel=\"nofollow noreferrer\"><code>unpack('C*', ...)</code></a> function to convert all characters into an unsigned char (<code>0</code>-<code>255</code>).<br>\nThis assumes all characters are part of the ASCII table.</p>\n<p>Then it calculates the average using <code>array_sum([...])/strlen([...])</code>.<br>\nThe function <a href=\"https://www.php.net/manual/en/function.array-sum.php\" rel=\"nofollow noreferrer\"><code>array_sum()</code></a> takes an array and returns the sum of all elements, and <a href=\"https://www.php.net/manual/en/function.strlen.php\" rel=\"nofollow noreferrer\"><code>strlen()</code></a> returns the length of the string.</p>\n<p>The function <a href=\"https://www.php.net/manual/en/function.max.php\" rel=\"nofollow noreferrer\"><code>max()</code></a> takes the array with the averages and returns the highest value from it.</p>\n<p>Anonymous functions implicitly return values.</p>\n<h2>Example usage</h2>\n<p>You need to assign this to a variable, or call with <a href=\"https://www.php.net/manual/en/function.call-user-func\" rel=\"nofollow noreferrer\"><code>call_user_func()</code></a> or <a href=\"https://www.php.net/manual/en/function.call-user-func-array.php\" rel=\"nofollow noreferrer\"><code>call_user_func_array()</code></a>:</p>\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?php\n$fn = fn($x)=&gt;max(array_map(fn($z)=&gt;array_sum(unpack('C*',$z))/strlen($z),$x));\n\n// Should output: float(110.4)\nvar_dump($fn(['hello', 'world', 'bye']));\n</code></pre>\n<p>You can try this here (with test examples): <a href=\"https://onlinephp.io/c/2a424\" rel=\"nofollow noreferrer\">https://onlinephp.io/c/2a424</a></p>\n"},{"answer_id":254243,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254243#254243","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, <del>80</del> <del>51</del> 48 bytes</h1>\n<pre><code>0&gt;0001.\n$i:&quot;!&quot;(?v+$1+\n(@:{:,$&amp;/\nv?(0&amp;~$?/.02\n\\n;\n</code></pre>\n<p><a href=\"https://mousetail.github.io/Fish/#eyJ0ZXh0IjoiMDAwMDEuXG4kaTpcIiFcIig/diskMStcbjokQDokLCQmLyhAXG52PygwJn4kPy98LiEwMFxuXFxuOyIsImlucHV0IjoiaGVsbG8gd29ybGQgYnllIiwic3RhY2siOiIiLCJtb2RlIjoibnVtYmVycyJ9\" rel=\"nofollow noreferrer\">Animated Version</a></p>\n<p><del>Requires a extra space at the end of the input.</del> Also assumes no 2 spaces in a row. (no 0 length words). Anything with ORD of 32 or lower is considered white-space.</p>\n<h2>Explanation</h2>\n<p><a href=\"https://i.stack.imgur.com/cObTg.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/cObTg.png\" alt=\"enter image description here\" /></a></p>\n<p>Top row: Push 3 0s on to the stack. The first is the current best ORD, the second is the length of the current word, and the last is the sum of the ord values of the current word. <code>01.</code> is a jump to the next row.</p>\n<p>The second row sums a word. If a character is less than &quot;!&quot; (char value 33) go down. Otherwise sum the word and increment the length. `$1+</p>\n<p>In the third row, we fist push the last value to the register <code>&amp;</code> . We use this to later check if this was the end of the string. Then we divide by the length to get the new ORD value. Then we use the <code>:{:@</code> trick to copy the stack if it has only 2 elements (which is always the case) from the stack and compare them. If the new one is better we swap the stack with <code>$</code>. In either case we delete the top item.</p>\n<p>Lastly, we take the value of the register and check if it is negative, <code>&amp;0(?</code>. If so, we print the maximum ord and exit. If not, we jump back to <code>00</code>. To get the correct direction we use the <code>00!.|</code> trick.</p>\n"},{"answer_id":254244,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254244#254244","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-h</code></a>, 9 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>Takes input as an array of character arrays.</p>\n<pre><code>®xc /ZlÃñ\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LWg&amp;header=bXE&amp;code=rnhjIC9abMPx&amp;input=WyJoZWxsbyIsIndvcmxkIiwiYnllIl0\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>®xc /ZlÃñ     :Implicit input of 2D array of characters\n®             :Map each sub-array Z\n x            :  Reduce by addition of\n  c           :    Codepoints\n    /         :  Divide by\n     Zl       :    Length of Z\n       Ã      :End map\n        ñ     :Sort\n              :Implicit output of last element\n</code></pre>\n"},{"answer_id":203906,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203906#203906","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>8</s> <s>7</s> 8 bytes</h1>\n<p><em>-1 byte thanks to @CommandMaster</em></p>\n<p><em>+1 byte again thanks to @KevinCruijssen finding an issue</em></p>\n<pre><code>žKÃüJðý?\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//6D7vw82H93gd3nB4r/3///b2ifGqOoaKtlXKDgA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n"},{"answer_id":254176,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/254176#254176","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt; (Fish)</a>, <del>26</del> 24 bytes</h1>\n<ul>\n<li>-2 bytes thanks to @Eminga. I didn't want to change the input mode to stack though so I didn't use all the golfing potential. Also I wanted to exit properly and not just error.</li>\n</ul>\n<pre><code>0i:0(?v+7+2d*%!\no+&quot;a&quot;~&lt;;\n</code></pre>\n<p><a href=\"https://mousetail.github.io/Fish/#eyJ0ZXh0IjoiMGk6MCg/dis3KzJkKiUhXG5vK1wiYVwifjw7IiwiaW5wdXQiOiJoZWxsb3dvcmxkIiwic3RhY2siOiIiLCJtb2RlIjoibnVtYmVycyJ9\" rel=\"nofollow noreferrer\">Animated Version</a></p>\n<h2>Explanation:</h2>\n<pre><code>0\n</code></pre>\n<p>Push 0, the starting value</p>\n<pre><code>i:0(?v\n</code></pre>\n<p>Check if the input is negative, if so go down.</p>\n<pre><code>+7+2d*%\n</code></pre>\n<p>Add 7+the input to the accumulator, then mod 26</p>\n<pre><code>!\n</code></pre>\n<p>Skip the 0 the second time, since the accumulator is already set</p>\n<pre><code>~&quot;a&quot;+o;\n</code></pre>\n<p>(Reversed in the program)\nPrint &quot;a&quot; + the accumulator.</p>\n"},{"answer_id":250226,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250226#250226","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, <s>34</s> <s>29</s> <s>26</s> 24 bytes</h1>\n<pre><code>Select[(g@#*=I)&lt;2&amp;]\n_g=1\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b7Pzg1JzW5JFoj3UFZy9ZT08ZILZYrPt3W8H9AUWZeSbSyrl2ag3NGYlFicklqUbGDcqxaXXByYl5dNZdSIhAkAYGSDpCdlAihgSKJiQgWhJ2UmJycBBdNToboSAYiJa7a/wA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input and output a list of characters. Keeps every other occurrence of each letter, starting from the second.</p>\n<pre><code>_g=1                per-character indicator\nSelect[          ]  keep in input where:\n       (g@#*=I)       multiply corresponding indicator by i\n               &lt;2     real result (even number of multiplies)\n                    (all indicators receive an even # of negations,\n                     so indicators are reusable)\n</code></pre>\n"},{"answer_id":254416,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/254416#254416","body":"<h1>C, 43 bytes</h1>\n<pre><code>a;main(z){for(;;)printf(&quot;%d &quot;,a=(z+=a)-a);}\n</code></pre>\n<p><a href=\"https://tio.run/##S9ZNT07@/z/ROjcxM0@jSrM6Lb9Iw9pas6AoM68kTUNJNUVBSSfRVqNK2zZRUzdR09q69v9/AA\" rel=\"nofollow noreferrer\">try it out</a></p>\n"},{"answer_id":254415,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/254415#254415","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 48 bytes</h1>\n<pre><code>$[a r][flatten map combine a r'x-&gt;repeat x\\0x\\1]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?3C6pC1\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":250234,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250234#250234","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 5 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Ụm2Ṣị\n</code></pre>\n<p><strong><a href=\"https://tio.run/##y0rNyan8///h7iW5Rg93Lnq4u/v////JyYmJiUmJSUnJQDIxMRkA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong> Or see the <a href=\"https://tio.run/##y0rNyan8///h7iW5Rg93Lnq4uxvI3nK4/VHTmsj//xOBIAkIuBKTEoEEkJ2YCKWAjKTE5OQkCD85GagkGYgA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">test suite</a>.</p>\n<h3>How?</h3>\n<p>Same idea <a href=\"https://codegolf.stackexchange.com/a/250225/53748\">loopy walt had</a>.</p>\n<pre><code>Ụm2Ṣị - Link: list, X\nỤ     - grade X up -&gt; indices sorted by value\n m2   - mod2 slice -&gt; 1st, 3rd, 5th, etc.\n   Ṣ  - sort\n    ị - index into X\n</code></pre>\n"},{"answer_id":254410,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/254410#254410","body":"<h1><a href=\"https://arturo-lang.io\" rel=\"nofollow noreferrer\">Arturo</a>, 62 bytes</h1>\n<pre><code>$[s][pad.with:`A`join map split s=&gt;[to :char 96+to :integer]5]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?3xB8WZ\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":250306,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250306#250306","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>70</s> 67 bytes</h1>\n<ul>\n<li>Saved three bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">ceilingcat</a>: using K&amp;R-style argument type declaration and a neat <code>write.2</code> call to branch on printing a pointed-to character.</li>\n</ul>\n\n<pre class=\"lang-c prettyprint-override\"><code>p[91];main(_,a)char**a;{for(++a;**a;++*a)write(1,*a,!(p[**a]^=1));}\n</code></pre>\n<p><a href=\"https://tio.run/##S9ZNT07@/78g2tIw1jo3MTNPI14nUTM5I7FISyvRujotv0hDWzvRGsTR1tZK1CwvyixJ1TDU0UrUUdQoiAaKx8bZGmpqWtf@///fMcrR0dHJyQUInZ1dXKIA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":254404,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/254404#254404","body":"<h1>[R] 92 bytes</h1>\n<pre class=\"lang-r prettyprint-override\"><code>fun=\\(s,n)paste0(s,paste(rev(+(intToBits(nchar(gsub(&quot;0&quot;,&quot;&quot;,s))%%2^n)[1:n]==1)),collapse=&quot;&quot;))\n\ndat &lt;- data.frame(s=sapply(tests, function(z) z[[1]]), n=1:4, out=outs)\ndat\n#                              s n                              out\n# 1                        10110 1                           101101\n# 2                      0110101 2                        011010100\n# 3                   1011101110 3                    1011101110111\n# 4 0011001100111101111010011111 4 00110011001111011110100111110010\n\nmapply(fun, dat$s, dat$n) == dat$out\n#                        10110                      0110101                   1011101110 0011001100111101111010011111 \n#                         TRUE                         TRUE                         TRUE                         TRUE \n</code></pre>\n"},{"answer_id":254402,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/254402#254402","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, 88 bytes</h1>\n<pre><code>0l:3(?v1-@$&quot;0&quot;-:}+$10.\n$1-c1.&gt;@@:aap:2(?v$2*\n?v:2%$2,:1%-ab+2.&gt;~%1[:2(\nl&lt;0v?=gaa\n&gt;n&lt;&gt;r]r\n</code></pre>\n<p><a href=\"https://tio.run/##NYrLCsIwEEX3@YwyAbFOmBldDW2S/xAXUfABRaSF7Oyvj4Hi4hw43Ht/LU8zmvS4S5UxQ0cd6rcHpuCA8cYh5qylfFTaA2TvUlXxIAdlj@XaS4ir53Ob3TRQTeOjFBffQ5wvs5lhPRkuRMx/mjdtwT8\" rel=\"nofollow noreferrer\">Try it online</a></p>\n"},{"answer_id":254388,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254388#254388","body":"<h1><a href=\"https://arturo-lang.io/\" rel=\"nofollow noreferrer\">Arturo</a>, 48 bytes</h1>\n<pre><code>$[b]-&gt;max map b=&gt;[average to[:integer]to-&gt;:char]\n</code></pre>\n<p><a href=\"http://arturo-lang.io/playground?jdS2uT\" rel=\"nofollow noreferrer\">Try it</a></p>\n<ul>\n<li><code>$[b]-&gt;</code> A function taking an argument <code>b</code></li>\n<li><code>map b=&gt;[...]</code> Map over the values in <code>b</code> using <code>[...]</code> with the current value implicitly supplied on the far right</li>\n<li><code>to-&gt;:char</code> Convert the implicit string value to a block of chars</li>\n<li><code>to[:integer]</code> Convert the block of chars to a block of integers</li>\n<li><code>average</code> Find the average</li>\n<li><code>max</code> Return the maximum value in the block of averages</li>\n</ul>\n"},{"answer_id":254308,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254308#254308","body":"<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, <s>132</s> 108 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func f(S[]string)(m int){for a,s:=range S{a=0\nfor _,r:=range s{a+=int(r)}\nif a=a*10/len(s);a&gt;m{m=a}}\nreturn}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=NZBNTsMwEIXX-BTG_MXFQNmhVkEcAanLqFRuYieh_gm2Q1usnIRNhMQhuAR7boPdpKs38zya-Z4_v0rd_zQ039CSQUlrBWrZaONuEZcOfbeO3zz8Cd6qHPJkkS2tM7UqcSJhrRz2XBtIiZ2lhqqwYOFpOgXRXBFzNK2n12mYTgzuQM0hTenkfnonmEosntNH6WVKuw4Y5lqjuvHm7-FmJEqwB9bCWQqz5RHAe1QxITQiEG21EUUs1nuGOgI9ynXBolFqwaNaFwLGgu3yKjINY6dPZ9E8v3iJcjlJrgb_bcuM27e1brL4QG3By-p1I-ax-9jl72slCQrEQ9AD2hjVQg9OngOhEyEdCX9mMQYdGFP1_aD_\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<ul>\n<li>-24 bytes by @Sʨɠɠan: return as an int, multiplied by 10</li>\n</ul>\n"},{"answer_id":254373,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254373#254373","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, <s>13</s> 12 bytes</h1>\n<p><em>-1 byte inspired by <a href=\"https://codegolf.stackexchange.com/a/254368/16766\">Aiden Chow's APL answer</a></em></p>\n<pre><code>⌈´+´∘-⟜@¨÷≠¨\n</code></pre>\n<p>Anonymous tacit function; takes a list of strings and returns a float. <a href=\"https://mlochbaum.github.io/BQN/try.html#code=RiDihpAg4oyIwrTCtygrwrTDt+KJoCnCqC3in5xACgpGICJxd2VydHl1aW9wWyLigL8iYXNkZmdoamtsOyLigL8ienhjdmJubSwiCg==\" rel=\"nofollow noreferrer\">Try it at BQN online!</a></p>\n<h3>Explanation</h3>\n<pre><code>⌈´+´∘-⟜@¨÷≠¨\n          ≠¨  Length of each string\n         ÷    Divide the following by the above:\n  +´∘           Sum of\n     -⟜@       Subtract null character from (each character in)\n        ¨       Each string\n⌈             Get the maximum of the resulting list of averages\n</code></pre>\n"},{"answer_id":254356,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/254356#254356","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 2.5 bytes (5 nibbles)</h1>\n<pre><code>.$' '\n</code></pre>\n<p>A function that returns a string of spaces the same length as its argument.<br />\n(This won't work as a full program, since <a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a> will write a newline at the end of its output).</p>\n<pre><code>.                   # map over\n $                  # characters of the argument\n  ' '               # returning a space for each\n</code></pre>\n<p>Obviously the output is invisible, but we can call this function from within a program that wraps the output into quotes to see the output string:</p>\n<pre><code>;~                  # save this function:\n  .$' '             # &lt;convert to invisible text&gt;\n         :'&quot;'$      # prepend saved function results with a quote\n        :     '&quot;'   # and append that with another quote\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/iJN26.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/iJN26.png\" alt=\"enter image description here\" /></a></p>\n<hr />\n<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 3.5 bytes (7 nibbles)</h1>\n<pre><code>&gt;&gt;.$' '\n</code></pre>\n<p>Full program.\nWe can't stop <a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a> from writing the trailing newline at the end of its output, so we shorten the invisible string by one character.</p>\n<pre><code>  .                 # map over\n   $                # characters of the argument\n    ' '             # returning a space for each\n&gt;&gt;                  # and then remove the first character\n</code></pre>\n"},{"answer_id":254368,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254368#254368","body":"<h1><a href=\"https://dyalog.com\" rel=\"nofollow noreferrer\">APL(Dyalog Unicode)</a>, <sup><s></s></sup><s>14</s> 13 bytes <sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<p><em>-1 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/43319/ad%c3%a1m\">Adám</a></em></p>\n<pre><code>⌈/+⌿∘⎕UCS¨÷≢¨\n</code></pre>\n<p><a href=\"https://razetime.github.io/APLgolf/?h=AwA&amp;c=ARoA5f/ijIgvK@KMv@KImOKOlVVDU8Kow7fiiaLCqA&amp;f=S1PPSM3JyVdXUC/PL8pJAdJJlanqXGnqyfkpqUBeen5OGpAqLklMzgbSqRXJGYl56WAVig7KQBGVOFUgqaalARIqLE8tKqkszcwviAYKJhanpKVnZGXnWAM5VRXJZUl5uTrqXAA&amp;i=AwA&amp;r=tryapl&amp;l=apl-dyalog&amp;m=dfn&amp;n=f\" rel=\"nofollow noreferrer\">Try it on APLgolf!</a></p>\n<p>A tacit function which finds the maximum ord. Originally wrote a dfn, but I tried random stuff to convert it to tacit and it somehow worked out.</p>\n<pre><code>⌈/+⌿∘⎕UCS¨÷≢¨\n          ¨              ⍝  for each element in the input...\n     ⎕UCS               ⍝  convert the characters to their ascii values...\n  +⌿∘                   ⍝  and sum the resulting ascii values...\n           ÷             ⍝  divided by...\n            ≢¨           ⍝  the length of each element...\n⌈/                       ⍝  and take the maximum of that\n</code></pre>\n"},{"answer_id":254365,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254365#254365","body":"<h1><a href=\"https://www.jsoftware.com\" rel=\"nofollow noreferrer\">J</a>, 18 bytes</h1>\n<pre><code>[:&gt;./(1#.3&amp;u:%#)&amp;&gt;\n</code></pre>\n<p>Accepts list of boxed strings</p>\n<p><a href=\"https://ato.pxeger.com/run?1=m70wa8FOJT31NAVbKwV1BR0FAwUrINbVU3AO8nFbWlqSpmuxKdrKTk9fw1BZz1it1EpVWVPNDiJxs0eTKzU5I18hTUE9IzUnJ1_dWr08vygnBUgnVaaqwyWT81NSgWLp-TlpQKq4JDE5G0inViRnJOalI6lTdFAGiquoxgFJNS0NhERheWpRSWVpZn5BNFAqsTglLT0jKzvHGsipqkguS8rL1VGHuGnBAggNAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>[:&gt;./(1#.3&amp;u:%#)&amp;&gt;\n[:                  NB. cap, [: f g y -&gt; f (g y)\n                &amp;&gt;  NB. for each input item, result will be unboxed\n     (         )    NB. monadic fork\n              #     NB. length\n         3&amp;u:       NB. convert input to list of char codes\n             %      NB. vectorized division\n      1#.           NB. sum the result to compute average\n  &gt;./               NB. max item\n</code></pre>\n"},{"answer_id":254361,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/254361#254361","body":"<h2>Pascal, 82 B</h2>\n<p>This <code>program</code> merely requires a processor complying to ISO standard 7185 “Pascal”.\nSince it is not guaranteed that <code>writeLn</code> produces exactly one character (on some platforms the line separator is <code>CR+LF</code>), we’ll have to use <code>write(' ')</code>:</p>\n<pre class=\"lang-pascal prettyprint-override\"><code>program p(input,output);begin while not EOF do begin write(' ');get(input)end end.\n</code></pre>\n<p>If input was simply a <code>string</code> value, when an ISO standard 10206 “Extended Pascal” processor is used the following is the shortest solution (<strong>≥ 24 B</strong>):</p>\n<pre class=\"lang-pascal prettyprint-override\"><code>writeStr(outputStringVariable, '':length(inputMyString))\n</code></pre>\n<p>The <code>:someNonNegativeIntegerValue</code> after the empty string <code>''</code> will (left) pad the given argument to the specified width using space characters (<code>' '</code>).\nA complete demonstration:</p>\n<pre class=\"lang-pascal prettyprint-override\"><code>program paddingDemo(output); begin write('':length('Hello, World!')) end.\n</code></pre>\n"},{"answer_id":254122,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/254122#254122","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$4\\log_{256}(96)\\approx\\$</span> 3.292 bytes</h1>\n<pre><code>;M/ \n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyI7TS8gIiwiSGVsbG8sIFdvcmxkISJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Note the space at the end.</p>\n<pre><code>;M/&lt;space&gt;\n;M         # Replace all in the input\n  /&lt;space&gt; # With a space\n;          # Print without newline\n</code></pre>\n"},{"answer_id":253249,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/253249#253249","body":"<h1>C (gcc), <S>50</s> 36 bytes</h1>\n<p>Totally pays off that <code>printf</code> doesn't automatically print a newline.</p>\n<p>36 bytes by ceilingcat</p>\n<pre class=\"lang-c prettyprint-override\"><code>f(char*n){for(;printf(&quot; &quot;+!*n++););}\n</code></pre>\n"},{"answer_id":254296,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254296#254296","body":"<h1>Java 8, <s>81</s> <s>79</s> 56 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>a-&gt;a.mapToDouble(s-&gt;s.chars().average().orElse(0)).max()\n</code></pre>\n<p>Input as a <code>Stream&lt;String&gt;</code> and output as an <code>OptionalDouble</code>.</p>\n<p><a href=\"https://tio.run/##ZVHLbsIwELzzFa77kF3A6rm0qJXaY@mB3hCVFscEB8dObSeQVnx7uiSgPrh4vJ7Z2dE6gwqGWbJupIEQyAto@9UjRNuo/BKkIpN9SUiGOlFGbcRrEbWzYJ5cuTCKSPZDhegV5GLawh2CtumYAB@hxa6HR4gQtSQTYsl9A8MxiByKN9dZsTAcByFX4APjAirlIVV4c/7ZBMVuOEf1lvFmtLcqsAWtDo6V0wnJMTzrps7mwLvgUYXI6EoZ4@iAbpw3CeKiVrSNdRRIlyh8T51ZIqCrXCOqLcax6T/t2cM5cheX73heXbO/5MdG@ViX2hUzpCEky3SVrc0Ii8@trBY2H9CThbTx2/4uvhDimH9ah6hy4cooCqSisb8W/ug91EFE17Ux4H16S2jfCnmq6n4HNfwwf9d8Aw\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-java prettyprint-override\"><code>a-&gt;                  // Method with String-Stream parameter &amp; OptionalDouble return-type\n   a.map             //  Map over the input-Stream\n        ToDouble(s-&gt; //  and convert them to a Stream of Doubles\n      s.chars()      //   Convert the String to an IntStream of its codepoint integers\n       .average()    //   Then take the average of that IntStream (as OptionalDouble)\n       .orElse(0))   //   And convert the OptionalDouble to double\n                     //   (`.orElse(0)` is shorter than `.getAsDouble()`)\n    .max()           //  After the map: leave the maximum (again as OptionalDouble)\n</code></pre>\n"},{"answer_id":254294,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254294#254294","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, 4 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>$m▓╙\n</code></pre>\n<p>Input as a list of lists of characters.</p>\n<p><a href=\"https://tio.run/##TY9BDoIwFET33sKI1pjewI33aGoCIqBSUUBRr2E08XpcpE4/s2DxkmGYzwwubou8KjPvI9d/3/3n570xqlBa7UFJKmW1UZ0orWq6qbgJ1FPy1k5wu2MqHTwkcjrhJhOngWpBDEL@JG5ofNAp@PYM8tHXp9AbMJOLCGoOtvK0gFqBJbNX6I5/UrMxLL2BAzddgJHr0NZwd8bWsOIo@4b1a0m@RjvvIOFOBzS6/w\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>$     # Get the codepoint of each inner-most character of the (implicit) input-list\n m    # Map over each list of integers:\n  ▓   #  Pop and push the average of the list\n   ╙  # After the map: pop and push the maximum\n      # (after which the entire stack is output implicitly as result)\n</code></pre>\n"},{"answer_id":254290,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254290#254290","body":"<h1>Excel (ms365), 70 bytes</h1>\n<p><a href=\"https://i.stack.imgur.com/OYTTN.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OYTTN.png\" alt=\"enter image description here\" /></a></p>\n<p>Formula in <code>F1</code>:</p>\n<pre><code>=MAX(MAP(A1:C1,LAMBDA(a,SUM(CODE(MID(a,SEQUENCE(LEN(a)),1)))/LEN(a))))\n</code></pre>\n"},{"answer_id":254263,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254263#254263","body":"<h1><a href=\"https://julialang.org\" rel=\"nofollow noreferrer\">Julia</a>, 34 bytes</h1>\n<pre><code>!a=max(sum.(Int,a)./length.(a)...)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=dZBNbsIwEIXFtqdIHIoclA6JBBRUIXXbMwCVjOP8gGPTxCmhV-mGDYeC05AJRMqinc17I837RjO_520pU3Y6nUsTvcwuxGaLjFW0KDOgH8p4zIWRFCo2CdDaA7j3yWuP7vNUGamovSSJkFITzyIHncsQzeYoyNq1_ignCHwYP3XSXIcCM7GWEWphGN-hERVPmIq7JCfwpzDrpu13B2dX_edP1MGQ_rMY05MJvFojq5Zpq40RhkMX-nUQuTmWqd4vEcqKMIqT7U6-YfdT8e-NyrzHnuageQ1pNGiNP39w7w9rX3wD\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":254233,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254233#254233","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"noreferrer\">K (ngn/k)</a>, <s>18</s> 11 bytes</h1>\n<pre><code>|/{+/x%#x}'\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6rRr9bWr1BVrqhV5+LSV0iLVspIzcnJV4rl4kqL1oByrJXK84tyUoB0UmWqkmYsALq+EBc=\" rel=\"noreferrer\">Try it online!</a></p>\n<p><em>Massive -7 bytes golf thanks to Steffan!</em></p>\n<p>Damn everyone is answering quick. Anyways here's my solution. Takes input as a list of strings.</p>\n<p>Explanation:</p>\n<pre><code>|/{+/x%#x}'  Main function. Takes implicit input\n          '  For each string in the input...\n  {      }   Execute a function that...\n   +/x       Takes sum of every character in the string\n      %      And divide it by\n       #x    The length of the string\n|/           Get the maximum value\n</code></pre>\n"},{"answer_id":254260,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254260#254260","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a> (v2), 56 bytes</h1>\n<pre><code>;=mF;W=pP;=s!=i~1;W&gt;Lp=i+1i=s+*10A Gp iTs&amp;&lt;m=t/sLp=m tOm\n</code></pre>\n<p><a href=\"https://knight-lang.netlify.app/#WyI7PW1GO1c9cFA7PXMhPWl+MTtXPkxwPWkrMWk9cysqMTBBIEdwIGlUcyY8bT10L3NMcD1tIHRPbSIsImNvZGVcbmdvbGZcbnN0YWNrXG5leGNoYW5nZSIsIjIuMCJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Because Knight doesn't support floating point values, it outputs the maximum average ord multiplied by <span class=\"math-container\">\\$10\\$</span>, as allowed by the rules:</p>\n<blockquote>\n<p>It may be rounded to any number (<span class=\"math-container\">\\$\\ge1\\$</span>) of decimal places. If your language does not support floating points, you may output the average multiplied by 10.</p>\n</blockquote>\n"},{"answer_id":254259,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254259#254259","body":"<h1><a href=\"https://wren.io/\" rel=\"noreferrer\">Wren</a>, 68 bytes</h1>\n<pre class=\"lang-wren prettyprint-override\"><code>Fn.new{|x|x.reduce(0){|y,z|y.max(z.bytes.reduce{|a,b|a+b}/z.count)}}\n</code></pre>\n<p><a href=\"https://wren.io/try/?code=PTAWFMEMBNwJwFADdJwAQDMC8CEgMYD2sCAYgHYB054A7gN4A+AHi5XONAK77gAUABgCUTAJ4AaAF6NRlALaRmfSZQBGogC7gAzu049wTSONWNIAalUBfYCqJdyGoVau4QGQoS2IA2j4BEEAA2QYT+4v60hHBB0OH+6uD+ALriCGgBRLDxAOaEQRjx2hqQ+ADW8eDM+KCQ5DlJqekBAIQAAgDE8QAkADoApAB64Wj+AGQAVHwpaRn+AI608BqiXACWhAAOARGQ2tAYOaAAVmVBANzxktVIquRyKcmUUDVMrADKosXgcpSbcGtHHwMJR8JAQnxmEJnAggA\" rel=\"noreferrer\">Try it</a></p>\n"},{"answer_id":254258,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254258#254258","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 12 bytes</h1>\n<pre><code>M:$+A*_/#_Mg\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJNOiQrQSpfLyNfTWciLCIiLCIiLCItcCBxd2VydHl1aW9wWyBhc2RmZ2hqa2w7IHp4Y3Zibm0sIl0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n"},{"answer_id":254231,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254231#254231","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>10 9</s> 4 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ÇÅAà\n</code></pre>\n<p>-5 thanks to Sʨɠɠan</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//cPvhVsfDC/7/j1bKSM3JyVfSUVAqzy/KSQExkipTlWIB\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<p><strong>Explained:</strong></p>\n<pre class=\"lang-python prettyprint-override\"><code>ÇÅAà  # Implicit input as a list\n      # Implicit map over the input:\nÇ     #   Get the ord of each character\n ÅA   #   Get the average of the ords\n   à  # Get the maximum value\n</code></pre>\n"},{"answer_id":254251,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254251#254251","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 4 bytes</h1>\n<pre><code>OÆmṀ\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9//cFvuw50N////j1bPAArlq@soqJfnF@WkgBhJlanqsQA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":254250,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254250#254250","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$6\\log_{256}(96)\\approx\\$</span> 4.939 bytes</h1>\n<pre><code>]KemMC\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJdS2VtTUMiLCJbaGVsbG8sd29ybGQsYnllXSJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>]KemMC\n     C - Charcodes\n  emM  - Mean of each\n K     - Sort\n]      - Last\n</code></pre>\n"},{"answer_id":254249,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254249#254249","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>G</code>, 3 bytes</h1>\n<pre><code>Cvṁ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyLhuItHQSIsIiIsIkN24bmBIiwiIiwiWydoZWxsbycsICd3b3JsZCcsICdieWUnXVxuWydjb2RlJywgJ2dvbGYnLCAnc3RhY2snLCAnZXhjaGFuZ2UnXVxuWychQCMnLCAnJCVeJywgJyYqKCddXG5bJ3F3ZXJ0eXVpb3BbJywgJ2FzZGZnaGprbDsnLCAnenhjdmJubSwnXSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":254248,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254248#254248","body":"<h1>Mathematica, 29 bytes</h1>\n<pre><code>Max[Mean/@ToCharacterCode@#]&amp;\n</code></pre>\n<p><a href=\"https://www.wolframcloud.com/obj/acdc57e3-3e30-449f-91e1-4fe95d3faafe\" rel=\"nofollow noreferrer\">View it on Wolfram Cloud!</a></p>\n"},{"answer_id":254247,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254247#254247","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"noreferrer\">Pyth</a>, 7 bytes</h1>\n<pre><code>eSm.OCM\n</code></pre>\n<p><a href=\"https://pythtemp.herokuapp.com/?code=eSm.OCM&amp;test_suite=1&amp;test_suite_input=%5B%27hello%27%2C+%27world%27%2C+%27bye%27%5D%0A%5B%27code%27%2C+%27golf%27%2C+%27stack%27%2C+%27exchange%27%5D%0A%5B%27%21%40%23%27%2C+%27%24%25%5E%27%2C+%27%26%2a%28%27%5D%0A%5B%27qwertyuiop%5B%27%2C+%27asdfghjkl%3B%27%2C+%27zxcvbnm%2C%27%5D&amp;debug=0\" rel=\"noreferrer\">Test suite</a></p>\n<h5>Explanation:</h5>\n<pre><code>eSm.OCM   | Full program\neSm.OCMdQ | with implicit variables\n----------+-------------------------------\n  m     Q | For each word in the input,\n     CMd  |  Get the ord of each character\n   .O     |  Get the average\neS        | Get the max\n</code></pre>\n"},{"answer_id":254246,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254246#254246","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, 38 bytes</h1>\n<pre><code>\\(x)max(sapply(Map(utf8ToInt,x),mean))\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGiNNulpSVpuhY31WI0KjRzEys0ihMLCnIqNXwTCzSAMhYh-Z55JToVmjq5qYl5mpoQ1bcYBdI0kjXUM1JzcvLVdRTUy_OLclJAjKTKVHVNTWUFLMDQ0EDPhAusLzk_JRWkOj0_Jw1EF5ckJmeDGKkVyRmJeekoZhgamOlZQPQpOiiDVKmoxoEoNS0NXHaBgKmpnrmCPogyg9FgRmpJsh7EuMLy1KKSytLM_IJokHmJxSlp6RlZ2TnWIF5VRXJZUl6uDswKkPMtgdrBtCGMYWAJNRESMAsWQGgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>               Map(utf8ToInt,x)        # for every string in the input, store the vector of its codepoints in a list\n        sapply(                ,mean)  # apply mean to each of the list elements and return a vector\n\\(x)max(                             ) # take max\n</code></pre>\n"},{"answer_id":254242,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254242#254242","body":"<h1><a href=\"https://github.com/molarmanful/sclin\" rel=\"nofollow noreferrer\">sclin</a>, 38 bytes</h1>\n<pre><code>&quot;dup S&gt;c0\\+ fold rev len /&quot;map0\\| fold\n</code></pre>\n<p><a href=\"https://replit.com/@molarmanful/try-sclin\" rel=\"nofollow noreferrer\">Try it here!</a> This might be a good case for adding sum/prod/min/max functions to sclin, the fold construct is alright but it could be better.</p>\n<p>For testing purposes:</p>\n<pre><code>[&quot;hello&quot; &quot;world&quot; &quot;bye&quot;] ; 30N&gt;d n&gt;o\n&quot;dup S&gt;c0\\+ fold rev len /&quot;map0\\| fold\n</code></pre>\n<h2>Explanation</h2>\n<p>Prettified code:</p>\n<pre><code>( dup S&gt;c 0 \\+ fold rev len / ) map 0 \\| fold\n</code></pre>\n<p>Assuming input list <em>xs</em>.</p>\n<ul>\n<li><code>(...) map</code> map over <em>xs</em>...\n<ul>\n<li><code>dup S&gt;c</code> get codepoints</li>\n<li><code>0 \\+ fold</code> sum</li>\n<li><code>rev len /</code> divide by length (i.e. average)</li>\n</ul>\n</li>\n<li><code>0 \\| fold</code> maximum</li>\n</ul>\n"},{"answer_id":254235,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254235#254235","body":"<h1><a href=\"https://factorcode.org\" rel=\"nofollow noreferrer\">Factor</a>, 24 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 0 [ mean max ] foldl ]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=dVA7TsQwEBVtTjEbLQghYRKBQpZt6BANDaKKFuF1nA_rxFnbYRMQJ6GJhKDgBNQcg9MwickWSEwxb8ae997YL-8JZUaq7nvn7ub68uriDESujYaCmoxoQw12OfvtpYq5wgHDFRUaNF_XvGRcQ6W4MW2l8tLA3HGmTw5guBkXQrrgbqQSMeKy5S4c9wbwNybg-x45sTwmYxx0UykSBNyCrRB5wzJaplsJJkvd87yAhJY3Of96xcHp7i3mvYP9_8ysYRiQUzjqIRhxKLhhxOqtN1yZts5lFaEg1XGSZvcrMcfmsWEPy7LYOtj9Z0gf0B8LbzYqPr_VJjkMPyPwIIKC0xI_tYEFJFLEAhb2-qOgFQwvJvag6yz-AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Just fold with the max of the mean.</p>\n"},{"answer_id":254226,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254226#254226","body":"<h1><a href=\"https://github.com/nayakrujul/sequences/\" rel=\"nofollow noreferrer\">Sequences</a>, <span class=\"math-container\">\\$9 \\log_{256}(96) \\approx 7.41\\$</span> bytes</h1>\n<pre><code>[$v$aH]gM\n</code></pre>\n<h3>Explanation</h3>\n<pre class=\"lang-js prettyprint-override\"><code>[$v$aH]gM  // Implicit list of string input\n[     ]    // Loop through the input list:\n $v$       //   Get a list of ords of each character\n    aH     //   Get the average and append to `g`\n       g   // Push the list `g`\n        M  // Get the maximum value\n           // Implicit output\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/OUb2h.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/OUb2h.png\" alt=\"Screenshot\" /></a></p>\n"},{"answer_id":254234,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254234#254234","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 8 bytes (16 nibbles)</h1>\n<pre><code>`/.$/*+.$o$10,$]\n</code></pre>\n<p>Nibbles works only in integers, so this returns the maximum average ord multiplied by 10 (and rounded-<em>down</em> to a whole number).</p>\n<pre><code>`/.$/*+.$o$10,$]\n  .$              # map over each input string\n       .$         #   map over each character\n         o$       #     getting it's ord \n      +           #   sum them all\n     *     10     #   multiply by 10\n    /             #   and divide by    \n             ,$   #   the length of the string\n`/                # finally, fold over the list\n               ]  #   getting the max of each pair\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/lGAgd.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/lGAgd.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":254232,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254232#254232","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 48 bytes</h1>\n<pre class=\"lang-rb prettyprint-override\"><code>-&gt;l{l.map{_1.chars.sum(&amp;:ord)/_1.size.to_f}.max}\n</code></pre>\n<p>As the division of two integers in ruby gives an integer, and what was expected was a float, it's long :/<br>\nAnd <code>.fdiv</code> is one byte longer</p>\n<p><a href=\"https://ato.pxeger.com/run?1=XY5LDoJAEET3nkLjZ8AA6s5oNN4DPwFmBpCBwfkoSDyJGxL1UN5GOhoTXVV1v6p0X-9C-2V9o4v1QytqT59je8kq5qReXu0mThB5QjpSp8ZgxgU2R81OxmfiKL6jlyZVXD69W66VNKjroogwxpHVRicuGAbjlwRtNmbrGwk4JgBCziioVF6QgCFFczEL_-KdVRdgr78FGQyNX3w4EaFKHfPcBe5JTMNon7A5TOciOPpZakHl_Wpdv_UF\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":254229,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254229#254229","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 58 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;Math.max(...a.map(s=&gt;eval(Buffer(s).join`+`)/s.length))\n</code></pre>\n<p><a href=\"https://tio.run/##ZY/dasJAEIXv@xQptN1daycRalBKpPS@TyAWx83@JK67aXaNsS@fuiC0mLk558DMx5kaO/S8rZrwYl0pBlkMWKw@MWg4YE8BAC@mob5YiQ4N/ThKKVrqGdSustvnLUs9GGFV0IwN3FnvjADjFJV0TbQwxpFpQk6uNWU0u7Mgm@RmGEvSNJnNMni9u0XwS6t4qJyRUX1Avo9G9FyjVVfcFZHlsBgh7t/j/sPjV5SnCR0X@NdiPoc8zwFGlO@TaMP5WLlmHTnoS6l0vTdvMf30vNvZw5Rs/n5ZZkuA4Rc\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":254225,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254225#254225","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 46 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda l:max(sum(map(ord,s))/len(s)for s in l)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=XY5bCsIwEEX_XUXERxOp-iuK4D58QNokbXWS1CTV1q34UxB1Te5GBgXBr3OHcy_M9VE2Ibemvanl5l4FNZ69JsB1IjiBueY19ZWmmpfUOhF7xqYgDfVMWUc8KQwB9l09S1eYQBVdR7kEsFFMorN1IDAkjYy2jHV-ndQKiSazoJA-8PSAQdZpzk323--uemj7gx1iOKJ__niWLjRVYcs1FrgXKsv3B1jgdanTU2J0jJvPu2374Rs\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Unfortunately, the only built-in <code>mean</code> function Python has is in the <code>statistics</code> module, and that's too expensive to import.</p>\n"},{"answer_id":254228,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254228#254228","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 15 bytes</h1>\n<pre><code>ＷＳ⊞υ∕ΣＥι℅κＬιＩ⌈υ\n</code></pre>\n<p><a href=\"https://tio.run/##FYtBDsIgEADvvILjkuALPOrFRGOTvmADK2xKoaFL7e8Rj5OZcRGrK5h6/0ZOpOGRtyazVM4BjNFT2yM0q@98sCeY2wov3ICtflfPGRMsxhirn5SDROABVzWNW@CGu4z45HVM7S96d8WTCiV91C7oFkWni5gDqX450g8\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Takes input as a list of newline-terminated strings. Explanation:</p>\n<pre><code>ＷＳ\n</code></pre>\n<p>Repeat until the end of the list is reached...</p>\n<pre><code>⊞υ∕ΣＥι℅κＬι\n</code></pre>\n<p>... take the ordinals of the characters in the string, and divide their sum by the string's length.</p>\n<pre><code>Ｉ⌈υ\n</code></pre>\n<p>Output the maximum average.</p>\n"},{"answer_id":254227,"question_id":254224,"link":"https://codegolf.stackexchange.com/questions/254224/maximum-average-ord/254227#254227","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 6 bytes</h1>\n<pre><code>▲moAmc\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//9G0Tbn5jrnJ////j1bKSM3JyVfSUSrPL8pJAdJJlalKsQA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<p>Outputs the highest average ord value as an exact fraction.</p>\n<pre><code>▲moAmc\n mo    # map 2 functions over each element of input\n    mc #   get ord values of each character\n   A   #   get the average of those\n▲      # output the maximum.\n</code></pre>\n"},{"answer_id":254173,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/254173#254173","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, <s>16</s> 14 bytes</h1>\n<pre><code>`c$97+26!+/97!\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs0pIVrE01zYyU9TWtzRX5OJKi1bKSM3JyS/PL8pJUYoF8ROTklNS0yDs5PyU1PT8HCivuCQxOTu1IjkjMS89FaoYBJRiAZ5hG88=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>-2 bytes thanks to coltim!</em></p>\n<p>Explanation:</p>\n<pre><code>`c$97+26!+/97!  Main function. Takes implicit input\n           97!  Modulo by 97 to each character in the string\n                to convert them into the 0..25 system\n                (In K, every character in a string is also an ASCII charcode)\n         +/     Sum\n      26!       Modulo by 26\n   97+          + 97 to each of them to convert them back to ASCII charcode\n`c$             And convert them back to characters\n</code></pre>\n"},{"answer_id":253595,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253595#253595","body":"<h1>Mathematica, <s>60</s> 48 bytes</h1>\n<pre><code>FromLetterNumber[Tr[LetterNumber@#-1]~Mod~26+1]&amp; \n</code></pre>\n<p><a href=\"https://www.wolframcloud.com/obj/ec33c9bc-7802-4cb5-ace8-cd76d01dae4e\" rel=\"nofollow noreferrer\">View it on Wolfram Cloud!</a></p>\n<p><em>-12 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/88906/jsorngard\">JSorngard</a>!</em></p>\n"},{"answer_id":254114,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/254114#254114","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-m</code></a>, 1 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">byte</a></h1>\n<pre><code>S\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LW0&amp;code=Uw&amp;input=IkludmlzaWJsZSBUZXh0IgotUQ\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>S     :Implicit map of each character in input string\nS     :Literal space\n</code></pre>\n<h2>Less Trivial (w/o flag), 3 bytes</h2>\n<pre><code>r.S\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=ci5T&amp;input=IjEyMyIKLVE\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>r.S     :Implicit input of string\nr       :Replace\n .      :RegEx /./g\n  S     :With space\n</code></pre>\n<h2>Even Less Trivial, 6 bytes</h2>\n<pre><code>©SißUÅ\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=qVNp31XF&amp;input=IjEyMyIKLVE\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>©SißUÅ     :Implicit input of string U\n©          :Logical AND with\n Si        :Space prepended with\n   ß       :  Recursive call with argument\n    UÅ     :    U with first character removed\n</code></pre>\n"},{"answer_id":254112,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/254112#254112","body":"<h1><a href=\"https://esolangs.org/wiki/Makina\" rel=\"nofollow noreferrer\">makina</a>, 28 bytes</h1>\n<pre><code>v&gt;&gt;&gt;n0;\n&gt;wPH\nvO*OL\nti ^C\n&gt; ;\n</code></pre>\n<p>Uses a few clever tricks, like using the space literal to stop the input instruction. Sadly, it's pretty difficult to explain makina, but you can look at the <a href=\"https://esolangs.org/wiki/Makina\" rel=\"nofollow noreferrer\">esolangs.org page</a> if you want to figure out how this program works.</p>\n"},{"answer_id":254079,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/254079#254079","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a> (v2), 36 bytes</h1>\n<pre><code>;=sP;=i@O;Ws;=i+~-97iAs=s]sA+97%i 26\n</code></pre>\n<p><a href=\"https://knight-lang.netlify.app/#WyI7PXNQOz1pQE87V3M7PWkrfi05N2lBcz1zXXNBKzk3JWkgMjYiLCJoZWxsb3dvcmxkIiwiMi4wIl0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>I feel like you can golf better but i tried for awhile and gave up</p>\n"},{"answer_id":254004,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/254004#254004","body":"<h1><a href=\"https://github.com/splcurran/Gaia\" rel=\"nofollow noreferrer\">Gaia</a>, <s>16</s> 15 bytes</h1>\n<pre><code>⟨c97%⟩¦Σ26%97+c\n</code></pre>\n<p><a href=\"https://tio.run/##S0/MTPz//9H8FcmW5qqP5q88tOzcYiMzVUtz7eT//4tLEpOzUyuSMxLz0lMB\" rel=\"nofollow noreferrer\" title=\"Gaia – Try It Online\">Try it online!</a></p>\n<p>Pretty standard implementation of what the challenge asks.</p>\n<p>I was able to save a byte thanks to the golfing advice given by<br />\nDominic van Essen!</p>\n<h2>Explained</h2>\n<pre><code>⟨c97%⟩¦Σ26%97+c\n⟨    ⟩¦           # To each letter in the input {\n c97%            #  modulo the character code by 96\n                 #  }\n       Σ26%      # Get the sum of that list and modulo 26\n          97+c   # and add 97 to turn it back into an ascii letter\n</code></pre>\n"},{"answer_id":253710,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253710#253710","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a> v4.2.0, <strike>63</strike> 59</h1>\n<p><em>-4 thanks to Dominic van Essen</em></p>\n<pre><code>\\(x,l=letters)l[(sum(match(el(strsplit(x,&quot;&quot;)),l)-1)%%26)+1]\n</code></pre>\n<p>The input string <code>x</code> is parsed as characters, and <code>match</code> is used to retrieve the index of each character in the <code>letters</code> builtin, minus one to convert from 1-based to 0-based.</p>\n"},{"answer_id":253984,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253984#253984","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>44</s> 43 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>letters[sum(utf8ToInt(scan(,&quot;&quot;))-97)%%26+1]\n</code></pre>\n<p><a href=\"https://tio.run/##K/r/Pye1pCS1qDi6uDRXo7QkzSIk3zOvRKM4OTFPQ0dJSVNT19JcU1XVyEzbMPZ/RmpOTn55flFOyn8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>(or <a href=\"https://ato.pxeger.com/run?1=m72waMHK5IzU5Ozi0lzbpaUlaboWN9VjNCo0c1JLSlKLiqOB4hpAYYuQfM-8EqC4rqW5pqqqkZm2YSxE-TaYdg2ljNScnPzy_KKcFCVNiOSCBRAaAA\" rel=\"nofollow noreferrer\">39 bytes</a> as a function in <a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a> ≥ 4.1).</p>\n"},{"answer_id":253998,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253998#253998","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 43 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f s=['a'..]!!mod(sum[fromEnum c-97|c&lt;-s])26\n</code></pre>\n<p><a href=\"https://tio.run/##Vcy9DoIwFAXgvU9x6QImlsFBYyKjo09AGK79oYT@EArRRH32Kigaz3Ryc@6nMbTSmBgVhKJMMc3zKkmsF1kYbal6b49utMDZfnfnBxaq1WYbLTYOCrDYnSDr@sYNkINaQUn1y/IX3xtB10DxzIVUU@NeyNqbuYcBeSuvXKOr5TybQitCboz8AJjSkrcBSzqyUJ@DJn8egCSz9/0AJOwRnw\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<h3>Same-length alternative:</h3>\n<pre class=\"lang-hs prettyprint-override\"><code>f s=['a'..]!!mod(sum$do c&lt;-s;1&lt;$['b'..c])26\n</code></pre>\n<p><a href=\"https://tio.run/##VcxNDoIwEAXg/ZxiaEiQREh04UY4gicgLIa2UEJLCcVoYjx7BRSNb/UyP58i10mtva/R5UVEUZqWQWCs2LmrCYVFniXufMjCIqrmHS/j48kbanvM0dBwwd0wtv2EKdYxFkzNlr3ZUQu2R0YVF7JeGrdCNlav3U3EO3nnivpGrmdLWAnwSOAH4JIO3gZuGWCjPgMFfx6ihNX7fiBB8vQv\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":89777,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/89777#89777","body":"<h1>Python 33 bytes</h1>\n<pre><code>x,y=0,1\nwhile 1:print x;x,y=y,x+y\n</code></pre>\n<p>This will be an infinite loop!</p>\n<hr />\n<h1>Python 31 bytes</h1>\n<pre><code>def f(a=[1,0]):a[:]=a[1],sum(a)\n</code></pre>\n<p>demonstration</p>\n<pre><code>for _ in range(10):\n    f(); print f.func_defaults[0][0]\n\n0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n</code></pre>\n"},{"answer_id":111,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/111#111","body":"<h1>Ruby, <strike>29 27 25</strike> 24 bytes</h1>\n<pre><code>p a=b=1;loop{b=a+a=p(b)}\n</code></pre>\n<p>Edit: made it an infinite loop. ;)</p>\n"},{"answer_id":137668,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137668#137668","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, <s>7</s> 6 bytes</h1>\n<pre><code>1#.+/\\\n</code></pre>\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuo2CgYAXEunrOQTo@bv8NlfW09WP@a3KVJIPkDRSsFQzB2AhKGgNpSzAE8Q3g0FrBTMFUwQQob6RgyMWVmpyRr6BhaKCmrKegEa2jrqBrB7QsVlNNyUohTVPBwU4BaMF/AA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a> Takes a list of digits, such as <code>f 6 5 4 3 2 1</code>.</p>\n<h2>Explanation</h2>\n<p>The current explanation is same as the old, but noting that <code>1#.x</code> ⇔ <code>+/x</code> (both compute sum).</p>\n<p>Old:</p>\n<pre><code>[:+/+/\\    (for explanation, input = 6 5 4 3 2 1)\n      \\    over the prefixes of the input:\n     /         reduce:\n    +              addition (summation)\n           this gives is the cumulative sum of the input:  6 11 15 18 20 21\n[:         apply to the result:\n  +/           summation\n           this gives the desired result:   90\n</code></pre>\n<p>A little more true to the original problem would be <code>[:+/@,]/</code>, which is &quot;sum&quot; (<code>+/</code>) the flattened (<code>,</code>) prefixes of the input (<code>]\\</code>).</p>\n"},{"answer_id":253242,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/253242#253242","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, <s>14</s> 13 bytes</h1>\n<pre><code>{x,(1+#x)#&quot;&quot;}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6qu0NEw1Fau0FRWUqrl4kqLVvJIzcnJVyjPL8pJUVSKBYtkQmgFZAAVUooFAGiUEHQ=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>-1 byte thanks to ngn!</em></p>\n<p>Dead simple.</p>\n<p>Explanations:</p>\n<pre><code>{x,(1+#x)#&quot;&quot;}    Main function. Takes x as input\n x,              x concat with\n          &quot;&quot;     An empty string (Implicit whitespace)\n         #       Duplicate with the amount of\n   (  #x)        Length of x\n    1+           + 1 times\n</code></pre>\n"},{"answer_id":253184,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/253184#253184","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, <s>10</s> 8 bytes</h1>\n<pre><code>+/+\\.'$:\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs9LW147RU1ex4uJKizY1Njc0iwUyzExNjI0MQSxDI2MQZWlpGQsA36wKWw==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>-2 bytes thanks to ngn</em></p>\n<p>Pretty basic train.</p>\n<p>Explanation:</p>\n<pre><code>+/+\\.'$:    Main function. Takes implicit input with Right (:)\n      $     Convert input to string\n     '      For each of the characters\n    .       Eval them, converting them into a number\n  +\\        Cumulative sum\n+/          Sum\n</code></pre>\n"},{"answer_id":253793,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/253793#253793","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 6 bytes</h1>\n<pre><code>median\n</code></pre>\n<p><a href=\"https://tio.run/##jY8/C8IwFMT3fIrzAzTYNPEvuIqLiziJQ4gRMzTG5DlI6WePsdC5HhzHu4MfvLs29Iz5fDoc9xsk@3pbb2xCiJboE6LzhFbTgyfS5BI5k7BlrGMdagg0kFBYYIkV1ugxQ7WDGkZZRjFWgg8lV5OuSsx/KldTLEdE/TdiEtPjklt7c9rna/kugOcv\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253792,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/253792#253792","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 16 bytes</h1>\n<pre><code>SN:g(CHg+Rgoi)/2\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJTTjpnKENIZytSZ29pKS8yIiwiIiwiIiwiMSA0IDMgMiJd\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<h3>Explanation</h3>\n<pre><code>SN:g(CHg+Rgoi)/2\n   g              List of command-line arguments\nSN:               Sort it (using numeric comparison) in-place\n       g          Take that sorted list\n        +         Add it (element-wise) with\n         Rg       Its reverse\n     CH           Chop into two halves (if odd length, second half is longer)\n    (      oi)    Select the item at index 0 of the sublist at index 1 (o=1, i=0)\n              /2  Divide it by 2\n</code></pre>\n"},{"answer_id":253780,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253780#253780","body":"<h1><a href=\"https://github.com/nayakrujul/bits\" rel=\"nofollow noreferrer\">Bits</a>, 130 bits = 16.25 bytes</h1>\n<pre class=\"lang-js prettyprint-override\"><code>1110000111000001110001011111110111010100000001100111110101011100011000000110001011001101101110000000110100111001111101010111111100\n</code></pre>\n<p>This was very painful.</p>\n<h3>Explanation</h3>\n<pre class=\"lang-js prettyprint-override\"><code>11100001   // Get a string input\n1100000    // Push 0 to the stack [this will be our running sum]\n11100010   // For each character in the input string:\n111111101  //   Get ord(c)\n1101010    //   Add [to the running sum]\n000000     //   Separator so the numbers don't get joined together\n1100111    //   Push 7\n1101010    //   Add [to the running sum]\n11100011   // ENDFOR\n000000     // Separator so the numbers don't get joined together\n1100010    // Push 2\n1100110    // Push 6 [this gets joined into 26]\n1101110    // Mod our running sum by 26\n000000     // Separator so the numbers don't get joined together\n1101001    // Push 9\n1100111    // Push 7 [this gets joined into 97]\n1101010    // Add [to the result of the mod]\n111111100  // Get chr(x)\n           // [implicit output of the item on the top of the stack]\n</code></pre>\n<h3>Output</h3>\n<p><a href=\"https://i.stack.imgur.com/QELKh.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/QELKh.png\" alt=\"output\" /></a></p>\n"},{"answer_id":253768,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/253768#253768","body":"<h1>K - 8 bytes</h1>\n<pre><code>+/[;1;0]\n</code></pre>\n<h2>Explanation</h2>\n<p>It makes use of ngn/k's recurrence builtin.</p>\n<h2>How to use</h2>\n<p>Calculates the <code>n</code>th fibonacci number.</p>\n<p>To calculate the <code>n</code>th put the number at the end of the program:</p>\n<pre><code>+/[;1;0]40\n</code></pre>\n"},{"answer_id":253759,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253759#253759","body":"<h1><a href=\"https://www.jsoftware.com\" rel=\"nofollow noreferrer\">J</a>, 19 bytes</h1>\n<pre><code>(26|+/)&amp;.(_97+3&amp;u:)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70wa8FOJT31NAVbKwV1BR0FAwUrINbVU3AO8nFbWlqSpmuxWcPIrEZbX1NNTyPe0lzbWK3UShMic9NVkys1OSNfyUAhTc1OQT0jNScnvzy_KCdF3Vo9MSk5JTUNyEjOT0lNz88BMYtLEpOzUyuSMxLz0lNBakBAHWLYggUQGgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>(26|+/)&amp;.(_97+3&amp;u:)\n       &amp;.            NB. F&amp;.G y applies G⁻¹(F(G x)) to y, rank is decided by G\n         (_97+3&amp;u:)  NB. fork converting str to char codes and subtracting 97 from each\n(26|+/)              NB. fork that sums the arg and mods the result by 26\n                     NB. +/ can be used because u: operates on y as a whole\n                     NB. The inverse of G in this case would be to add 97 to\n                     NB. the result of F and then convert char code to str\n</code></pre>\n"},{"answer_id":253632,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253632#253632","body":"<h2>x86‑64 assembly machine code, 30 B</h2>\n<h3>input</h3>\n<ul>\n<li>unsigned length of string in 64‑bit register <code>rdi</code></li>\n<li>address of string buffer in 64‑bit register <code>rsi</code></li>\n</ul>\n<h3>code listing</h3>\n<pre><code> 1                 alphabet_checksum:\n 2 0000 6A61        push 'a'                    ; push(97)\n 3 0002 58          pop rax                     ; pop(rax)\n 4 0003 F7E7        mul edi                     ; edx○eax ≔ eax × edi\n 5                  \n 6 0005 F7D8        neg eax                     ; eax ≔ −eax; CF ≔ eax ≠ 0\n 7 0007 7310        jnc .adjust                 ; if ¬CF then goto adjust\n 8                 .sum:\n 9 0009 0FB64C3EFF  movzx ecx, byte [rsi+rdi-1] ; ecx ≔ (rsi + rdi − 1)↑\n10 000E 01C8        add eax, ecx                ; eax ≔ eax + ecx\n11 0010 FFCF        dec edi                     ; edi ≔ edi − 1; ZF ≔ edi = 0\n12 0012 75F5        jnz .sum                    ; if ¬ZF then goto sum\n13                  \n14 0014 6A1A        push 26                     ; push(26)\n15 0016 5F          pop rdi                     ; pop(rdi)\n16 0017 F7F7        div edi                     ; edx ≔ edx○eax mod edi\n17                 .adjust:\n18 0019 92          xchg eax, edx               ; eax ≔ edx\n19 001A 83C061      add eax, 'a'                ; eax ≔ eax + 97\n20 001D C3          ret\n</code></pre>\n<h3>output</h3>\n<ul>\n<li>alphabet checksum as ASCII character in 64‑bit register <code>rax</code></li>\n</ul>\n<h3>limitations</h3>\n<ul>\n<li>length of string must be ≤ 44,278,013, else the <code>mul</code> spills into <code>edx</code>, yet the algorithm relies on <code>edx</code> being <code>0</code> in the case of a zero-length string</li>\n</ul>\n"},{"answer_id":253713,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253713#253713","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 16 bytes</h1>\n<pre><code>zPK$+(A*a-97)%26\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJ6UEskKyhBKmEtOTcpJTI2IiwiIiwiIiwiaGVsbG93b3JsZCJd\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n"},{"answer_id":253706,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253706#253706","body":"<h1>PowerShell, 54 bytes</h1>\n<pre><code>$s.tochararray()|%{$r+=([char]$_)-97};[char]($r%26+97)\n</code></pre>\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNyfmvUqxgq6AEYuaX5xflpCgBRfRK8pMzEosSi4oSKzU0a1SrVYq0bTWiQWKxKvGaupbmtdYQnoZKkaqRmbalueb//wA\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253693,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253693#253693","body":"<h2>C# (.Net 6), 64 bytes</h2>\n<pre><code>int i=0,j=0;for(;i&lt;a.Length;)j+=a[i++]-97;return(char)(97+j%26);\n</code></pre>\n<p><a href=\"https://dotnetfiddle.net/KaXcug\" rel=\"nofollow noreferrer\">Try it here</a></p>\n"},{"answer_id":253668,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253668#253668","body":"<h1><a href=\"https://v8.dev/\" rel=\"nofollow noreferrer\">JavaScript (V8)</a>, 72 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>([...s])=&gt;String.fromCharCode(s.map(c=&gt;t+=c.charCodeAt()+7,t=0)|t%26+97)\n</code></pre>\n<p><a href=\"https://tio.run/##Zc6xDoIwEIDh3adoSEzaoMU4iA4lMTyCo3GoR1uQQknboIPvXiGgA954@XL/PXjPHdiq89v@GCQL@EopdTfCsou3VauotKbJS25zUwjsaMM7DCzzMQMK8/rsMYnTjWc78vbr/SE@pSSAaZ3RgmqjsMRRKbQ2T2N1ESGECEFJgurVAvE7FEKOAP1Qt0QwFJXRM5tQuUTOc6jFa/iwVSKakPjLjfOtzZd4@AA\" rel=\"nofollow noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253672,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253672#253672","body":"<h1><a href=\"http://gema.sourceforge.net/\" rel=\"nofollow noreferrer\">Gema</a>, 77 characters</h1>\n<pre><code>?=@set{s;@add{${s;};@add{@char-int{?};7}}}\n\\Z=@int-char{@add{@mod{$s;26};97}}\n</code></pre>\n<p>(Yepp. Arithmetic operations are a pain in Gema.)</p>\n<p>Sample run:</p>\n<pre><code>bash-5.1$ echo -n helloworld | gema '?=@set{s;@add{${s;};@add{@char-int{?};7}}};\\Z=@int-char{@add{@mod{$s;26};97}}'\nk\n</code></pre>\n<p><a href=\"https://tio.run/##S0/NTfz/397WoTi1pLrY2iExJaVaBciohTAdkjMSi3Qz80qq7WutzWtra7liomwdgHxdkEQ1RE1uPlBPsbWRWa21JVDN//8ZqTk5@eX5RTkpAA\" rel=\"nofollow noreferrer\" title=\"Gema – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253664,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253664#253664","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, 132 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>interface T{static void main(String[]a){int i=a[0].length(),s=0;for(;i--&gt;0;s+=a[0].charAt(i)+7);System.out.print((char)(97+s%26));}}\n</code></pre>\n<p><a href=\"https://tio.run/##JczRCoIwFIDhV9lNcIYp0kUSo6BnsDvx4qBTj81NtpMR4rMvo@vv5x9xwdTN2o7tM0ayrH2HjRaPNTAyNWJx1IoJyULJnmxf1SjXvRN0xSqvM6NtzwPIY7jmqnMeFKXpLVch@XszoL8zkEwKqcpPYD1l7sXZvM8Y4McSLkUSDqezlGrbYoyDNsa9nTftFw\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253608,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253608#253608","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"nofollow noreferrer\">brainfuck</a>, <s>142</s> 126 bytes</h1>\n<pre><code>,[&gt;++++++++[-&lt;------------&gt;]&lt;-[-&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;],]&gt;&gt;&gt;&gt;&gt;+++++[-&gt;+++++&lt;]&gt;+&lt;&lt;[&gt;+&gt;-&gt;+&lt;[&gt;]&gt;[&lt;+&gt;-]&lt;&lt;[&lt;]&gt;-]&gt;&gt;&gt;&gt;++++++++[-&lt;++++++++++++&gt;]&lt;+.\n</code></pre>\n<p><a href=\"https://tio.run/##TYxdCoAwDIMPtNUTlF6k9MFfFIeDgXj8Gp3Ivpe0SZuh9NuxnOPuHlXChxJTgxiTkoDAwKLJu9TTqmxPiAqBATVRxmzwEJH9D7U@NKA@dO7rnFK@cknTDQ\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n<p>Edit: -16 bytes due to common sense. Remembered I didn't have to load 97 into its own cell before adding/subtracting.</p>\n<p>My first time golfing in brainfuck! Here's the ungolfed code for your viewing displeasure:</p>\n<pre><code>,&#9;&#9;&#9;&#9;&#9;GET EACH CHARACTER IN THE INPUT\n[\n&#9;&gt;++++++++[-&lt;------------&gt;]&lt;-&#9;SUBTRACT 97 (8 TIMES 12 PLUS 1) FROM CELL 0\n&#9;[-&gt;&gt;&gt;&gt;+&lt;&lt;&lt;&lt;]&#9;&#9;&#9;ADD CELL 0 TO CELL 4\n&#9;, &#9;&#9;&#9;&#9;INPUT TO CELL 0\n]\n&gt;&gt;&gt;&gt;&#9;&#9;&#9;&#9;&#9;GO TO CELL 4\n&gt;+++++[-&gt;+++++&lt;]&gt;+&lt;&lt;&#9;&#9;&#9;LOAD 26 (5 TIMES 5 PLUS 1) INTO CELL 6\n[&gt;+&gt;-&gt;+&lt;[&gt;]&gt;[&lt;+&gt;-]&lt;&lt;[&lt;]&gt;-]&#9;&#9;TAKE CELL 4 MOD CELL 6\n&gt;&gt;&gt;&#9;&#9;&#9;&#9;&#9;GO TO RESULT IN CELL 7\n&gt;++++++++[-&lt;++++++++++++&gt;]&lt;+&#9;&#9;ADD 97 (8 TIMES 12 PLUS 1) TO CELL 7\n.&#9;&#9;&#9;&#9;&#9;DISPLAY\n</code></pre>\n"},{"answer_id":253617,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253617#253617","body":"<h1>Excel (ms365), <s>59</s>, 58 bytes</h1>\n<p>-1 Thanks to <a href=\"https://codegolf.stackexchange.com/users/114446/the-thonnu\">@TheThonnu</a></p>\n<pre><code>=CHAR(MOD(SUM(CODE(MID(A1,SEQUENCE(LEN(A1)),1))+7),26)+97)\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/Cd5An.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Cd5An.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":253624,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253624#253624","body":"<h1><a href=\"https://github.com/FTcode/Pushy\" rel=\"nofollow noreferrer\">Pushy</a>, 7 bytes</h1>\n<pre><code>L7*SvOq\n</code></pre>\n<p><a href=\"https://tio.run/##Kygtzqj8/9/HXCu4zL/w////SsUlicnZqRXJGYl56alKAA\" rel=\"nofollow noreferrer\" title=\"Pushy – Try It Online\">Try it online!</a></p>\n<pre><code>         The input is implicitly converted into bytecodes on the stack.\nL7*      Push the length of the input, times 7.\n   S     Push the sum of the stack.\n    vO   Send this to the 'output stack'.\n      q  Index into the ASCII lowercase alphabet (mod 26) and print the result.\n</code></pre>\n<p>Pushing 7 times the length comes from the fact that <code>a</code> has bytecode 97, and <span class=\"math-container\">\\$ -97 \\equiv 7 \\ (\\text{mod} \\, 3) \\$</span>. So it's equivalent to subtracting 97 from each bytecode.</p>\n"},{"answer_id":253573,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253573#253573","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 9 bytes</h1>\n<pre><code>øA‹∑₄%›øA\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLDuEHigLniiJHigoQl4oC6w7hBIiwiIiwic3RhY2tleGNoYW5nZSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>øA‹∑₄%›øA\nøA          Letter to number (1-indexed)\n  ‹         Decrement each value in list\n   ∑        Sum it up\n    ₄%›     Modulo by 26 and increment\n       øA   Number to letter\n</code></pre>\n"},{"answer_id":253619,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253619#253619","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 15 bytes</h1>\n<pre><code>'a'+26|·+´-⟜'a'\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=Q2hlY2tzdW0g4oaQICdhJysyNnzCtyvCtC3in5wnYScKQ2hlY2tzdW0gImhlbGxvd29ybGQi\" rel=\"nofollow noreferrer\">Try it at BQN REPL</a></p>\n<pre><code>'a'+26|·+´-⟜'a'\n          -⟜'a'     # subtract 'a' from each letter of input\n        +´          # sum\n       ·            # (no-op to preserve train syntax)\n    26|             # modulo 26\n'a'+                # add 'a'\n</code></pre>\n"},{"answer_id":253616,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253616#253616","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 14 bytes</h1>\n<pre><code>ạ+₇ᵐ+%₂₆+₉₇g~ạ\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r//@GuhdqPmtofbp2grfqoqelRUxuQ2wkUSa8DSv3/r5QEU6z0PwoA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>ạ                 String to char codes\n +₇ᵐ              Add 7 to each code (a &lt;-&gt; 97 becomes 104 = 0 (mod 26))\n    +             Sum\n     %₂₆          Mod 26\n        +₉₇       Add 97\n           g      Wrap into a list\n            ~ạ    Char code to string\n</code></pre>\n"},{"answer_id":253613,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253613#253613","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 7 bytes (14 nibbles)</h1>\n<pre><code>+%+.$-$;'a'26 \n</code></pre>\n<pre><code>   .            # map over \n    $           # the input:\n     -          #   subtract\n        'a'     #   the letter 'a'\n       ;        #   (and save it)\n      $         #   from each letter\n                #   (which gives its 0-based index)\n  +             # now sum this list\n %         26   # apply modulo-26\n+               # and add back the saved letter 'a'\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/YvD1C.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/YvD1C.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":253611,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/253611#253611","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 28 bytes</h1>\n<pre><code>a.(J(0*,bALTB($+a)%2Eb))@&gt;-b\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJhLihKKDAqLGJBTFRCKCQrYSklMkViKSlAPi1iIiwiIiwiIiwiMDAxMTAwMTEwMDExMTEwMTExMTAxMDAxMTExMSA0Il0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>Holy crap, this is terrible. There must be a better way to go about this. This 100% golfable.</p>\n"},{"answer_id":253564,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/253564#253564","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a> <code>-p</code>, 16 bytes</h1>\n<pre><code>{FA({aRLb}MZab)}\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCJZIiwie0ZBKHthUkxifU1aYWIpfSIsIlAoeVsxIDIgM11bMSAyIDNdKVxuUCh5WzYgMCAwIDZdWzUgMSAxIDBdKVxuKHlbMTAwLDEwMF1bMCwwXSkiLCIiLCItcCJd\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<pre><code>{FA({aRLb}MZab)}     ; First argument = A = a\n                     ; Second argument = B = b\n{              }     ; Create a function that...\n          MZab       ; maps a and b (as zipped pairs of elements) to...\n    {aRLb}           ; a block that repeats the (first argument) by (second argument)...\n FA(          )      ; and flattens the resulting list\n                     ; (after which the list is implicitly printed out)\n</code></pre>\n"},{"answer_id":253605,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253605#253605","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 20 bytes</h1>\n<pre><code>C(($+(7+A*a))%26+97)\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJDKCgkKyg3K0EqYSkpJTI2Kzk3KSIsIiIsIiIsImhlbGxvd29ybGQiXQ==\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>Probably could be shorter, I feel like there are just way too many parentheses.</p>\n"},{"answer_id":253604,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/253604#253604","body":"<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">jq</a>, 34 bytes</h1>\n<pre><code>[transpose[]|range(last)as$_|.[0]]\n</code></pre>\n<p><a href=\"https://tio.run/##NYpBCoAwDATvvqIHDwpRUkU/E4IUEVHEqunRt1tTxCwLw07WM0YKl9vl8DIR34rzVGxOQukkH@6akFl/DFlooGUw5kclzlT0gJpeFXVgNcifsIigTQLTmI4ff4TF7xKr8QU\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253603,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253603#253603","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 27 bytes</h1>\n<pre><code>{chr sum(.ords X-97)%26+97}\n</code></pre>\n<p><a href=\"https://tio.run/##FcHRCoJAEAXQX7mIRhH10IMipN/Rm6y7My40NjFblIjfvtE5TzKp87xgx@jy6qMhvef9WS0k3E5tc6gu9bFttpzcgqIc0PVYGeWwFWA1XCOJ6EdNAtzoAzG8BppUGOnl/J2@PrrHRHB/ff4B\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253602,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253602#253602","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 25 bytes</h1>\n<pre><code>0T1&gt;`l`L\n+T`l__L`zlL_`^..\n</code></pre>\n<p><a href=\"https://tio.run/##FcFBCoAgEADA@/4jCAKpD3Tt4tFz7qarRouCBUWfN5qpfO2ZWtcv2EYzzSioYTAo1mp8RVtclWotsUi5SxUPtDnPAVzxHIsEOC9yBz8uUY4M9PsA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n<pre><code>0T1&gt;`l`L\n</code></pre>\n<p>Uppercase all letters after the first.</p>\n<pre><code>+T`l__L`zlL_`^..\n</code></pre>\n<p>While there are at least two letters, repeatedly rotate the first letter backwards and the second letter forwards in the alphabet, however the first letter rotates back from <code>a</code> to <code>z</code> while the second letter drops off when it passes <code>Z</code>, allowing subsequent letters to be processed.</p>\n<p>The <code>l</code> and <code>L</code> in the patters expand to the lowercase and uppercase alphabet respectively. The <code>_</code> in the source pattern is just a placeholder to allow the use of <code>l</code> and <code>L</code> in the destination pattern, while in the destination pattern it indicates that the character is to be deleted.</p>\n"},{"answer_id":253601,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253601#253601","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 8 bytes</h1>\n<pre><code>§βΣＥＳ⌕βι\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMOxxDMvJbVCI0lHIbg0V8M3sUDDM6@gtCS4BCidrqGpo@CWmZcCks7UBAHr//@LSxKTs1MrkjMS89JT/@uW5QAA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>    Ｓ       Input string\n   Ｅ        Map over characters\n       ι    Current character\n     ⌕      Find index in\n      β     Predefined variable lowercase alphabet\n  Σ         Take the sum\n§           Cyclically indexed into\n β          Predefined variable lowercase alphabet\n            Implicitly print\n</code></pre>\n"},{"answer_id":253600,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253600#253600","body":"<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">jq</a>, 37 bytes</h1>\n<pre><code>explode|map(.-97)|[add%26+97]|implode\n</code></pre>\n<p><a href=\"https://tio.run/##yyr8/z@1oiAnPyW1JjexQENP19JcsyY6MSVF1chM29I8tiYzFyz7/39Gak5Ofnl@UU4KV2JSckpqGlcyUDw9PyeNq7gkMTk7tSI5IzEvPZUrEQT@5ReUZObnFf/XDQIA\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253590,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253590#253590","body":"<h1><a href=\"https://github.com/munificent/wren\" rel=\"nofollow noreferrer\">Wren</a>, 47 bytes</h1>\n<pre><code>Fn.new{|s|(s.bytes.reduce{|x,y|x+7+y}+7)%26+97}\n</code></pre>\n<p><a href=\"https://tio.run/##FYuxCsMgGIT3PoUECorBoUNDh06FzoWMpYPR3yTUaFHbRGKe3cZb7uPjbnZg8o87pK75bpiBeU0@Yc@6GMAzB/IrYE1LHdNCGxo32pDj6UwvzZaVdQh7NBr0rAbQ2s7WaVnVFe@EBLWDsBJ6qwv6wMUbFjFw00PZlFQvgtYDQm30ASb2caMJuA179Uw5O932/8MWqZjgWmNPCDls@Q8\" rel=\"nofollow noreferrer\" title=\"Wren – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253577,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253577#253577","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 10 bytes</h1>\n<pre><code>2Y2j97-sQ)\n</code></pre>\n<p><a href=\"https://matl.io/?code=2Y2j97-sQ%29&amp;inputs=helloworld&amp;version=22.7.4\" rel=\"nofollow noreferrer\">Try it online!</a> Or <a href=\"https://tio.run/##y00syfmf8N8o0ijL0ly3OFDzv0vI/4zUnJz88vyinBSuxKTklNQ0ruT8lNT0/Jw0ruKSxOTs1IrkjMS89FSuRBAAAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<h3>Explanation</h3>\n<pre><code>2Y2j97-sQ)\n2Y2         % Push predefined literal: string 'abc···xyz'\n            % STACK: 'abc···xyz'\n   j        % Take input as a string\n            % STACK: 'abc···xyz', 'helloworld'\n    97-     % Push 97 (ASCII code of 'a'), and subtract element-wise\n            % STACK: 'abc···xyz', [7 4 11 11 14 22 14 17 11 3]\n       s    % Sum\n            % STACK: 'abc···xyz', 114\n        Q)  % Add 1, and use as index (1-based, modular). Implicit display\n            % STACK: 'k'\n</code></pre>\n"},{"answer_id":253589,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253589#253589","body":"<h1><a href=\"https://clojure.org/\" rel=\"nofollow noreferrer\">Clojure</a>, 65 bytes</h1>\n\n<pre class=\"lang-clj prettyprint-override\"><code>(defn a[s](char(+(mod(apply + (map #(- % 97)(map int s)))26)97)))\n</code></pre>\n<p><a href=\"https://tio.run/##dY4xDsIwDEV3TmEFVbJVsTCAOAswGCdtgTSOkiLg9CEwE29@78v@4vX2SK4UtG4IwMd8Rpk4YY@zWuQY/Rt6wJkjrHEDHRz29NuuYYFMRNsdVURUMKbKBjCdnIIBZDCT816fmrw1RKs/Ab5I/duQotaN6ls6Lyx396ptw@ha979TXfkA\" rel=\"nofollow noreferrer\" title=\"Clojure – Try It Online\">Try it online!</a></p>\n<p>Ungolfed:</p>\n<pre class=\"lang-clj prettyprint-override\"><code>(defn alpha-checksum [s]\n  (char (+ (mod (apply + (map #(- % 97) (map int s))) 26) 97)))\n</code></pre>\n"},{"answer_id":253587,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253587#253587","body":"<h1>ARM Thumb machine code, 18 bytes</h1>\n<pre><code>61 20 04 c9 61 3a 10 44 fb d5 1a 38 fd d2 7b 30\n70 47\n</code></pre>\n<p>Assembler source:</p>\n<pre class=\"lang-c prettyprint-override\"><code>    .syntax unified\n    .arch armv7-a\n    .thumb\n    .globl alpha_checksum\n    .thumb_func\n    // Input: r1: null terminated UTF-32LE string\n    // Output: r0\n    // Clobbers: r0-r2\nalpha_checksum:\n    // Initial accumulator. Start at 'a' to cancel the checksum\n    // loop adding '\\0' - 'a' when the null terminator is reached.\n    movs   r0, #'a'\n.Lloop:\n    // Load character, increment pointer\n    ldmia  r1!, {r2}\n    // Subtract 'a' to convert to a number, set flags\n    // In the case of the null terminator, this will result in\n    // -'a', which ends the loop condition below.\n    subs   r2, #'a'\n    // Add to the checksum, without setting the flags\n    add    r0, r2\n    // Loop if the subs didn't return negative,\n    // which happens only with the null terminator.\n    bpl    .Lloop\n.Lend:\n    // Calculate (checksum % 26) - 26 using a naive subtraction loop\n.Lmodulo:\n    // Subtract 26\n    subs   r0, #26\n    // Loop while it was &gt;= 26\n    bhs    .Lmodulo\n    // Add 26 to correct the modulo, and 'a' to convert to ASCII.\n    adds   r0, #'a' + 26\n    // Return\n    bx     lr\n</code></pre>\n<p>This can be called from C using a dummy parameter to place <code>ptr</code> in <code>r1</code>.</p>\n<p><code>ptr</code> is expected to be a pointer to a null terminated UTF-32LE string.</p>\n<pre class=\"lang-c prettyprint-override\"><code>char32_t alpha_checksum(int dummy, const char32_t *ptr);\n</code></pre>\n"},{"answer_id":253588,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253588#253588","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 46</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>t;f(char*s){for(t=0;*s;)t+=*s++-97;t=t%26+97;}\n</code></pre>\n<p><a href=\"https://tio.run/##ZU/LTsMwEDwnX7EERXLiFFUcQMikX1Bx4wQVStfOQ6QOsjdQqcq3BzsuqlD3sJode2dmcdUgzjOJmmFbmdxmp3owjMq1yK3IiJe55Xz19CiopPT@gTs0zbedxn6UCp4tSanqu3YT/@O6wVNxpwkOVaeBeVSZBgvwNpA7/J3BKQZXgSFlCSur7NsOSvcSJa3q@@FnML1MCjdWe3RWC8RBqmbow2Cpwk91dCq6UeGnL49eXrfbxWISFydLBu14CIzPRfjRyaOIF8JdDywwLsZawCVXYHdwU4IXFudFzv0h0VnWLdXsaicTcfRlnFnNktTCagMpvuukuFYv/vJlIeC0dKNoNNrFiaf5Fw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253582,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253582#253582","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$10\\log_{256}(96)\\approx\\$</span> 8.231 bytes</h1>\n<pre><code>ica%26S+7C\n</code></pre>\n<p>Using <a href=\"https://codegolf.stackexchange.com/users/58563/arnauld\">Arnauld's</a> logic. Accepts a list of characters</p>\n<p><a href=\"https://fig.fly.dev/#WyJpY2ElMjZTKzdDIiwiW3MsdCxhLGMsayxlLHgsYyxoLGEsbixnLGVdIl0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>ica%26S+7C\n         C # str -&gt; char code, vectorises\n       +7  # add 7 to each item\n      S    # sum\n   %26     # sum % 26\n ca        # lowercase alphabet\ni          # index intro ca using result\n</code></pre>\n<h1>Alternate <span class=\"math-container\">\\$13\\log_{256}(96)\\approx\\$</span> 10.701 bytes</h1>\n<pre><code>ica%26SM'lxca\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJpY2ElMjZTTSdseGNhIiwiW3MsdCxhLGMsayxlLHgsYyxoLGEsbixnLGVdIl0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>ica%26SM'lxca\n           ca  # lowercase alphabet\n          x    # input\n       M'l     # map find over x where we look for each char in ca, returns index\n      S        # sum\n   %26         # sum % 26\nica            # index into ca using the result\n</code></pre>\n"},{"answer_id":253586,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253586#253586","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 8 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>O+7S‘ịØa\n</code></pre>\n<p>A monadic Link that accepts a list of characters and yields a character.</p>\n<p><strong><a href=\"https://tio.run/##y0rNyan8/99f2zz4UcOMh7u7D89I/P//f3J@Smp6fk4aAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong> Or see the <a href=\"https://tio.run/##y0rNyan8/99f2zz4UcOMh7u7D89I/P9w95bD7Y@a1kT@/58BlM8vzy/KSeFKTEpOSU3jSs5PSU3Pz0njKi5JTM5OrUjOSMxLT@VKBAEA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">test-suite</a>.</p>\n<h3>How?</h3>\n<pre><code>O+7S‘ịØa - Link: list of characters, Message\nO        - ordinals (Message)\n +7      - add seven (vectorises)\n   S     - sum\n    ‘    - increment\n      Øa - &quot;abc...xyz&quot;\n     ị   - index into (1-based and modular)\n</code></pre>\n"},{"answer_id":253585,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253585#253585","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a>, 41 bytes</h1>\n\n<pre class=\"lang-sh prettyprint-override\"><code>a=(+##${(s..)^1}+7)\n&lt;&lt;&lt;${(#)$((a%26+97))}\n</code></pre>\n<p><a href=\"https://tio.run/##dY1LCsIwGIT3PYWQCvkJFHRhEeJVhLyjjY021dZIzx6TA@RbzQNmYrBJY8CJXTBBqP3h0HVwPWykh4ZSmgMELcZsfzyRcw@wJWgavbPKOb/4yclsGBdS6SyEl8p4V2SYmRjUKiwbjcr@tahp/r5v/umGuzVaBhZX8eHjowxUySWvUh6r5DJWSX8\" rel=\"nofollow noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n<p><code>(s..)</code>plit, <code>^</code> RC-style expand as <code>+##${1[1]}+7 +##${1[2]}+7 ...</code>. Then <code>(#)</code> evaluate the expression as character codes.</p>\n"},{"answer_id":253584,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253584#253584","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 8 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>;x!aC gC\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=O3ghYUMgZ0M&amp;input=WwpbImgiLCJlIiwibCIsImwiLCJvIiwidyIsIm8iLCJyIiwibCIsImQiXQpbImEiLCJiIiwiYyIsImQiLCJlIiwiZiJdClsiYyIsIm8iLCJkIiwiZSIsImciLCJvIiwibCIsImYiXQpbInMiLCJ0IiwiYSIsImMiLCJrIiwiZSIsIngiLCJjIiwiaCIsImEiLCJuIiwiZyIsImUiXQpbImEiLCJhIiwiYSIsImEiLCJhIl0KXS1tUg\" rel=\"nofollow noreferrer\">Try it</a></p>\n<p>Input as an array of characters.</p>\n<p>Explanation:</p>\n<pre><code>;x!aC gC\n;        # C = &quot;abcdefghijklmnopqrstuvwxyz&quot;\n x       # Compute the following for each character, then sum the results:\n  !aC    #  Find its index in C\n      gC # Get the character at that index in C (wrapping)\n</code></pre>\n<p>You can also rearrange things <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=O0NnVXghYUM&amp;input=WwpbImgiLCJlIiwibCIsImwiLCJvIiwidyIsIm8iLCJyIiwibCIsImQiXQpbImEiLCJiIiwiYyIsImQiLCJlIiwiZiJdClsiYyIsIm8iLCJkIiwiZSIsImciLCJvIiwibCIsImYiXQpbInMiLCJ0IiwiYSIsImMiLCJrIiwiZSIsIngiLCJjIiwiaCIsImEiLCJuIiwiZyIsImUiXQpbImEiLCJhIiwiYSIsImEiLCJhIl0KXS1tUg\" rel=\"nofollow noreferrer\">like this</a> for a different 8 byte solution which works almost exactly the same way.</p>\n"},{"answer_id":253583,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253583#253583","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 68 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func(s string)(t int){for _,r:=range s{t+=int(r)-97}\nreturn t%26+97}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=hY9NasMwEIX3OoUQBCSSdNFF_kC7HCA3KIosOSayFGbGScH0JNmYQu_TrW8TOfHamc0wzON9791_y9T1_GLs2ZSO16aKrKovCehD-JoEuxrgqP8a8stNv_dNtBI5ElSxVJJ4FUm1PgH_WsBOg4nZBFua6_yQoJbb9Q8DRw1ETrPP1Tzfo9f_4PUESsVbhjstTi6EdEsQCsEOmUAhSlyMNOklKqUYamGOtnB-WmNT4coU3qiQcnH3bU9D8DfQYSYkY6-ue-0H\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253572,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253572#253572","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 43 bytes</h1>\n<p>-1 byte from @Arnauld</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:chr(sum(ord(c)+7for c in s)%26+97)\n</code></pre>\n<p><a href=\"https://tio.run/##BcFBCoAgEADAr3gJd/FWkBT0ky6miYK6shrR622mfj1QWYY/zpFMvpwRbbeBoT0ZiB1YVNoTCytiEQ2neVWbxlE5lg4eZLhTopc4OYk4fg\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253581,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253581#253581","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 6 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ADIkOè\n</code></pre>\n<p>Input as a list of characters.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/f0cUz2//wiv//o5UylHSUUoE4B4rzgbgcShdBxVKUYgE\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfWVw6H9Hl4hs/8Mr/uv8j1bKSM3JyS/PL8pJUdJRSkxKTklNAzKS81NS0/NzQMziksTk7NSK5IzEvPRUkBoQUIoFAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>A       # Push the lowercase alphabet\n D      # Duplicate it\n  I     # Push the input-list\n   k    # Get the index of each character in the (top) alphabet\n    O   # Sum these together\n     è  # (Modular 0-based) index it into the alphabet\n        # (after which this character is output as result)\n</code></pre>\n"},{"answer_id":253580,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253580#253580","body":"<h1><a href=\"https://github.com/ismael-miguel/simply\" rel=\"nofollow noreferrer\">simply</a>, 76 bytes</h1>\n<p>It is a pretty long one...</p>\n<p>Creates an anonymous function that outputs the expected result.</p>\n<pre><code>fn($S){$X=0each$S as$C;$X=&amp;add($X&amp;sub(&amp;ord($C)97))out!ABCL[$_=&amp;mod($X,26)];}\n</code></pre>\n<p>Yes, that's right, I'm assigning the result of <code>&amp;mod</code> into a variable.<br>\nWithout it, it gives a syntax error, because ... I made mistakes in the compiler...</p>\n<h1>Using the code</h1>\n<p>Simply call the function.</p>\n<pre><code>$fn = fn($S){$X=0each$S as$C;$X=&amp;add($X&amp;sub(&amp;ord($C)97))out!ABCL[$_=&amp;mod($X,26)];}\n\n// should output &quot;h&quot;\ncall $fn(&quot;codegolf&quot;);\n</code></pre>\n<h1>Ungolfed</h1>\n<p>Somewhat code-y looking:</p>\n<pre><code>$fn = fn($string) =&gt; {\n    $sum = 0;\n    each $string as $char {\n        $sum = &amp;add($sum, &amp;sub(&amp;ord($char), 97));\n    }\n    \n    $index = call &amp;mod($sum, 26);\n    \n    echo !ABCL[$index];\n}\n</code></pre>\n<p>Plain English-ish/Pseudo-code looking:</p>\n<pre><code>Set $fn to an anonymous function($string).\nBegin.\n    Set $sum to 0.\n    \n    Loop through $string as $char.\n    Begin.\n        Set $sum to the result of calling the function &amp;add(\n            $sum,\n            Call the function &amp;sub(\n                Call the function &amp;ord($char),\n                97\n            )\n        ).\n    End.\n    \n    Set $index to the result of calling the function &amp;mod($sum, 26).\n    \n    Show the value !ABCL[$index].\nEnd.\n</code></pre>\n<p>Both versions do exactly the same.</p>\n"},{"answer_id":253574,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253574#253574","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.unicode</code>, <sup><s> 25 </s></sup>  24 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 7 v+n Σ 26 mod 97 + ]\n</code></pre>\n<p>-1 byte thanks to some black magic from Arnauld!</p>\n<p><a href=\"https://tio.run/##JYtBDoIwFET3nGJC4orEhQuJegDjxo1xhSzq7y8lQgttARPjabyPV6qis5iXSd4oQcG6eD4djvstlHWtCKE2Fb7Uv1oOpiYr@T9Gnn2PfoLnfmBD7LFLkn56QHPT2Mm6RkJcSbLC/Ktso@CDoBvfSQtTMcQcPGOBHGNm8H5htUZrJTY5MpSxFR0KpAu6mBSdq01QKMGCdPwA\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<pre><code>     ! &quot;helloworld&quot;\n7    ! &quot;helloworld&quot; 7\nv+n  ! { 111 108 115 115 118 126 118 121 115 107 }\nΣ    ! 1154\n26   ! 1154 26\nmod  ! 10\n97   ! 10 97\n+    ! 107\n</code></pre>\n"},{"answer_id":253571,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253571#253571","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>33</s> 32 bytes</h1>\n<p>-1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/58563/arnauld\">Arnauld</a></p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{(a.sum{_1.ord+7}%26+97).chr}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsEiN9ulpSVpuhY3FXTtEqs1EvWKS3Or4w318otStM1rVY3MtC3NNfWSM4pqIer2F5SWFCu4RauWR2copCrkAGG-QjkQFwFZKbGxEFULFkBoAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253576,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253576#253576","body":"<h1><a href=\"https://nodejs.org\" rel=\"noreferrer\">JavaScript (Node.js)</a>, 51 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;(B=Buffer)([B(s).map(c=&gt;t+=c+7,t=0)|97+t%26])+''\n</code></pre>\n<p><a href=\"https://tio.run/##Zc69DoIwFAXg3adoSAxtqmAcJA5l4DWMQ73cglK5hNafwXevEtABz/zlnHPRd@2gP3d@3VKJwajgVM4LVdyMwV7wQ8GdSK6646ByLxXIbOXVRrz2mfTL7e4oZBwHoNaRxcRSxQ2ParSWHtTbMmKMCcHSlDWLGdInKNEMgP1QN0fwOVWRndiI6jlyXkODT6h1W2E0IvybG/Jdm5p0eAM\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253570,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253570#253570","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python</a>, 74 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>from string import*\nf=lambda s,l=ascii_lowercase:l[sum(map(l.index,s))%26]\n</code></pre>\n<p><a href=\"https://tio.run/##DczBCsIwDADQu1/Ri6yV4UHBg7AvEZG4ti6QNCWpuH193f3x6tYWKdfeswo7a4rl45CraDsd8kTA7wjORprAZsQXyS/pDJbu9LAve4bq6YwlpnW0EI6X27PXPWk@@2FJtHtRikMI/Q8\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python</a> + <a href=\"https://github.com/nayakrujul/golfing-shortcuts\" rel=\"nofollow noreferrer\"><code>golfing-shortcuts</code></a>, 47 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda S:Sl[s(m(Sl.index,S))%26]\nfrom s import*\n</code></pre>\n<p>(Is this one a competitive answer?)</p>\n"},{"answer_id":253569,"question_id":253568,"link":"https://codegolf.stackexchange.com/questions/253568/alphabet-checksum/253569#253569","body":"<h1><a href=\"https://github.com/nayakrujul/thon-symbols\" rel=\"nofollow noreferrer\">Thon (Symbols)</a> <sup><code>s</code> flag</sup>, 10 <a href=\"https://github.com/nayakrujul/thon-symbols/blob/main/Codepage.md\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>$åị$Σ26%å`\n</code></pre>\n<h3>Explanation</h3>\n<pre><code>$åị$Σ26%å`   // (implicit input as a string)\n$  $         // For each character in the input string:\n åị          //   Get the index in the alphabet\n             // (implicitly create a list of all of these indexes)\n    Σ        // Sum the list\n     26%     // Mod by 26\n        å`   // Get that letter of the alphabet\n             // (implicit output)\n</code></pre>\n"},{"answer_id":253467,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253467#253467","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 24 bytes</h1>\n<pre><code>((RTDBa-0.5)//1)E2+DBa-1\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCIoKFJUREJhLTAuNSkvLzEpRTIrREJhLTEiLCIiLCIiLCIxMCJd\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>Port of loopy walt's Python answer, so go upvote his answer too!</p>\n"},{"answer_id":253400,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253400#253400","body":"<h1><a href=\"https://gcc.gnu.org\" rel=\"nofollow noreferrer\">C (GCC)</a>, <s>68</s> 65 bytes</h1>\n<p><em>-2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/92689/s%ca%a8%c9%a0%c9%a0an\">@Sʨɠɠan</a></em></p>\n<pre class=\"lang-c prettyprint-override\"><code>i;r;main(s){for(;i&lt;=r||(i=0,s+=++r+ ++r);i+=2)printf(&quot;%d &quot;,s+i);}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700OT49OXnBgqWlJWm6FjcdM62LrHMTM_M0ijWr0_KLNKwzbWyLamo0Mm0NdIq1bbW1i7QVgISmdaa2rZFmQVFmXkmahpJqioISUDpT07oWYhDUPJi5AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253313,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253313#253313","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 10 bytes</h1>\n<pre><code>Þ∞:ẇ2Ḟ2vḞf\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLDnuKInjrhuocy4bieMnbhuJ5mIiwiIiwiIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a> Outputs (theoretically) infinitely but crashes due to hitting the recursion limit caused by a bug.</p>\n<pre><code>Þ∞         # All positive integers\n   ẇ       # Cut into slices of lengths...\nÞ∞:        # Positive integers\n    2Ḟ     # Get every second item\n      2vḞ  # Get every second item of each\n         f # Flatten the final array\n</code></pre>\n"},{"answer_id":253432,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/253432#253432","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>¯ꜝL\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwiwq/qnJ1MIiwiIiwiWzBdXG5bMCwgMF1cblswLCAxXVxuWzEsIDIsIDMsIDE3XVxuWzEsIDEsIDEsIDIsIDIsIDNdXG5bLTMsIDMsIDMsIC0zLCAwXSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>¯ꜝL\n¯   # delta (consecutive diff)\n ꜝ  # non-zero\n  L # length\n</code></pre>\n"},{"answer_id":253420,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253420#253420","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 8 bytes</h1>\n<pre><code>d:√ṙ‹²+‹\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIyNcabIiwiZDriiJrhuZnigLnCsivigLkiLCIiLCIiXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Port of 05AB1E, which is a port of Rust, so make sure to upvote those answers!</p>\n"},{"answer_id":253397,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253397#253397","body":"<h1>Excel, 27 bytes</h1>\n<pre><code>=INT((2*A1)^.5-.5)^2+2*A1-1\n</code></pre>\n<p>Direct implementation of <a href=\"https://codegolf.stackexchange.com/a/253320/38183\">loopy walt's answer in Python</a> except it's shorter in Excel. Given the 1-based index computes a single value. Input is in <code>A1</code>. When copying the above into Excel, it will automatically add leading zeroes to change <code>.5</code> to <code>0.5</code>.</p>\n<p><a href=\"https://i.stack.imgur.com/oOpcY.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/oOpcY.png\" alt=\"Screenshot\" /></a></p>\n<hr />\n<p>This <strong>41 byte</strong> solution prints the first 1,048,576 terms (or however many rows you have in your version of Excel):</p>\n<pre><code>=LET(r,ROW(A:A),INT((2*r)^.5-.5)^2+2*r-1)\n</code></pre>\n"},{"answer_id":253396,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/253396#253396","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 76 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(s)cat(substring(S&lt;-gsub(&quot;[^a-z0-9]&quot;,&quot;&quot;,s,T),N&lt;-1:(nchar(S)-1),N+1))\n</code></pre>\n<p><a href=\"https://tio.run/##K/qflFNapGCj@z@tNC@5JDM/T6NYMzmxRKO4NKm4pCgzL10j2EY3HcjTUIqOS9StMtC1jFXSUVLSKdYJ0dTxs9E1tNLIS85ILNII1tQ1BIpoG2pqgg3VUPJIzcnJ11EIzy/KSVFU0vwPAA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Similar to Dominic van Essen's <a href=\"https://codegolf.stackexchange.com/a/220084/67312\">answer</a>, uses <code>cat</code> to join by spaces; uses <code>substring</code> which recycles (as opposed to <code>substr</code> which doesn't).</p>\n"},{"answer_id":203925,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203925#203925","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> v2.0a0 <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-S</code></a>, 6 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>r\\W ä+\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=2.0a0&amp;flags=LVM&amp;code=clxXIOQr&amp;input=IkJsdXJyeV92aXNpb24i\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>r\\W ä+     :Implicit input of string\nr          :Replace\n \\W        :  Regex /[^a-z0-9]/gi\n    ä+     :Consecutive pairs reduced by concatenation\n           :Implicit output, joined with spaces\n</code></pre>\n"},{"answer_id":253387,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253387#253387","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 37 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(x)(((8*x)^.5-1)%/%2)^2+2*x-1\n</code></pre>\n<p><a href=\"https://tio.run/##K/pfkJ@TnZiSX2L7P600L7kkMz9Po0JTQ0PDQqtCM07PVNdQU1Vf1UgzzkjbSKtC1xCuXsPQyshU8z8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>An alternative to <a href=\"https://codegolf.stackexchange.com/a/253355/95126\">Giuseppe's R answer</a>, here using a variant of <a href=\"https://codegolf.stackexchange.com/a/253320/95126\">loopy walt's approach</a>.</p>\n"},{"answer_id":253385,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253385#253385","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>9</s> 8 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>-1 byte by porting <a href=\"https://codegolf.stackexchange.com/a/253353/52210\">@corvus_192's Rust answer</a>, which is a slightly modified version of <a href=\"https://codegolf.stackexchange.com/a/253320/52210\">@loopyWalt's Python answer</a>, so make sure to upvote them as well!</p>\n<p>Given <span class=\"math-container\">\\$n\\$</span>, it'll output the 1-based <span class=\"math-container\">\\$n^{th}\\$</span> term (<strong>8 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></strong>):</p>\n<pre><code>·Dtò&lt;n+&lt;\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//0HaXksObbPK0bf7/NwUA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/W9k6upnr6TwqG2SgpK93/9D211KDm@yydO2@a/zHwA\" rel=\"nofollow noreferrer\">verify the first 25 items</a>.</p>\n<p>Given no input, it'll output the infinite sequence list (<strong>9 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></strong>):</p>\n<pre><code>∞£ιнειн}˜\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//Uce8Q4vP7byw99xWEFl7es7//wA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>·         # Double the (implicit) input-integer\n D        # Duplicate it\n  t       # Take the square-root of the copy\n   ò      # Round it to the nearest integer\n    &lt;     # Decrease it by 1\n     n    # Square it\n      +   # Add it to the doubled input that's still on the stack\n       &lt;  # Decrease it by 1\n          # (after which it is output implicitly as result)\n</code></pre>\n\n<pre class=\"lang-python prettyprint-override\"><code>∞         # Push a positive infinite list: [1,2,3,4,5,...]\n £        # Split it into parts of itself (since there is no input):\n          #  [[1],[2,3],[4,5,6],[7,8,9,10],[11,12,13,14,15],...]\n  ι       # Uninterleave it into two parts\n   н      # Pop and only keep the first\n    ε  }  # Map over each remaining inner list:\n     ιн   #  Do the same for those\n        ˜ # Flatten the list of lists\n          # (after which the infinite list is output implicitly as result)\n</code></pre>\n"},{"answer_id":253337,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/253337#253337","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, <s>144 129 127 126 123 120</s> 106 bytes</h1>\n<p>-3 bytes, thanks @mousetail<br />\n-14 bytes, thanks @corvus_192</p>\n<p>Playing with strings can be subtle, and as such it is easy to slam face first into the borrow checker when trying to golf string manipulation in rust. As a result I welcome any improvement to this code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|s|{let a:String=s.filter(|c|c.is_alphanumeric()).flat_map(|c|[c,' ',c]).collect();a[2..a.len()-2].into()}\n</code></pre>\n<p>The solution is the same as for the Python one above.</p>\n<p>Ungolfed:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// This first line is not part of the code snippet,\n// but needs to be present in the driving code in order for type inference to work.\nlet blur: fn(std::vec::IntoIter&lt;char&gt;) -&gt; String = \n    |s| {                                    // Take in an iterator over\n                                             // a vector of chars and\n        let a: String = s                    // build a new string\n            .filter(|c| c.is_alphanumeric()) // by taking all alphanumeric characters\n            .flat_map(|c| [c, ' ', c])       // and replacing them with a copy\n                                             // of themselves around a space\n            .collect();                      // and collecting them into a String.\n        a[2..a.len() - 2].into()             // Then make a string slice of every \n                                             // character except the first and last\n                                             // two and convert that slice\n                                             // into a String.\n                                             // `.into()` works because of the\n                                             // function signature that is specified\n                                             // on the first line.\n};\n\nprintln!(\n    &quot;{}&quot;,\n    // We call this closure by passing it an iterator over a vector of characters\n    // that we build by iterating over the characters in a string.\n    blur(&quot;This is a string&quot;    \n        .chars()\n        .collect::&lt;Vec&lt;_&gt;&gt;()\n        .into_iter())\n);\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=ZVJNj9owEJV65FcMrCpsmkRiJaQqfLUr7YFzq-6BpZHxOsSV46S2g2CBY39FLxzaH7X7a3YMbKpsLWs8mnnP8-K8339MZd3xaZhqyJnUhMKupYSDZQypJtY9xPFa8DieaVfMnDAjnjEzoRBO4IszUq9g_Ldyafjx6cfe7neeyuJzZ2yjVCrkkD3f80jahKkyY7rKhZGcUBqlirkkZ6UHzHnQhW7AFzTihVKCO0KHbH4dRSxSAoWF14tIogpCD-eJz-9-DVtpYWDuhHUJZ1YEwAtjkLsAqWHegsuadz4vOwH4uAgaVX4uAyZvOw91CzBvdG-n2dR3b7Nm_UZVxmxhLa0stAfcKFAVVAYM7i1s19gDacFiLAAxDfqd6BoBV_22p94JEEjC2G-iZt0cmAaxYXmpxAk7y_Hv-aJG-AY2mGOlhBLHiwa7zvzqfM1QC-5EFy5B6EouER-8BUFWi8aIU1C6A-cvB7GCFdbxmU6z_nEbmgnrLXucfhh8DzdeMDs_6wAGm-bHTacseR_02-PHq08nYB_6j6-QBZrzFcqsFcYl4mebLEltgMjb05LaQ3E8-ib4KJlMsObdk0hvSEoD6F2sQof1nSXa1indJp3dAe5dGE7uHewOqON_h11oh9bFjcfj-XwB\" rel=\"nofollow noreferrer\">Attempt this online</a></p>\n"},{"answer_id":253374,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/253374#253374","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 11 bytes</h1>\n<pre><code>⌈₅(ʁ):ẏ¨£i∑\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLijIjigoUoyoEpOuG6j8KowqNp4oiRIiwiIiwiVGhpcyBpcyBhIGZ1biB0YXNrISJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>⌈           # Input split on spaces\n ₅( )       # repeat len(that) times...\n   ʁ        # Palindromise each word\n       ¨£   # Zipping...\n     :      # Words\n      ẏ     # range(0, len(words))\n         i  # Index the numbers into the words\n          ∑ # Stringify\n</code></pre>\n"},{"answer_id":253372,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/253372#253372","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a> <code>-pl</code>, 60 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>gsub(/(\\S+) ?/){w=$1+$1.reverse[1..-2]\nw[(-2+$.+=1)%w.size]}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcnm0km5BjlLsgqWlJWm6Fjdt0otLkzT0NWKCtTUV7PU1q8ttVQy1VQz1ilLLUouKU6MN9fR0jWK5yqM1dI20VfS0bQ01Vcv1ijOrUmNrIWZAjVpw0y0kI7NYAYgSFXLy89IVikuKMoFUSb5CSmZxQU5ipUJGfrlCSUaqQnpqXmpRYkl-EUh1cWlBQX5xagpIYXl-UTbEOAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253365,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253365#253365","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, 31 bytes</h1>\n<pre><code>f(n)=floor(\\sqrt{2n}-.5)^2+2n-1\n</code></pre>\n<p>Literally just a port of loopy walt's python answer, go upvote that answer too!</p>\n<p><a href=\"https://www.desmos.com/calculator/zyoxm5ji9g\" rel=\"nofollow noreferrer\">Try It On Desmos!</a></p>\n<p><a href=\"https://www.desmos.com/calculator/5xvg9olfby\" rel=\"nofollow noreferrer\">Try It On Desmos! - Prettified</a></p>\n"},{"answer_id":253360,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253360#253360","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 31 bytes</h1>\n<pre><code>[\\+] flat (1,3...*)Z(2 Xxx^∞)\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1up4FCcWqhg@z86RjtWIS0nsURBw1DHWE9PT0szSsNIIaKiIu5RxzzN/9YKxYkQxdFxhgYGsf8B\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p>This is an expression for the lazy infinite sequence of numbers.</p>\n<ul>\n<li><code>(1, 3 ... *)</code> is the infinite sequence of odd numbers.</li>\n<li><code>xx</code> is the replication operator, which replicates its left-hand side a number of times given by its right-hand side.</li>\n<li><code>X</code> is the cross-product metaoperator.  Applied to the replication operator <code>xx</code>, it makes a new operator that replicates as a cross product.</li>\n<li><code>^∞</code> is the unbounded range of increasing integers starting at zero.</li>\n<li><code>2 Xxx ^∞</code> produces a list of 2 replicated each number of times from zero to infinity:  <code>(), (2,), (2, 2), (2, 2, 2), ...</code>.</li>\n<li><code>Z</code> zips the odd numbers with the list of increasing numbers of twos: <code>(1, ()), (3, (2,)), (5, (2, 2)), (7, (2, 2, 2)), ...</code>.</li>\n<li><code>flat</code> flattens that list: <code>1, 3, 2, 5, 2, 2, 7, 2, 2, 2, ...</code>.  That gives the list of differences between adjacent terms of the sequence.</li>\n<li><code>[\\+]</code> gives the list of partial sums of the previous sequence, which is the desired polka-dot sequence.</li>\n</ul>\n"},{"answer_id":253357,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/253357#253357","body":"<h1>PHP, 70 bytes / 69 bytes</h1>\n<pre><code>while(~$c=($s=preg_replace('/\\W/','',$argn))[++$i])echo$s[$i-1],&quot;$c &quot;;\n</code></pre>\n<p>run these 70 bytes as pipe with <code>-nr</code>, ignore the warnings</p>\n<p>or run this port of <a href=\"https://codegolf.stackexchange.com/a/204036/55735\">Qwertiy´s JavaScript solution</a> (69 bytes) as pipe with <code>-nR</code>:</p>\n<pre><code>&lt;?=preg_replace('/.(?=(.).)/','$0$1 ',preg_replace('/\\W/','',$argn));\n</code></pre>\n<p><a href=\"https://onlinephp.io/c/ac1f3\" rel=\"nofollow noreferrer\">Try them online</a></p>\n"},{"answer_id":253238,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/253238#253238","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a> <code>-pl</code>, <s>48</s> 39 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>gsub /\\W|_/,&quot;&quot;\ngsub /.(?=(.).)/,'\\&amp;\\1 '\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcnm0km5BjlLsgqWlJWm6FjfV04tLkxT0Y8Jr4vV1lJS4IFw9DXtbDT1NPU19HfUYtRhDBXWIcqiuBes91XMVEvMUUisScwtyUhUhwgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253355,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253355#253355","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 55 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(n,`?`=rbind)diffinv(rep(1:n*2+1?2,1?1:n))[n]+1\n</code></pre>\n<p><a href=\"https://tio.run/##K/qfpmCj@z@tNC@5JDM/TyNPJ8E@wbYoKTMvRTMlMy0tM69Moyi1QMPQKk/LSNvQ3kjH0B7I1tSMzovVNvxfnFhQkFMJlDU00EnT/A8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Returns the 1-based nth term.</p>\n"},{"answer_id":253353,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253353#253353","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, 43 bytes</h1>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|n|((n+n).sqrt().round()-1.).powi(2)+n+n-1.\n</code></pre>\n<p><a href=\"https://tio.run/##dczBCsIwDAbge58i3hLmiu1ExKGvMga2MNDMtR0enM9eg9iTLIeQn/8jYY4pe4Z7PzASvBTI3FwCfwLP6BtL9UU2nCEvvCByxaTjFBKSDuPMV6TaaNKP8TmgpUp6yblV3099jC6kzk0b9GgkQkdb@B3tP7GF7FdJU8hhlZhdMfZYkHrnDw\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n<p>A slightly modified version of loopy walt's answer.</p>\n"},{"answer_id":253351,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253351#253351","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 22 bytes</h1>\n<pre><code>ＮθＦθＦ⊕ι⊞υ×ιιＩＥ…υθ⊕⁺ι⊗κ\n</code></pre>\n<p><a href=\"https://tio.run/##TUw7DgIhFOz3FK98JFhaUWKzhWYLL8DiMxD5LR8TT49I5TTzycxoo7KOyvW@htTqrfmdMh5MLM@YYQiYvAadyVOo9EDLGGytGGwc7tZTQcthhGLZsg0VpSoVryqh/GhH0sT0ax6Mw//L5tocXmLb3fAvNiF6P/fT230B\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Outputs the first <code>n</code> terms of the sequence. Explanation: Port of @JonathanAllan's Jelly answer.</p>\n<pre><code>Ｎθ\n</code></pre>\n<p>Input <code>n</code>.</p>\n<pre><code>ＦθＦ⊕ι⊞υ×ιι\n</code></pre>\n<p>Create an array containing each of the squares <code>0</code>, <code>1</code>, <code>4</code>, <code>9</code>, ... <code>i²</code>, ... each repeated <code>i+1</code> times.</p>\n<pre><code>ＩＥ…υθ⊕⁺ι⊗κ\n</code></pre>\n<p>Take the first <code>n</code> elements of the array, and add to each the incremented doubled index (0-indexed).</p>\n<p>20 bytes using the newer version of Charcoal on ATO:</p>\n<pre><code>ＮθＩＥ…ΣＥθＥ⊕ι×ιιθ⊕⁺ι⊗κ\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70iOSOxKDk_MWfBgqWlJWm6FjcbPPMKSkv8SnOTUos0CjWtuQKKMvNKNJwTi0s0fBMLNJwrk3NSnTPyCzSCS3PBIoU6CiDKMy-5KDU3Na8kNUUjU1NHISQzN7VYI1NHIVMTCHQUCoEYWU1ATilY2iW_NCkHyM_WBAPrJcVJycVQ1yyPVtIty1GKXWgK4QMA\" rel=\"nofollow noreferrer\" title=\"Attempt This Online\">Attempt This Online!</a> Link is to verbose version of code. Outputs the first <code>n</code> terms of the sequence. Explanation:</p>\n<pre><code>Ｎθ                      Input `n` as a number\n       θ                Input `n`\n      Ｅ                 Map over implicit range\n          ι             Current value\n         ⊕              Incremented\n        Ｅ               Map over implicit range\n            ι           Outer value\n           ×            Multiplied by\n             ι          Outer value\n     Σ                  Concatenated\n    …                   Truncated to length\n              θ         Input `n`\n   Ｅ                    Map over squares\n                 ι      Current square\n                ⁺       Plus\n                   κ    Current index\n                  ⊗     Doubled\n               ⊕        Incremented\n  Ｉ                     Cast to string\n                        Implicitly print\n</code></pre>\n"},{"answer_id":253349,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/253349#253349","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 10 bytes</h1>\n<pre><code>duplicates\n</code></pre>\n<p><a href=\"https://tio.run/##S0tMLskv@h8a7OnnbqVQUJRaUlJZUJSZV6JQnFpSrGDNxVWtoGtsomCgYAimTRQsgLiW639KaUFOZnJiSWrxf73/AA\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Builtin</p>\n"},{"answer_id":253348,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/253348#253348","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>UÞ⊍U\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJQIiwiIiwiVcOe4oqNVSIsIiIsIlstMzQsIDAsIDEsIC0zNCwgNCwgOCwgNF0iXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Multiset Symmetric difference is very powerful</p>\n"},{"answer_id":253342,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253342#253342","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s> 9 </s> 8 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Ḷ²’xRĖḄḣ\n</code></pre>\n<p>A monadic Link that accepts a positive integer, <span class=\"math-container\">\\$n\\$</span>, and yields a list of the first <span class=\"math-container\">\\$n\\$</span> odd-odd triangular polka dot numbers.</p>\n<p><strong><a href=\"https://tio.run/##AR4A4f9qZWxsef//4bi2wrLigJl4UsSW4biE4bij////Mzc\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n<h3>How?</h3>\n<p>Calculates the first <span class=\"math-container\">\\$T(n)=\\frac{n(n+1)}{2}\\$</span> terms, and outputs the first <span class=\"math-container\">\\$n\\$</span>.</p>\n<pre><code>Ḷ²’xRĖḄḣ - Link: integer, n     e.g. 5\nḶ        - lowered range (n)         [    0,    1,    2,    3,    4]\n ²       - square (vectorises)       [    0,    1,    4,    9,   16]\n  ’      - decrement                 [   -1,    0,    3,    8,   15]\n    R    - range (n)                 [    1,    2,    3,    4,    5]\n   x     - repeat elements           [   -1,    0,    0,    3,    3,    3,    8,    8,    8,     8,     15,     15,     15,     15,     15]\n    Ė    - enumerate                 [[1,-1],[2,0],[3,0],[4,3],[5,3],[6,3],[7,8],[8,8],[9,8],[10,8],[11,15],[12,15],[13,15],[14,15],[15,15]]\n     Ḅ   - convert from base 2 (vectorises)\n           ...i.e. [a,b] -&gt; 2a+b     [    1,    4,    6,   11,   13,   15,   22,   24,   26,    28,     37,     39,     41,     43,     45]\n       ḣ - head (to index n)         [    1,    4,    6,   11,   13]\n</code></pre>\n"},{"answer_id":253328,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253328#253328","body":"<h1><a href=\"https://github.com/molarmanful/sclin\" rel=\"nofollow noreferrer\">sclin</a>, 32 bytes</h1>\n<pre><code>; ; tk2* ;2^2* ;3* - + flat\n$W1+\n</code></pre>\n<p><a href=\"https://replit.com/@molarmanful/try-sclin\" rel=\"nofollow noreferrer\">Try it here!</a> Returns an infinite list. This code is so weird...</p>\n<p>For testing purposes (use <code>-i</code> flag when running locally):</p>\n<pre><code>; 50tk &gt;A\n; ; tk2* ;2^2* ;3* - + flat\n$W1+\n</code></pre>\n<h2>Explanation</h2>\n<p>Prettified code:</p>\n<pre><code>; ; tk 2* ; 2^ 2* ; 3* - + flat\n$W 1+\n</code></pre>\n<p><code>;</code> means &quot;evaluate the next line as a function.&quot;</p>\n<ul>\n<li><code>$W 1+</code> [1, ∞) as <em>n</em></li>\n<li><code>; ; tk 2*</code> <code>[[2][2 4][2 4 6][2 4 6 8]...]</code> as <em>k</em>*2\n<ul>\n<li>this works because <code>tk</code> (&quot;take&quot;) vectorizes the second argument</li>\n</ul>\n</li>\n<li><code>; 2^ 2* ; 3* - +</code> <em>n</em>^2*2 - <em>n</em>*3 + <em>k</em>*2\n<ul>\n<li>this whole segment is vectorized</li>\n</ul>\n</li>\n<li><code>flat</code> flatten</li>\n</ul>\n<p>It's vectorizations all the way down!</p>\n<hr />\n<h1><a href=\"https://github.com/molarmanful/sclin\" rel=\"nofollow noreferrer\">sclin</a>, 19 bytes</h1>\n<pre><code>2*&quot;&quot;Q.5^.5- I2^ +1-\n</code></pre>\n<p><a href=\"https://replit.com/@molarmanful/try-sclin\" rel=\"nofollow noreferrer\">Try it here!</a> Port of @loopywalt/@att's answer. Takes a 1-based index, but the whole function vectorizes quite neatly too.</p>\n<p>For testing purposes (use <code>-i</code> flag when running locally):</p>\n<pre><code>$W1+ ; 50tk &gt;A\n2*&quot;&quot;Q.5^.5- I2^ +1-\n</code></pre>\n"},{"answer_id":203922,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203922#203922","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, <s>51</s> 37 bytes</h1>\n<p>-14 bytes thanks to chunes</p>\n<pre><code>[ [ alpha? ] filter 2 clump &quot; &quot;join ]\n</code></pre>\n<p><a href=\"https://tio.run/##JYrNSgMxFIX38xSnU6RaUajgRpHYgkg3blRclDrcibczVzJJTDLSWvrsY0rh8J0fzoZ0cmF4f12@PN@BohZBE1zvxTaI/NOz1RzhA6e080Fswn1R7FHO6/IIfeJXtifVqmwL04eww69EcTb3D54Exng2ynk56UAWvKXOGz4ub61EZFXWpQqGG6kN5/2cpvVUX1zefl5tc1WKqrPZ6OFv/FjiUAwrrEDGt6SwxkZM4oAbaNN3Hvn@7cRiPXTkcT38Aw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 51 bytes</h1>\n<pre><code>: b ( s -- s ) [ alpha? ] filter 2 clump &quot; &quot; join ;\n</code></pre>\n<p><a href=\"https://tio.run/##JY5fS8MwFMXf9ynOOmR/JMIEXzokUxDpy15UfBizpPGuzUiTmKTSKX72mjLu5XfuOQ@HexQyWj@8vRS75xwiSKVQe9s5ZWoE@urISApwnmI8O69MxGZS7HI86s6z2BCL1MchR4UFAhhLWGIPoV0jOA44Kh3J4xZSd61DluZklcFm@EX2UGUj5IWfSZ54w5OM7f6MbxWUNcm/09wTZutpuot5C2FAvWidpjF5bVRA2tLYWEJTrSpNKV@IVbWSy@u7D9Yny7kor9bT@5/ZNsPfZJ9@PqAVDjfDPw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Unbelievably <a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> is competitive with Python and JavaScript :)</p>\n"},{"answer_id":253330,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253330#253330","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.unicode</code>, 34 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 2 * dup √ .5 - 1 /i sq + 1 - ]\n</code></pre>\n<p><a href=\"https://tio.run/##LYqxDcIwFAX7TPFqIIZEooEBEA0NoopSGOcHLMi3Y38XbMAMjMciJgKa0510vTbiQj4d94fdBjcKTHcMWq5fqD6xEes4/jJovtDfE1vjOoIPJPLwwbIg0piIzbRsi6JeoakW57bIDWrM0CWP9/MFtUaJCkuLOGI@WYk2D9pD5Q8\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Outputs the 1-indexed nth term of the sequence. Port of loopy walt's and att's <a href=\"https://codegolf.stackexchange.com/a/253320/97916\">Python answer</a>.</p>\n<pre><code>word  | data stack              | comment\n------+-------------------------+-----------------\n      | 5                       | example input\n2     | 5 2                     |\n*     | 10                      |\ndup   | 10 10                   |\n√     | 10 3.16227766016838     | square root\n.5    | 10 3.16227766016838 0.5 |\n-     | 10 2.66227766016838     |\n1     | 10 2.66227766016838 1   |\n/i    | 10 2                    | integer divide\nsq    | 10 4                    | square\n+     | 14                      |\n1     | 14 1                    |\n-     | 13                      | output\n</code></pre>\n"},{"answer_id":253329,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/253329#253329","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/str\" rel=\"nofollow noreferrer\">str</a>, 1 byte</h1>\n<pre><code>s\n</code></pre>\n<p><a href=\"https://tio.run/##Ky4p@v@/@P//xOKUNC6P1JycfEUA\" rel=\"nofollow noreferrer\" title=\"str – Try It Online\">Try it online!</a></p>\n<p>Since str manipulates streams byte-by-byte, this outputs 1 <code>s</code>pace for each input character.</p>\n"},{"answer_id":253320,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253320#253320","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, 35 bytes (@att)</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:int((2*n)**.5-.5)**2+2*n-1\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY3lXMSc5NSEhXyrDLzSjQ0jLTyNLW09Ex19UyBtJE2kK9rCFWqkJZfpJCnkJmnUJSYl56qYahjZKBpVVAE0pimkaepCVG3YAGEBgA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<h3><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, 39 bytes</h3>\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:(int((8*n)**.5-1)//2)**2+2*n-1\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY31XMSc5NSEhXyrDQy80o0NCy08jS1tPRMdQ019fWNgEwjbSOtPF1DqHKFtPwihTyFzDyFosS89FQNQx0jA02rgiKQ3jSNPE1NiLoFCyA0AA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Given the 1-based index computes a single value.</p>\n"},{"answer_id":253319,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253319#253319","body":"<h1><a href=\"https://www.haskell.org\" rel=\"noreferrer\">Haskell</a>, 34 bytes</h1>\n<pre class=\"lang-haskell prettyprint-override\"><code>[2*n^2-3*n+2*k|n&lt;-[1..],k&lt;-[1..n]]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m708I7E4OzUnZ2W0km6Ec0CAUuz-3MTMPAVbhdzEAt94hYKizLwSBRWFksTsVAVDAwOFmKWlJWm6FjeVoo208uKMdI218rSNtLJr8mx0ow319GJ1siGMvNhYiMoFUApKAwA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253312,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253312#253312","body":"<h1><a href=\"https://v8.dev/\" rel=\"nofollow noreferrer\">JavaScript (V8)</a>, 40 bytes</h1>\n<p>Prints the sequence forever.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>for(n=i=q=1;;n+=--i?2:q+(i=++q))print(n)\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNEts/j/Py2/SCPPNtO20NbQ2jpP21ZXN9PeyKpQWyPTVlu7UFOzoCgzr0QjT/P/fwA\" rel=\"nofollow noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253311,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253311#253311","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 12 bytes</h1>\n<pre><code>Þ∞:ɾ•y_ƛy$;f\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyI1IiwiIiwiw57iiJ46yb7igKJ5X8abeSQ7ZiIsIiIsIiJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Outputs the sequence forever.</p>\n<h2>Explained</h2>\n<pre><code>Þ∞:ɾ•y_ƛy$;f\nÞ∞:          # Push two copies of an infinite list of positive integers\n   ɾ         # In the second copy of the infinite list, push range [1, n] for each item\n    •        # And mold the first copy of the infinite list to the shape of the second\n     y_      # uninterleave the infinite list, giving two lists: the list of every second row starting at row 0, and the list of every second row starting at row 1. Discard the list starting at row 1.\n       ƛy$;f # To each row in the remaining list, uninterleave the row, and return the list of every second item starting at index 0. Then flatten the result.\n</code></pre>\n"},{"answer_id":253310,"question_id":253309,"link":"https://codegolf.stackexchange.com/questions/253309/triangular-polkadot-numbers/253310#253310","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, 47 bytes</h1>\n<p>Outputs the sequence indefinitely.</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>n=x=1\nwhile 1:exec'2;print x;x+='*n+'n-~n';n+=1\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P8@2wtaQqzwjMydVwdAqtSI1Wd3IuqAoM69EocK6QttWXStPWz1Pty5P3TpP29bw/38A\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146406,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146406#146406","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, <s>52</s> 45 bytes</h1>\n<p><em>(-7 bytes thanks to Julian)</em></p>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$i=0\n$args|%{$i+=$p-ne$_-and$p-ne$n\n$p=$_}\n$i\n</code></pre>\n<p><a href=\"https://tio.run/##XZBBS8NAEIXP2V8xh9EmuAtpcvAgC4GCV8V6EwkxndqUmMTsBoU0vz3OupXaLrMw8977ZmG79ot6s6O6nnGrxxkrHQss@ndzuBqxutHYqYYwV0Wz8W0jsNOYTwKreRIiCwXwkVmYhZGEODqN8eUsYRm5eyZdppYSEgkp527ZSc8dX4mPsJ38s1X6i3G5LvZwBAe4b3sqyp16eNtTaWEUAVoyVgLSd8cKbUAD5iz3ZIba8nSNW8hcSAQvj@vVYGz74fHXjPlgPZQlGeO4I6Po87TvjiPPTK8KQy7jNoHat1UDCwkLZz/9PXVcwNok@D/n@Qc\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Takes input <code>$args</code>, dumps it into a for loop, each iteration checking whether the <code>$p</code>revious value is <code>-n</code>ot<code>e</code>qual to the current value <code>$_</code>, and whether the previous value is <code>$n</code>ull. Exploits the Boolean-to-int implicit converstion to accumulate that into <code>$i</code>. Outputs <code>$i</code> at the end.</p>\n<p>The initial <code>$i=0</code> is needed to account for if the input is empty, and to (properly) account for when the input is a single value.</p>\n"},{"answer_id":252571,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/252571#252571","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, <s>10</s> 3 bytes</h1>\n<pre><code>#?:\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs1K2t+Li0lcwVLBVKCkqTdVRsAMx0xJzilO50qI1DBWQoGasgr6Crp1CCFAhRNJIwVjBBCbsBtNkpmCpAMboMjpmaCaYK5ijG2oCNNQARSMAWzcm7g==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>Down 7 bytes thanks to Steffan</em></p>\n<p>Dead simple. <code>1</code> for true, and <code>&gt;1</code> for false.</p>\n<p>Explanation:</p>\n<pre><code>#?:    Main function. Takes implicit input\n  :    Right (apply what's on the left to the right)\n ?     Unique\n#      Length\n</code></pre>\n"},{"answer_id":253260,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/253260#253260","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 19 bytes</h1>\n<pre><code>{t:!#x;(t~&lt;x)|t~&gt;x}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6ousVJUrrDWKKmzqdCsKamzq6jl4tJXCCkqLcmo5EqLVnJ0cnZxdVOKBbEjIqMgjKjICAgjLx9ClxSlpgJZQJ1uiTnFqXCdzhDpytRiCCMlNTVFKRYAT8Yi2w==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>A little bit lengthy. I have considered using inline assignment, but it seems to be on the same length as this one. Returns <code>0</code> for false and <code>1</code> for true.</p>\n<p>Explanations:</p>\n<pre><code>{t:!#x;(t~&lt;x)|t~&gt;x}  Main function. Takes x as input\n t:                  Assign variable t to\n   !                 Range between 0 to\n    #x;              Length of x (exclusive)\n       (  &lt;x)        Ascended version of x\n         ~           Matches (deep equal)\n        t            Variable t\n             |       Or\n                &gt;x   Descended version of x\n               ~     Matches\n              t      Variable t\n</code></pre>\n"},{"answer_id":253250,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/253250#253250","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 20 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ [ drop bl ] each ]\n</code></pre>\n<p><a href=\"https://tio.run/##Xc09D4JADAbgvb@isLhoIn4smjj5ubgYw0AY8Khw8bzi3ZGYGH87AmEAu/Vp@/aeCMemul5O58MKJeODjCaFll4laUEW1wAf8I@kFI8xZKNSz0cPJxsM5rVLH3vV@gwa27IeOdizychhcuPSwe4trZM6gzCXjmyRCPLqzS5usQR/ENbFTWGove9/k@4ggC9UEUaYGi7wpjBGSkSOcY266QQ/C7bUavUD\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>For each character in the input string, drop it from the data stack and output a space.</p>\n"},{"answer_id":253246,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/253246#253246","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 39 bytes</h1>\n<p>Returns <code>false</code> for ordered and <code>true</code> for unordered.</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{!(s+$/+s.reverse)[s.chars.sort*&quot;&quot;]}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsEiN9ulpSVpuhY31XXtiqsVNYq1VfS1i_WKUstSi4pTNaOL9ZIzEouK9Yrzi0q0lJRia6HK1QoU3KKVHJ2cXVyVYrnAHFdnFydHGKeisqqqUikWonrBAggNAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253241,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/253241#253241","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 47 bytes</h1>\n<pre><code>{&quot; &quot;/2':x^&quot;!@#$%^&amp;*()~`_-+={}[]|\\:;\\&quot;'&lt;&gt;?,./ &quot;}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6pWUlDSN1K3qohTUnRQVlGNU9PS0KxLiNfVtq2ujY6tibGyjlFSt7Gz19HTV1Cq5eJKi1ZyyiktKqpUKMsszszPU4oFCbnaZ9hDWI5JySkQlr19YryqjqGibZWyA0QkJCOzWAGI4vPyS+IVclLTM5NyUiFS4anqRakKyoaKEK5GolaSVrKmtmmcbgVExFM9VyExTyG1IjG3ICcVqAwAGFs02g==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>The window adverb finally got a use for once. Also, removing non-alphanumeric is such a huge pain to write.</p>\n<p>Anyways, here's the explanation:</p>\n<pre><code>{&quot; &quot;/2':x^&quot;!@#$%^&amp;*()~`_-+={}[]|\\:;\\&quot;'&lt;&gt;?,./ &quot;}  Main function. Takes x as input\n          &quot;!@#$%^&amp;*()~`_-+={}[]|\\:;\\&quot;'&lt;&gt;?,./ &quot;   Hard-coded non-alphanumeric string\n        x^                                       Remove all of them in x\n     2':                                         Window (Get chunks of x at length 2)\n &quot; &quot;/                                            Join the chunks with whitespace\n</code></pre>\n"},{"answer_id":253240,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/253240#253240","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>ÞȮ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwiw57IriIsIiIsIlwiQUJDREVGXCJcblwiWllYXCJcblwibm9cIlxuXCJ0cmVlXCJcblwicVwiXG5cIkFCQ0RDXCJcblwieWVzXCJcblwiZGVlZFwiIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Simple means <code>is ordered?</code></p>\n"},{"answer_id":253186,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/253186#253186","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 30 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ now year&gt;&gt; dup 120 - [a,b] ]\n</code></pre>\n<p><a href=\"https://tio.run/##Hcw7DsJADAXAq7wDQASUiZQW0dAgqiiFccxHWbwr2wjl9EtEM@XciSNbvV5O52MLpiQ6kYGYxT2b403x/NMY6UMcxSRiKfbSwCymktDVAZq/WISs7zF9CvaHHbYYaHMbMdb1TfAgnpv6Aw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<pre><code>now     ! T{ timestamp { year 2022 } { month 10 } ... etc }\nyear&gt;&gt;  ! 2022\ndup     ! 2022 2022\n120     ! 2022 2022 120\n-       ! 2022 1902\n[a,b]   ! { 2022 2021 2020 ... 1902 }\n</code></pre>\n"},{"answer_id":253185,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/253185#253185","body":"<h1><a href=\"https://esolangs.org/wiki/Minim\" rel=\"nofollow noreferrer\">Minim</a>, 49 Bytes</h1>\n<p>Program is run as follows:</p>\n<pre><code>C:\\Users\\chris&gt; minim -f golf.min\n</code></pre>\n<p>Golfed:</p>\n<pre><code>[]=&quot;xyear&quot;.\\&lt;1.\\&gt;[1].#&lt;[1]--i.$&lt;32._^!--[0].C-=4.\n</code></pre>\n<p>With whitespace and comments:</p>\n<pre><code>[] = &quot;xyear&quot;.  ; Insert the string 'xyear' into memory from index 0 \\\n                 The 'x' character corresponds to the value '120'\n\\&lt; 1.          ; Insert 1 as a system call argument \\\n                 This corresponds to the index in memory of the \\\n                 function name to call, 'year'\n\\&gt; [1].        ; Call the function and insert the result at memory index 1\n    #&lt; [1]--i. ; Print memory index 1 as an integer, post-decremented\n    $&lt; 32.     ; Print a space\n    _^ !--[0]. ; Skip the next statement if memory index 0, pre-decremented, is 0 \nC -= 4.        ; Subtract 4 from the program counter\n</code></pre>\n<p><a href=\"https://github.com/KakkoiiChris/Minim\" rel=\"nofollow noreferrer\">GitHub Repository</a></p>\n"},{"answer_id":253162,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/253162#253162","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 71 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>import.&quot;time&quot;\nfunc f(){for t,i:=Now().Year(),0;i&lt;120;i++{println(t-i)}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70oPX_BmoLE5OzE9FSF3MTMvKWlJWm6FjfdM3ML8otK9JRKMnNTlbjSSvOSFdI0NKvT8osUSnQyrWz98ss1NPUiUxOLNDR1DKwzbQyNgKS2dnVBUWZeSU6eRolupmZtLcS4TWD9IOOBRnABzeGCSixYAKEB\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Prints to STDERR.</p>\n"},{"answer_id":253161,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/253161#253161","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 12 bytes (Non-competitive)</h1>\n<pre><code>{x,x-1+!120}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6qu0KnQNdRWNDQyqOXiSos2MjA0jwXTRkYQ2tAsFgDLLAnN\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>K lacks any date-related functions, so this one is non-competitive.</p>\n<p>Explanations:</p>\n<pre><code>{x,x-1+!120}  Main function. Takes x as input\n       !120   Generate a range from 0 to 120 (exclusive)\n     1+       +1 to each number (1..120)\n   x-         x subtract to each number (x-1..x-120)\n x,           Concat x itself as the first number of the array (x,x-1..x-120)\n</code></pre>\n"},{"answer_id":253168,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/253168#253168","body":"<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 55 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func f(n int)int{if n&lt;2{return n}\nreturn f(n-1)+f(n-2)}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70oPX_BzoLE5OzE9FSF3MTMPK7M3IL8ohI9pbTcEqWlpSVpuhY3zdNK85IV0jTyFDLzSjSBuDozTSHPxqi6KLWktChPIa-WC8oCqtE11NQGUUaatVDtJmDtIMM1NKu50vKLFPKsbA2s82wMgYS2djVXQBHQzJw8jTwdkAGamly1XFC9CxZAaAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":253164,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/253164#253164","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$2\\log_{256}(96)\\approx\\$</span> 1.646 bytes</h1>\n<pre><code>Sk\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJTayIsIlsxLCAyLCAzXSJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>Sk # Takes a list of digits as input\n k # Prefixes\nS  # Sum of the automagically flattened list\n</code></pre>\n"},{"answer_id":253155,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/253155#253155","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, <s>11</s> 9 bytes</h1>\n<pre><code>kðt:122-r\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJrw7B0OjEyMi1yIiwiIiwiIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>-2 thx to @lyxal</p>\n"},{"answer_id":253150,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/253150#253150","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>jr</code>, 5 bytes</h1>\n<pre><code>ẇ↲⁽Ṙẇ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJqciIsIiIsIuG6h+KGsuKBveG5mOG6hyIsIiIsIjVcbkhlbGxvLCBXb3JsZCEiXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Explanation:</p>\n<pre><code>ẇ      # Get chunks of length n.\n ↲     # Pad each one with spaces to make it n chars long.\n    ẇ  # On every second item, call:\n  ⁽    # a one element lambda that\n   Ṙ   # reverses it's input.\n       # Join on newlines with j flag.\n</code></pre>\n"},{"answer_id":253143,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/253143#253143","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.unicode</code>, 14 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ cum-sum Σ ]\n</code></pre>\n<p><a href=\"https://tio.run/##VY5BDoIwEEX3PcX3ABBAIEETt8aNG@PKuGhqjV0UkE4XhnAa7@OVKmkRdf5q3puZzJULajp3POz22xU0p1tsiJMypIQJva2VaC4SbSeJHm2naoKRdytrIQ3WjPUMY/VIMMDXAtEGyUTTP5rONJu4x/kPXgYRxj9XKp@vKHLMK8mcIchyUiUK5OO9zD/hVZWygbkThNWRsRqvJ85O8xaxewM\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253140,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/253140#253140","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>¦∑\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwiwqbiiJEiLCIiLCIxMDAwMDBcbjY1NDMyMSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h3>Explained</h3>\n<pre><code>¦∑\n¦  # cumulative sum\n ∑ # sum\n</code></pre>\n"},{"answer_id":253116,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/253116#253116","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$2\\log_{256}(96)\\approx\\$</span> 1.646 bytes</h1>\n<pre><code>fy\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJmeSIsIlsxMTAsIDIyLCAzMzMwLCA0NDQ0LCA1NTU1NSwgNl0iXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>fy\n y # Uninterleave\nf  # Flatten\n</code></pre>\n"},{"answer_id":252194,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/252194#252194","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$11\\log_{256}(96)\\approx\\$</span> 9.054 bytes</h1>\n<pre><code>KY\nHSt2s{HL\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJLWVxuSFN0MnN7SEwiLCJbMSw0LDMsMl0iXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>-3 chars because bugfixes</p>\n<pre><code>KY\nHSt2s{HL\n--------\nKY       # First helper function\n Y       # Interleave with self\nK        # Sort\n-------- # Send the result to the next function:\nHSt2s{HL # Main function\n     {HL # Compute len(input)/2-1\n    s    # Drop that many items from the input\n  t2     # Take 2\n S       # Sum\nH        # Halve\n</code></pre>\n"},{"answer_id":252991,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/252991#252991","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 21 bytes</h1>\n<pre><code>{t,x^t:x@&amp;(0=2!)'!#x}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6ou0amIK7GqcFDTMLA1UtRUV1SuqOXiSos2UDBUMFIwVjCJBXIMDQ0UjIA8Y2MDBRMgUDAFAQWzWAAXng7R\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>Down 2 bytes thanks to ngn</em></p>\n<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 23 bytes</h1>\n<pre><code>{t:x@&amp;(0=2!)'!#x;t,x^t}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6ousapwUNMwsDVS1FRXVK6wLtGpiCup5eJKizZQMFQwUjBWMIkFcgwNDRSMgDxjYwMFEyBQMAUBBbNYADmdD4A=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>The old solution is kept because of the explanations.</p>\n<p>Explanations:</p>\n<pre><code>{t:x@&amp;(0=2!)'!#x;t,x^t}  Main function. Takes x as input\n             !           Create a range from 0 to\n              #x         Length of x - 1\n            '            For each number in the range (i)\n      (    )             Check if\n         2!              i mod 2\n       0=                is equal to 0\n     &amp;                   Where (get indices of truthy values)\n   x@                    x at each indices\n t:             ;        Assigned to variable t\n                 t,      t concat with\n                   x^t   x without the elements in t\n</code></pre>\n"},{"answer_id":253074,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/253074#253074","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 25 bytes</h1>\n<pre><code>{$[2!+/x;&quot;light&quot;;&quot;dark&quot;]}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6pWiTZS1NavsFbKyUzPKFGyVkpJLMpWiq3l4kqLVkoyVIpV0FcAS4H46Wao/BQTMB+kBcRNNEThZqDpTjSGSwMAL5oiMw==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Simple if statement.</p>\n<p>Explanation:</p>\n<pre><code>{$[2!+/x;&quot;light&quot;;&quot;dark&quot;]}    Main function. Takes x as input\n $[                    ]     If\n     +/x                     Sum of ASCII charcodes of x\n    !                        Modulo by\n   2                         2\n        ;                    If the result is 1 (i.e. an odd number)\n         &quot;light&quot;             Return string &quot;light&quot;\n                ;&quot;dark&quot;      Else, return string &quot;dark&quot;\n</code></pre>\n"},{"answer_id":253073,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/253073#253073","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$11\\log_{256}(96)\\approx\\$</span> 9.054 bytes</h1>\n<pre><code>iHD,[jn(&quot;OS\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJpSEQsW2puKFwiT1MiLCJhNyJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>iHD,[jn(&quot;OS\n          S # Sum charcodes\n         O  # Is odd?\ni           # Use that as the index for...\n  D,[jn(&quot;   # The compressed string &quot;darklight&quot;\n H          # Halved, yielding [&quot;dark&quot;, &quot;light&quot;]\n</code></pre>\n"},{"answer_id":252834,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252834#252834","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, <s>14</s> <s>13</s> 12 bytes</h1>\n<pre><code>@L+\\AG+mZ-5l\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/38FHO8bRXTs3Stc05///aAsdMx0THdNYAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<p><strong>Explanation:</strong></p>\n<pre><code>@L+\\AG+mZ-5l # whole program\n\n             # implicit output\n L           # left map with lambda d:\n@            # using index\n  +          #  concatenate\n   \\A        #   literal &quot;A&quot;\n     G       #   and literal &quot;abc...xyz&quot;\n      +      # into a concatenation of:\n       mZ    #  a constructed list of n zeroes\n             #   where n is: (the 2nd argument for m is supplied an int)\n         -5  #    the difference of 5\n           l #    and the length of implicit input (Q)\n             #  and the implicit input (Q)\n</code></pre>\n"},{"answer_id":253007,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/253007#253007","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 6 bytes</h1>\n<pre><code>.i=%2t\n</code></pre>\n<p><a href=\"http://pythtemp.herokuapp.com/?code=.i%3D%252t&amp;test_suite=1&amp;test_suite_input=%22abcdef%22%0A%22umbrella%22%0A%22looooooooong+text%22%0A%22abc%22%0A%22xkcd%22%0A%22Hello%2C+World%21%22%0A%22D%22%0A%22KK%22%0A%22Hi%22%0A%22odd_length%21%22%0A%22%22&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a>. Slightly more interesting one..</p>\n<p><strong>Explanation:</strong></p>\n<pre><code>.i=%2t # whole program\n\n       # take the implicit input (Q)\n     t # remove the first letter\n   %2  # keep the odd indices only\n   %2t # keep the even indices only\n  =    # assign this to Q (the variable encountered)\n.i     # then interleave this, with\n       # newly assigned implicit Q (implicit output)\n</code></pre>\n<hr />\n<h3>7 bytes</h3>\n<p>This one uses a <code>map</code> in order to double the characters.</p>\n<pre><code>s+Rd%2t\n</code></pre>\n<p><a href=\"http://pythtemp.herokuapp.com/?code=s%2BRd%252t&amp;test_suite=1&amp;test_suite_input=%22abcdef%22%0A%22umbrella%22%0A%22looooooooong+text%22%0A%22abc%22%0A%22xkcd%22%0A%22Hello%2C+World%21%22%0A%22D%22%0A%22KK%22%0A%22Hi%22%0A%22odd_length%21%22%0A%22%22&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n"},{"answer_id":253021,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/253021#253021","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>53</s> <s>36</s> 30 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{i=0\na.sort_by{[i%2,i+=1]}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsEiN9ulpSVpuhb7dO0SqzNtDbgS9Yrzi0rikyqrozNVjXQytW0NY2trIYpuhhcouEVHG-gY6hjpGOuY6JjqmOmYx8YqKCvY2ikAxY2AYmZAWWOgjHksF6Zq7GpjIcYvWAChAQ\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Ruby, 24 bytes</h2>\n<p>This appears to work but could fail <em>in theory</em> because &quot;the ordering of equal elements is indeterminate and <a href=\"https://ruby-doc.org/core-3.1.2/Enumerable.html#method-i-sort_by\" rel=\"nofollow noreferrer\">may be unstable</a>.&quot; Sorting by <code>[i%2,i+=1]</code> above <a href=\"https://8thlight.com/blog/will-warner/2013/03/26/stable-sorting-in-ruby.html\" rel=\"nofollow noreferrer\">solves this instability</a>.</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{i=1\na.sort_by{i^=1}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsEiN9ulpSVpuhY7dO0SqzNtDbkS9Yrzi0rikyqrM-NsDWtrIdI3wwsU3KKjDXQMdYx0jHVMdEx1zHTMY2MVlBVs7RSA4kZAMTOgrDFQxjyWC1M1drWxEOMXLIDQAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252768,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252768#252768","body":"<h1>Excel (ms365), <s>63</s> 61 bytes</h1>\n<p>-2 Thanks to <a href=\"https://codegolf.stackexchange.com/users/38183/engineer-toast\">@EngineerToast</a> for 61 bytes:</p>\n<pre><code>=RIGHT(CONCAT(&quot;AAAA&quot;,CHAR(96+MID(A1,SEQUENCE(LEN(A1)),1))),5)\n</code></pre>\n<p>Or, the original answer for 63 bytes:</p>\n<pre><code>=CONCAT(MID(&quot;Aabcdefghi&quot;,MID(TEXT(A1,&quot;00000&quot;),ROW(1:5),1)+1,1))\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/E1mzH.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/E1mzH.png\" alt=\"enter image description here\" /></a></p>\n<hr />\n<p>Note that it can probably be done with less bytes if input is an array of numbers but thought I'd take a single integer as startpoint.</p>\n"},{"answer_id":252638,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/252638#252638","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, <s>97</s> 96 bytes (ideomatic Go)</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func(L[]int)(E[]int,O[]int){for i,e:=range L{if i%2&lt;1{E=append(E,e)}else{O=append(O,e)}}\nreturn}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=bY7NisIwFIX3eYqLMJDAVaatyiB22V2hsxfBoEkJY9MQ05lF6JPMpgg-lG9j0urOs7k_nHu_83-t2-FODT_-8FpAw5UmRDWmtQ4WMJONmxHyyy1c_riB_NY5Of-6H2Snj7Tc7ZV2jBZjxWoavWwtKBSb3HIdXpZeSVAf6TbxRc6NEfpECxSsF-eL8NVrVcVVT6xwndX9k1NHzhiKMvDk2wbAWdOYhY40_4mQIKQIGcKyZ-ydJ0mCK42eLAvdMghhFYWwjjdP3DBM9QE\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Because Go supports multiple return values, this returns 2 lists, the even-indexed elements and the odd-indexed elements.</p>\n<ul>\n<li>-1 byte: <code>==0</code> into <code>&lt;1</code></li>\n</ul>\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, <s>122</s> 114 bytes (literal interpretation)</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func(L[]int)[]int{var E,O[]int\nfor i,e:=range L{if i%2&lt;1{E=append(E,e)}else{O=append(O,e)}}\nreturn append(E,O...)}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=bY7NisIwEMfveYpBEBKYLbZVWcQeexO698VD0KQE2zTEdPcQ-iR7KYIP5dtsUj9OzmG--M38_3-Xuhtv1PDDidcCWq40Iao1nXWQwEy2bkbID7dw_uUGimvv5MfnzcpeH-jue6-0Y1P2kSmxmgYiOwsKxaawXIevO68kqHm2TX1ZcGOEPtISBRtEcxa-eq6quBqIFa63Gl5clSQJGx7KdVSebFIGnnzZINdoGt3Ru5EFQoqQIeQIy4Gxd0yaBiqLTJ6HbhkCYRUDYR1vHnLjeK__\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>This longer solution merges the filtered lists into a single list.</p>\n<ul>\n<li>-8 bytes: <code>E</code> and <code>O</code> share the same type</li>\n</ul>\n"},{"answer_id":253018,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/253018#253018","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 10 bytes</h1>\n<pre><code>(2*2!!#:)#\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxlkFFPgzAUhd/vr2DMB2dgRGI0Ad3THpbwA/awLBu0l9JQ6Czd0sXob7e1Q6fyQO45597T5Kuz2/QunUym2WwKoLO3m835Q2V1EAQm38s2v93XJRe5yc+5mm3fQW/CsiIU6zAPq4rSug63zjx2lUIhSmt3nVJ2Kn0g5Pj1LNBotN34tiRjWhvjN23vV6lXpiXUyral1BsrWy+jYC2VoBOboNVRtF4rddmIwqW1/XJR2NH+/CW3gnMvJKU7gT3TjSuxYofIWNP41Bck0Gh9GLIkIZIik6KeD7okLRrSlD3DOZFd8nrEQXPZD0n6cJ8+PiUKO3nC2D4Q855ygkNc9jSm8lgJjHWDMZ6wHzMAzzF4WQQeJIwMnTVChH/8XPoXoOvyReC4udGBg1/MnHsNDZbOecbuoM8LKAqnigJW3A2cwxUp5/yggsvN1fknfze9SQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<ul>\n<li><code>(...)#</code> set up a filter/replicate, where the code in <code>(...)</code> is run on the (implicit) input and returns a list of numbers. for each such number, that many copies of the corresponding input item will be returned.</li>\n<li><code>(2*2!!#:)</code> return a sequence like <code>0 2 0 2 ... 0 2</code> that matches the length of the input. this removes items at even indices (0-based), and doubles those at odd indices</li>\n</ul>\n"},{"answer_id":253016,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/253016#253016","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C#</a>, 41 bytes</h1>\n\n<pre class=\"lang-cs prettyprint-override\"><code>f=x=&gt;x.Length&lt;2?&quot;&quot;:&quot;&quot;+x[1]+x[1]+f(x[2..])\n</code></pre>\n<p><a href=\"https://tio.run/##fZJRa9swEMef40@h6clmrmB9rOuU0dCNpYOywPKQhiBLZ0dElpgkbwojnz09J9mok1I9yL7//e5O3J3wV8KLfeeVachs6wO0RfLaYvdWaxBBWePZFzDglDgjHpX5VSRCc@/Jk7ON4y35m4x84EEJ8tsqSb5zZVIfHEYtloS7xmc9MnrojLg96jk5fsekJiUxndbFvi5jOY7sEUwT1rfXd5TeUPoxLj4tj1edxsU1Y8tsXyTJRB1eyd32ImMAH/qk8IdcUicozYqk59hnKVPKKyGhpjmhVSVlXdOBt2srB1pzmtO2dQ7/@BDQ9t/BNgWIAcn/km2aEGKk5wWRqaqhGjdCorzZSDl0fMXyNidz67T8gASgnefzuXPn5AS9Q2U6RQmvYUKFolJD0Uq50ofm9zXQWAE0zXo9pE4FkntcEauBzZ0KgEsBp4mzbxanT58NtvMQNYN@o1Kc7QnASMFDiuNkU9hm/SneSHcsqfU7kWUZ2U@uO8hev@gHcHnIgOJut38B\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Compiler) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253009,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/253009#253009","body":"<h1><a href=\"https://elixir-lang.org/\" rel=\"nofollow noreferrer\">Elixir</a>, 41 bytes</h1>\n<pre><code>&amp;for&lt;&lt;x&lt;-String.rjust(&amp;1,5,17)&gt;&gt;,do: x+48\n</code></pre>\n<p><a href=\"https://tio.run/##S83JrMgs@p9m@18tLb/IxqbCRje4pCgzL12vKKu0uERDzVDHVMfQXNPOTicl30qhQtvE4r@nv15BaUmxQpqehpKJsZGhsZKmgrKCf2mJlUJKclJiMheyAgszE1OgPEyBY0ZaSiqKAmMTI5A8XIFjckoSigJLIDBEWJEJBIn/AQ\" rel=\"nofollow noreferrer\" title=\"Elixir – Try It Online\">Try it online!</a></p>\n"},{"answer_id":253004,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/253004#253004","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a> <code>-nl</code>, 28 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>p$_.rjust(5).tr&quot; 1-9&quot;,&quot;Aa-i&quot;\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcnm0km5ejlLsgqWlJWm6FnsKVOL1irJKi0s0TDX1SoqUFAx1LZV0lBwTdTOVIEqgKhdsMTE2MjTmsjAzMeUyNjHisgQCQ4gcAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":248432,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/248432#248432","body":"<h1><a href=\"https://akc.is/hops/\" rel=\"nofollow noreferrer\">HOPS</a>, 10 bytes</h1>\n<pre><code>seq(x+x^2)</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70kI7-geG20kq5uQVFqsq2RgVLsgqWlJWm6FquKUws1KrQr4ow0IQJQ8QVQGgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<hr />\n<h1><a href=\"https://akc.is/hops/\" rel=\"nofollow noreferrer\">HOPS</a>, 11 bytes</h1>\n<pre><code>1/(1-x-x^2)</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70kI7-geG20kq5uQVFqsq2RgVLsgqWlJWm6FqsN9TUMdSt0K-KMNCEiUIkFUBoA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>The generating function of the Fibonacci sequence is <span class=\"math-container\">\\$1/(1-x-x^2)\\$</span>. In HOPS, <code>seq(f)</code> means <code>1/(1-f)</code>.</p>\n"},{"answer_id":252979,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/252979#252979","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 21 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>~:gsub&amp;'\\1\\1'&amp;/.(.)?/\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=TZBBCoJAFIZp6ymmgiywwl0E1iYi8AAuKsTxjaM5NjHOgG26SBsJOkKX6TQJNqOzecz3_bwf3vN9CRW-16-991Yyma8-jzUtFZ7YJ_fk2pPlYrqYbZet-w5mNyVLtD-OIhwDSUZnNEbeBmEMkCSWlqrAgjAWaV0UQjTfyAQY1-9KkSSV1EnDOaVSVpXV6-vKDK3yGDTOcwAjDk09d1DABYOhTpAGOk4QCNFL7v7WAN_Xed_v9mUaZpmBHCBk5EplaioaEhJCaZq2F6vrdv4A\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252935,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/252935#252935","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, <s>13</s> 11 bytes</h1>\n<p><em>2 bytes saved thanks to <a href=\"https://codegolf.stackexchange.com/users/80214/razetime\">Razetime</a>'s approach of using <code>I.</code></em></p>\n<pre><code>1 :'I.u&quot;+y'\n</code></pre>\n<p><a href=\"https://tio.run/##jdBRC4IwFAXg9/2KQxAWTtmWw5L0oSAIoodeQyJCil6CIDLov9uZWGZPwRw6d757ueeqF3r76/F@Kq4F0gQeJBQSPkGI@Wa1qDQSbxneev7Dq4ZClO5WLsR6FmKrJQzv12v0fuGKcokSQcYtTaFEcThdMFBIUQ7xKadhWEdhVO8KUaNGNWYlYgnNEppfOm7JPnM/rMGzQ0dELWLGmWa4kccSE1qqcY2zW9fnH2Qwb9goTN2R36HHmLhDJxvGG5ndBraeRuAm0qLTrz6zDmSxs2x8xyG0yP9hxqoX\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a> Assumes the given predicate is a true boolean predicate, which yields <code>1</code> for truthy and <code>0</code> for falsey, as is standard in J.</p>\n<p>I don't think there's a tacit way to make an adjective as complex as this. Technically, as per <a href=\"https://codegolf.meta.stackexchange.com/questions/2447/default-for-code-golf-input-output-methods/13707#13707\">standard IO</a>, we can have <s>8</s> bytes by assuming the function is stored in a predefined variable <code>u</code>:</p>\n<pre><code>[:I.u&quot;+\n</code></pre>\n<h2>Explanation</h2>\n<p>Approach c/o Razetime:</p>\n<pre><code>I.u&quot;+y\n  u      the given boolean function\n   &quot;+    applied at each cell of\n     y   y, the input list\nI.       obtain indices where truthy\n</code></pre>\n<p>Old approach:</p>\n<pre><code>u&quot;0#i.@#\n    i.     the indices from 0 to\n      @#   the length of the input, right-exclusive\n   #       and keeping only the elements corresponding to\nu          the given boolean function\n &quot;0        applied to each cell of the input\n</code></pre>\n"},{"answer_id":252933,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252933#252933","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 122 bytes, using string operations</h1>\n<pre class=\"lang-go prettyprint-override\"><code>import(.&quot;strconv&quot;;.&quot;fmt&quot;)\nfunc f(n int)(o[]int){for i:=0;i&lt;n;i++{k,_:=Atoi(Sprintf(&quot;%d%d&quot;,i,i+1))\no=append(o,k)}\nreturn o}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=VY49CsJAEIX7nGJZEGZJlEQbMaawsxQsRSQk2TDEzCzrxsLgSWyCYOeFvI1GBbF6fPD-LteSu7tJsyotC1GnSLfG6eH0ccLasHUwkgdnM6ajjEdS104qTzeUCQ0kkJwC3mx7bTVbgbMkjHFOMfp-WwW7WbJwjLA29mXRIAf5IJcBBuhHSnmcpMYUlAMHlTp7tnCNJcHn74Ple6e_BEq03qrv2BNo6LM_Gv_R5I-i8IXfvq776BM\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 125 bytes, using formula</h1>\n<pre class=\"lang-go prettyprint-override\"><code>import.&quot;math&quot;\nfunc f(n int)(o[]int){for i:=0;i&lt;n;i++{o=append(o,i*int(Pow10(1+int(Floor(Log10(float64(i)+1)))))+i+1)}\nreturn}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=VU9BasNADLz7FYtPsretvUkIpamvPfXge0hgSbyOqC2ZZU0Pxi_pxRTyiDwlv8naTqERCGmGGUb6-S15uDT68KXLQtQaKcC6YeteQlO78Nw68_x67f-4WrtTGJiWDsIACSQXAW934-wMW4FvWbrBd9qglB1numkKOgI_YewlkPO3SkHJcf-omC18cukZU7F26xVgJFU0lkS_9IEtXGupvx9BSSIoVukelJDCTP6KS6DJ5CnyrebjxkcgEl2QWx9WERjwon9o8YCWD0ilHt5Th2GeNw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Uses the formula <span class=\"math-container\">\\$a(n) = n\\cdot10^{1 + \\lfloor\\log_{10}(n+1))\\rfloor} + n + 1\\$</span> for <span class=\"math-container\">\\$n \\ge 0\\$</span>.</p>\n"},{"answer_id":252929,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/252929#252929","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$2\\log_{256}(96)\\approx\\$</span> 1.646 bytes</h1>\n<pre><code>TM\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJUTSc+KzEweDIwIiwiWzgsOSwxMCwxMSwxMiwxM10iXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>The <code>'&gt;+10x20</code> bit in the link is the function <span class=\"math-container\">\\$f(x) = x + 10 &gt; 20\\$</span>.</p>\n<pre><code>TM # Takes a function and a list in any order\n M # Map the list by the function\nT  # Return the truthy indexes of the resulting list\n</code></pre>\n"},{"answer_id":252928,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/252928#252928","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 2 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>Black box function is pre-assigned to variable V.</p>\n<pre><code>ðV\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=Clh7WD4y&amp;code=8FY&amp;input=WzEsIDIsIDMsIC01LCA1XQ\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":241437,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241437#241437","body":"<h1><a href=\"https://fortran-lang.org/en/\" rel=\"nofollow noreferrer\">Fortran</a>, 180 bytes</h1>\n<p>Since there are anonymous functions for other languages allowed, I assume that I can name my argwhere function with a letter and make use of the implicit typing.</p>\n\n<pre class=\"lang-fortran prettyprint-override\"><code>function J(v,n,f)\ninteger v(*)\ninterface\nlogical function g(m)\nend function\nend interface\nprocedure(g) f\nallocatable J(:)\nJ = pack([(i,i=1,n)],mask=[(f(v(i)),i=1,n)])\nend function\n</code></pre>\n<p>An ungolfed version looks like this.</p>\n<pre class=\"lang-fortran prettyprint-override\"><code>program test_argwhere\n    implicit none\n    abstract interface\n        logical pure function predicate_t(n)\n            integer, intent(in) :: n\n        end function\n    end interface\n\n\n    write(*, *) argwhere([1, 3, 4, 8, 5], is_even)\n\ncontains\n\n    pure function argwhere(vals, predicate) result(res)\n        integer, intent(in) :: vals(:)\n        procedure(predicate_t) :: predicate\n        integer, allocatable :: res(:)\n        integer :: i\n        res = pack([(i, i = 1, size(vals))], mask=[(predicate(vals(i)), i = 1, size(vals))])\n    end function\n\n    logical pure function is_even(n)\n        integer, intent(in) :: n\n        is_even = mod(n, 2) == 0\n    end function\n\nend program\n<span class=\"math-container\">```</span>\n</code></pre>\n"},{"answer_id":252926,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252926#252926","body":"<h1><a href=\"http://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 46 bytes</h1>\n<pre><code>proc(x:any)=\n echo 1;for i in(2..x):echo i-1,i\n</code></pre>\n<p><a href=\"https://tio.run/##y8vM/V9QlJ@sUKyRZqUAZmlUWClk5pVoairYcikopCkYGhj8L9YASQFlEvMqNYHCqckZ@QqG1mn5RQqZQMUaRnp6FZpWYNFMXUOdTM3//wE\" rel=\"nofollow noreferrer\" title=\"Nim – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252918,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/252918#252918","body":"<h1><a href=\"https://www.rust-lang.org\" rel=\"nofollow noreferrer\">Rust</a>, 68 bytes</h1>\n<pre class=\"lang-rust prettyprint-override\"><code>|u:Vec&lt;_&gt;|u.iter().fold((0,0,0),|(u,v,w),&amp;x|(u+w*(v!=x)as i8,x,1)).0\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqLS4ZMGGtDyF3MTMPA3N6pzUEoU026WlJWm6FjddakqtwlKTbeLtakr1MktSizQ09dLyc1I0NAx0gFBTp0ajVKdMp1xTR60CyNQu19IoU7St0EwsVsi00KnQMdTU1DOAmvXMmouroCgzryQnT1FDqbpWSUchTaMsNVkxOlZT0xqHlAE-OR1DPLKGBGSNdIx1DM3xG6ADUgZUiEeVrrEOCAIpiFNrIb5dsABCAwA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Non-Competing <a href=\"https://www.rust-lang.org\" rel=\"nofollow noreferrer\">Rust</a>, 63 bytes</h2>\n<p>This version crashes on 0-length inputs so doesn't technically complete the challenge. I think it's more elegant though.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>|u:Vec&lt;_&gt;|u.iter().fold((0,u[0]),|(u,v),&amp;x|(u+(v!=x)as i8,x)).0\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqLS4ZMGGtDyF3MTMPA3N6pzUEoU026WlJWm6Fjfta0qtwlKTbeLtakr1MktSizQ09dLyc1I0NAx0SqMNYjV1ajRKdco0ddQqgAxtjTJF2wrNxGKFTAudCk1NPQOoMS-subj09QuKMvNKcvIUNZSqa5V0FNI0ylKTFaNjNTWtubBLGeCT0zHEI2tIQNZIx1jH0By_ATogZUCFeFTpGuuAIJCCOLUW4t8FCyA0AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252917,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/252917#252917","body":"<h1>Swift, 51 bytes</h1>\n<p>This works for any collection whose element type defines the operator <code>!=</code>, not just arrays of integers.</p>\n<pre class=\"lang-swift prettyprint-override\"><code>{zip($0,$0.dropFirst()).filter{$0.0 != $0.1}.count}\n</code></pre>\n<p>The spaces around the <code>!=</code> operator are necessary; it parses <code>$0.0!=$0.1</code> as <code>$0.0! = $0.1</code>.</p>\n<p>This can be assigned to a variable or called inline:</p>\n<pre class=\"lang-swift prettyprint-override\"><code>print({zip($0,$0.dropFirst()).filter{$0.0 != $0.1}.count}([0, 1, 2]))\n\nlet x: ([Int]) -&gt; Int = {zip($0,$0.dropFirst()).filter{$0.0 != $0.1}.count}\nprint(x([0, 1, 2]))\n</code></pre>\n<p><a href=\"https://tio.run/##Ky7PTCsx@f@/LLFIocJKQSPaM68kVlNB104ByFCwVaiuyizQUDHQUTHQSynKL3DLLCou0dDU1EvLzClJLaoGChsoKNoqAGnDWr3k/NK8klouroKizLwSjQqN6FhNTQTHAJWno2CILoCqwlBHwUhHwRiozhxdHIKMIApQJHWNwVqACMQCGfj/PwA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":252914,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252914#252914","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 5 bytes</h1>\n<pre><code>ʀ¨pJ⌊\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJB4biLIiwiIiwiyoDCqHBK4oyKIiwiIiwiNFxuMTAiXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h3>Explained</h3>\n<pre><code>ʀ¨pJ⌊\nʀ     # Inclusive zero range\n ¨p   # each overlapping pair\n   J  # merge\n    ⌊ # floor\n</code></pre>\n"},{"answer_id":252843,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/252843#252843","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 23 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>~a=sum([0;diff(a).!=0])\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/vy7Rtrg0VyPawDolMy1NI1FTT9HWIFbzf25igUadTrRCdKwOF2e0AYTUUTCEMSAihjoKRjoKxkBxcxgfgowgEmBBXWOwEiACsUAaYzUVauwUijPyy/8DAA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<ul>\n<li><p>The unary operator <code>~</code> is redefined to save bytes.</p>\n</li>\n<li><p><code>sum</code> returns an error on an empty (untyped) array, so the array is padded with a <code>0</code>.</p>\n</li>\n</ul>\n"},{"answer_id":252908,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/252908#252908","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C#</a>, 48 bytes</h1>\n\n<pre class=\"lang-cs prettyprint-override\"><code>x=&gt;x.Where((_,i)=&gt;x[..i].Contains(x[i])).First()\n</code></pre>\n<p><a href=\"https://tio.run/##fZFLa8MwDMfPzacQPdngGdLHKUthbHSwBwwK6yELwzhuJ3AdZrtbSulnz5Rsh@7RWTZG1k9/2bIOZzrodhvQrWGxC9FssuTYk3foXn8cXdbWGh2xduF0RF4bZzzqLNFWhQAPvl57tYF9MghRRdTwVmMF9wodC9GTSFGC8uvAO2S@dfocXSxKAbTNYAU5tE0@a@TyxXjD2LNATm4hJZZU10USCqwpsORcztGHyHg7yJIr7O@j/O6bXjQhkqQz7/CL6ADGs6Rj5EVVsY7qQ7CHkYBxP1MBUwEjOJB3Ck5FKkZkxKSnmLEg@19kIqa0UjElbEIYPTfU1silx2jog8xXB@VNTd0cPrmh6B8oF6b7DkZ9W7FG3podp/FX/mdha4/RPG/ko7Jb06UMDsmh/QA\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Compiler) – Try It Online\">Try it online!</a></p>\n<h3>Alternative without LINQ, 58 bytes</h3>\n\n<pre class=\"lang-cs prettyprint-override\"><code>x=&gt;{for(int i=0;;)if(x[..++i].Contains(x[i]))return x[i];}\n</code></pre>\n<p><a href=\"https://tio.run/##fZFLSwMxEMfP3U8x9LRLY3D7OMUtiKLgAwRBD3UPIU3LQJpgktWWsp99nawe6qNmEsLM/OafZKLCiQqqawLaNTzuQtQbkR16/A7t64/QhTNGq4jOhuMZfq2t9qhEpowMAR68W3u5gX02CFFGVPDmcAn3Em0eoieRRQ3Sr0ORkKvGqjO0cVEzoG0OK6ig21bz/cr5nCKA1akQBa7y7YLz0QhrOtxGUgsUwboovI6Nt5Ac0XYDkV1ifzPpd9@Uow6RxK1@h19EAvJCZInh58tlnqg@BXsYM5j0s2QwYzCGlrxjcMlKNiYjpjzGTBjZ/yJTNqNVshlhU8LozcEZzZ89Rk1fpb96yW8c9XX4YoesfyB/1OljcuogdYzf6l1B46/6z4ONOUSrasufpGl0Khm0Wdt9AA\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Compiler) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252902,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252902#252902","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C#</a>, 43 bytes</h1>\n\n<pre class=\"lang-cs prettyprint-override\"><code>x=&gt;x.PadLeft(5,'').Select(y=&gt;(char)(y+48))\n</code></pre>\n<p><code></code> represents the character with code <code>17</code>; <code>48</code> is added to this to produce <code>A</code>.</p>\n<p><a href=\"https://tio.run/##dY9BS8QwEIXPzc1/MPSyCdYcdAWh214WFWWFhT3sQTzE2WkNpAlmUtki@9trix5E8DhvHu99D/kCGceerW9hN3CirhS/L72x/v2PtA7OESYbPP//0ffkKVosBTrDDNsY2mg6@BQZJ5MswkewB3gy1ktOcQp5fgETW1az5a73uPqWC3i49X1H0bw6WuGbiXUNDVQwHqv6qLfmsKEmyeticbZQekczgByqWs5WJYfz5Y1SY1auJ6jgSO@jTTStop9a/RgmhDwvGplfLS9zpVQpspM4jV8\" rel=\"nofollow noreferrer\" title=\"C# – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252873,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252873#252873","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, <s>26</s> 25 bytes</h1>\n<p>-1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/80214/razetime\">Razetime</a></p>\n<pre class=\"lang-ruby prettyprint-override\"><code>:*|:*&amp;(-[I,:+&amp;1]|:join|Z)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboWO620aqy01DR0oz11rLTVDGNrrLLyM_NqojQh8ssLFNyijQxiIbwFCyA0AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Explanation</h2>\n<pre class=\"lang-ruby prettyprint-override\"><code>:* |              # Range 0..n-1, then\n:* &amp; (            # map with ...\n  -[I, :+ &amp; 1] |  #   [m, m+1] (I is identity), then\n  :join |         #   join, then\n  Z               #   convert to int (for special case &quot;01&quot;)\n)\n</code></pre>\n"},{"answer_id":252879,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252879#252879","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C++ (gcc)</a>, <s>142</s> <s>138</s> 137 bytes</h1>\n<p>-4 thanks to <a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">@ceilingcat</a>.</p>\n<p>First time golfing in C++, there are probably many places where improvements could be made. <code>#include &lt;bits/stdc++.h&gt;</code> was really expensive in terms of bytes.</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include&lt;bits/stdc++.h&gt;\nint f(int n){for(int i=5;i--;){putchar(((n%(int)exp10(i+1))/(int)exp10(i))?(n%(int)exp10(i+1))/exp10(i)+96:65);}}\n</code></pre>\n<p><a href=\"https://tio.run/##hY7NCoMwEITP5ikCpZBFrKb@UI1tn8VGrQEbQ4xQEJ89NUKhh4J7GHZmPtjlSgVPzq09CMn7qW7KhzBjOJqa@/6puyEhDW6JUwlzO@htFdeUiSBgMKvJ8K7ShBB5dBU0b0UjInwKEP4GAPd/yLf186zIUmDLYt2BVyUkgRl5LUniM42BIW/9qSj4MBlclngzjax75phLlqQ7SJycd4h8HeoY3ZhJSxwxtNgP\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a></p>\n<p>Takes integer inputs and outputs as string.</p>\n"},{"answer_id":252894,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252894#252894","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, 12 bytes</h1>\n<pre><code>Rrp[:u`u' o]\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/z@oqCDaqjShVF0hP/b/f1NTAA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p>This is pretty brute force, but short enough to warrant a post I think...</p>\n<pre><code>R            - generate an inclusive rangefrom &quot;0&quot; to the STDIN number\n rp          - reverse the stack, delete the &quot;0&quot;\n   [       ] - for each number on the stack...\n    :u       - duplicate number, print it\n      `u     - increment the number, print it\n        ' o  - print a space\n</code></pre>\n<h1><a href=\"https://www.gnu.org/software/gawk/manual/gawk.html\" rel=\"nofollow noreferrer\">AWK</a>, 26 bytes</h1>\n<pre><code>a=$1{for(;a;a--)$a=a a+1}1\n</code></pre>\n<p><a href=\"https://tio.run/##SyzP/v8/0VbFsDotv0jDOtE6UVdXUyXRNlEhUduw1vD/f2MTAA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n<p>Turns out that a version in AWK is pretty short too, so here's that one...</p>\n<pre><code>a=$1                       - stash the number we want\n    {                   }  - code always runs if STDIN&gt;0\n     for(;a;a--)           - loop for N, N-1, N-2, ... 1\n                $a=a a+1   - set positional var to N appended w/ N+1\n                         1 - print all the positional vars we just set\n</code></pre>\n<p>This really just abuses the fact that AWK will reset the positional variable count if you set them to a value.  And it uses a &quot;truthy&quot; condition with no associated code block to print them all.</p>\n"},{"answer_id":252892,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252892#252892","body":"<h1><a href=\"http://gema.sourceforge.net/\" rel=\"nofollow noreferrer\">Gema</a>, 42 characters</h1>\n<pre><code>*=@repeat{*;${n;}@set{n;@add{${n;};1}}$n }\n</code></pre>\n<p>Sample run:</p>\n<pre><code>bash-5.1$ gema '*=@repeat{*;${n;}@set{n;@add{${n;};1}}$n }' &lt;&lt;&lt; 5\n1 12 23 34 45 \n</code></pre>\n<p><a href=\"https://tio.run/##S0/NTfz/X8vWoSi1IDWxpFrLWqU6z7rWoTi1BEg7JKakVIMFrA1ra1XyFGr//zc0BQA\" rel=\"nofollow noreferrer\" title=\"Gema – Try It Online\">Try it online!</a></p>\n"},{"answer_id":174041,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/174041#174041","body":"<h1>jq, <s>30</s> 27 characters</h1>\n<pre><code>1,(range(1;.)|&quot;\\(.)\\(.+1)&quot;)\n</code></pre>\n<p>Sample run:</p>\n<pre><code>bash-5.1$ jq -r '1,(range(1;.)|&quot;\\(.)\\(.+1)&quot;)' &lt;&lt;&lt; 5\n1\n12\n23\n34\n45\n</code></pre>\n<p><a href=\"https://tio.run/##yyr8/99QR6MoMS89VcPQWk@zRilGQ08TiLUNNZU0gZKm//ILSjLz84r/6xYBAA\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252889,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252889#252889","body":"<h1>Mathematica, 20 bytes</h1>\n<pre><code>Sum[Mod[#,i],{i,#}]&amp;\n</code></pre>\n<p><a href=\"https://www.wolframcloud.com/obj/2d8e8611-e52e-4dc7-a490-2fe0d8c580fa\" rel=\"nofollow noreferrer\">View it on Wolfram Cloud!</a></p>\n"},{"answer_id":252871,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252871#252871","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>ƛ‹p⌊\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJQIiwiIiwixpvigLlw4oyKIiwiIiwiMTAiXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":252888,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252888#252888","body":"<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 52 bytes</h1>\n<pre><code>import sugar,sequtils\nn=&gt;toSeq(1..n).foldl(a+n%%b,0)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704LzN3wU31gqL8ZIVijTQrBRBLI88qM69EE0wo2CqkJmfkK6RpGJpoLi0tSdO1uGmemVuQX1SiUFyanlikU5xaWFqSmVPMVayRZ2tXkh-cWqhhqKeXp6mXlp-TkqORqJ2nqpqkY6AJ1b4ASkFpAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252887,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252887#252887","body":"<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 70 bytes</h1>\n<pre><code>import sugar,sequtils,math\ns(x=&gt;toSeq(1..x).map y=&gt;(y-1)*10^len($y)+y)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704LzN3wU3DgqL8ZIVijTQrBTBLo8JKITOvRNNKoTi1MBrIitVUsOVSUEhNzshXSNMwNNBcWlqSpmtx0y0ztyC_qEShuDQ9sUgHqLi0JDOnWCc3sSSDq1ijwtauJD84tVDDUE-vQlMvN7FAodLWTqNS11BTy9AgLic1T0OlUlO7EmraAigFpQE\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252886,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252886#252886","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 16 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>~x=sum(x.%(1:x))\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/v67Ctrg0V6NCT1XD0KpCU/N/dEFRZl5JTp5GTkFiikamjpGmjpKVgpIOmFuXqWOsqamQll@kkKmQmadgaGVoGvsfAA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252878,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252878#252878","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$8\\log_{256}(96)\\approx\\$</span> 6.585 bytes</h1>\n<pre><code>Mrx'_Jx}\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJNcngnX0p4fSIsIjIiXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>Mrx'_Jx}\nMrx'     # For every number in the range [0, input)\n       } # Input + 1\n     Jx  # Prepend the input to that\n    _    # Parse as number to remove leading 0s\n</code></pre>\n"},{"answer_id":252885,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/252885#252885","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>ĠḢL\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLEoOG4okwiLCIiLCJbMSwgMSwgMSwgMiwgMiwgM10iXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Alternatively:</p>\n<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>¯TL\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLCr1RMIiwiIiwiWzEsIDEsIDEsIDIsIDIsIDNdIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p><code>¯ꜝL</code> would also work.</p>\n<p>All of these solutions can be 2 bytes by removing <code>L</code> and adding the <code>l</code> flag.</p>\n"},{"answer_id":252883,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252883#252883","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a> (v2), 41 bytes</h1>\n<pre><code>;=iP;=s*'A'5;Wi;=s+sA+96[i=i]iO Gs-Ls 5 5\n</code></pre>\n<p><a href=\"https://knight-lang.netlify.app/#WyI7PWlQOz1zKidBJzU7V2k7PXMrc0ErOTZbaT1pXWlPIEdzLUxzIDUgNSIsIjg2NDUiLCIyLjAiXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":252881,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/252881#252881","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a>, 29 bytes</h1>\n<pre><code>;=n+0P;=i 0W&gt;n iO+0++&quot;&quot;i=i+1i\n</code></pre>\n<p><a href=\"https://knight-lang.netlify.app/#WyI7PW4rMFA7PWkgMFc+biBpTyswKytcIlwiaT1pKzFpIiwiMTAiLCIyLjAiXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":252880,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252880#252880","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"noreferrer\">Fig</a>, <span class=\"math-container\">\\$14\\log_{256}(96)\\approx\\$</span> 11.524 bytes</h1>\n<pre><code>$t5$J*/A5OC+96\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyIkdDUkSiovQTVPQys5NiIsIls4LDYsNCw1XSJd\" rel=\"noreferrer\">Try it online!</a></p>\n"},{"answer_id":252698,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252698#252698","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 23 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>a^b=vcat(fill.(a,b)...)\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/PzEuybYsObFEIy0zJ0dPI1EnSVNPT0/zf7ShjpGOcWwclFaosVMoKMrMK8nJ44o20zEAQjOgpKmOIRAaoEobGhjoADFQ2gBV6v9/AA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252770,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252770#252770","body":"<h1><a href=\"https://github.com/nayakrujul/thon\" rel=\"nofollow noreferrer\">Thon</a>, 19 bytes</h1>\n<pre><code>n&quot;Aabcdefghi&quot;b5&quot;A&quot;J\n</code></pre>\n<p>Input as a number (e.g. <code>824</code>). Output as a string (e.g. <code>AAhbd</code>).</p>\n<p><strong>Explanation</strong></p>\n<pre><code>n&quot;Aabcdefghi&quot;b5&quot;A&quot;J\nn                    // Input a number\n &quot;Aabcdefghi&quot;        // Push the string of letters\n             b       // Convert the number to Base-&quot;Aabcdefghi&quot; (see below)\n              5&quot;A&quot;J  // Fill with &quot;A&quot; up to 5 characters\n                     // (implicit output)\n</code></pre>\n<p>Converting to base-<code>&quot;Aabcdefghi&quot;</code> is a trick to replace every <code>&quot;1&quot;</code> with <code>&quot;a&quot;</code>, every <code>&quot;2&quot;</code> with <code>&quot;b&quot;</code>, etc.</p>\n<h1><a href=\"https://github.com/nayakrujul/thon-symbols\" rel=\"nofollow noreferrer\">Thon (Symbols)</a>, 16 <a href=\"https://github.com/nayakrujul/thon-symbols/blob/main/Codepage.md\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>(Note: this language is newer than the challenge)</p>\n<pre><code>)ş{í1-å`;}&quot;&quot;]5AṚ\n</code></pre>\n<p><strong>Explanation</strong></p>\n<pre><code>)ş{í1-å`;}&quot;&quot;]5AṚ\n)                 // Create an empty list\n ş                // Get input as a string\n  {      }        // For each character in the input:\n   í              //   Convert to an integer\n    1-            //   Subtract 1\n      å`          //   Push the lowercase alphabet and get the character\n        ;         //   Append to the list\n          &quot;&quot;]     // Join the list by an empty string\n             5AṚ  // Fill the string with &quot;A&quot; up to 5 characters\n                  // (implicit output)\n</code></pre>\n"},{"answer_id":252876,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252876#252876","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 29 bytes</h1>\n<p>There probably is a shorter way (perhaps with <code>a.</code>) than a hard-coded string mapping, but everything I tried ended up being longer.</p>\n<pre><code>'Aabcdefghi'{~],~[:0&quot;0[:i.5-#\n</code></pre>\n<p><a href=\"https://tio.run/##y/r/P83WSt0xMSk5JTUtPSNTvbouVqcu2spAySDaKlPPVFf5f2pyRr5CmoKJjrGOkY6hjjEXVMBCx0zHRMcUxjUGcoxgHEsdCDT8DwA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<p>Takes input as array of numbers and outputs a string.</p>\n"},{"answer_id":241368,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241368#241368","body":"<h1>Java 8, <s>74</s> 73 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>f-&gt;a-&gt;{for(int i=0;i&lt;a.length;i++)if(f.test(a[i]))System.out.println(i);}\n</code></pre>\n<p>-1 byte thanks to <em>@Unmitigated</em></p>\n<p>0-based. Outputs the indices on separated newlines to STDOUT.</p>\n<p><a href=\"https://tio.run/##1ZJdS8MwFIbv9ysOBaGhaWg7x9R@gAjCLkRhl2MXsU1rZpeWJp0bo7@9Zu1EkA109EYCIck57znnecmKbqi9St7bOKdSwhPlYj8CkIoqHsNKR0mteE7SWsSKF4I8Hg/BidhLxRIeU8WCmVAsY1WET2Q9FELWa1YFXKjFMooghrBN7Yja0T4tKlM/Aw8dnweU5Exk6s3nloV4aqZEMalMuuBLhOY7qdiaFLUiZaU1uTA58pvWH@n5y/o11/MfMTYFT2Ct0cy50qnZYgm0yiQ6kAJ0YwCFEAT76G97F3vY0Wvc7Q6@bvwu90RTYybKWsk7MKxv2PuqojtJVNE3NCmyDKAigW0YOgY6X@y5VrqaLnbM@ZXLkOrht3Z0KN7LYkLLMt@ZKSI0jlmpTTvfFHWWwQ8LrjX8BE@x62J3jN3pYA5ceX/04IuuEw7Gd4Nvset0eJ4mHAzPcp3Iu4ivVw4GOMH2RH9jW//kweCCi8CCIaH@Lw5AM2raTw\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-java prettyprint-override\"><code>f-&gt;a-&gt;{              // Method with Function &amp; integer-array parameters and no return\n  for(int i=0;i&lt;a.length;i++)\n                     //  Loop `i` in the range [0,length):\n    if(f.test(a[i])) //   If the Function for the `i`'th integer of the array is truthy:\n      System.out.println(i);}\n                     //    Print index `i` with trailing newline\n</code></pre>\n"},{"answer_id":252869,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252869#252869","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, 67 bytes</h1>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|a|format!(&quot;{:A&gt;5}&quot;,a.map(|d|char::from(d+96)).collect::&lt;String&gt;())\n</code></pre>\n<p><a href=\"https://tio.run/##fc4/b8IwEAXwnU9xyVDZ6jUSBBBcaaSMzB2rChn/KZYSp3WOLoTPnrpljMq7@XfvxXPPowvQKh@EhMsMUhrL4AhcED0bom@rifaBuz3buDtvKglPFbxy9OEDXmAc1OC62CrORH6hulpdc1RFqz7FYAZ9UpHIxa4V5nG7lrLQXdNYzUS724tKSDk@/xWrvreRD/YrEw9OpN7sbYklLnCO5Xvh04SDTxsSQMiNPiqdy3/lBte4xNXE1Sdn7B1XJrWYqlqb4x21xdvNJ9KnqF95nY0/\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252494,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252494#252494","body":"<h1>Python, <s>44 39 65</s> 40 bytes</h1>\n<p><code>m</code> should be a binary string, while <code>n</code> an int.</p>\n<p>Had to add 26 bytes all because OP didn't say that 0's had to be prefixed to the parity bits, but doesn't matter since Neil found a shorter solution.</p>\n<pre class=\"lang-python prettyprint-override\"><code>lambda m,n:m+bin(m.count('1')+2**n)[-n:]\n</code></pre>\n"},{"answer_id":252828,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/252828#252828","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, <s>12</s> <s>10</s> <s>9</s> 6 bytes</h1>\n<pre><code>{&amp;x'y}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6pWq1CvrOXiSos2srE2VDBSMFYwUTCNBfIN7cB8XSAyVtAFCxnYgoUMgNAYTBoomMQCACIADpE=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>Down 3 bytes thanks to Steffan</em></p>\n<p>Takes <code>x</code> as black box function and <code>y</code> as list of integers.</p>\n<p>Explanation:</p>\n<pre><code>{&amp;x'y}  Main function.\n  x'y   Apply each value y to x (x(y)), return a binary list\n &amp;      Get all the truthy indices\n</code></pre>\n"},{"answer_id":252817,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252817#252817","body":"<h1><a href=\"https://docs.python.org/3.8/\" rel=\"nofollow noreferrer\">Python</a>, <s> 42 </s> 41 bytes</h1>\n<p>-1 thanks to <a href=\"https://codegolf.stackexchange.com/users/107561/loopy-walt\">loopy walt</a>'s suggestion to use XOR, <code>^</code>, instead of addition.</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:[chr(96^d)for d in[33]*5+a][-5:]\n</code></pre>\n<p>An unnamed function that accepts a list of integers from <span class=\"math-container\">\\$[1,9]\\$</span> and returns a list of characters.</p>\n<p><strong><a href=\"https://tio.run/##PYzBDoIwGIPvPkVvbPp7gAkBEnyROZPpXCBRWOYuhvDsc/Ng08PXNqn7hHGZRet8tMMlPvXrZjR0L@@jZ11zNdwuHgbTLIVQ@/qglTzWvYq5Do93SAuYPBEEoSKUCRRBtoSGkOo6J/HDKmNH@LtUvN8hyflpDswWlq35c@MYzlgty4FvBY9f\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></strong></p>\n"},{"answer_id":252562,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252562#252562","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 9 bytes</h1>\n<pre><code>z⟨kj₎t⟩ˢc\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r/v@rR/BXZWY@a@koezV95elHy///R0WY6BkBoFqsTbapjCIQGsbH/owA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<p><em>-2 bytes thanks to @DLosc</em>.</p>\n<p><em>-1 byte thanks to @Kroppeb</em></p>\n<h3>Explanation</h3>\n<p>Given inputs <code>[a1, …, an]</code> and <code>[r1, …, rn]</code>:</p>\n<pre><code>z         Zip: [[a1,r1], ..., [an, rn]]\n ⟨    ⟩ˢ   For each sublist [ai, ri]\n  k         Take [ai]\n     t      Take ri\n   j₎       Juxtapose the list [ai] ri times to itself\n       c  Concatenate into one list\n</code></pre>\n"},{"answer_id":252854,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252854#252854","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 15 bytes</h1>\n<pre><code>DịØa;@”Ax5¤Uḣ5U\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9/l4e7uwzMSrR0eNcx1rDA9tCT04Y7FpqH/D7c/aloT@f9/tImxkaGxjoKFmYmpjoKxiZGOgiUQGMYCAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Almost certainly I'm missing some atoms or syntax tricks that can get this down further. 11 bytes are spent to handle the padding.</p>\n<p>Explanation:</p>\n<pre><code>DịØa;@”Ax5¤Uḣ5U\nD               get decimal representation\n ịØa            index into lowercase alphabet\n      ”Ax5¤     repeat &quot;A&quot; 5 times\n    ;@          prepend &quot;A&quot;s to the other string\n           Uḣ5U take the last 5 characters\n</code></pre>\n"},{"answer_id":252847,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252847#252847","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 31 bytes</h1>\n<pre><code>{TR/0..9/Aa..i/}o*.fmt('%05d')\n</code></pre>\n<p><a href=\"https://tio.run/##DcHdCkAwGAbgW3mT/4Nv2CbLT7kFOZdipYjGieTax/Mcs1lzu93wNWr79B1LiBRrR6KFvXtMervCwEvkFES2xDnecNwBdYNHwx1eB3o3qATPUo4iFxJcZFC/tLEf\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p><code>*.fmt('%05d')</code> is an anonymous function that formats its integer argument to five digits, padded on the left with zeroes.  <code>{ TR/0..9/Aa..i/ }</code> is a second anonymous function that transliterates its string argument, turning 0 into A and 1-9 into a-i.  The <code>o</code> operator composes those two functions.</p>\n"},{"answer_id":252844,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252844#252844","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 13 bytes</h1>\n<pre><code>&quot;A&quot;^-5$`c$96+\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k/#eJxNj81qwzAQhO96ikX40FIU4d/YEhR87KkPEFIsyfIPSeTWlqlNaZ+9slxCZ077McvONgyX+I2kQaWCIntCyLKv4LT+jKwBgIVXw4U/VI3or3zhKx8fz9/InkL4M8diEz47GDkQOcccSyGl8tAhjsuyFNKPCcSw5VymVlLsmRwySCB1ua6ptUexA35R1ftiAbvdxd5pu4go6qx9nxilaqh1O1ybw2SFuuhFdcK0+qCGG/2Y9WT7wUw0SqNjmlMz36QeiR3IZMfetKQ3xD9BPsWK0IthkMRRGAN5htfZMvBFPc+zJIU79209j5MI/vGttOeFU3jnvvcvN7RnGg==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<ul>\n<li><code>`c$96+</code> convert input of digits to corresponding letters</li>\n<li><code>-5$</code> left-pad to length 5 with spaces</li>\n<li><code>&quot;A&quot;^</code> fill spaces with &quot;A&quot; (and implicitly return)</li>\n</ul>\n"},{"answer_id":252840,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252840#252840","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 50 bytes</h1>\n<pre class=\"lang-red prettyprint-override\"><code>func[v][insert/dup v 17 5 take/last/part v + 48 5]\n</code></pre>\n<p><a href=\"https://tio.run/##VY9BDoMgAATvvmLrtWkUBavtL3olHIhiNLVoEK2/t6ilSTccyM4kLEZV60NVXKC@rfWkSz4L3upRGRtV04AZ5AoGK58q6uRoo0Ea69ozaA4m1ro3SpYNWj1MFjyAC2cJGAGLQQt3EVt3R0jThKTh18jAKDYv3fFh5BllXiA7jT09hJQmnrtV/tDCP1G4kDAQxw6/bUGNl/sAZlXa3pz@xm4ZTKth@0vZSINlr0XwA1q9u1arQKwf\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n<p>Takes input as a vector of code points and returns output as the same.</p>\n<ul>\n<li><code>insert/dup v 17 5</code> Insert five 17s at the beginning</li>\n<li><code>v + 48</code> Add 48 to each element</li>\n<li><code>take/last/part v 5</code> Take the last five elements</li>\n</ul>\n"},{"answer_id":252767,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252767#252767","body":"<h1><a href=\"http://clang.llvm.org/\" rel=\"nofollow noreferrer\">C (clang)</a>, <s>69</s> <s>67</s> <s>63</s> 61 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(x,o,i)char*o;{for(memset(o,65,i=5);x;x/=10)o[--i]=x%10+96;}\n</code></pre>\n<p><a href=\"https://tio.run/##TVDbboMwDH0uX2F1qpSM0EG5qChlP8J4QCnQSJBUhEqREL@@zEF9mF/sc2wfX0QkxlYN7kMqMb7uHdzMcpf6/PgO/lOzVANyrieWaSapeLTzp@Zrr2cydZPpFqJZkTNZ5ZRbbr@qJKa6jiLZVPaUxGFZ8M1JtcDUSkUorEFw8FCq52sxdQMVrJCllyRlcC2ynEGaXRiUaAlsHKtxFJC9BWtjju4GGbow9GqHXc1i6q0oG46k3xN0ne/ALw@a@vCJBy09OZ7OuflRxze9BcHmfkU/toNxET6iEtfyDw\" rel=\"nofollow noreferrer\" title=\"C (clang) – Try It Online\">Try it online!</a></p>\n<ul>\n<li>thanks to <a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">@ceilingcat</a> for saving 4+2 bytes</li>\n</ul>\n"},{"answer_id":252769,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252769#252769","body":"<h1>JavaScript (ES6), 48 bytes</h1>\n<p>Expects an integer and returns a string.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=(n,k=5)=&gt;k?f(n/10|0,k-1)+&quot;Aabcdefghi&quot;[n%10]:''\n</code></pre>\n<p><a href=\"https://tio.run/##XcnNDoIgAADge0/B3JowNUCwVRs1n6N1QH6UcNCyderdyc0u@V2/u3zLST3d41WFqE1KVsBQetEgcfYXCwOm5ENKX1FUZK3slDa2H1x2DVtKbqc8TyqGKY5mN8YeWshZTRlCAGOgVSfV5r/BYc@bpdvBarNuwHj961bpbtXHGV3azWT6Ag\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<hr />\n<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 48 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>k;f(n){k++&gt;4?k=0:f(n/10)|putchar(n?n%10+96:65);}\n</code></pre>\n<p><a href=\"https://tio.run/##JY7RDoIwDEXf@YqGxGTLIG4wiDCRDzE8LDPggk4DGElwv@6c0Jfb296eVMWdUs71okUGLz0hJ173FS293TOKP8/XpK5yQKY2O0ZJkZd5hoV1d6kNwrAEANpMcJGTPDdQwQI8TVgawSHnWQQpTyIofDGwIvDh9jGg/4H2WSq8HIF7IWRjbbTZL1eibsQ6bNGMt87/M6IwXJ0NrPuq9ia70cXvHw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<h2>47 bytes</h2>\n<p>This version was suggested by <a href=\"https://codegolf.stackexchange.com/users/41374/jdt\">@jdt</a>.</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>i;f(*o,x){for(i=5;i;x/=10)o[--i]=x?96+x%10:65;}\n</code></pre>\n<p><a href=\"https://tio.run/##VY3RCoIwGIXvfYofQdhylqaObEkPYl6IMBnYJmo0EF@9tUSpzs2Bc77//HVQt5VsjBGMo50iGk9c9UjkKRNMH/IoxKoIAlHm@ppRX3tReKYpm42QI9wrIRGGyQGrTyBk9xiHooQcJkjiYxQTONEkJRAnRwKZVQQzW3j7BtByZOmQWbtAYs33t8VtVVtgXRYl@6tUQX8SjhQBjb9B11uII9fbp@1wky4BtbazM5tXzduqGUzwfAM\" rel=\"nofollow noreferrer\" title=\"C (clang) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252837,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252837#252837","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 62 bytes</h1>\n<pre><code>func[s][forall s[s/1: #&quot;`&quot;+ s/1]pad/left/with rejoin s 5 #&quot;A&quot;]\n</code></pre>\n<p><a href=\"https://tio.run/##LYtBCoMwFET3OcWQLruQGC2tu16h28@HBk3QIlGSlB4//aAzmzfDTPJTffmJWIWhhm8cKTOFLbl1RabcmAEX/dZXCPLupmb1oTS/pcxI/rMtERm9TJ6aq9y8G2dpSEFEHSxaGFg@8h03dOjPZIXbkx84bFgx7WmJBQGZ6x8\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252835,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252835#252835","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 9 bytes</h1>\n<pre><code>.[\\A5m@Gt\n</code></pre>\n<p><a href=\"https://pythtemp.herokuapp.com/?code=.%5B%5CA5m%40Gt&amp;test_suite=1&amp;test_suite_input=%5B4%2C3%2C2%2C1%2C3%5D%0A%5B8%2C6%2C4%2C5%5D%0A%5B3%2C4%2C2%5D%0A%5B9%2C9%2C9%2C9%2C1%5D&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n<p>This answer uses a sufficiently different approach from the existing Pyth answer(s).</p>\n<h5>Explanation:</h5>\n<pre><code>.[\\A5m@Gt   | Full code\n.[\\A5m@GtdQ | with implicit variables\n------------+----------------------------------------------------\n     m    Q | Replace each number d in the input with\n      @G    |  the character of the lowercase alphabet with index\n        td  |  d minus 1\n.[\\A5       | Pad the array on the left with A to a length of 5\n</code></pre>\n"},{"answer_id":252833,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252833#252833","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, 25 bytes</h1>\n<pre><code>iry5L[f5f-['Ao,]]pp['0+o]\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/z@zqNLUJzrNNE03Wt0xXyc2tqAgWt1AOz/2/38TAA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p>Pretty straight forward reading of the rules...</p>\n<pre><code>ir                        - read the digits in a codepoints, reverse stack\n  y5                      - push digit count, push &quot;5&quot;\n    L                     - check: digitCount&lt;5\n     [          ]pp       - exec block if digit count &lt; 5\n      f5f-                - subtract digit count from 5, get pad count\n          [   ,]          - loop once for each pad digit...\n           'Ao            - print &quot;A&quot;\n                   [    ] - loop or all the codepoints on the stack\n                    '0+   - convert from 0-9 to a-i\n                       o  - print as character\n</code></pre>\n"},{"answer_id":252831,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/252831#252831","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 15 bytes</h1>\n<p>Same technique as <a href=\"https://codegolf.stackexchange.com/a/224150/11261\">Sony Santos</a>.</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>:uniq|~:[]&amp;1|:!\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboW661K8zILa-qsomPVDGusFCGiN5cUKLhFRxvqKKCj2FgFZQVdO4WQotJULpgiIx0FYx0FE5icW2JOMVTSTEfBUkcBSmKTxzTPXEfBHFPUBGyLAYoRELcuWAChAQ\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h2>Explanation</h2>\n<pre class=\"lang-ruby prettyprint-override\"><code>:uniq |     # Get unique elements\n~:[] &amp; 1 |  # Get element at index 1 (will be nil if there is only one unique)\n:!          # Negate (number becomes false, nil becomes true)\n</code></pre>\n"},{"answer_id":252765,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252765#252765","body":"<h1><a href=\"https://factorcode.org\" rel=\"nofollow noreferrer\">Factor</a>, 29 bytes</h1>\n<pre><code>[ &gt;dec 48 v+n 5 65 pad-head ]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY5NqsJAEIT3c4rai4L5kRgh4OoReLgRV8HFOOkYcRzzZjrCQzyJm2z0Fh7E2xgde9NFVX9FX--VVHy03fO8WuaLnxR7soY0HP21ZBQ5OLY7s3U4SK5HjbSO7Ed740Rv3EEfldQOjSXm_6YnGDORL1Jw3dNi_pvPlymykhRMe9iQzXyvKDTxreVqmDwKn0cJTgODGJMYjSyHNckSa3_zDNIMlTgjCoNxiGQSxQijANN-xrigQIX-EY0R1iCpaiG-ZNf5_QI\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>-6 from chunes.</p>\n"},{"answer_id":252778,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252778#252778","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 21 bytes</h1>\n<pre><code>T`d`_l\n^\nAAAA\n!`.{5}$\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wPyQhJSE@hyuOyxEIuBQT9KpNa1X@/zcxNjI05rIwMzHlMjYx4rIEAkMA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n<pre><code>T`d`_l\n</code></pre>\n<p>Translate digits to lowercase letters.</p>\n<pre><code>^\nAAAA\n</code></pre>\n<p>Prefix four <code>A</code>s.</p>\n<pre><code>!`.{5}$\n</code></pre>\n<p>Take the last 5 letters.</p>\n<p>A port of @Jiří's sed answer is also 21 bytes:</p>\n<pre><code>T`d`_l\n+`^.{0,4}$\nA$&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wPyQhJSE@h0s7IU6v2kDHpFaFy1FF7f9/E2MjQ2MuCzMTUy5jEyMuSyAwBAA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases.</p>\n"},{"answer_id":252757,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/252757#252757","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, <s>26</s> 14 bytes</h1>\n<pre><code>iysp&amp;ol`Syl+u;\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/z@zsrhALT8nIbgyR7vU@v//RBgAAA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p>This turned out to be trickier than I expected...  Since strings of length 9, 99, etc... need an extra digit when the length it appended.</p>\n<p>So the code computes the number of digits in the length of a string composed of the original string plus the length of that string.  Then that length is added to the length of the original string to get the final length, which is appended to the original.</p>\n<pre><code>iysp&amp;ol`Syl+u; - \ni              - read in the input string\n ysp           - get the length, stash it, delete from stack\n    &amp;o         - print the string\n      l`       - load the string length and increment\n        Sy     - split to digit, count them\n          l+   - load the string length and add to digit count\n            u; - print as number and exit (to avoid printing stack)\n</code></pre>\n<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">jq</a>, 40 bytes</h1>\n<pre><code>.+&quot;\\(length+(length+1|tostring|length))&quot;\n</code></pre>\n<p><a href=\"https://tio.run/##yyr8/19PWylGIyc1L70kQxtGG9aU5BeXFGXmpddARDQ1lf7/V0qEAaX/ukUA\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n<p>It's the same algorithm, just in <code>jq</code> for comparison.  I couldn't find a shorter way to do it in <code>jq</code> even though using &quot;length&quot; three times seems like it should be golf-able...</p>\n"},{"answer_id":252814,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252814#252814","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-plF</code>, 24 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>$_=A x(5-@F).y/1-9/a-i/r\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/18l3tZRoULDVNfBTVOvUt9Q11I/UTdTv@j/fxNjI0NjLgszE1MuYxMjLksgMPyXX1CSmZ9X/F/X11TPwNDgv25BjhsA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252812,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/252812#252812","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 29 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 2 clump [ std 0 &gt; ] count ]\n</code></pre>\n<p><a href=\"https://tio.run/##Zc@xCsIwEAbgPU/x@wCWpBkEBVdxcRGn0iHEqEXbxuQ6SOmzx7S0heqFcOS@/4bclKbahcv5eDpscXd1Y4vqjlLRI/GkqPBUaD@84c27MZU2HtYZoo91RUXYMdYyxGrRYVmrePlo/EeXJhbam5iN/9m0J5BCQmymQG9yNjF4n@hGS0dbS/QnNj6bZB0LWYzrV1NaZPB0jbxHDl038Z95KJWNU6WfSfgC\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Counts the number of adjacent pairs whose standard deviation is greater than zero.</p>\n"},{"answer_id":252811,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/252811#252811","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 97 bytes, <span class=\"math-container\">\\$O(n)\\$</span> time, <span class=\"math-container\">\\$O(n)\\$</span> space</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func (l[]int)int{m:=make(map[int]int)\nfor i,e:=range l{if _,o:=m[e];o{return e}\nm[e]=i}\nreturn-1}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=bY5BCoMwEEX3OcXQVQKxoG2hWHKHLroTKUESCZpEQuwmeJJupNBDeZvG6LIww_A_j__n_WntvMDAm463AjRXBik9WOePB6n9Ab24A8m-o5fZdeFyNA3gvqqV8SRu0CXTvBNY86GKOvlIWgeKipI5bmJoH5SEJ7URrUR9s8EJPzoDYkKrwdSENifLp73okYrWbzCBgO4u5vYGS5yaQ0HhlCancKFQTIT8Y86JiUC-Anv2PG_3Bw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Goes over the input slice exactly once per element. The map stores a pair per element, meaning <span class=\"math-container\">\\$O(n)\\$</span> space as well.</p>\n"},{"answer_id":252809,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/252809#252809","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-x</code></a>, 2 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ä¦\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LXg&amp;code=5KY&amp;input=WzEsIDEsIDIsIDNd\" rel=\"nofollow noreferrer\">Try it</a></p>\n<p>I'm not sure if this uses features introduced after the other Japt answer, but this is much shorter</p>\n<pre><code>ä    # Map each adjacent pair through:\n ¦   #  1 if they are different, 0 otherwise\n\n-x   # Sum the new array and print\n</code></pre>\n"},{"answer_id":252807,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/252807#252807","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 21 bytes</h1>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/146493/11261\">my Ruby answer</a>.</p>\n<pre><code>:chunk+I|~:drop&amp;1|:+@\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboWW62SM0rzsrU9a-qsUoryC9QMa6y0HSByN19l5hWUlijYKkRzKShEx-oooANlBVs7BQOQpAGmLJKkjoIhmjxY0hAqia4ZodNQR8FIR8EYqN8cpgYsaQyVhCAjiCqgCrCkEUhS1xisD4hALLANUJ2xXFxAXxUrgD2nl5tYoKHmpgnx8YIFEBoA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252806,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252806#252806","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"noreferrer\">sed</a>, 42 bytes</h1>\n<pre><code>y/123456789/abcdefghi/\n:a\ns/^.{,4}$/A&amp;/\nta\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m724ODVlWbSSrqtS7IKlpSVpuhY3tSr1DY2MTUzNzC0s9ROTklNS09IzMvW5rBK5ivXj9Kp1TGpV9B3V9LlKEiE6oBoXbDExNjI05rIwMzHlMjYx4rIEAkOIHAA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252803,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252803#252803","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, 38 bytes</h1>\n<pre><code>\\(d)intToUtf8(tail(c(!1:5,d+31),5)+65)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72waMGiNNulpSVpuhY31WI0UjQz80pC8kNL0iw0ShIzczSSNRQNrUx1UrSNDTV1TDW1zUw1oaot04CSJjrGOkY6hjrGmppcIL6FjpmOCVAdhGcMZBtB2ZY6EGioCTVgwQIIDQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Takes input as a vector of digits, outputs a string.</p>\n"},{"answer_id":252802,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252802#252802","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"nofollow noreferrer\">brainfuck</a>, 64 bytes</h1>\n<pre><code>&gt;&gt;&gt;&gt;&gt;+&gt;,[&gt;,]&lt;&lt;&lt;&lt;&lt;&lt;-[---[----&lt;+&gt;]&lt;++.&gt;&gt;-]&gt;[&lt;-[-----&gt;+&lt;]&gt;---.[-]&gt;]\n</code></pre>\n<p><a href=\"https://tio.run/##SypKzMxLK03O/v/fDgS07XSi7XRibcBAN1pXF4x1bbTtYm20tfXs7HRj7aIhErq6dto2sXZAWi8aKBr7/7@JobkpAA\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;+&gt;\n</code></pre>\n<p>Move to position 5, make the value there 1, and move to position 6.</p>\n<pre><code>,[&gt;,]\n</code></pre>\n<p>Read the digits into consecutive positions from there onward.</p>\n<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n<p>Move 6 positions to the left. From here, each 0 before the 1 in position 5 indicates an <code>A</code> to be output.</p>\n<pre><code>-[---[----&lt;+&gt;]&lt;++.&gt;&gt;-]\n</code></pre>\n<p>Subtract 1. Loop while it's not 0 (thus was not 1):</p>\n<ul>\n<li>Subtract 3 more, making −4.</li>\n<li>Loop subtracting 4 and adding 1 to the left, producing (256-4)/4=63 in the cell to the left.</li>\n<li>Move left, add 2 more for 65, and output that (<code>A</code>).</li>\n<li>Move right twice, for a net movement of 1 to the right, and subtract 1 (and repeat).</li>\n</ul>\n<pre><code>&gt;[&lt;-[-----&gt;+&lt;]&gt;---.[-]&gt;]\n</code></pre>\n<p>Move right. Loop while it's not 0 (over all the digits):</p>\n<ul>\n<li>Move left and subtract 1, making −1.</li>\n<li>Loop subtracting 5 and adding 1 to the right, adding (256-1)/5=51 to the digit's character code.</li>\n<li>Move right and subtract 3, for a net +48 to the digit's character code. 48 is the difference between <code>1</code> and <code>a</code>, and likewise for the other digits (as both digits and letters are contiguous in ASCII).</li>\n<li>Output the letter produced from the digit.</li>\n<li>Zero that position (as it will be reused in the next iteration) and move right (and repeat).</li>\n</ul>\n"},{"answer_id":252798,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252798#252798","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 34 bytes</h1>\n<p>I think I’m finally starting to get the hang of J-uby. A few bytes shorter than <a href=\"https://codegolf.stackexchange.com/a/252777/11261\">my Ruby answer</a>.</p>\n<pre><code>:*&amp;(:+&amp;96|:chr)|:join|~:rjust&amp;?A&amp;5\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBIjfbpaUlaboWN5WstNQ0rLTVLM1qrJIzijRrrLLyM_Nq6qyKskqLS9TsHdVMoSo9C0pLihXcoqNNdIx1jHQMdYxjY7lgYhY6ZjomOqZIIsZAvhES31IHAg1jYyEGLlgAoQE\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252792,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252792#252792","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, <s>17</s> 15 bytes</h1>\n<p><em>Edit: -2 bytes thanks to Razetime</em></p>\n<pre><code>¯5↑&quot;AAAA&quot;∾+⟜'`'\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=QWFhYSDihpAgwq814oaRIkFBQUEi4oi+K+KfnCdgJwpBYWFhIDHigL8y4oC/Mw==\" rel=\"nofollow noreferrer\">Try it at BQN REPL</a></p>\n<pre><code>          +⟜'`'     # add each element of input to the '`' character\n         ∾          # join this to \n   &quot;AAAA&quot;           # &quot;AAAA&quot; (shorter than (5⥊'A'))\n_5↑                 # take -5 elements\n                    # (which takes 5 elements from the end)\n</code></pre>\n"},{"answer_id":252777,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252777#252777","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 37 bytes</h1>\n<p>-3 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/92901/dingus\">Dingus</a></p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{a.map{''&lt;&lt;_1+96}.join.rjust 5,?A}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsGiNNulpSVpuhY3VXXtEqsT9XITC6rV1W1s4g21Lc1q9bLyM_P0irJKi0sUTHXsHWuhij0LSkuKFdKio010jHWMdAx1jGNjuWBiFjpmOiY6pkgixkC-ERLfUgcCDWNjIQYuWAChAQ\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252776,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252776#252776","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 5 bytes (10 nibbles)</h1>\n<pre><code>&amp;&quot;A&quot;5+'`'\n</code></pre>\n<pre><code>     +     # add each element of input\n      '`'  # to '`' character\n&amp;          # then justify the text\n &quot;A&quot;       # using the &quot;A&quot; character\n    5      # to a width of 5           \n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/tYu9H.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/tYu9H.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":252790,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252790#252790","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 39 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>-join($args|%{[char](96+$_)})|% *ft 5 A\n</code></pre>\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNyfmvkqZgq1D9XzcrPzNPQyWxKL24RrU6OjkjsShWw9JMWyVes1azRlVBK61EwVTB8X8tl5oCUIuJgrGCkYKhgjGEa6FgBhQyhXCMgUwjCNMSCg3/AwA\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n<p>Takes integers as unnamed arguments.\nNothing fancy, just adds 96 to get to the ASCII code of 'a', casts to a char, joins the chars to a string, then pipes the string to % (an alias for ForEach-Object), which will call the string's member &quot;PadLeft&quot;. Output is implicit.</p>\n"},{"answer_id":252788,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252788#252788","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 52 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func(n int)(o int){for k:=1;k&lt;=n;k++{o+=n%k};return}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY1NCoMwFIT3OcUjICTElv4tSmM2PUEP0E2wpjyCLxJiN-JJupFCD-VtqtbF8MHAN_P-PMMw8saW3j4rqC0Sw7oJMcGWuzpx9rIRHJhvm9zmPJ5cS6UgQEpShAWdCxH8xey1Lwxpr1QXlKHM9zpWqY3Ur-51dpcLIaFjs4azhoU57DQqNZW3OE06wbPjA6bcieeYgxMoJevZujQMf_4A\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252786,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252786#252786","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 16 bytes (Non-competitive)</h1>\n<pre><code>{+/{x!g}'1+!g-1}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6rW1q+uUEyvVTfUVkzXNazl4kq3MjThSouOVdBXMDYE8owMoDwzEM8YxjM0tgAA73sOtQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Non-competitive, because required the use of a global variable called <code>g</code> to get input. The reason is because lambda functions in K cannot access variables  of another function if they are in that function.</p>\n<p>Explanation:</p>\n<pre><code>{+/{x!g}'1+!g-1}    Main function. Takes g as input (g=14)\n           !        Generate a range from 0 to\n            g-1     g - 1 (exclusive)               (g-1=13=&gt;range=0..12)\n         1+         + 1 for each element            (range=1..13)\n        '           For each element\n   {   }            Execute a function that returns\n    x!g             g mod x (x = element)\n +/                 Sum\n</code></pre>\n"},{"answer_id":252779,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252779#252779","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 18 bytes</h1>\n<pre><code>V-5lzp&quot;A&quot;)Vzp@GtsN\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/P0zXNKeqQMlRSTOsqsDBvaTY7/9/YxMjAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>V-5lzp&quot;A&quot;)Vzp@GtsN\nV                   # For loop with N as variable\n    z               # Input\n   l                # Length\n -5lz               # Subtract length of input from 5\n     p&quot;A&quot;           # Prints &quot;A&quot;\n         )          # End of for loop\n            p       # Print without any additional newline\n              G     # Initialized to &quot;abcdefghijklmnopqrstuvwxyz&quot;\n                sN  # Cast N to an integer\n               t    # Subtract 1\n             @      # Get element at index\n</code></pre>\n"},{"answer_id":252771,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252771#252771","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 11 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>₃+&gt;çΔ'Aš5.£\n</code></pre>\n<p>Input as a list of digits; output as a list of characters.<br />\n(If the inputs would have been 0-based (digits <code>0-9</code> mapping to <code>a-j</code>) instead of 1-based, the <code>&gt;</code> could have been dropped.)</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//UVOztt3h5eemqDseXWiqd2jx///RFjpmOiY6prEA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeX/R03N2naHl5@bou54dKGp3qHF/2t1/kdHG@kY6hjpGOsYx@pEmwBpEB/EttAx0zHRMQWyjIG0EZC21IFAw9hYAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p>Or alternatively:</p>\n<pre><code>5j9LðšA¬uì‡\n</code></pre>\n<p>Both input and output as a string.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/fNMvS5/CGowsdD60pPbzmUcPC//8tzExMAQ\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeV/0yxLn8Mbji50PLSm9PCaRw0L/@v8j1YyMjQyNlbSUTIxNjIE0RZmJqZAytjECEhaAoGhUiwA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<p>Unfortunately 05AB1E lacks a left-pad up to length builtin (unless by spaces), so most of the bytes are to account for that in the first program..</p>\n<pre class=\"lang-python prettyprint-override\"><code>₃+&gt;          # Add 96 to each value\n   ç         # Convert each from a codepoint-integer to a character\n    Δ        # Loop until the result no longer changes:\n     'Aš    '#  Prepend an &quot;A&quot;\n        5.£  #  Leave (up to) the last 5 characters from the list\n             # (after which the result is output implicitly)\n</code></pre>\n\n<pre class=\"lang-python prettyprint-override\"><code>5j           # Left-pad the (implicit) input-string with spaces up to length 5\n  9L         # Push list [1,2,3,4,5,6,7,8,9]\n    ðš       # Prepend a space: [&quot; &quot;,1,2,3,4,5,6,7,8,9]\n  A          # Push the lowercase alphabet: &quot;abcdefghijklmnopqrstuvwxyz&quot;\n   ¬         # Push its first character (without popping): &quot;a&quot;\n    u        # Uppercase it: &quot;A&quot;\n     ì       # Prepend it: &quot;Aabcdefghijklmnopqrstuvwxyz&quot;\n      ‡      # Transliterate the space-padded input from [&quot; &quot;,1,2,3,4,5,6,7,8,9] to\n             # &quot;Aabcdefghij...&quot;\n             # (after which the result is output implicitly)\n</code></pre>\n"},{"answer_id":252780,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252780#252780","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 13 bytes</h1>\n<pre><code>✂⁺×⁴A⭆Ｓ§β⊖ι±⁵\n</code></pre>\n<p><a href=\"https://tio.run/##JYpBCoMwFAWvElw9Id1pKXQldOOiItgLpPFhAzGV@C29/W@gsxtm/Mtl/3ZRdcwhCaYYPDHGY8cjrNzRWFN1VW3NJGVY7m5Dn7ZD/ooSOunTzC@e1tzoM1cm4YxQF6wZuDgh2iJX1cu5afX0iT8\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>    A           Literal string `A`\n  ×             Repeated\n   ⁴            Literal integer `4`\n ⁺              Concatenated to\n      Ｓ         Input as a string\n     ⭆          Map over digits\n        β       Predefined variable lowercase alphabet\n       §        Indexed by\n          ι     Current digit\n         ⊖      Decremented\n✂               Sliced from\n            ⁵   Literal integer `5`\n           ±    Negated\n</code></pre>\n"},{"answer_id":252775,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252775#252775","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, 12 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>(h5,'A*\\É▄\\§\n</code></pre>\n<p>Input as a list of digits; output as string.</p>\n<p><a href=\"https://tio.run/##y00syUjPz0n7/18jw1RH3VEr5nDno2ktMYeW//8fbaRjqGMEhMaxXNEmOsY6ID6IbaFjpmOiYwpkGQNpIyBtqQOBhrEA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p>Or alternatively:</p>\n<pre><code>▄▒\\(§y♫α'A═╡\n</code></pre>\n<p>Input as a list of digits; output as a string wrapped inside a list.</p>\n<p><a href=\"https://tio.run/##y00syUjPz0n7///RtJZH0ybFaBxaXvlo5upzG9UdH02d8Gjqwv//o410DHWMgNA4livaRMdYB8QHsS10zHRMdEyBLGMgbQSkLXUg0DAWAA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>(        # Decrease each digit in the (implicit) input-list by 1\n         # (because MathGolf uses 0-based indexing)\n h       # Push the length of the list (without popping)\n  5,     # Calculate 5-length\n    'A* '# Repeat &quot;A&quot; that many times\n \\       # Swap so the list as at the top again\n  É      # For-each over the digits, using 3 characters as inner code-block:\n   ▄     #  Push the lowercase alphabet\n    \\    #  Swap so the current digit is at the top\n     §   #  Index the digit into the alphabet\n         # (after which the entire stack joined together is output implicitly as result)\n</code></pre>\n\n<pre class=\"lang-python prettyprint-override\"><code>▄        # Push the lowercase alphabet\n ▒       # Convert it to a list of characters\n  \\      # Swap so the (implicit) input-list is at the top\n   (     # Decrease each digit by 1 (because MathGolf uses 0-based indexing)\n    §    # Index each digit in the list into the alphabet list\n     y   # Join it back together again\n♫        # Push 10000\n α       # Pair it with the earlier string\n  'A═   '# Pad both to an equal length by left-padding with &quot;A&quot;\n     ╡   # Remove the last item from the pair (the 10000)\n         # (after which the entire stack joined together is output implicitly as result)\n</code></pre>\n"},{"answer_id":252774,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252774#252774","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, 44 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:f&quot;{s:05}&quot;.translate(&quot;bcdefghiAa&quot;*9)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY3dXISc5NSEhWKrdKUqoutDExrlfRKihLzinMSS1I1lJKSU1LT0jMyHROVtCw1oXrUC4oy80o00jRMjI0MjTV10jQszExMQbSxiRGIsgQCQ02o8gULIDQA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Takes an integer and returns a string.</p>\n"},{"answer_id":252773,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252773#252773","body":"<h1><a href=\"https://github.com/ismael-miguel/simply/\" rel=\"nofollow noreferrer\">simply 0.11</a>, 66 bytes</h1>\n<p>This abuses bugs in the parser, to save bytes.<br>\nIt works with the commit <a href=\"https://github.com/ismael-miguel/simply/tree/98783927a8a232b8e0afb46f380e02348b0f7cbb\" rel=\"nofollow noreferrer\">98783927a8a232b8e0afb46f380e02348b0f7cbb</a> - current commit at the time.<br>\nThe behaviour will, VERY LIKELY, change in the future.</p>\n<p>Creates an anonymous function that receives an array of numbers, and outputs the value.</p>\n<pre><code>fn($L){if$l=&amp;len($L)&lt;5for$_ in$l..4out'A'each$L as$i;out!ABCL[$i]}\n</code></pre>\n<h2>Example of usage:</h2>\n<p>This should output <code>&quot;AAfcf&quot;</code>.</p>\n<pre><code>$fn = fn($L){if$l=&amp;len($L)&lt;5for$_ in$l..4out'A'each$L as$i;out!ABCL[$i]}\ncall $fn([5,2,5]);\n</code></pre>\n<h2>How it works?</h2>\n<p>It simply checks the length of the array, and if it is lower than 5, it outputs 1 to 5 <code>'A'</code>s.</p>\n<p>It goes from 0 to 4 because it uses a range operator.<br>\nGoing from 4 to 4, is just 1 iteration - the number 4 itself.<br>\nGoing from 0 to 4, is 5 iterations - the number 0, number 1, number 2, number 3 and number 4.</p>\n<p>Then, it uses the pre-existing constant <code>!ABCL</code>, which contains the letters from <code>a</code> to <code>z</code>, in lowercase.<br>\nThe values in the array are used as indexes into the constant.</p>\n<h2>Ungolfed</h2>\n<p>Very code-y looking:</p>\n<pre><code>$fn = fn($list) =&gt; {\n    $len = &amp;len($list);\n    if $len &lt; 5 then {\n        for $_ in $len..4 {\n            echo 'A';\n        }\n    }\n    \n    foreach $list as $index {\n        echo !ABCL[$index];\n    }\n};\n</code></pre>\n<p>Pseudo-code looking:</p>\n<pre><code>Set $fn to an anonymous function($list)\nBegin.\n    Set $len to the result of calling &amp;len($list).\n    In case $len &lt; 5 then\n    Begin.\n        Loop from $len to 4 as $_\n        Begin.\n            Show the value 'A'.\n        End.\n    End.\n    \n    Loop through $list as $index\n    Begin.\n        Show the contents of !ABCL[$index].\n    End.\nEnd.\n</code></pre>\n<p>All versions do the exact same.</p>\n"},{"answer_id":252763,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252763#252763","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 8 bytes</h1>\n<pre><code>øA∑\\A5ø↳\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiIiwiw7hB4oiRXFxBNcO44oazIiwiIiwiWzQsIDMsIDIsIDEsIDNdXG5bOCwgNiwgNCwgNV1cblszLCA0LCAyXVxuWzksIDksIDksIDksIDFdXG5bMSwgMl0iXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Finally, a use for some of the more niche string digraphs. Takes input as a list of digits, outputs a single string.</p>\n<h2>Explained</h2>\n<pre><code>øA∑\\A5ø↳\nøA        # Get the nth letter of the alphabet for each digit in the input\n  ∑       # Join as a single string\n   \\A     # Push the string &quot;A&quot; to the stack\n     5    # Push the number 5 to the stack\n      ø↳  # And left pad the single string from early with &quot;A&quot;s until it's 5 characters long \n</code></pre>\n"},{"answer_id":252761,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252761#252761","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 50 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda l:''.join(chr(96+i)for i in l).rjust(5,'A')\n</code></pre>\n<p>Takes a list of integers as input</p>\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHHSl1dLys/M08jOaNIw9JMO1MzLb9IIVMhM08hR1OvKKu0uETDVEfdUV3zf0FRZl6JRppGtImOsY6RjqGOcaymJhdc1ELHTMdExxRFzBgoYoQiYqkDgYZA0f8A\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252760,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252760#252760","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"noreferrer\">Japt</a>, 9 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"noreferrer\">bytes</a></h1>\n<p>Takes input as a string.</p>\n<pre><code>c+48 ù'A5\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=Yys0OCD5J0E1&amp;input=IjI0OCI\" rel=\"noreferrer\">Try it</a></p>\n<pre><code>c+48 ù'A5     :Implicit input of string\nc+48          :Map charcodes, adding 48 to each\n     ù'A5     :Left pad with &quot;A&quot; to length 5\n</code></pre>\n"},{"answer_id":252759,"question_id":252758,"link":"https://codegolf.stackexchange.com/questions/252758/number-to-string-in-aaaaa-way/252759#252759","body":"<h1><a href=\"https://github.com/abrudz/dyalog-apl-extended\" rel=\"nofollow noreferrer\">APL (Dyalog Extended)</a>, 13 bytes</h1>\n\n<p>Full program prompting for digit number list</p>\n<pre class=\"lang-apl prettyprint-override\"><code>'A'@=¯5↑⎕⊇⌊⎕A\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNrShJzUtJTfn/qKO94L@6o7qD7aH1po/aJj7qm/qoq/1RTxeQ4QiS/a8ABgVcJgrGCkYKhgrGXDARCwUzBRMFUzjfGMgzgvMsFSDQEAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Extended) – Try It Online\">Try it online!</a></p>\n<p><code>⎕A</code> uppercase <strong>A</strong>lphabet</p>\n<p><code>⌊</code> Lowercase that</p>\n<p><code>⎕⊇</code> use the input to select from that (1-indexed)</p>\n<p><code>¯5↑</code> take the last 5 elements of that, adding padding elements on the left</p>\n<p><code>'A'</code> put &quot;A&quot;s where equal to the padding element</p>\n"},{"answer_id":252753,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/252753#252753","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 18 bytes</h1>\n<pre><code>{x@({+/y=x}':x)?1}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6qucNCo1tavtK2oVbeq0LQ3rOXiSovWMFIwBkITBVMFM81YmACUCwCBtgzC\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>A little bit lengthy, but works nonetheless. I still can't fully understand how this even works (especially the counting duplicates section) and I'm on mobile, so explanations will be edited later.</p>\n"},{"answer_id":252548,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252548#252548","body":"<h1>Excel (ms365), <s>50</s> 47 bytes</h1>\n<p>-3 Thanks to @<a href=\"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252548#comment562308_252548\">EngineerToast</a></p>\n<pre><code>=A1&amp;BASE(MOD(LEN(SUBSTITUTE(A1,0,)),2^B1),2,B1)\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/9p28e.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/9p28e.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":252751,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/252751#252751","body":"<h1><a href=\"https://factorcode.org\" rel=\"nofollow noreferrer\">Factor</a>, 47 bytes</h1>\n<pre><code>[ dup length dup log10 ⌈ + 1 /i &gt;dec append ]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY09jsJADIV7TvFEi_hJh7ISEhWKtKJBVIhiduKE0QZnmPEI0VBTcAOaNLtH4C5pOQmBwcWz_fk9-fZfKC21a9rzepUtFyl-yTFV8HQIxJo89kp2bxkFNrrOKS5FYC2mZg_ryBNLxFY5T-7FRE7WmY5_9bJlCtkZLnvz72y-SjHLSYPD_ofczEvnKv-CFMNpO94gDxYVcdl9fY91mUzwuF4wQIKxiVllLXGObYzd--pTffijstCqqjCKx6aJ_Qk\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>small improvement to the previous answer.</p>\n<p><code>&gt;dec</code> is polyfilled since it is a newer addition.</p>\n"},{"answer_id":252750,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252750#252750","body":"<h1>Rust, 27 characters</h1>\n<pre class=\"lang-rust prettyprint-override\"><code>|n|(1..n).map(|i|n%i).sum()\n</code></pre>\n<p>Based on <a href=\"https://codegolf.meta.stackexchange.com/questions/25156/should-rust-anonymous-functions-fully-specify-parameter-types\">Should rust anonymous functions fully specify parameter types?</a> I assume that return type inference is also fine.</p>\n<p><a href=\"https://tio.run/##LctNCoMwEEDhtZ5iKhRmQALRrio9TJAUBpJR8rNKPHsaqOv3vZBjal8Bb1iQyjg4m2B3R8zBwgdalYpaKSHlzYmVqzyZVMweqQ3bnwcbs0tv4HXpyz2jflHvZ2BJTh44lWuab9rD1X4\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252747,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/252747#252747","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 24 bytes</h1>\n<p>Equivalent to <a href=\"https://codegolf.stackexchange.com/a/150569/11261\">my Ruby answer</a>.</p>\n<pre><code>(:-&amp;(:&amp; &amp;:%|:+&amp;:sum))%:+\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBojTbpaUlaboWOzSsdNU0rNQU1KxUa6y01ayKS3M1NVWttCHSywsU0qINTWIhvAULIDQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n\n"},{"answer_id":252744,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/252744#252744","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 8 bytes</h1>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>L3Ya.#yy\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJMM1lhLiN5eSIsIiIsIiIsIlwiYWFhYWFhYWFhXCIiXQ==\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<h3>Explanation</h3>\n<p>Inspired by <a href=\"https://codegolf.stackexchange.com/a/252736/16766\">Pacmanboss256's Vyxal solution</a>.</p>\n<pre class=\"lang-lisp prettyprint-override\"><code>          ;; y is empty string; a is first command-line argument (implicit)\nL3        ;; Loop 3 times:\n   a.     ;;  Concatenate a with\n     #y   ;;  Length of y\n  Y       ;;  Assign the result to y\n       y  ;; After the loop, output y\n</code></pre>\n<p>Some worked examples:</p>\n<pre class=\"lang-lisp prettyprint-override\"><code>Input a        &quot;&quot;    &quot;aaa&quot;    &quot;aaaaaaaaa&quot;\nOriginal y     &quot;&quot;    &quot;&quot;       &quot;&quot;\nAfter loop 1   &quot;0&quot;   &quot;aaa0&quot;   &quot;aaaaaaaaa0&quot;\nAfter loop 2   &quot;1&quot;   &quot;aaa4&quot;   &quot;aaaaaaaaa10&quot;\nAfter loop 3   &quot;1&quot;   &quot;aaa4&quot;   &quot;aaaaaaaaa11&quot;\n</code></pre>\n"},{"answer_id":252736,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/252736#252736","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 6 bytes</h1>\n<pre><code>LJL+LJ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJQ4bmgIiwiIiwiTEpMK0xKIiwiIiwiYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Append the length of the string, take the length of that, then append the new length to the original. This does work with digit overflows (9, 99, etc...).</p>\n"},{"answer_id":252740,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/252740#252740","body":"<h1><a href=\"https://gema.sourceforge.net/\" rel=\"nofollow noreferrer\">Gema</a>, 46 characters</h1>\n<pre><code>&lt;N&gt;=@cmpn{${$0;};;;;$0@end}@set{$0;1}\n?=\n\\Z=-1\n</code></pre>\n<p>Sample run:</p>\n<pre><code>bash-5.1$ gema '&lt;N&gt;=@cmpn{${$0;};;;;$0@end}@set{$0;1};?=;\\Z=-1' &lt;&lt;&lt; '[2, 3, 3, 1, 5, 2]'\n3\n\nbash-5.1$ gema '&lt;N&gt;=@cmpn{${$0;};;;;$0@end}@set{$0;1};?=;\\Z=-1' &lt;&lt;&lt; '[2, 4, 3, 5, 1]'\n-1\n</code></pre>\n<p><a href=\"https://tio.run/##S0/NTfz/38bPztYhObcgr1qlWsXAutYaCFQMHFLzUmodilNLQGKGtVz2tlwxUba6hv//RxvpKBiDkaGOgqmOglEsAA\" rel=\"nofollow noreferrer\" title=\"Gema – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252735,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/252735#252735","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>UÞ⊍h\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJQIiwiIiwiVcOe4oqNaCIsIiIsIlsyLCAxLCA0LCAxLCA0XSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Takes the multi-set symmetric difference, which outputs the duplicate values in order that they occur. Outputs <code>0</code> if nothing is found.</p>\n"},{"answer_id":247040,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247040#247040","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 5 bytes</h1>\n<pre><code>1=#?:\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLszK0Vba34uLSVwhKLSktyitWMFRIyy9SKCkqTdVRMACz0xJzilO50oAyyFBfQddOIQSoDCxjpGCsYAIRc4MqN1OwhGJk4Wgds1gUveZAiMw3AZplgKQFAA3pJ7c=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><em>-2 bytes thanks to ngn</em></p>\n<p>Returns <code>1</code> for true, <code>0</code> for false.</p>\n<p>Checks if <code>1</code> is equal to the length of unique elements in <code>x</code></p>\n"},{"answer_id":252681,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/252681#252681","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 31 bytes</h1>\n<p>Based on <a href=\"https://codegolf.stackexchange.com/a/241366/11261\">Cool guy's Ruby answer</a> and the same length as <a href=\"https://codegolf.stackexchange.com/a/252678/11261\">my Ruby answer</a> but vastly less readable! J-uby still hasn't &quot;clicked&quot; for me so I'm sure some J-uby experts could golf this a lot more.</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a,f{:select+(:[]&amp;a|f)^(+a).*}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700K740qXLBojTbpaUlaboW-3XtEnXSqq2KU3NSk0u0NayiY9USa9I04zS0EzX1tGohqm5qFyikRUcb6igY6SgY6yjomuoomMYCabuK6go7o9pYBWUFWzuFaKCsSSxEy4IFEBoA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252678,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/252678#252678","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 31 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a,f{a.zip(0..){f[_1]&amp;&amp;p(_2)}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsGiNNulpSVpuhb7de0SddKqE_WqMgs0DPT0NKvTouMNY9XUCjTijTRrayGqbmqmRUcb6igY6SgY6yjomuoomMYCabuK6go7o9pYBWUFWzuFaKCsSSxEw4IFEBoA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252591,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252591#252591","body":"<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 68 bytes</h1>\n<pre><code>import sugar,sequtils\n(x,y)=&gt;concat zip(x,y).map x=&gt;x[0].repeat x[1]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704LzN3wc2JBUX5yQrFGmlWCmCWRoWVQnFqYXRmXkmsjkIlgqOJxFSw5VJQSE3OyFdI03CINtQx0jEGKoaxNJElzXQMgNAMLG2qYwiEBqgKDA0MdIAYrMAAJLm0tCRN1-Kme2ZuQX5RiUJxaXpikQ7Q6tKSzJxirmINjQqdSk1bu-T8vOTEEoWqzAKwgF5uYoFCha1dRbRBrF5RakEqUK4i2hBm3AIoBaUB\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>-3 bytes thanks to Michael Chatiskatzi</p>\n"},{"answer_id":252642,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252642#252642","body":"<h1>x86-64 machine code, 15 bytes</h1>\n<pre><code>8B 0A 48 83 C2 04 F3 AB AD 85 C0 79 F3 AB C3\n</code></pre>\n<p><a href=\"https://tio.run/##VVJNb9swDD1Lv4Lz0FVulMBp02CIl1563mWnAU4OqiQnKhzJkOTOgeG/voxKkBSDIILke3ykPmTbTndSnk4iHIDBr4zR2a5xb6KBmoOnfkUO7gO07DlUXvVbSoRSgB6HBSVetxCiC4rWK9I4hQ6JOkTQAgloKHm3AXXIhYUFkeYZ5CXVfdTeQvaawfDhjIKaGRvhwXWRg3QWRc6x@C/yeQlntmd5OVL61VjZdErDjxCVcbP9C6UhimgkzuU7GSGNI0XQMCQBUX3f4rnQYvUVCtUW1jDQYZjzR/7Ep/ORf7ojR2DJC1zLC/TM57iKGzgvCp72GSxuwFjS1PIgjGU5HSipnQd2OYzoooNvEVa3@UJOCXJIKvE6dE2slottiZmaXWIOcSaSwUtI6aSW2AaHL8prkdnCyzk2kwlKEtJ6JNUsuzOQ8U/WWaPtotwLz@439j4lRkrorWBjfwq5N1bjAyi9yhIh9etTPw5HDJWD4UqHu@LxN3Y4rhnrbDA7qxUk9Yfc51U/mWDLEf7sTaOBHeELivSvT0n0psBwxrcj3ki@sajUIzieTn9l3YhdOE0PywUa/Klr5OvmHw\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a></p>\n<p>Following the standard calling convention for Unix-like systems (from the System V AMD64 ABI), this takes in RSI the address of an array <code>A</code> of 32-bit integers with a −1 terminator; in RDX, the address of an array <code>R</code> in the same form; and in RDI, an address at which to place the result, in the same form. The starting point is after the first 8 bytes.</p>\n<p>In assembly, re-arranged for easier understanding:</p>\n<pre><code>f:  lodsd           # Load a number from A into EAX, advancing the pointer.\n    test eax, eax   # Set flags based on that value.\n    jns r           # Proceed to r if it's nonnegative.\n    stosd       # When -1 is reached, add it to the result array\n    ret         #  and return.\n#----------------------------------------------------------------------------------\nr:  mov ecx, [rdx]  # Load a number from R into ECX.\n    add rdx, 4      # Advance the pointer into R.\n    rep stosd       # Add EAX to the result array ECX times, advancing the pointer.\n# (This section is actually placed at the start; continue at f.)\n</code></pre>\n"},{"answer_id":252636,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/252636#252636","body":"<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 85 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func(f func(int)bool,L[]int)(A[]int){for i,e:=range L{if f(e){A=append(A,i)}}\nreturn}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=hZLRSsMwGIXBO_sUPwMhZam03cqmWKH3u_DGK_EibmkNrmkN7RyUPok3RfCh5tP4J2lBsVQIJKHfOefPoe8fWdGd5iXbvrCMQ86EdEReFqqCS5ileTVznANTwFT29swVh_izrlJvfbpPa7klKZhNyMp9Koo93Tw86jNJ7N6khQJB-XWsmET7TSNQQbjbJDErSy53JKHCbVtH8apWsrXmX2fnOjOrQohtwBGGiMaScIRbCFszG3_1p7g4Bt-CO3GYdLyA8AeN8ZO-cwh8PUSPS55N0Tfa1tGfTcnEhca5U8jtJRnKJRhJTXNNQCGksKDgRRSi1nX_wvjsX7Bv1mI44FqO6nQLvXBpeExYUQjQJcBbsBpV6TZ61ZrCFXJ-rwm1blSDlfSSyD4EUU9P-j89UP0f0XV2_wY\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252632,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252632#252632","body":"<h1><a href=\"https://github.com/mlochbaum/ILanguage\" rel=\"nofollow noreferrer\">I</a>, 1 byte</h1>\n<pre><code>\\\n</code></pre>\n<p><a href=\"https://tio.run/##y/z/Xz1NXcFKIea/obWRjrGCggKID2ZzmVkb6BjomIFFTK0NdQx1DLgMDQysgRgsZmBt8B8A\" rel=\"nofollow noreferrer\" title=\"I – Try It Online\">Try it online!</a></p>\n<p>Body must be at least 30 characters; you entered 27.</p>\n"},{"answer_id":252620,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252620#252620","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 13 bytes</h1>\n<pre><code>{x,(y#2)\\+/x}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJyFUEFuwyAQvPMKpPZgq8QY4h4KL8ipl9xcS8EudqykJjFEworStxeMg3JKD6NdZndmNbTsalEyvdD06w3bGwBbdn0tp9+RtTCDlu/UgSe7VvRHbvnEx7S6gW2ZkJyQvOYk5XNH6sqzc+senKZ86fM8jPxaQM3XQRWxiL1iQeBnua/OsXCOTxZc8YcAwGBvzEkzjBv1LTt1bDNtRHOQttmLoZNZo37w+SK16dWgMX2nxQfBnRzkKIxcncTYm2lV90aDcjNUDMI5IIIElJ8X44gQ+D5dYiJI7/MY/NEgAMH1o0tENHuSEMEiXvjnI/4AKc5zJg==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Takes input as a list of <code>0</code>s and <code>1</code>s (<code>x</code>) and an integer <code>y</code>.</p>\n<ul>\n<li><code>+/x</code> the &quot;popcnt&quot; of the input (i.e. the number of set bits)</li>\n<li><code>(y#2)\\</code> &quot;encode&quot; the sum (using <code>(y#2)</code> guarantees the length of the result)</li>\n<li><code>x,</code> append the parity bits (and implicitly return)</li>\n</ul>\n"},{"answer_id":252616,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252616#252616","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, <del>88</del> 58 bytes</h1>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|a,n|format!(&quot;{a}{:0n$b}&quot;,(a.split('1').count()-1)%(1&lt;&lt;n))\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2021&amp;gist=634f45da728663e815bf803fe75c7469\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>This closure can be assigned to a variable of type <code>fn(&amp;str,usize) -&gt; String</code>.</p>\n<p>Edit: Saved 30 bytes with <code>split('1').count()</code> instead of converting to an integer, as in <a href=\"https://codegolf.stackexchange.com/users/79157/joost-k\">Joost's</a> <a href=\"https://codegolf.stackexchange.com/a/252607\">answer</a>, thanks!</p>\n"},{"answer_id":252613,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/252613#252613","body":"<h1><a href=\"http://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 28 bytes</h1>\n<pre><code>proc(x:any):any=x.min==x.max\n</code></pre>\n<p><a href=\"https://tio.run/##y8vM/V9QlJ@sUKyRZqUAYmlUWCkUpxZGZ@aVxGpaKSTl5@doKtgqcCmkJmfkK6QpOEQb6iigo1hUaSMdBWMdBRNkUTMdBUsdBSiJIoHMMddRMEfmm4DNMoj9X6wBdVtiXqUmiLCt0MvNzLMFUYkVmv//AwA\" rel=\"nofollow noreferrer\" title=\"Nim – Try It Online\">Try it online!</a></p>\n<pre><code>import sugar\nx=&gt;x.min==x.max\n</code></pre>\n<p><a href=\"https://tio.run/##XUxLCsIwFNz3FLNM4CF@isVAxHuULGppNWDy2qRCbh8/uEiFYb4w3ro8Be4RxajwcSIpxGFurV@MVLgyPyQ0Kgz9nTHi0u4I/zDreU84EOqyPRJOhB@vhjI0hKbM9fdra7J1E4cF8XnrQhVF0ue0cdZr/ZYuyZxf\" rel=\"nofollow noreferrer\" title=\"Nim – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252549,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252549#252549","body":"<h1><a href=\"https://www.rust-lang.org\" rel=\"nofollow noreferrer\">Rust</a>, <del>120</del> 117 bytes</h1>\n<ul>\n<li>-3 bytes thanks to JSorngard</li>\n</ul>\n<pre class=\"lang-rust prettyprint-override\"><code>|k:Vec&lt;_&gt;,m|k.iter().copied().chain((0..m).rev().map(|j|k.iter().filter(|i|**i).count()&amp;1&lt;&lt;j&gt;0)).collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=jVLNUsIwEJ7xyFMsOUjCxE6rHpxS8C28IMOUmo6BNjBpyoXyJF446BN48lH0acwPBaZSNW22Xza737fd2ZdXWRZq954KyGMuMIFNxhSkMIS3UqVXd59ltQgfWBJNRzSvFh5XTGLiJcsVZ08GPJs07HteTjzJ1tqVxytczY-xKc8MqHjV73OTWgqFyWUQRfORT4wjy1iiwjByOiNMBk786-IjXUrAihVqmsQFozDjqqAgWVFmigAXMO6AXnjNku5YyVKHpHFmIt3hxDWhEFBAgR_oFxHqEq3VyxK0pZ45TGideX1AyFLrx0e0owUs-e-V_efCSd1Ya8s_7BMZp1NXsids_5_WmwbDz5L-qNjasyTtyk1bpx97fHvSY9Pk_XZdsB0PLNAIuVDdlwlsLFxJLlQmuhg9ik14v0X1AJnplUU9srziMBxCL-idnUkyaJDtqdLmeJrI7dZN8G7nvt8\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252505,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252505#252505","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 12 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>DSOIo%bI°+¦«\n</code></pre>\n<p>Inputs in the order <span class=\"math-container\">\\$b,n\\$</span>. Binary-I/O as strings.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/fJdjfM181yfPQBu1Dyw6t/v/fwNDQAAi5jAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfWVC6H@XYP@IfNWkiEMbtA8tO7T6v87/6GglQwNDEDI0hDGUdIxjdaDiSjqGIDZYxgAoYwSTgWCoUgOQPBRDDTOAcoB6TGJjAQ\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>D             # Duplicate the first (implicit) input binary-string\n SO           # Sum the digits of the copy\n   I          # Push the second input-integer\n    o         # Pop and push 2 to the power this input\n     %        # Modulo the bit-sum by this\n      b       # Convert it to a binary-string\n       I      # Push the second input-integer again\n        °     # Pop and push 10 to the power this input this time\n         +    # Add it to the binary\n          ¦   # Remove the leading 1\n           «  # Merge the two binary-strings together\n              # (after which the result is output implicitly)\n</code></pre>\n<hr />\n<p>If we didn't had to retain the potentially leading <code>0</code>s of input binary-strings, this could have been 11 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a> with an arithmetic addition approach:</p>\n<pre class=\"lang-python prettyprint-override\"><code>Î×«DSO¹o%b+\n</code></pre>\n<p>Inputs in the order <span class=\"math-container\">\\$n,b\\$</span>. Binary-I/O as strings.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//cN/h6YdWuwT7H9qZr5qk/f@/EZeBoaEBEAIA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfWVCceh/g4jD0w@tdgn2j8hXTdL@r/M/OtpYR8nQwBCEDA1hDKVYnWhDqDiIbQRkAzkGYAmoBggGCZiAZQ0gGGqSAZQD1BELAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>Î            # Push 0 and the first input-integer\n ×           # Repeat the 0 that many times as string\n  «          # Append it to the (implicit) input binary-string\n   D         # Duplicate it\n    SO       # Sum the digits of the copy\n      ¹      # Push the first input-integer again\n       o     # Pop and push 2 to the power this input\n        %    # Modulo the bit-sum by this\n         b   # Convert it to binary\n          +  # Add the two binary strings together arithmetically\n             # (after which the result is output implicitly)\n</code></pre>\n"},{"answer_id":252607,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252607#252607","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 46 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>v=&gt;n=&gt;v+(v.split`1`.length-1%2**n).toString(2)\n</code></pre>\n<p><a href=\"https://tio.run/##fY1BCoMwEEX3OUURConFmEm71Uv0AoqNaUqYiIZcPzVRXLSli8/nD483rz70yzCbyVfoHiqOTQxNi00bLjTwZbLGd9Bxq1D7ZwVnWZbIuHd3PxvUVLI4OFycVdw6TUdagAAQBaPA2Kmu8wLyweSjgJWSmdq3EOSHbMvKXg/jkS9xMu3ZiKxNnb7dtm9/oLUEiW8\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a> it was actually surprisingly easy in javascript</p>\n"},{"answer_id":252602,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252602#252602","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 20 bytes</h1>\n<pre><code>Join@@Table@@@In@##&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b73ys/M8/BISQxKSfVwcHBM89BWVntf0BRZl5JtLKuXZqDg3KsWl1wcmJeXTVXdbWhjpGOca2OgoIClFmrAxQ10zEAQjOgeLWpjiEQGkDEDQ0MdIAYJG4AEuOq/Q8A\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252451,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252451#252451","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>42</s> <s>41</s> 40 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda*a:sum(map(lambda x,*y:x*y,*a),())\n</code></pre>\n<p><a href=\"https://tio.run/##LcxBCsMgFATQvadwqTILbWgWQk5iXfxSpIFqJE1BT29/SRmGgbeY2o/nVqaRltt4Ub4/yJB/f7LKVNUJssF030yHIQ2l9aAlhOBwwRTx3wgRwgzLmRmvcBx7srMWXGb7oyhE2nZ@7XItknzd13KopDoaf38B\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>-1 thanks to Jonathan Allan!</p>\n<p>-1 thanks to loopy walt!</p>\n"},{"answer_id":252589,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/252589#252589","body":"<h1>dc, 27 characters</h1>\n<pre><code>?[0p3Q]sq[d3R!=qz0&lt;c]dscx1p\n</code></pre>\n<p>Sample run:</p>\n<pre><code>bash-5.1$ dc -e '?[0p3Q]sq[d3R!=qz0&lt;c]dscx1p' &lt;&lt;&lt; '1 1 1 1 1 1 1'\n1\n\nbash-5.1$ dc -e '?[0p3Q]sq[d3R!=qz0&lt;c]dscx1p' &lt;&lt;&lt; '6 9 6 9 6'\n0\n</code></pre>\n<p><a href=\"https://tio.run/##lVCxTsMwEJ3jr7haoW6HKElTqBCxgIGBCbWrsVBqu2pElKRxIlUUvj3YjhrKwIAs33t3fme/8zbT@14qUWSNguARWqXbN5FpRWfIYySGi0U4jYfiAhJYmjSy6Q3cgttj4SxcwepMl6YncoI5QnWTl@0OyCdcBfG1BofRL1yY@FoSIM9l3bUGN0p3hSVPx1qJVklDX94JQruqgdyKTATsnybjCOyBf@E7kBXyGtdNsT@DsNNNWFQiK8JtXoZSQKCA9PcsqpM11wcmk82EHj6iVHCpxTGuewJpmpq73TMY5hgh7x8zjI3YH3xYdvqxORwbr2D9MXaho/QvKecwnYIS@8r9gzUlq1L13w\" rel=\"nofollow noreferrer\" title=\"Bash – Try It Online\">Try all test cases online!</a><br />\n(Note that choosing <code>dc</code> as interpreter and running the test separately fails both in TIO and ATO. ☹)</p>\n"},{"answer_id":252587,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252587#252587","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, 55 bytes</h1>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>(load library\n(q((A R)(foldl concat(map* repeat-val A R\n</code></pre>\n<p>The second line is an anonymous function that takes two lists. <a href=\"https://tio.run/##VYxBCoMwFET3PcUsf4TCj0X3bjxAb/BrLAS@Jk1DwdOncWGpDLMY3mOyXzf171gKaRAH9Y8kaTPkMNKLaMDd0DOoU0xhnSTTIrFBmuMs@foRRTUKjaD6kmHR4mZOw1x@tAfX9AfvqmHB/4Zl3nsYvNPyBQ\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>Too bad the tinylisp library doesn't have a <code>flatten</code> function.</p>\n<pre class=\"lang-lisp prettyprint-override\"><code>(q                       ; Two-element list acting as a function:\n ((A R)                  ;  Take two arguments, A and R\n  (foldl concat          ;  Fold on list concatenation:\n   (map* repeat-val A R  ;  Map repeat-val over corresponding pairs of elements\n                         ;  from A and R\n</code></pre>\n<hr />\n<p>A non-library version is <strong>67 bytes</strong> for a named recursive function that takes the two lists in the opposite order:</p>\n<pre class=\"lang-lisp prettyprint-override\"><code>(d F(q((R A)(i A(i(h R)(c(h A)(F(c(s(h R)1)(t R))A))(F(t R)(t A)))(\n</code></pre>\n<p><a href=\"https://tio.run/##VYy9DsIwDIR3nuLGuy0B0T1LHqBvUOiApYifNkufPjhIiCLLPt93lqvdt2LrszXOyHyRI5JoSDTeMIpXFyfZl/VDolhdlNRpX324ERvLY5pR7LJMy6YDM@jPKyKOOOnP7NKzo4jwzQcEr2F/EX5pDKG31N4\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":252543,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/252543#252543","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$2\\log_{256}(96)\\approx\\$</span> 1.646 bytes</h1>\n<pre><code>LU\n</code></pre>\n<p>If you test input cases, the Fig site demands no spaces, ie. <code>[x,y,z]</code> not <code>[x, y, z]</code>. Outputs <code>1</code> if all equal, else <code>&gt;1</code>.</p>\n<p><a href=\"https://fig.fly.dev/#WyJMVSIsIlsxLDEsMSwxLDEsMSwxXSJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>LU\n U  : Uniquify with implicit input\nL   : Length\n</code></pre>\n"},{"answer_id":252576,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252576#252576","body":"<h1>MATLAB, 56 bytes</h1>\n<pre><code>L=[];for k=1:1:numel(a) L=[L repmat(a(k),1,r(k))]; end;L\n</code></pre>\n"},{"answer_id":252523,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252523#252523","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>60</s> 42 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>b!n=b++[mod(sum b`div`2^(n-x))2|x&lt;-[1..n]]\n</code></pre>\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P0kxzzZJWzs6Nz9Fo7g0VyEpISWzLMEoTiNPt0JT06imwkY32lBPLy829n9uYmaegq1CSr4Cl0JBUWZeiYKKQrShjoGOIRAaxCooKhjCJBDCOoaxMEElJSR9cGmwEqBeI7heFCkgNsBuAswKJBpkjjGGGzBoXC6CWYxKIxsAdxKcD3a7CZLbyTIEygP5lEvhPwA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<ul>\n<li>saved 3 Bytes thanks to @Unrelated String suggesting using list comprehension.</li>\n<li>saved 10 Bytes by @xnor by removing a redundant modulo.\nPlease check <a href=\"https://codegolf.stackexchange.com/a/252534/84844\">his answer</a> which is still one byte shorter using a more direct approach.</li>\n</ul>\n"},{"answer_id":252559,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252559#252559","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 4.5 bytes (9 nibbles)</h1>\n<pre><code>+!$_~.,$_\n</code></pre>\n<p>Input is arg1=R, arg2=A</p>\n<p><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a> has a 'replicate' function, <code>^</code>, but it unfortunately does not work on numeric values (the <code>^</code> op exponentiates these instead).\nSo we need to use a slightly more convoluted map, returning the value of arg2 for each element of 1..arg1, instead.</p>\n<pre><code> !$_        # zip together arg1 and arg2\n    ~       # using the following function:\n     .      # map over each element of\n      ,$    # 1..arg1\n        _   # returning arg2;\n+           # finally, flatten the list of lists.\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/pvJA3.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/pvJA3.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":252520,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252520#252520","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 10 bytes</h1>\n<pre><code>tsiW\\2M&amp;Bh\n</code></pre>\n<p><a href=\"https://tio.run/##y00syfn/v6Q4MzzGyFfNKeP//2hDBQMFQwUYaYjEhorEchkDAA\" rel=\"nofollow noreferrer\">Try it online!</a> Or <a href=\"https://tio.run/##y00syfmf8L@kODM8xshXzSnjv0vI/2hDBQMFQyA0iOUy5IqGsiE4lsuICy6PRMdyGYNUwtSi0sgqYSYh@EAzTQA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<h3>Explanation</h3>\n<pre><code>t    % Implicit input: numeric vector. Duplicate\ns    % Sum\ni    % Input: number, n\nW    % 2 raised to that\n\\    % Modulo\n2M   % Push n again\n&amp;B   % Binary expansion with specified number of digits\nh    % Concatenate horizontally. Implicit display\n</code></pre>\n"},{"answer_id":252553,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252553#252553","body":"<h2>Clojure, 21 bytes</h2>\n<pre><code>#(mapcat repeat %2 %)\n</code></pre>\n<p>Yay, short built-in names and neat composition!</p>\n<p><a href=\"https://tio.run/##FclBCoAgEEbhvaf4MYRxmS07SrTQSaEwE7HzT8a3eIvH@bneFkXoiAkJE92@su9oscYR42CsVYpqO0vPBZSgfWCNbYbDso@5gjzCwD8r8gE\" rel=\"nofollow noreferrer\" title=\"Clojure – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252498,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252498#252498","body":"<h1><a href=\"http://clang.llvm.org/\" rel=\"nofollow noreferrer\">C (clang)</a>, <sup><s>79</s> <span class=\"math-container\">\\$\\cdots\\$</span> <s>74</s></sup> 62 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>p;f(*b,n){for(p=0;*b|n;)printf(&quot;%d&quot;,*b?*b++&amp;1&amp;&amp;++p:p&gt;&gt;--n&amp;1);}\n</code></pre>\n<p><a href=\"https://tio.run/##fVHLboMwELznK1ZIQTyMCkl7aNykhyq3/EHJAYxJUNMNwpaKmvLrpTY2CVLVGq283hnPrBcWsVOGh76vaekFOUH/Up4br17HNMi/kPp1U6EsPWdeOCTIn4M8DN3EdcOwXtWbTRShm/i06xUJ3rMKPR8uM1BLFQKQXEjxuoc1XHZOEidJ7BDYOTpR35DrqgkDacyGqWvqsCdOR0fpQRmNckJgQWBJ4N7i7Jg1AfC25kzywpCMu7Yc3WNtOLHXBhr9pwG1xWMT7IxCWit25OyNN9YpbbeLtH18UfGgFSfn5XhbzRg8/Y4KC96qazG16ROI6pOfS2/s37@zheBaoRCGA9sfxMzAb0NXcmbwA2dPpzCgRfEXev3TJ0FgXqQY2bUB9QxJAP0bufQkmZ7tzJX4de5/6ae4tZQVzEWKSpxbpW7W9d@sPGUH0UcfPw\" rel=\"nofollow noreferrer\" title=\"C (clang) – Try It Online\">Try it online!</a></p>\n<p><em>Saved <s>a</s> <s>4</s> a whopping 16 bytes thanks to the man himself <a href=\"https://codegolf.stackexchange.com/users/58563/arnauld\">Arnauld</a>!!!</em><br />\n<em>Saved a byte thanks to <a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">ceilingcat</a>!!!</em></p>\n<p>Inputs a wide char string and an integer.<br />\nOutputs the result to <code>stdout</code>.</p>\n"},{"answer_id":252495,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252495#252495","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>37</s> 36 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n,d{n+&quot;%0*b&quot;%[d,n.count(?1)%2**d]}\n</code></pre>\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y5PJ6U6T1tJ1UArSUk1OkUnTy85vzSvRMPeUFPVSEsrJbb2f4FCWrSSgYGhIQwDSQgB4Rgq6SiYxP4HAA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n<p>Thanks @dingledooper for -1 byte.</p>\n"},{"answer_id":252542,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252542#252542","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 19 bytes</h1>\n<pre><code>[,(]#2:)#:+/@[|~2^]\n</code></pre>\n<p><a href=\"https://tio.run/##dY1BC4JAFITv/oohIZNMXeukFFHQKTp0lYJFdmvD3Fq1Q4R/3ZSSVOgwb2C@9@ZdyoENg2Puw4AFF36liY31frspQ2t00D3f1P2xswxfhXc8lKam7VY2eDFcOOBSgdFUMIUrSzIai6dITpAcIrnlWRqA3XPxoHEFkUlQpcDBaZRJpbHoLL89JACp/pJ6tnMvaNKP2mz6u2n5n42Gk37S3p/V3xra9W6H2yOkfAM\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<p>This feels golfable, but I can't for the life of me figure out where without an entirely different approach.</p>\n<h2>Explanation</h2>\n<pre><code>[,(]#2:)#:+/@[|~2^]     left: binary array. right: parity bit count\n          +/@[          sum of bit array (number of 1s)\n              |~        modulo\n                2^]     2^parity\n  (]#2:)                generate a number of 2s equal to parity bit count\n        #:              and use them to convert the above quantity to base 2\n                        this generates the requisite padding\n[,                      concatenate them to the right of the binary array\n</code></pre>\n"},{"answer_id":252535,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252535#252535","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell Core</a>, 77 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($s,$n)$s\n$l=($s-eq1).Count\n($u=0..--$n|%{$l%2\n$l=$l-shr1})[$n..1]+$u[0]\n</code></pre>\n<p><a href=\"https://tio.run/##fVHRaoMwFH33K4LcDl2NmG6vgqVssJdtrI9FinPpbLGxSyJbUb/d3aizDsYCl@TknHvuITkVn1yqjOc5TQvJW9iFVXtKZHJ0QHkgXFAW5CECyj@Y66@KUmjLgTIMfJ9SEPWsgny2MCLIqcoka9wNCN9n8RzKTRC3jWVFjkVweZFjs4CxwPYI80h/ZrY7JYMJGSC4kJ0Y5R5ZID2gXwrj1xeKboYBY02tTPdQPdlZmd343xr/fyS4mbEuqcl9Ie@SNKNPrweealJ1I/DlCAgs/nXCW/5GQgLbgdJyL96X6kHopZTJ2VCqnhF9fcannNuwtZteKbkqc438Fez@6APRyTbP61WpdHHsE8RRH8GsdZmmXCkzYQyCv0gceij2YvB3L/IuyggfDRQjfPlJM23u2MZq2m8\" rel=\"nofollow noreferrer\" title=\"PowerShell Core – Try It Online\">Try it online!</a></p>\n<p>Takes the binary string as an int array and returns an array of ints</p>\n<h3>Explanations</h3>\n<pre class=\"lang-powershell prettyprint-override\"><code>$s                             # Returns $s as is\n$l=($s-eq1).Count              # Counts the number of ones\n$u=0..--$n|%{$l%2;$l=$l-shr1}} # Gets the number as binary inverted (smallest bit on the left)\n$u[$n..1]+$u[0]                # Returns the binary representation inverted. The $u[0] is to handle the case where $n=1\n</code></pre>\n"},{"answer_id":252540,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252540#252540","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, 58 bytes</h1>\n<pre><code>f(l,n)=join(l,mod(floor(2mod(l.total,2^n)/2^{[n...1]}),2))\n</code></pre>\n<p><span class=\"math-container\">\\$f(l,n)\\$</span> takes in a list of bits <span class=\"math-container\">\\$l\\$</span>, representing the binary message, and an integer <span class=\"math-container\">\\$n\\$</span>, representing the number of parity bits, and returns a list of bits representing the parity bits.</p>\n<p><a href=\"https://www.desmos.com/calculator/hctkd9cdha\" rel=\"nofollow noreferrer\">Try It Online</a></p>\n<p><a href=\"https://www.desmos.com/calculator/knyhvb6jay\" rel=\"nofollow noreferrer\">Try It Online - Prettified</a></p>\n"},{"answer_id":252539,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252539#252539","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 77 bytes</h1>\n<pre><code>,.+\n,$&amp;$*_1,$`\n+`0(1*)$\n$1\n+`_1\n11_\n(1+)_+,\\1*\n$1\n+`,(1+)\\1\n,$1@\n@1\n1\n@\n0\n,1\n\n</code></pre>\n<p><a href=\"https://tio.run/##LYuxDsIwEEN3f8eB0uSEzoUPyMZPVEoYGLp0QPx/ekeQZdl6sj/v7368xiU9@9BbgcpVcqNKR@mWmBeB0HsjyIbEsrSiG/PEGmCj/1hRfYMKgxJj0EjzFuHSFUGm9Q4L/vekMfsl9XEC\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n<pre><code>,.+\n,$&amp;$*_1,$`\n</code></pre>\n<p>Convert <code>n</code> to unary and append a copy of the message.</p>\n<pre><code>+`0(1*)$\n$1\n</code></pre>\n<p>Delete any <code>0</code>s in the copy of the message.</p>\n<pre><code>+`_1\n11_\n</code></pre>\n<p>Calculate <code>2ⁿ</code>.</p>\n<pre><code>(1+)_+,\\1*\n$1\n</code></pre>\n<p>Reduce the count of <code>1</code>s modulo <code>2ⁿ</code>, but add the <code>2ⁿ</code> back on.</p>\n<pre><code>+`,(1+)\\1\n,$1@\n@1\n1\n</code></pre>\n<p>Convert the result to binary, but use <code>@</code> instead of <code>0</code> to avoid disrupting the message.</p>\n<pre><code>@\n0\n</code></pre>\n<p>Replace <code>@</code>s with <code>0</code>s now that they're unambiguous.</p>\n<pre><code>,1\n\n</code></pre>\n<p>Remove the leading <code>1</code> of the binary number and concatenate the rest to the message.</p>\n"},{"answer_id":247029,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247029#247029","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, 24 bytes</h1>\n<pre><code>f(l)=(l[2...]-l)^2.total\n</code></pre>\n<p>Returns <code>0</code> for truthy, and a positive number (not <code>0</code>) for falsey.</p>\n<p><a href=\"https://www.desmos.com/calculator/iecides3dl\" rel=\"nofollow noreferrer\">Try It On Desmos!</a></p>\n<p><a href=\"https://www.desmos.com/calculator/lsnhyekstd\" rel=\"nofollow noreferrer\">Try It On Desmos! - Prettified</a></p>\n"},{"answer_id":252536,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252536#252536","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/Acc!!\" rel=\"nofollow noreferrer\"><em>Acc!!</em></a>, 149 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>N\nCount b while _%52/48 {\nWrite _%52\n_+_%52*51-2496+N\n}\n_+N%4\nCount p while _%4 {\nCount j while _%4/2*(p-j) {\nWrite _/52/2^(p-1-j)%2+48\n}\n_-_%4+N%4\n}\n</code></pre>\n<p>Takes input as a binary string, followed by a space, followed by an integer in unary, followed by a newline. <a href=\"https://tio.run/##S0xOTkr6/9@Pyzm/NK9EIUmhPCMzJ1UhXtXUSN/EQqGaK7woswTC54rXBlFapoa6RiaWZtp@XLVAIT9VE6jeArheE6A@iFgWQkzfSEujQDdLE2GmPtAOozigoCFQWNVI28QCZKIuUC3Y1Nr//w0MDA1hGEhCCAjHUAFEAAA\" rel=\"nofollow noreferrer\" title=\"Acc!! – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre class=\"lang-python prettyprint-override\"><code># Read a character into the accumulator\nN\n# Since all the characters we'll need to handle have character codes less than 52,\n# we can store the most recently read character in _%52 and the number of 1 bits\n# in _/52\n# While the most recent character code is &gt;= 48 (i.e. a digit):\nCount b while _%52/48 {\n  # Write that digit\n  Write _%52\n  # Add 52 to the accumulator (i.e. add 1 to _/52) if the digit was a 1\n  _+(_%52-48)*52\n  # Clear the previously read character and read a new one\n  _-_%52+N\n}\n# After reading a space, the above loop exits; _/52 is the number of 1 bits\n# in the input, while _%52 is 32 from the just-read space\n# In the next section, we want to distinguish among three cases:\n# - Reading a 1 (code 49) means keep the loop going\n# - Reading a newline (code 10) means output the parity bits\n# - Reading EOF (code 0) means exit the loop\n# These cases can be distinguished by taking the character code mod 4\n# Read a character and add its character code mod 4 to the accumulator\n_+N%4\n# While accumulator mod 4 is not zero, increment p (starting from 0) and:\nCount p while _%4 {\n  # If accumulator mod 4 is &gt;= 2 (meaning we just read a newline),\n  # increment j (starting from 0) and loop while p-j is nonzero:\n  Count j while (_%4/2)*(p-j) {\n    # Write the jth parity bit, which is the bit in the 2^(p-1-j)'s place of\n    # the number of 1 bits (stored in _/52)\n    Write (_/52)/2^(p-1-j)%2+48\n  }\n  # Clear the previously read character (mod 4) and read a new one (mod 4)\n  _-_%4+N%4\n}\n</code></pre>\n"},{"answer_id":252534,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252534#252534","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 41 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>l!n=l++cycle(mapM(:[1])$0&lt;$[1..n])!!sum l\n</code></pre>\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P0cxzzZHWzu5MjknVSM3scBXwyraMFZTxcBGJdpQTy8vVlNRsbg0VyHnf25iZp6CrUJKvgKXQkFRZl6JgopCtKGOgY4hEBrEKigqGMIkEMI6hrEwQSUlJH1wabASoF4juF4UKSA2wG4CzAokGmSOMYYbMGhcLoJZjEojGwB3EpwPdrsJktvJMgTKM4j9DwA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<p>Input and output are lists. Test case code <a href=\"https://codegolf.stackexchange.com/a/252523/20260\">from AZTECCO</a>.</p>\n<p>Haskell doesn't have built-in binary operations, so we do things by hand. The <code>mapM(:[1])$0&lt;$[1..n]</code> is one shorter than writing <code>mapM(\\_-&gt;[0,1])[1..n]</code>, for taking the <code>n</code>-fold Cartesian product of <code>[0,1]</code>. Applying <code>cycle</code> then lets us modular index into it.</p>\n"},{"answer_id":252528,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252528#252528","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, <s>8.5</s> 7.5 bytes (15 nibbles)</h1>\n<pre><code>:$\\&lt;@\\``@+^2@+\n</code></pre>\n<p>Input and output both as arrays of <code>0</code>s and <code>1</code>s.</p>\n<pre><code>             +       # get the sum of arg1,\n         +           # and add it to\n          ^2         # two to the power of\n            @        # arg2,   \n      ``@            # convert to binary digits,\n     \\               # reverse them,\n   &lt;@                # take arg2 elements,\n  \\                  # and reverse them back again\n                     # (so the last few steps effectively\n                     # pad the binary digits to arg2 digits),\n:$                   # finally, append this onto arg1\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/cnsgy.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/cnsgy.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":252530,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252530#252530","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 18 bytes</h1>\n<pre><code>pz.[\\0KE.B%/z\\1^2K\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/v6BKLzrGwNtVz0lVvyrGMM7I@/9/AwNDQxgGkhACwjHkMgEA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<h3>Explanation:</h3>\n<pre><code>pz                    print the first input with no newline\n      KE              evaluate the second input and store in K\n           /z\\1       number of occurrences of &quot;1&quot; in the first input\n          %    ^2K    modulo 2 ^ K\n        .B            binary representation\n  .[\\0K               pad with copies of &quot;0&quot; until length K and implicitly print\n</code></pre>\n"},{"answer_id":252527,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252527#252527","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-P</code></a>, 13 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>pUx u2pV)¤ù0V\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LVA&amp;code=cFV4IHUycFYppPkwVg&amp;input=WzAsMCwxLDEsMCwwLDEsMSwwLDAsMSwxLDEsMSwwLDEsMSwxLDEsMCwxLDAsMCwxLDEsMSwxLDFdCjQ\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>pUx u2pV)¤ù0V\n Ux            # Sum of the digits in U\n    u   )      # Modulo:\n     2pV       #   2 to the power of V\n         ¤     # Convert to base 2\n          ù0V  # Left-pad with 0 until the length is V\np              # Add that string to the end of U\n               # Print the array with no delimiter\n</code></pre>\n<p>Can be modified to run without <code>-P</code> for <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=cFV4IHUycFYppPkwVims&amp;input=WzAsMCwxLDEsMCwwLDEsMSwwLDAsMSwxLDEsMSwwLDEsMSwxLDEsMCwxLDAsMCwxLDEsMSwxLDFdCjQ\" rel=\"nofollow noreferrer\">15 bytes</a></p>\n"},{"answer_id":252526,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252526#252526","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 10 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>SBŻ⁹¡ṫC}⁸;\n</code></pre>\n<p>A dyadic Link that accepts a list of bits on the left and a positive integer on the right and yields a list of bits extended with the parity bits.</p>\n<p><strong><a href=\"https://tio.run/##y0rNyan8/z/Y6ejuR407Dy18uHO1c@2jxh3W////jzbUgcLY/0YGAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong> Or see the <a href=\"https://tio.run/##y0rNyan8/z/Y6ejuR407Dy18uHO1c@2jxh3W/8MeNa05vPzQUn3NyP//o6OVDA0MDQ2UdBQMY7l0opVAHCAE8o3AfJAsBAOFjCFKQGqgGCIH0gKmQfpMYrli/xsDAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">test-suite</a>.</p>\n<h3>How?</h3>\n<pre><code>SBŻ⁹¡ṫC}⁸; - Link: bits, n\nS          - sum (bits) -&gt; count of ones\n B         - to binary\n    ¡      - repeat...\n   ⁹       - ...times: chain's right argument = n\n  Ż        - ...action: prepend a zero\n             -&gt; count of ones as binary with n leading zeros\n       }   - using the right argument (n):\n      C    -   complement -&gt; 1-n\n     ṫ     - tail (from 1-indexed index 1-n)\n             -&gt; parity bits (including any necessary leading zeros)\n        ⁸  - chain's left argument = bits\n         ; - concatenate (parity bits) to (bits)\n</code></pre>\n"},{"answer_id":252524,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252524#252524","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 62 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ dup bin&gt; bit-count pick 2^ mod &gt;bin rot 48 pad-head append ]\n</code></pre>\n<p><a href=\"https://tio.run/##fZCxbgMhDIZ3nuLP7VdBmiFqpaxVly5RpyqRCLg6lB4Q4NQhyrNfCKBMTS0ZG@zPP/K3VMmF@XP7/vH2AhmjUxFHCpZ@MMo0PHkZIoWS14eDSb8mEiKdJrKKIozDK2NnhmxnCHSCC8E7XPDAFigdohFLdOXKxUNmgdbBeYOeq0z1v7kqc/cGrrLabVjzWiuTb7F8Iav905EDZxc2f0FPHgdjN/lIvXKTTfBGHbHcY3Qam1xDcAmrNbzU/UBSQ3pPVmOXcR9MJnZQbvQub7RsvyephvkK\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Takes input as <code>n msg</code>.</p>\n<pre><code>          ! 3 &quot;10110111110110111&quot;\ndup       ! 3 &quot;10110111110110111&quot; &quot;10110111110110111&quot;\nbin&gt;      ! 3 &quot;10110111110110111&quot; 94135\nbit-count ! 3 &quot;10110111110110111&quot; 13\npick      ! 3 &quot;10110111110110111&quot; 13 3\n2^        ! 3 &quot;10110111110110111&quot; 13 8\nmod       ! 3 &quot;10110111110110111&quot; 5\n&gt;bin      ! 3 &quot;10110111110110111&quot; &quot;101&quot;\nrot       ! &quot;10110111110110111&quot; &quot;101&quot; 3\n48        ! &quot;10110111110110111&quot; &quot;101&quot; 3 48\npad-head  ! &quot;10110111110110111&quot; &quot;101&quot;\nappend    ! &quot;10110111110110111101&quot;\n</code></pre>\n"},{"answer_id":252519,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252519#252519","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"noreferrer\">Zsh</a> <code>--extendedglob</code>, 37 bytes</h1>\n\n<pre class=\"lang-sh prettyprint-override\"><code>local -Z$2 -i2 n=${1//10#/+1}\n&lt;&lt;&lt;$1$n\n</code></pre>\n<p><a href=\"https://tio.run/##bU/LasMwELzrK5ZIBYlg7FVzCm4@pKUHJd46BlkKslryIN/uSrFbfIjEIoaZnRldh@M4UPSnCHSO5BpqWuv37GRCFy9SyURCcWZbWElxw7LEipdrvKsXrGuhV6P1B2OheBcaik6De1uqWJ1EKNyo2OwIWCFWgH8wo3RBL/lp4PVflFXzTGReerwIG8YYh/77cATrXUthy4yNmKozSGdqcJM2td3V1U4JKT8415/PvqPUnalsF6j3PzSAJdN0roUrBZ/gV/A97C@RhhjI9DlIL4Nma83Fw279PCNFjL8\" rel=\"noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n<p>The <code>-Z$2</code> flag does the heavy lifting. It automatically <code>% base**$2</code>, and fills in zeroes. EXTENDED_GLOB <code>10#</code> is equivalent to regex <code>10*</code>.</p>\n"},{"answer_id":252517,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252517#252517","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 48 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda a,b:b+bin(b.count(&quot;1&quot;)%2**a)[2:].zfill(a)\n</code></pre>\n<p>Finally, a use for <code>zfill</code>!</p>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vwYKlpSVpuhY3jdJscxJzk1ISFRJ1kqyStJMy8zSS9JLzS_NKNJQMlTRVjbS0EjWjjaxi9arSMnNyNBI1ITq3FhRlAtWkaRjpKBkYGhoAoZImVA5mOgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252515,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252515#252515","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 14 bytes</h1>\n<pre><code>Ｎθη✂⍘⁺Ｘ²θΣη²±θ\n</code></pre>\n<p><a href=\"https://tio.run/##PUy7CoAwENv9CscrKNji5ubmIoV@QS2HCvVVW/3880B0SEhCEjfZ4Dbribp1T7FPy4ABDtFkOsxrhOlXxs8OobUnmsjBCNqnE/R2c18V@SGK3KSFBywUo8fRRuQrIRqiOqsqKT8wv/QaSeXlHw\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Takes <code>n</code> as the first input. Explanation:</p>\n<pre><code>Ｎθ\n</code></pre>\n<p>Input <code>n</code> as a number.</p>\n<pre><code>η\n</code></pre>\n<p>Print the binary message.</p>\n<pre><code>✂⍘⁺Ｘ²θΣη²±θ\n</code></pre>\n<p>Sum the bits in the binary message, add on <code>2ⁿ</code>, convert to binary, and print the last <code>n</code> digits.</p>\n"},{"answer_id":252507,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252507#252507","body":"<h1>Java 8, <s>87</s> <s>73</s> 72 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>b-&gt;n-&gt;b+n.toString((n=1&lt;&lt;n)|n.bitCount(n.valueOf(b,2))%n,2).substring(1)\n</code></pre>\n<p>-14 bytes thanks to <em>@ceilingcat</em></p>\n<p><a href=\"https://tio.run/##fVDBasMwDL3nK0RgYJPExN1Oa5rLYLDD2KHHsYPdJsVZqoRaDpSt3545icfYCgPLkqWnpyc3alBZs38fd62yFp6VwY8IwJIis4PGV4Uj04ra4Y5Mh@IxBMWWTgYP6b@YJ6TqUJ1SWMBlCTVsRp2VmJU6QUHdUmAMN7IokH@i0IYeOofEUAyqddVLzXS64vwG/S2s03ZpkXwEWEdebO9068UGzUNn9nD0e7CF@/UNFJ92AqDKEotlLqcj5XcQp3DL138RPit/ZWd0PqFXV@jFrojyqSdYGJqHx8RzN4Mv0c@Hz@Ln3kU86NQgAYYFtmdL1VF0jkTvy9Qiw8QTxYlO4nvwvhaq79sz0zwEyMOQy/gF\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-java prettyprint-override\"><code>b-&gt;n-&gt;                  // Method with String &amp; Integer parameters and String return\n  b                     //  Return the given binary-String\n   +                    //  Appended with:\n    n.toString(         //   Convert the following integer to a (binary-)String:\n      (n=1&lt;&lt;n)          //    1 bitwise left-shifted by `n`\n                        //    (which is saved in `n` to reuse later on)\n      |                 //    Bitwise-ORed by:\n       n.bitCount(      //     The amount of 1-bits\n        n.valueOf(b,2)) //     in the binary-String input\n      %n                //    Modulo the `1&lt;&lt;n` we saved in variable `n`,\n                        //    which is basically 2 to the power (input) `n`\n      ,2)               //   (Use base-2 for the `n.toString`)\n         .substring(1)  //   And remove the leading &quot;1&quot;\n</code></pre>\n<p><code>n.toString(1&lt;&lt;length|value,2).substring(1)</code> is taken from <a href=\"https://stackoverflow.com/a/28198839/1682559\">this Stackoverflow answer</a>.</p>\n"},{"answer_id":252506,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252506#252506","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a> NumPy, 39 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>lambda a,b:[0,*b]*1**b[:1]@[(),*zip(a)]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=Lc5RCsIwDAbg952ib7YlQqs4ZDDwHrUPKVIc2K6UDpzgSXwZiN7J25ixEcIPXwLJ65vGcu3j9Pbt-TMUvz3-NjcM7oIMwTVGgXRWaimdabQ9GS5APrrEUdh1_YmtMUbDDvYW1rRQGVODoqoJD6Cp1MJaKaAmVjPZyuc-sDiENLIupD4XhjnjWPk-szsQRhaQLs4IKJqUu1i45zQTYnlimpb8Aw\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Of course, there is also the <code>repeat</code> builtin.</p>\n<h3>How?</h3>\n<p>Beside the usual bending over backwards to avoid the explicit numpy import this uses the fact that if we write <span class=\"math-container\">\\$c_i = [b_i]\\$</span> then, formally, <span class=\"math-container\">\\$c_1 a_1 + c_2 a_2 + ... + c_n a_n\\$</span> is a dot product. It is mildly tricky to set up an array of equal length sequences because numpy will just create an additional dimension and create an array of scalars. Here we prepend a different length sequence, forcing a ragged array (after using zip to create a list of singleton tuples). To match we must also prepend one value to the length array. The 1**b[:1] factor, mathematically a nop, is there to trigger a coercion cascade to numpy arrays-</p>\n"},{"answer_id":252493,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252493#252493","body":"<h1>JavaScript (ES6), 53 bytes</h1>\n<p>Expects <code>(binary_string)(n)</code> and returns another binary string.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;g=(n,k)=&gt;k^n?g(n,-~k)+(~-s.split`1`.length&gt;&gt;k&amp;1):s\n</code></pre>\n<p><a href=\"https://tio.run/##bYxBCsIwEEX3HqMLyaAJHXUlJN6ktNQ01oSkdILLXj1NrCuV4TMDb95/dq@O@nmcIvfhrtMgE0llJPNHC1LZxt9Mvvli4cAWToImN8YWW@G0N/GhlN0jXCn1wVNwWrhg2MAqrBHrChgC7L5QIXkyPP3C4m3J/PxHLvYn22Mpe@/SeAFIKw\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<h3>Commented</h3>\n<p>It's a little easier to build the output from right to left. This way, we can just append the input string on the last recursive call.</p>\n<pre class=\"lang-javascript prettyprint-override\"><code>s =&gt;             // outer function taking the binary string s\ng = (n,          // inner recursive function taking n\n        k) =&gt;    // and a counter k which is initially undefined\nk ^ n ?          // if k is not equal to n:\n  g(n, -~k) +    //   do a recursive call with k + 1\n  (              //   append one binary digit:\n    ~-s.split`1` //     to get the number of 1's, subtract 1 from the length\n    .length      //     of the array obtained by splitting the input on 1's\n    &gt;&gt; k &amp; 1     //     right shift by k positions and keep the LSB\n  )              //\n:                // else:\n  s              //   append s and stop the recursion\n</code></pre>\n"},{"answer_id":252460,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252460#252460","body":"<h1><a href=\"https://github.com/ismael-miguel/simply\" rel=\"nofollow noreferrer\">simply</a>, 87 bytes</h1>\n<p>The code defines an anonymous function that returns the expected result.<br>\nNothing special here...</p>\n<pre><code>fn($A$R){$X=[]each$R as$k=&gt;$v;if$v$X=&amp;array_concat($X&amp;array_fill($A[$k]$v))send$X;}\n</code></pre>\n<h2>Usage</h2>\n<p>Just use it normally...<br>\nExample using the 2nd test case.</p>\n<pre><code>$fn = fn($A$R){$X=[]each$R as$k=&gt;$v;if$v$X=&amp;array_concat($X&amp;array_fill($A[$k]$v))send$X;}\n\n// should output: 6,6,6,6,6,0,0\necho &amp;join(call $fn([6,0,0,6], [5,1,1,0]), ',');\n</code></pre>\n<p>Since it is an anonymous function, using <code>call</code> is required.</p>\n<h2>Ungolfed</h2>\n<p>This code does exactly the same as the golfed version.</p>\n<p>This is pretty close to pseudo-code.</p>\n<pre><code>Set $fn to an anonymous function($A, $R)\nBegin.\n    Define the variable $result = [].\n    Loop through $R as value $value key $key.\n    Begin.\n        If $value then.\n        Begin.\n            Set $result to the result of calling &amp;array_concat(\n                $result,\n                &amp;array_fill($A[$key], $value)\n            ).\n        End.\n    End.\n    \n    Return the $result.\nEnd.\n</code></pre>\n<p>A little further from pseudo-code...</p>\n<pre><code>$fn = fn($A, $R) =&gt; {\n    $result = [];\n    foreach $R as $key =&gt; $value {\n        if $value {\n            $result = &amp;array_concat(\n                $result,\n                &amp;array_fill($A[$key], $value)\n            );\n        }\n    }\n    \n    return $result;\n};\n</code></pre>\n"},{"answer_id":252502,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252502#252502","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 6 bytes</h1>\n<pre><code>{y#'x}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs6quVFavqOXiSovWMFQwUjDWtIbSsSAhMwUDIDQDCpoqGAKhAUTY0MBAAYiBwgYgIQArxQ6u\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>I don't know if this is accepted or not. Take input as <code>(A);(R)</code>.</p>\n<p>Render output with <code>,x</code> for array with only one element <code>x</code>, and <code>!0</code> for array with no element (aka null duplication).</p>\n"},{"answer_id":252492,"question_id":252491,"link":"https://codegolf.stackexchange.com/questions/252491/generate-parity-bits/252492#252492","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, <s>11</s> 10 bytes</h1>\n<pre><code>⌊∑$E%Π⁰↳›J\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLijIriiJEkRSXOoOKBsOKGs+KAukoiLCIiLCIwMTEwMTAxXG4yIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a>\n&quot;<s>11</s> 10 bytes?!&quot; I hear you say. Well you gotta remember that when it comes to doing things with base conversion I don't do the best - so keep that in mind when y'all start giving me golfing suggestions :p</p>\n<h2>Explained</h2>\n<pre><code>⌊∑$E%Π⁰↳›J\n⌊∑         # Sum of the 1s in the input binary\n  $E%      # Modulo'd by 2 to the power of n\n     Π     # Converted to binary\n      ⁰↳   # Padded with spaces to make sure it's of length n\n        ›J # With those spaces replaced with 0s and joined to the original binary input\n</code></pre>\n"},{"answer_id":252464,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252464#252464","body":"<h1><a href=\"https://codegolf.stackexchange.com/questions/363/tips-for-golfing-in-ruby/9289?r=SearchResults&amp;s=1%7C19.2033#9289\">Goruby</a>, <s>25</s> 22 bytes</h1>\n<p>-3 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/18535/g-b\">G B</a></p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a,b{a.fl{[_1]*b.sh}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=pVbdbts2FL73U5w6aSy5imKvazEE9dIfpNtuVqAFdjHDEyiJttlSlEBSaWxJfZHd9GJ7hb3L9jQ7JCX5p2nRYTFi0uef53znkL__Ict48_GfQXkCP-RmD4WkvEwpnMMg4UQpeBW_pYkeADx9usr5MloTtYYZVM0AaTdUxrmiAZz-cv36-as318jptgEIxlEmpUvIqF7naZQxpZhYQRbAmARwFiMbQKPSnvE5zJGvKF-GNoIFLKCuZ5ARnaxRO3LGlJf588nCWmBLNHJ2Bs4eQBQpKtIo8rRx5ENVj4lcqbplA8RhzESKxkJ6Q7g3LGSeVLUNwbpJiSY1nH7AyA6J0Az9MCGce6cffOP39MOeUcuwrvyW2tiVckVbgoaro_BMHny4BFUWVDpxkQ66773EtskedDk9zodCmdEogAxXEwmJOe2YLh6JnIvfTioV6jxS4UqVsXcRXvjV0AvHV_4QHsBruqK3RUhVQgrqnZ75TXNhdbNwJWnhST9UudQRQiXNoWZdTpkzaYMyQqiuS0kNpfDOLhXbUh-ePAF2dML2MK7cuVC6B0nyGXAkwVdgIwnAWiNCqx4mGohIQVIMTDh2tKLa021yCFMUfiYZvZYylwEMS8EE04xwDD7t7cFJlTTDwKaYSm_qH51kjemhaJrEsaQ3jGiWi6-ojZFwdbE_81JGCcGAZuBdPQvDq199mM1QZA_zWYggpreeU9tkHeimYVnoHMk261W9rdEyFlTYYmOaM0S_i2vrmwJVtZZ4zF1_CHqroRSc4gDwDvxbQYzB_OqD7PUsF8bmrD2tzbdjsTtwazmYGlMnexJjWnUN9EkHualyB4aO8-rS2mPFWHXDDFuwFUHAF5LdEN0rYSPu1FvjrUjnZ-0RU80fsZyx2bzHTWI290auAkWpFQxPKtJQzvMAARM3ueSpBc5hzEvPIGI6mTjNtnIZFk3UxszoJdtun5fb7WA0ZzMxHn97_3z6KGAPpg8XdS2anTVEKVGgyMa67-ynefR-zbjL3QTsHjaM8qPcoVwpdJvZCdj9gZyVdXl8JiXZ9B5znka2aC10HdVS3uZM7Cu-JFjFF2b7WW0TS98Dw-Gnzn8SGieU7A1QkqxBs4waFSYSe3ldizKj0mBhX_UNAk2ses0LUAVnerDzShxiDNUbjfb62rNHxm4zAyDZYeUc7iDdZ3NjS24Q8kSoAkc2LDnRmopuvYfDJCsIIrFd7wEGmCc4g8yy8ENzrKo2Rl1TmmsKhnZrgj2pDKtxd425QHievOva36CzP43pP1VyM0ZJ-EU1nO6cJNQjoalbR8WGdQZ2TdTV3_21BbHDwUliG2OHtVp4unfeKBmPzBXX0iwunDb29R0e2vrpXO5NESvibhMboBkVFAV3luiRdMexg8KuJoPNPiYOPN0Nyf9U_Pllm8YFjpb5pTHxP6tpKvmlwvWn2o8fIyvMoGvXntfRuzMetMcmi_PuwbZ7yRx6Mw8le_FLmtzUPXKSm7B_1JiJa941d0W638_L2Z-lXp5_99f59ySIKxIueTWPpotxHKp10zjm39cFLOfzafBN8HARQLtZDCz1cTDBz2NDfxRM8TPpODhQA_w3nImhOmMfP7r1Xw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>33</s> 31 bytes</h1>\n<p>-2 bytes thanks to G B</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a,b{a.flat_map{[_1]*b.shift}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsGiNNulpSVpuhb7de0SdZKqE_XSchJL4nMTC6qj4w1jtZL0ijMy00pqayGqbroWKKRFRxvqGOkYx-ooQBmxXGBRMx0DIDQDiZvqGAKhAUzG0MBAB4hBMgYgUYhhCxZAaAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252489,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252489#252489","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 1 byte</h1>\n<pre><code>/\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=UmVwIOKGkCAvCgrin6g0LDUsNuKfqSBSZXAg4p+oMSwyLDPin6kKCg==\" rel=\"nofollow noreferrer\">Try it at BQN REPL</a></p>\n<p>Built-in solution.</p>\n<hr />\n<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 3 bytes</h1>\n<pre><code>∾⥊¨\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=UmVwIOKGkCDiiL7ipYrCqAoK4p+oNCw1LDbin6kgUmVwIOKfqDEsMiwz4p+pCgo=\" rel=\"nofollow noreferrer\">Try it at BQN REPL</a></p>\n<p>Roll-your-own solution  avoiding <code>/</code> (Replicate) built-in.</p>\n<pre><code>   ¨    # Each: for each element of R arg\n  ⥊     # Reshape: reshape to a list of L arg copies\n ∾      # Join: and join all the lists together\n</code></pre>\n"},{"answer_id":252490,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252490#252490","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 51 bytes</h1>\n<pre><code>func[a b][collect[forall a[loop take b[keep a/1]]]]\n</code></pre>\n<p><a href=\"https://tio.run/##LYzBCsMwDEPv/Qr9wZKN9dDP2NX44KQOg4Y6hO77M5dWQhgelrqu46Mr8VSWUX57JkFiylar5oOKdakVQtWs4ZBNkWhTbZBHZNfwD5X8xdWb4KKIJ158nwvNCO6Z6Y3oDjeOIcDDFE7E1LolRcE5Nv4\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252485,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252485#252485","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 1 byte</h1>\n<pre><code>Ṙ\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//@HOGf///4820THVMYv9H22oY6RjHAsA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<p>Built-in solution.  Input is arg1=R, arg2=A</p>\n<hr />\n<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 5 bytes</h1>\n<pre><code>Σz(↑∞\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//9ziKo1HbRMfdcz7//9/tKGOkY5x7P9oEx1THbNYAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<p>Roll-your-own solution avoiding <code>Ṙ</code> built-in.</p>\n<pre><code>Σz(↑∞\n z     # zip the two inputs together with \n  (    #   combination of functions:\n    ∞  #   make an infinite list of copies of arg1\n   ↑   #   and then take arg2 elements from it;\nΣ      # finally, flatten the output\n</code></pre>\n"},{"answer_id":252481,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252481#252481","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, 7 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>mÅaam*─\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjPz0n7/z/3cGtiYq7WoykN//9HG@oY6RjHKkBprmgzHQMgNAOKmOoYAqEBUMzQwEAHiIFiQLlYAA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p>Or alternatively, with the input-lists swapped:</p>\n<pre><code>^mæ~Ä_;\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjPz0n7/z8u9/CyusMt8db//0cb6hjpGMcqQGmuaFMdQyA0AIqY6RgAoRlQzADMNzQw0AHiWAA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>m     # Map over the first (implicit) input-list,\n Å    # using two characters as inner code-block:\n  a   #  Wrap it into a list\n   a  #  Wrap that into a list\n      # (e.g. [6,0,0,6] → [[[6]],[[0]],[[0]],[[6]]])\nm*    # Repeat each the second (implicit) input amount of times\n      # (e.g. [5,1,1,0] and [[[6]],[[0]],[[0]],[[6]]] →\n      #  [[[6,6,6,6,6]],[[0]],[[0]],[[]]])\n─     # Flatten it to a single list\n      # (e.g. [[[6,6,6,6,6]],[[0]],[[0]],[[]]] → [6,6,6,6,6,0,0])\n      # (after which the entire stack is output implicitly as result)\n</code></pre>\n<p>Unfortunately, using <code>m*</code> on lists <code>[6,0,0,6]</code> and <code>[5,1,1,0]</code> results in <code>[30,0,0,0]</code> and lists <code>[[6],[0],[0],[6]]</code> and <code>[5,1,1,0]</code> results in <code>[[30],[0],[0],[0]]</code> (apparently..). Hence the need for two wraps before we can use <code>m*</code>.</p>\n<pre class=\"lang-python prettyprint-override\"><code>^        # Zip the two (implicit) input-lists together\n         # (e.g. [5,1,1,0] and [6,0,0,6] → [[6,5],[0,1],[0,1],[6,0]]\n m       # Map over each inner pair,\n  æ      # using 4 characters as inner code-block:\n   ~     #  Pop and push the contents of the pair separately to the stack\n    Ä    #  Pop the top, and loop that many times:\n     _   #   Duplicate\n      ;  #  After the inner loop, discard the top item\n         # (after which the entire stack is output implicitly as result)\n</code></pre>\n"},{"answer_id":252453,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252453#252453","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 6 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>Takes <code>R</code> as the first input.<br>A byte or 2 could be saved if output could be a 2D-array but I'm guessing a flat array is one of the points of the challenge.</p>\n<pre><code>cÈÇYgV\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=Y8jHWWdW&amp;input=WzUsMSwxLDBdCls2LDAsMCw2XQotUQ\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>cÈÇYgV     :Implicit input of arrays U=R &amp; V=A\nc          :Flat map U\n È         :Pass each X at index Y through the following function\n  Ç        :  Map the range [0,X)\n   YgV     :    Index into V\n</code></pre>\n"},{"answer_id":252476,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252476#252476","body":"<h1>Excel (ms365), 60 bytes</h1>\n<pre><code>=IFERROR(TEXTSPLIT(CONCAT(REPT(A1:C1&amp;&quot;|&quot;,A2:C2)),&quot;|&quot;,,1),&quot;&quot;)\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/Jc6ha.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Jc6ha.png\" alt=\"enter image description here\" /></a></p>\n<hr />\n<p>Or, if you don't mind whole rows as input arrays, for 56 bytes:</p>\n<pre><code>=IFERROR(TEXTSPLIT(CONCAT(REPT(1:1&amp;&quot;|&quot;,2:2)),&quot;|&quot;,,1),&quot;&quot;)\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/M2Pam.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/M2Pam.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":252459,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252459#252459","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 12 bytes</h1>\n<pre><code>(*Zxx*).flat\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPtfQyuqokJLUy8tJ7Hkv7VCcWKlQppGjUq8pkJafpGCho2hgpGCsZ2OApShqQMUM1MwAEIzkKipgiEQGkDEDQ0MFIAYJG4AEvsPAA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>xx</code> is Raku's replication operator.  It produces a list of a number of copies of its left argument given by its right argument.  (Very conveniently, though irrelevant for this problem, the left-hand side is re-evaluated the requested number of times, so for example <code>rand xx 10</code> will produce a list of ten different random numbers.)</li>\n<li><code>Z</code> is the zip &quot;meta-operator.&quot;  It can be prepended to any other operator to produce a new operator that zips two lists together using the original operator.</li>\n<li>The asterisks make this a &quot;WhateverCode&quot; expression, a short way of defining anonymous functions.  The first and second argument to the function will take the place of the first and second asterisk, respectively.</li>\n<li><code>.flat</code> flattens the list of replicated lists.</li>\n</ul>\n"},{"answer_id":252471,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252471#252471","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a>, 3 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>rep\n</code></pre>\n<p><a href=\"https://tio.run/##K/qfZvu/KLXgf5qGoZWxDhBrcqVpJGuY6RgAoZmmTrKGqY4hEBpoQiQMDQx0gBgkYQAS/A8A\" rel=\"noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>In <a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a> many functions are vectorized and so is <code>rep</code> - it happens to work correctly for this challenge.</p>\n"},{"answer_id":252469,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252469#252469","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 4 bytes</h1>\n<pre><code>,/#'\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxLs9LRV1bn4krT1zBVMARCA2szBQMgNNMEAEY4BM4=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":252468,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252468#252468","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 2 bytes</h1>\n<pre><code>ÅΓ\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//cOu5yf//R5vqGAKhQSxXtJmOARCaxQIA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252466,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252466#252466","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"noreferrer\">J</a>, 1 byte</h1>\n<pre><code>#\n</code></pre>\n<p><a href=\"https://tio.run/##y/qvpKegnqZga6WgrqCjYKBgBcS6egrOQT5u/5X/a3KlJmfkKxgqGCkYKwBBmgKEDRE2BXIMgepBwmZA2kDBDCIBYirA1BsYgDBEwlLBQsEc2aD/AA\" rel=\"noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<p>Simple built-in solution: The <a href=\"https://www.jsoftware.com/help/dictionary/d400.htm\" rel=\"noreferrer\">copy</a> verb.</p>\n"},{"answer_id":252465,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252465#252465","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, 72 bytes</h1>\n<pre><code>f(A,R)=[A[i&lt;=∑_{n=1}^{[1...R.length]}R[n]][1]fori=[0...R.total][2...]]\n</code></pre>\n<p>Might post an explanation if I feel like it.</p>\n<p><a href=\"https://www.desmos.com/calculator/xnfpltkd6z\" rel=\"nofollow noreferrer\">Try It On Desmos!</a></p>\n<p><a href=\"https://www.desmos.com/calculator/fnvee6gmm9\" rel=\"nofollow noreferrer\">Try It On Desmos! - Prettified</a></p>\n"},{"answer_id":252444,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252444#252444","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, <sup><s> 27 </s></sup> 25 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ [ &lt;array&gt; ] 2map-flat ]\n</code></pre>\n<p><a href=\"https://tio.run/##PY29CsIwFIX3PsV5AUsa0UFF3MTFRZxKh0tIIZi24eY6lNJnjzGCw/nh48DpycjE6fm43a8HEDPNES/Lo/Uw0xCct1y/xXknzkYEtiJzYDcKjlW1oIHGFiuAf890l3sDlfmCfU6V/ctVYfitlSpaU4sWp3J9Rgc9UNj0ngRd0sLugjrCeEucPg\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Takes input as <code>R A</code>.</p>\n"},{"answer_id":252461,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252461#252461","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a>, 7 bytes</h1>\n\n<pre class=\"lang-matlab prettyprint-override\"><code>repelem\n</code></pre>\n<p>It seem's that TIO's version of Octave doesn't have this built-in.</p>\n"},{"answer_id":252456,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252456#252456","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 27 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(concat.).zipWith replicate\n</code></pre>\n<p><a href=\"https://tio.run/##LY0xDsIwDEV3TuGBASS3SkB0okdgZggZ3CilEWmwmkyIsxNMhb6s//QG/4nyw8dYx/5Wd@6ZHJV2374CX0OZYPEcgyhfi88lQw/GGI0HPFr8t4DpUEk6wRNqiVqtVgrlBNXP2M1MIcmLmfgCvIRUYAtmBILhbQYke27WFQv148ZI91wbx/wF\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<p>These built-ins have long names, but I haven't found anything shorter.</p>\n"},{"answer_id":252450,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252450#252450","body":"<h1><a href=\"https://nodejs.org\" rel=\"noreferrer\">JavaScript (Node.js)</a>, <s><sub>44</sub></s> 43 bytes</h1>\n<p>−1 thanks to Arnauld.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>A=&gt;R=&gt;A.flatMap((a,i)=&gt;Array(R[i]).fill(a))\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@9/R1i7I1s5RLy0nscQ3sUBDI1EnUxMoUFSUWKkRFJ0Zq6mXlpmTo5Goqfk/OT@vOD8nVS8nP10jTSPaUMdIxzhWE87Q5EJTYKZjAIRmICWmOoZAaIBFkaGBgQ4QgxQZgBX8BwA\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252455,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252455#252455","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"noreferrer\">Pyth</a>, 3 bytes</h1>\n<pre><code>r9C\n</code></pre>\n<p><a href=\"https://pythtemp.herokuapp.com/?code=r9C&amp;test_suite=1&amp;test_suite_input=%5B1%2C2%2C3%5D%2C%5B1%2C2%2C3%5D%0A%5B5%2C1%2C1%2C0%5D%2C%5B6%2C0%2C0%2C6%5D%0A%5B0%2C0%5D%2C%5B100%2C100%5D&amp;debug=0\" rel=\"noreferrer\">Test suite</a></p>\n<p>Takes input as <code>R,A</code>.</p>\n"},{"answer_id":252454,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252454#252454","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell Core</a>, 30 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a,$r)$r|%{,$a[$i++]*$_}\n</code></pre>\n<p><a href=\"https://tio.run/##hY/RS8MwEMafm7/iGFEal0CrrG9CpeCDL4rzbYwRY8aUdqlJq0Lbv71e2q6PGx@By3c/7r4rza@27qDzXChjdU/3cA9NX0ori5BKTi2jtr1qOJUb@rlcbm/orus7QtKQBDwN0zDmt/yO8bmAscLai7EJS3iESjy44jEqGtCEn4TtGY6jiOPzcDSB2GPQwiOGlOognt@/tKqgIQGGBGrx6b8SLf2BB9Ad@la7Oq/wd41HUYkQmq5WSjuHbngCWsjM8Ufb6s2IJ2eOIDJTlNh0DIT@RnCefAYlweZlndWuMsWYbQsppgsW63Hjwseatnv7YTDkmZGeeh0oe4kaDhnRSzeRoCMd6f8B\" rel=\"nofollow noreferrer\" title=\"PowerShell Core – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252449,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252449#252449","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 2 bytes</h1>\n<pre><code>Y&quot;\n</code></pre>\n<p><a href=\"https://tio.run/##y00syfn/P1Lp//9oMx0DIDSL5Yo21TEEQoNYAA\" rel=\"nofollow noreferrer\">Try it online!</a> Or <a href=\"https://tio.run/##y00syfmf8D9S6b@6rq56hEvI/2hDHSMd41guOG2mYwCEZkCWqY4hEBqA5AwMdIAYyALKxQIA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n"},{"answer_id":252448,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252448#252448","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 9 bytes</h1>\n<pre><code>ＩΣＥθＥ§ηκι\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70iOSOxKDk_MWfBgqWlJWm6FjcNAooy80o0nBOLSzSCS3M1fBMLNAp1FECUY4lnXkpqhUaGjkK2po5CpiYIWC8pTkouhupeHq2kW5ajFLsxOtpQx0jHOFYHSsdC5AE\" rel=\"nofollow noreferrer\">Attempt This Online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>   θ        Array of values\n  Ｅ         Map over values\n      η     Array of counts\n     §      Indexed by\n       κ    Current index\n    Ｅ       Map over implicit range\n        ι   Current value\n Σ          Concatenate arrays\nＩ           Cast to string\n            Implicitly print\n</code></pre>\n"},{"answer_id":252446,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252446#252446","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"noreferrer\">APL (Dyalog Unicode)</a>, 1 byte</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>/\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///X/9/2qO2CY96@x51NT/qXfOod8uh9caP2iY@6psaHOQMJEM8PIP/GyoYKRgrpCmAaS5TIG2oYADkmwFJAwUzLgMwz9DAAIQB\" rel=\"noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252445,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252445#252445","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>¨£ẋf\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBUCIsIiIsIsKowqPhuotmIiwiIiwiWzEsMiwzXSxbMSwyLDNdXG5bNiwwLDAsNl0sWzUsMSwxLDBdXG5bMTAwLDEwMF0sWzAsMF0iXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>This two-byte solution should work, but it seems to bork when the length is an array only of zeros: <a href=\"https://vyxal.pythonanywhere.com/#WyJBUCIsIiIsIsO44biKIiwiIiwiWzEsMiwzXSxbMSwyLDNdXG5bNSwxLDEsMF0sWzYsMCwwLDZdXG5bMCwwXSxbMTAwLDEwMF0iXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":252443,"question_id":252442,"link":"https://codegolf.stackexchange.com/questions/252442/repeat-values-in-array/252443#252443","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 1 byte</h1>\n<pre><code>x\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/7/i/@Hl@o@a1hyd9HDnDCAd@f9/dHS0oY6RjnGsDpQGMqLNdAyA0AzINNUxBEIDsKihgYEOEAOZBiCRWAA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252410,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/252410#252410","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>61</s> 58 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>c;f(n){for(;n;4370%c-n&amp;1&amp;&amp;putchar(c,n--))c=97+clock()%26;}\n</code></pre>\n<p><a href=\"https://tio.run/##DcHRCoJAEAXQd7/CF5cZckArWmToY5YLq5KNYUUP4q83eg6kB9yhmYzXPC@kptdLbCqIhTaE1/eDIS2E2kSYce/iCdOMB3F1vunmzzQacbkW5SFTZC02/yNPqX@7/HY\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p>-3 bytes thanks to ceilingcat!!</p>\n"},{"answer_id":252402,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/252402#252402","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>9</s> 8 bytes</h1>\n<pre><code>ØḄØẹḂ?X)\n</code></pre>\n<p><em>-1 byte thanks to @Steffan</em></p>\n<p><a href=\"https://tio.run/##y0rNyan8///wjIc7WoDErp0PdzTZR2j@///fFAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Explanation:</p>\n<pre><code>ØḄØẹḂ?X)  # main link taking an integer\n\n       )  # over the list [1..n]\n     ?    # if\n    Ḃ     # n modulo 2 is truthy\nØḄ        # yield the consonants\n  Øẹ      # otherwise the vowels\n      X   # get a random letter from that\n<span class=\"math-container\">```</span>\n</code></pre>\n"},{"answer_id":252416,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/252416#252416","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 67 bytes</h1>\n<pre><code>{$!=&lt;a e i o u&gt;;({(('a'..'z')∖$!,$!)[$++%2].pick}...*)[^$_].join}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/WkXR1iZRIVUhUyFfodTOWqNaQ0M9UV1PT71KXfNRxzQVRR0VRc1oFW1tVaNYvYLM5OxaPT09Lc3oOJX4WL2s/My82v8FpSUKaRoq8ZoKFRUKxgpp@UUKxjoKpjoK5v8B\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<ul>\n<li>The vowels are stored in <code>$!</code>, one of just two special global variables that don't need to be declared.</li>\n<li><code>{ ... } ... *</code> is a lazy, infinite list, where the code between the braces generates each successive element.</li>\n<li><code>('a' .. 'z') ∖ $!</code> are the consonants.  That <code>∖</code> isn't a backslash, it's the Unicode <code>SET MINUS</code> character.</li>\n<li><code>(('a' .. 'z') ∖ $!, $!)[$++ % 2]</code> alternately chooses the consonants and vowels on each iteration of the generator.  The anonymous state variable <code>$</code> counts how many iterations there have been so far, and the <code>% 2</code> reduces that to the alternating sequence <code>0, 1, 0, 1, ...</code>.</li>\n<li><code>.pick</code> chooses a random vowel or consonant.</li>\n<li><code>[^$_]</code> takes a number of elements from the sequence equal to the argument passed to the function.</li>\n<li><code>.join</code> joins those elements into a single string.</li>\n</ul>\n"},{"answer_id":252406,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252406#252406","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 18 bytes</h1>\n<pre><code>Ｉ⮌Ｅ⊘⊕ＬθＥ⊘⊕Ｌθ⊟§θ⁺ιλ\n</code></pre>\n<p><a href=\"https://tio.run/##jYpLCsIwEECvkuUUIjhp6wdX4saCQnEbsghtsIWYtmks3j5OgwdwYGDee9N02jeDtjHWvncBLnoO8DCL8bOBux7hqu1iWqhc483LuED3zbhn6GDKsoyzf37qYYRzqFxrPjAR2vcMPWc2@80pRimlQMWZxB1nQqQLOcM9Ub4SaRS0BxJFypxRxJz2SK5cHT1Qx4J4uzJFapgaSUyyVErFzWK/\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Takes input from bottom left to top right. Explanation:</p>\n<pre><code>      θ             Input array\n     Ｌ              Length\n    ⊕               Incremented\n   ⊘                Halved\n  Ｅ                 Map over implicit range\n           θ        Input array\n          Ｌ         Length\n         ⊕          Incremented\n        ⊘           Halved\n       Ｅ            Map over implicit range\n              θ     Input array\n             §      Indexed by\n                ι   Outer index\n               ⁺    Plus\n                 λ  Inner index\n            ⊟       Pop from list\n ⮌                  Reversed\nＩ                   Cast to string\n                    Implicitly print\n</code></pre>\n"},{"answer_id":252404,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/252404#252404","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 19 bytes</h1>\n<pre><code>J&quot;aeiou&quot;smO?%d2J-GJ\n</code></pre>\n<p><a href=\"https://pythtemp.herokuapp.com/?code=J%22aeiou%22smO%3F%25d2J-GJ&amp;test_suite=1&amp;test_suite_input=3%0A5%0A7&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n<h5>Explanation:</h5>\n<pre><code>J&quot;aeiou&quot;smO?%d2J-GJ  | Full code\nJ&quot;aeiou&quot;smO?%d2J-GJQ | with implicit variables\n---------------------+--------------------------------------------------------\nJ&quot;aeiou&quot;             | J = &quot;aeiou&quot;\n         m         Q | For each d in [0...input):\n          O          |  Pick a random letter from\n               J     |   J\n           ?%d2      |   if d is even else\n                -GJ  |    the lowercase alphabet minus J (i.e. the consonants)\n        s            | Print the concatenated results\n</code></pre>\n"},{"answer_id":252375,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/252375#252375","body":"\n<h1><a href=\"https://www.lexurgy.com/sc\" rel=\"nofollow noreferrer\">Lexurgy</a>, 30 bytes</h1>\n<pre class=\"lang-bash prettyprint-override\"><code>s:\n[]$1 ([]*)$2 []$3=&gt;$3 $2 $1\n</code></pre>\n"},{"answer_id":252370,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/252370#252370","body":"<h1><a href=\"http://golfscript.com/nibbles/index.html\" rel=\"nofollow noreferrer\">Nibbles</a>, 5 bytes (10 nibbles)</h1>\n<pre><code>:`(\\@:`)\\$\n</code></pre>\n<p>Word separator is newline character.</p>\n<pre><code>:`(\\@:`)\\$$ # (code with implicitly-added final $)\n            # implicit map over lines of input:\n:           # joined\n `(         # first character of\n   \\@       # reversed word\n            # (and save leftover of reversed word in variable $)\n            # with\n     :      # joined\n      `)    # all but first character of\n        \\$  # reversed leftover of reversed word\n            # with\n          $ # first character of leftover of reversed word\n            # (so, first character of the original word)            \n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/tNC2d.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/tNC2d.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":252369,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/252369#252369","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 10 bytes</h1>\n<pre><code>wm§:→oṙ1hw\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/vzz30HKrR22T8h/unGmYUf7////i8sQChZKMVIW0zKLiEoXEvBSFnEQgIye1pCS1qFghP00hNTE5Q6E8vygFAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>wm§:→oṙ1hw\n m       w  map over each word\n  §:        concatenate the\n    →       last char\n     o  h   and the rest\n      ṙ1    rotated\nw           join on spaces\n</code></pre>\n"},{"answer_id":236101,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/236101#236101","body":"<h1>Zsh, 39 bytes</h1>\n<p>Major bug fixed. <a href=\"https://tio.run/##HYzBboMwEETv/oqRipT2kAM9BlT1P0oOW7PGSMYma1cQAt9ODZfVvpmnWaLd40Tj@8drN0EwV3VdF/PPtbwXr/lW3oq3@fq55aS8r@vZ7ZsyWVfAKL1PBpcvXKpjBMX3mgRN49GgYm2D2pQyOLtkGaaXmEC@haP8OE6JJSIYMGmLKUibdcvOhQPcQYmzqSlyzDBK6ISGofcdxr9lcRzPOR1aRhecyU7vQeiE2WNgasOUsyc9IaRZk2Si33we@z8\" rel=\"nofollow noreferrer\">Try it Online</a>.</p>\n<pre class=\"lang-bash prettyprint-override\"><code>for x;&lt;&lt;&lt;$x[-1]${x:1:$#x-2}$x[1]||&lt;&lt;&lt;$x\n</code></pre>\n<p><s><sub><a href=\"https://ato.pxeger.com/run?1=JY9BasMwEEX3OsUndUmy8CK7Qo3Te7RZDPLIMsiSkRRM7Pgk2RhKe42ueojeprLNLGbe5_FhHp9D0PN36Kk7HL-uUeUvP8p52NeiKDL7np8u2ZiN9uk8PZ-nFJwum_X3qw7HUbDUDrnFLntDWZbYiaUKie6IHvsPu8cyqygmIRRWIWqGanyIIFvBUDoMx8g-wCkwSY3e-Srpmo1xC5iFIidTUuCQoPOu9tS2ja3RXYfBcFjrpKsYtTMqOY0FofbMFi1T5fqU3egGT5Il-e2Zed72Pw\" rel=\"nofollow noreferrer\">31 bytes</a></sub></s>\n  <s><sub><a href=\"https://tio.run/##HYzBboMwEETv/opRipT2wIEeU4TyH20OK7PGSGaN1q5QSPl2atBc5o2eZk1@TwvN7x@v3UWFfLVtW8l33Tyql9yaW/Um9edWluaxb8YVz7D1EbXgUt3RdR0u5nhAoT9kxfVHrjhyimYzxuEUsme4UVMGSY9ApQTOmTUhOjBZjyVqX3TPIcQDwkGZi2kpcSowaxyUpmmUAfPvugZO552NPWOIwRVnFBAGZRZMTH1cyvakJ5QsW9L9Hw\" rel=\"nofollow noreferrer\">32 bytes</a></sub></s>\n  <s><sub><a href=\"https://tio.run/##HYxBDsIwDATvecUKIQQHDpypEF8xqdNUSuPKCVQt4u3F7cXaWY@9lLiWicbz5bsGUeS78qdpmuPtdCqxD3X9uWBLxz4KrozDA8fnwW03FrD37udcwF7VyAi9lgrKLRJZSFwra4EEMPmISbQ1PXJKskHaqLKZngoXg1GlUxqGPncY38uSuOzvvLSMTlIwp88gdMqcMTC1Mlk30wwlz57UiF42/PoH\" rel=\"nofollow noreferrer\">bugged</a></sub></s></p>\n"},{"answer_id":252306,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/252306#252306","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$8\\log_{256}(96)\\approx\\$</span> 6.585 bytes</h1>\n<pre><code>F@p{^2mC\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJGQHB7XjJtQyIsIiJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Outputs an infinite list of Mersenne primes.</p>\n<pre><code>F@p{^2mC\n      mC # Infinite list of counting numbers\n    ^2   # 2^x\n   {     # Decrement\nF@       # Filter for...\n  p      # Primality\n</code></pre>\n"},{"answer_id":252296,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/252296#252296","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 2 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>àV\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=4FY&amp;input=NSAy\" rel=\"nofollow noreferrer\">Try it out here</a></p>\n"},{"answer_id":252282,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252282#252282","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 78 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>N=k=input()\nwhile k:\n k-=1;i=n=N\n while i:i-=1;n=min(k&lt;&lt;i^n,n)\n if n&lt;1:print k\n</code></pre>\n<p><a href=\"https://tio.run/##JYzBCsIwEAXv7yuWnlpQaGKiGLO/0E/wIpEu0TVIRP36SO1pYAamfOv8UNves9wSmZA@6dJ1XZs4s2h51X7A2nIA5S2bk7DyBFqtBFmc8l20zzHKWTc6gORKGk0oT9FKuf2JZWzh4LGH9dgd4SzMOMIf3A8\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n<p>Prints the factors backwards, excluding the input itself.</p>\n<p>The idea is to test divisibility using a carryless analogue of long-division to compute the remainder and see if it's zero.</p>\n<p>The number <code>k</code> is a factor of <code>n</code> if we can xor some collection of leftward bit-shifts of <code>k</code> onto <code>n</code> to get zero. It suffices to use the greedy strategy of making <code>n</code> as small as possible at each step, which is achieved by clearing the leftmost bit of <code>n</code> (without introducing larger-valued bits) by taking the bit-shift of <code>k</code> whose leftmost bit aligns with that of <code>n</code>.</p>\n<p>The code achieves this by taking the bit-shifts <code>k&lt;&lt;i</code> for some large <code>i</code> counting down to <code>0</code>, and checking if xor-ing this value onto <code>n</code> makes <code>n</code> smaller.</p>\n<p>An alternative approach to repeatedly try to clear the rightmost bit of <code>n</code> while shifting <code>k</code> leftward.</p>\n<p><strong><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 79 bytes</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>N=k=input()\nwhile k:\n n=N;c=k=k-1;exec&quot;n^=c*(n&amp;c&amp;-c&gt;0);c*=2;&quot;*N\n if n&lt;1:print k\n</code></pre>\n<p><a href=\"https://tio.run/##JYxBCsIwFAX37xQhi9IGCk1sBRPjEXIEN59IQ@QbJKKePmpdzWKGKe@63ti055quUWgbX5GklC347BOXR@0H/F22EOyDo6/Jo3ZbyWdPqueOupFO0@BIeeOkChDpIviobbknriK3jfidDWYs2MMs2B0wG@hp@gA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252280,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/252280#252280","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 39 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>n,k=input()\nB=2&lt;&lt;n\nprint(B+1)**n/B**k%B\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/pfnpGZk6pgaJVakZqspKT0P08n2zYzr6C0REOTy8nWyMYmj6ugKDOvRMNJ21BTSytP30lLK1vV6T9IraGBjiEXkDDiMtAx4DLVMQYA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n<p>A full program, as the challenge asks for. The method is explained in <a href=\"https://codegolf.stackexchange.com/a/169115/20260\">this tip</a>.</p>\n"},{"answer_id":252277,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/252277#252277","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 58 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func b(n,k int)int{if k&lt;1{return 1}\nreturn b(n-1,k-1)*n/k}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY47DoMwDIZncgqLiZTQNlvF4w7dOwEiyEkxKAoT4iRdUKUeokfpbRoekl_6bP2_X--2X75DWZuybaArkRh2Q28dhKpz4Wd0Krn9UjVSDVVEwgCS4z4nVGByOdnGjZZAzuyY_FUihUkkP9HFzIfCY1NY9SMOEwtUbwHTQmaYF_KaYRx7uFG9Up0XmOkdBv6R8916zydFKLSo1sq5X83Mx2GxLHv_Aw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h3>Alternative using <code>math.Gamma()</code>, 82 bytes</h3>\n<pre class=\"lang-go prettyprint-override\"><code>import.&quot;math&quot;\nfunc b(n,k float64)float64{g:=Gamma\nreturn g(n+1)/(g(k+1)*g(n-k+1))}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY5NCoMwEIXXzSmCq6T-VKGU4s-629IbRDFpokkkxJV4km6k0EP0KL1NExWGeTPzwXvzejO9fAfSdIS1UBKuAJeDNhYGVNrgM1oaX3-P7ZYEkthnAOioGlgjFXWQ9prYyxnvOrG8uhEpCTCtHY2CDKkwwyfEUOf06NbYD3jencnq5XMRhhM4UG0gz6ssSQteVlnqNQwdWInYiCgrXojtfHBvJnfDle0V4pGIat8xdmgGrvagZdn0Dw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252274,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/252274#252274","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, 62 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func p(n int)(p int){i:=1\nfor;i&lt;=n;i++{if n%i&lt;1{p+=i}}\nreturn}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY1BCsIwEEXXzSmGgpCQKhY30jauPIBXKKUpg3YSQroKOYmbIngIj-JtTGtXb_H57z1fg5k_tu3u7dDD2CIxHK1xHnI9-vw9eb0_fy96og4sJ0DygtsVAStVMm1cjY2iGqUMqIF22JTBSoUxMtf7yVHcLNfVsjS4gMCydAWESkFZJzZwOiZKuUxZih9uLmUexLFIaRSCZZFtrnn-8wc\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>-2 bytes compared to my answer to <a href=\"https://codegolf.stackexchange.com/a/252256/77309\">Product of Divisors</a> via use of Go's 0-initialization for variables.</p>\n"},{"answer_id":252256,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/252256#252256","body":"\n<h1><a href=\"https://go.dev\" rel=\"nofollow noreferrer\">Go</a>, <s>65</s> 64 bytes</h1>\n<pre class=\"lang-go prettyprint-override\"><code>func p(n int)int{p,i:=1,1\nfor;i&lt;=n;i++{if n%i&lt;1{p*=i}}\nreturn p}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LY1BCsIwEEXXzSmGgtCYKAY30jbgwgN4hVKaMminIaSrkJO4KYKH8CjexlS7GN5i-O89nv04v23T3pq-g6FBYjjY0XnIzeDz1-TN7vQ5m4lasAUBkufpgpVYaiUVM6OrsNZUoRABDdAGaxXsVmOMzHV-cgQ2rp7Lz7NUCg6BZWkMCKUGVSXWcDwkCrG8spTfX11q3alAmeLIOcsiW13z_OcX\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h3>Ungolfed</h3>\n<ul>\n<li>-1 swapping <code>==0</code> for <code>&lt;1</code> (@Steffan)</li>\n</ul>\n<pre class=\"lang-go prettyprint-override\"><code>func product(s []int) int {\n&#9;p := 1\n&#9;for _,e := range s {\n&#9;&#9;p *= e\n&#9;}\n&#9;return p\n}\nfunc divisors(n int) (d []int) {\n&#9;for i := 1; i &lt;= n; i++ {\n&#9;&#9;if n % i == 0 {\n&#9;&#9;&#9;d = append(d, i)\n&#9;&#9;}\n&#9;}\n&#9;return d\n}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=bZBBSgQxEEXXySk-A0LitDLiRpzJHVy4E5HQSYZi7CSk026GPombRvAQXsA7eBvTmXF04aY-9Qver6rXt22YPqJud3pr0WnynLoYUsbCdXnxPmR3cfP16QbfIqZghjaLHg-P5LNEKdhzFnGrcMWZCwlPjZ27pH3B9fO0jM8VLGcjZ8nmIXlEPvJKNPRCfUi98KhAYX7Q-wOOKnpddKPgiy6XlUkOHmfFVgqr6jADBR2j9UaYBiSLN_4NNXw8XnNfs-dbxX9BuF79BpUnXN6lstKzF9ScXnBanKSUc8qRPU0H_QY\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252263,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/252263#252263","body":"<h1><a href=\"https://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 26 bytes</h1>\n<pre><code>{none flat $_ »+«[Z] $_}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/Oi8/L1UhLSexREElXuHQbu1Dq6OjYoHs2v/FiZUKSirxeumZxSUamgq2dgrV9mkgGSWFtPwiBQ0NQx0g1NRBo4EMDQMdA7AIiDYA0rqGYAZEStcISBuBuP8B\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>$_</code> is the input matrix, in the form of a list of lists of integers.</li>\n<li><code>[Z] $_</code> is the transpose of the input matrix.</li>\n<li><code>»+«</code> adds the input matrix to its transpose.</li>\n<li><code>flat</code> flattens the matrix into a single list of numbers.</li>\n<li><code>none</code> converts that list of numbers into a junction which is true if and only if none of the numbers is truthy, that is, nonzero.</li>\n</ul>\n<p>The none-junction is returned.  It is truthy only if adding the matrix to its transpose results in a matrix containing all zeroes.</p>\n"},{"answer_id":252243,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/252243#252243","body":"<h1><a href=\"http://www.swi-prolog.org\" rel=\"nofollow noreferrer\">Prolog (SWI)</a>, <s>60</s> 56 bytes</h1>\n<p><em>-4 bytes thanks to @Steffan</em></p>\n<pre><code>N+X:-bagof(M,(between(1,N,M),N mod M&lt;1),L),sumlist(L,X).\n</code></pre>\n<p><a href=\"https://tio.run/##HcuxCoMwFAXQXwlO7@FNaQpSkCLorJkFcVCqIhgTTIqbv56Wjmc47rCbXaQ/1xh12uZyHBY7UwMap3BO004KGg1DC2PfonkpRs3wH7OtPlCNlm8xl2Zwf3dlXxRUphVme5ghUHI5IQtxuWtP0JWoemZ0T6gMjzsUsv73vw\" rel=\"nofollow noreferrer\" title=\"Prolog (SWI) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":209087,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209087#209087","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>49</s> 47 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.List \nf x=x==transpose(map(0-)&lt;$&gt;x)\n</code></pre>\n<p><a href=\"https://tio.run/##HcYxDoAgDADA3Vd0cNAEDO7i5OgPCEMHjY2CBDrw@2qY7i4s9/E8IhTSmxk2ZJx2KgzdCdVWazljLOktxxAwDUaPS7/WUQJSBAspU2To4XTOKKNmr5rmV88tHuQD\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<ul>\n<li>saved 2 thanks to @Unrelated String</li>\n</ul>\n<p>My first Haskell.<br />\nFunction tacking a matrix and checking if input is equal to input mapped to (0-value) and transposed</p>\n"},{"answer_id":252254,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/252254#252254","body":"<h1><a href=\"http://www.swi-prolog.org\" rel=\"nofollow noreferrer\">Prolog (SWI)</a>, 60 bytes</h1>\n<pre><code>A+N+S:-A&gt;0,A-1+N+Q,(N mod A&lt;1,S is Q*A;S=Q);S=1.\nN+S:-N+N+S.\n</code></pre>\n<p><a href=\"https://tio.run/##KyjKz8lP1y0uz/z/31HbTzvYStfRzkDHUdcQyAnU0fBTyM1PUXC0MdQJVsgsVgjUcrQOtg3UBBKGelxg5X4gXXr/rXQVjEy0/XQUyosyS1Jz8jT8NPX@AwA\" rel=\"nofollow noreferrer\" title=\"Prolog (SWI) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252247,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/252247#252247","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>KΠ\n</code></pre>\n<p>Explanation:</p>\n<pre><code>K  # Gets the divisors of a number\n Π # Product of array\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJLzqAiLCIiLCIzMCJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":252246,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/252246#252246","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 40 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(==)&lt;*&gt;foldr(zipWith(:).map(0-))z\nz=[]:z\n</code></pre>\n<p><a href=\"https://tio.run/##XY2xDsIgEIZ3nuIGBzBggG6N@AbODshAVCyRq6TtxMOLtHEyl8v333eX3ODn1yOlGsy1UmPYcX8K73SfaIn5EpeB9uyAPlMpGCukGOv6UlGBAWsVb@X4Hx1Bva0ll5teKRuF2oIDgt3vQOjm9SoJ@jg2236dIU9xXGC3DhDAouKAunXn6ucWkn/OVdxy/gI\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<p>Uses <a href=\"https://codegolf.stackexchange.com/a/111362/20260\">this tip for shorter transpose</a> and the idiom of <code>(==)&lt;*&gt;</code> to check invariance under an operation.</p>\n"},{"answer_id":252244,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/252244#252244","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.matrices</code>, 19 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ dup flip mneg = ]\n</code></pre>\n<p><a href=\"https://tio.run/##bY6xCsIwFEX3fMX9gZa0oyK4iYuLOIlDia8aTGP6kg5S/PYYY7rJhcs7nDu8vlPhyfF03B92KzyILRl4GieyijyGLtzrVKy/5JhCeDnWNmAtxIwZTc5b4P@dKM8gUxaXQRaomh8sS4mqLapFEfGM6@TQG@0wWLphg0tMP21ReyhDHccP\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>dup</code> make a copy of the input</li>\n<li><code>flip</code> transpose it</li>\n<li><code>mneg</code> negate it</li>\n<li><code>=</code> are they equal?</li>\n</ul>\n"},{"answer_id":209239,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209239#209239","body":"<h1>Google Sheets, <s>90</s> <s>88</s> 41</h1>\n<p>(Now with lambdas)</p>\n<p>Closing parens discounted.</p>\n<h2>Named Functions (name, args, and formula text all count):</h2>\n<div class=\"s-table-container\">\n<table class=\"s-table\">\n<thead>\n<tr>\n<th>Name</th>\n<th>args</th>\n<th>Formula</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>P</code></td>\n<td><code>a</code>, <code>b</code></td>\n<td><code>a+b</code></td>\n</tr>\n<tr>\n<td><code>Q</code></td>\n<td><code>a</code></td>\n<td><code>MAP(a,TRANSPOSE(a),P)</code></td>\n</tr>\n</tbody>\n</table>\n</div><h2>Formula:</h2>\n<pre><code>=SUM(Q(A1:C3))\n</code></pre>\n<p>No, I cannot currently use <code>ADD</code> instead of <code>P</code> as it is not a lambda.</p>\n<h2>How it Works:</h2>\n<p>Add the matrix to its transpose. If the resulting matrix is all 0's, then the sum of all elements is 0, which means we the two are equal.</p>\n<p>Return 0 if equal, some positive number otherwise.</p>\n"},{"answer_id":252242,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/252242#252242","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$3\\log_{256}(96)\\approx\\$</span> 2.469 bytes</h1>\n<pre><code>*rk\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyIqcmsiLCIzMCJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Multiplication analog of <a href=\"https://codegolf.stackexchange.com/a/252241/107299\">the addition version</a>.</p>\n"},{"answer_id":252241,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/252241#252241","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$3\\log_{256}(96)\\approx\\$</span> 2.469 bytes</h1>\n<pre><code>+Sk\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyIrU2siLCI1Il0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre><code>+Sk\n S  # Sum\n  k # The divisors\n+   # And add the input\n</code></pre>\n"},{"answer_id":252225,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252225#252225","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>70</s> 68 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{(k=0..n).select{|b|k.any?{|a|r=0\nk.map{|x|r^=a*(b&amp;2**x)}\nr==n}}}\n</code></pre>\n<p><a href=\"https://tio.run/##VY7BboMwEETv/opRDpWNXGQvXsAH2g@JUgkiolS0KKKpRAR8O13UC/FtxzPzZvhtHuulWl/f@kl3lUvT3qQ/7Vd7vk9zM3dp3T/ep7meh8qpLv2ub9M8zsNHVSe6eaEkGc2ihqrql2VZj2SDZZtbYptFG8h65ywX4ZS29fm6JRVuw2d/x2gvx/FkD@qgllUR/p/2BpqMCruboINRvFMyaDYqf/KIlhtFvO8RUxb3MYb3oAidRWHQPl/AB5AXluBl9e5LdAY7uZyTIUV4wjJyCUd4t5VLiRdKCSJQsbEyBxkRGCGCA7hEUaLMEB1iKSlx57mQHUhMVBZiFJZghOWCDPkD\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n<ul>\n<li>Saved 2 thanks to @G B reminding me that <em>f=</em> doesn't need to be counted.</li>\n</ul>\n<p>Very inefficient lambda function.</p>\n<p>Uses the range (0..input) three times:\ncheck each number up to input, try carryless multiply it for each and bitmask 2nd operand by 2^ each.</p>\n"},{"answer_id":252198,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252198#252198","body":"<h1><a href=\"https://pari.math.u-bordeaux.fr\" rel=\"nofollow noreferrer\">PARI/GP</a>, 55 bytes</h1>\n<pre><code>n-&gt;[eval(lift(d))|d&lt;-divisors(Mod(Pol(binary(n)),x=2))]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m728ILEoMz69YMHiNAXbpaUlaboWN83zdO2iU8sSczRyMtNKNFI0NWtSbHRTMssyi_OLijV881M0AvJzNJIy8xKLKjXyNDV1KmyNNDVjodqDEgsKcoDiCrp2CgVFmXklQKYSiKOkkAZWrRBtpKNgoqNgqqNgpqNgBKSMLYECQEFDAwOgsDlIzsAEyLQwsTAzMYjVhJi8YAGEBgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>This is just factoring in the polynomial ring <span class=\"math-container\">\\$\\mathbb{F}_2[x]\\$</span>.</p>\n<hr />\n<h2><a href=\"https://pari.math.u-bordeaux.fr\" rel=\"nofollow noreferrer\">PARI/GP</a>, 56 bytes</h2>\n<pre><code>n-&gt;[d|d&lt;-[1..n],!(g(n)%g(d))]\ng(n)=Mod(Pol(binary(n)),2)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m728ILEoMz69YGW0km6xmUmuUuziNAXbpaUlaboWNy3ydO2iU2pSbHSjDfX08mJ1FDXSNfI0VdM1UjQ1Y7lAbFvf_BSNgPwcjaTMvMSiSqCIpo6RJlR_UGJBQQ5QTEHXTqGgKDOvBMhUAnGUFNLAKhWijXQUTHQUTHUUzHQUjICUsSVQAChoaGAAFDYHyRmYAJkWJhZmJgaxUJMXLIDQAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":252235,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/252235#252235","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, 2 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>─Σ\n</code></pre>\n<p>One of many 2-bytes answers in a code-golf language.</p>\n<p><a href=\"https://tio.run/##y00syUjPz0n7///RlIZzi///N@cyNOUyMuAy5DIFAA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>─   # Get a list of divisors of the (implicit) input-integer\n Σ  # Sum them together\n    # (after which the entire stack is output implicitly as result)\n</code></pre>\n"},{"answer_id":252233,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/252233#252233","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, 53 bytes</h1>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f(n:i32,k:i32)-&gt;i32{if k&lt;1{1}else{f(n-1,k-1)*n/k}}\n</code></pre>\n<p>This is essentially the same as the Python code in some of the previous answers, and computes the binomial coefficient through recursion.</p>\n<p><a href=\"https://tio.run/##FcqxCoAgEADQub7CnLxQwqKlon9pSBDtCK3puG@3XN700puf4lBch0cFgtrmTh6fiJ2SxFILp2Y9Aqwt1@YULn4adaiC2X/JOxE2S5bPmE/6h7E6GAs9DoG5lA8\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252022,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252022#252022","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, <s>  4  </s> 3 bytes</h1>\n<pre><code>≡ⁿℕ\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r//1HnwkeN@x@1TP3/P9pQR8FAR8FcR8FMR8FYR8EQyDc0BWIdBUsdBSOImI6CKYxtAlZoARY0tIj9HwUA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<p>Works for any list size and any integer magnitudes.</p>\n<p><em>Thanks to UnrelatedString for saving 1 byte.</em></p>\n<h3>Explanation</h3>\n<pre><code>≡ⁿ     We want a variable different from all elements in the input\n  ℕ    It must be a non-negative integer\n</code></pre>\n"},{"answer_id":252218,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252218#252218","body":"<h1>Java 8, <s>120</s> <s>119</s> 117 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>n-&gt;{for(int x=n,y,r,i;x&gt;0;)for(y=x--;--y&gt;0;System.out.print(r==n?x+&quot; &quot;+y+&quot; &quot;:&quot;&quot;))for(r=i=0;i&lt;32;)r^=(y&gt;&gt;i&amp;1)*x&lt;&lt;i++;}\n</code></pre>\n<p>-2 bytes thanks to <em>@ceilingcat</em>.</p>\n<p>Outputs the results space-delimited to STDOUT in pairs, excluding <code>1</code>/<code>n</code> (to save a byte). May contain duplicates if a pair of the same integer XOR-multiplies into the input (e.g. <code>n=4</code>).<br />\nLimited to <code>n=2147483647</code>, but could be raised to <code>n=9223372036854775807</code> by changing <code>int</code>/<code>32</code> to <code>long</code>/<code>64</code> (although already times out for test case <code>n=848640</code> anyway, tbh..)</p>\n<p><a href=\"https://tio.run/##ZZBBboMwEEX3OcXIiwoXGzkktCrG9ATNJssolVxCKqfERIakWIizU5vSLlovRprvP6M3/yRvkp4OH2NRyaaBF6l0vwBQui3NURYlbHwLcKvVAYrA6aAxd9KwcKVpZasK2IAGMWqa98faTJ5OaGKJIYp3OePYy1Z0lHJKrRO2tmnLc1Rf2@hinD8wQujnLkSAQutrihCepoxQgnGVrWKOzasIbJ6ruyW@77JMhSEfRu45Lte3ynHMOBPr2V0SbFu3/X23l/j7ih88lery0x@52/cxWZOEPJA4Iasnso7JkjGSPDqRrdkwDwL8Q1YhSgFNWfinI5fOb/fXXelg/hum7IbxCw\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-java prettyprint-override\"><code>n-&gt;{                         // Method with integer parameter and no return-type\n  for(int x=n,y,r,i;         //  Temp-integers\n      x&gt;0;)                  //  Loop `x` in the range [n,0):\n    for(y=x--;--y&gt;0          //   Inner loop `y` in the range [x,0):\n        ;                    //     After every iteration:\n         System.out.print(   //      Print:\n          r==n?              //       If `r` is equal to input `n`:\n           x+&quot; &quot;+y+&quot; &quot;       //        Print `x` and `y` with space delimiters\n          :                  //       Else:\n           &quot;&quot;))              //        Print nothing instead\n      for(r=i=0;             //    Reset `r` and `i` both to 0\n          i&lt;32;)             //    Inner loop `i` in the range [0,32):\n        r^=                  //     Bitwise-XOR `r` by:\n           (y&gt;&gt;i             //      Bitwise right-shift `y` by `i` positions\n                &amp;1)          //      Modulo-2 that (using Bitwise-AND by 1, so we won't\n                             //                     need parenthesis)\n                   *x        //      Multiply that by `x`\n                     &lt;&lt;i     //      Bitwise left-shift that by `i` positions\n                        ++;} //      And increase `i` by 1 afterwards with `i++`\n</code></pre>\n"},{"answer_id":252231,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/252231#252231","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 27 bytes</h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;x{(1..x).sum{1[x%_1]*_1}}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsGiNNulpSVpuha7de0qqjUM9fQqNPWKS3OrDaMrVOMNY7XiDWtrISpuGheUlhQrpEWbx3JBWYamcKaRAZyJEDSMhWhdsABCAwA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Abuses Ruby's nth bit operator.</p>\n"},{"answer_id":252203,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252203#252203","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, <s>54</s> 53 bytes</h1>\n<pre><code>BitXor@@(#~NumberExpand~2#2)&amp;~Array~{#,#}~Position~#&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b73ymzJCK/yMFBQ7nOrzQ3KbXItaIgMS@lzkjZSFOtzrGoKLGyrlpZR7m2LiC/OLMkMz@vTlntf0BRZl5JtLKuXZqDcqxaXXByYl5dNZeRDpeJDpepDpeZDpcRkDK25Kr9DwA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Returns all pairs that xor-multiply to the input.</p>\n<p>Loosely based on <a href=\"https://codegolf.stackexchange.com/a/50307\">alephalpha's answer</a> to the multiplication question. <a href=\"https://reference.wolfram.com/language/ref/NumberExpand.html\" rel=\"nofollow noreferrer\"><code>NumberExpand</code></a> was introduced in 2016 with version 11.0.</p>\n"},{"answer_id":252020,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252020#252020","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>r</code>, <s>7</s> <s>5</s> 4 bytes</h1>\n<pre><code>₇ʀFg\n</code></pre>\n<p><em>-2 bytes thanks to lyxal</em></p>\n<p><em>-1 byte thanks to Steffan</em></p>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLigofKgCRGZyIsIiIsIlszLCAxLCAwLCAxLCAzLCAzXSJd\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://vyxal.pythonanywhere.com/#WyJyQSIsIiIsIuKCh8qARmciLCIiLCJbMV1cblswXVxuWzIsIDBdXG5bMywgMSwgMCwgMSwgMywgM11cbltdXG5bMSwgMiwgM11cbls1LCA0LCAxLCA1LCA0LCA4LCAyLCAxLCA1LCA0LCAwLCA3LCA3XVxuWzMsIDIsIDEsIDBdXG5bMCwgMCwgMSwgMSwgMiwgMiwgM11cblsxLCAwLCA3LCA2LCAzLCAxMSwgMTUsIDEsIDksIDIsIDMsIDEsIDUsIDIsIDMsIDQsIDYsIDgsIDEsIDE4XSJd\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p>Explanation:</p>\n<pre><code> ʀ    # The range 0 to\n₇     # 128\n  F   # Filter out items from the range that are in the input list\n      # (The r flag swaps the arguments)\n    g  # Get the lowest one\n</code></pre>\n"},{"answer_id":252213,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252213#252213","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 18 bytes</h1>\n<pre><code>'£?ƛ0$b(dn¥*꘍)?=;a\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCInwqM/xpswJGIoZG7CpSrqmI0pPz07YSIsIiIsIjM5Il0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Port of 05AB1E.</p>\n"},{"answer_id":252210,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252210#252210","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 48 bytes</h1>\n<pre><code>ＮθＦθ«≔θηＦ⮌×⊕ιＸ²…·⁰⁻Ｌ↨θ²Ｌ↨⊕ι²≔⌊⟦η⁻｜ηκ＆ηκ⟧η¿¬η⟦Ｉ⊕ι\n</code></pre>\n<p><a href=\"https://tio.run/##XY8/iwJBDMVr91NMmYEVxKvESq0WPE/ETq6YW@NOcCd7zp@1ED/7XDhXEFOF915@SWprfN2ZNueKf1PcJPeDHi56Xpw6r6RRt2K0CIEahkuprBijf2eHPfqAsCeHASquPTrkiEcgXaptdxXMtFRitClQjzvDDcKkVJ/EKcAauYkWlkYQwp1qGXrV3oESeJQajhEMueTgYJ/IJcUrBfzyINJZZgZhwceHor/18AGdFGy6CFZ4W08c4bAyIb5tlfy8uOf8Mcvjvv0D\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Outputs includes <code>1</code> and <code>n</code> as divisors. Explanation:</p>\n<pre><code>Ｎθ\n</code></pre>\n<p>Input <code>n</code>.</p>\n<pre><code>Ｆθ«\n</code></pre>\n<p>Loop up to <code>n</code>. (The loop variable is incremented whenever it is used effectively looping the trial factor from <code>1</code> to <code>n</code> inclusive.)</p>\n<pre><code>≔θη\n</code></pre>\n<p>Start with <code>n</code>.</p>\n<pre><code>Ｆ⮌×⊕ιＸ²…·⁰⁻Ｌ↨θ²Ｌ↨⊕ι²\n</code></pre>\n<p>Take all possible shifts of the trial factor up to and including the same length as <code>n</code>, highest first.</p>\n<pre><code>≔⌊⟦η⁻｜ηκ＆ηκ⟧η\n</code></pre>\n<p>Perform trial division by updating the running total with the XOR of the running total with the current shifted trial factor if this reduces it.</p>\n<pre><code>¿¬η⟦Ｉ⊕ι\n</code></pre>\n<p>If there was no remainder then output the trial factor.</p>\n"},{"answer_id":252209,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252209#252209","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 18 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>LʒULε0sbv·yX*^}Q}à\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/f59SkUJ9zWw2Kk8oOba@M0IqrDaw9vOD/f2NLAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##AUoAtf9vc2FiaWX/dnk/IiDihpIgIj95wqn/TMqSVcKuTM61MHNidsK3eVgqXn3CrlF9w6D/fSz/WzIsNCw1LDYsMjUsMzksNDIsMTAwXQ\" rel=\"nofollow noreferrer\">verify (almost) all test cases</a> (the largest two test cases are omitted because they'll time out).</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>L              # Push a list in the range [1, (implicit) input]\n ʒ             # Filter it by:\n  U            #  Pop and put the current integer in variable `X`\n  L            #  Push a list in the range [1, (implicit) input] again\n   ε           #  Map it to:\n    0          #   Push a 0\n     s         #   Swap so the current map-integer is at the top\n      b        #   Convert it to a binary string\n       v       #   Loop over each bit `y` of this string:\n        ·      #    Double the current integer\n         y     #    Push bit `y`\n          X*   #    Multiply it by integer `X`\n            ^  #    Bitwise-XOR the two integers together\n       }Q      #   After the loop: check if it's equal to the (implicit) input\n   }à          #  After the map: max to check if any was turthy\n               # (after which the filtered list is output implicitly as result)\n</code></pre>\n"},{"answer_id":252208,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/252208#252208","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 8 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Îbv·yI*^\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//cF9S2aHtlZ5acf//G5pwGRoDAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfWVC6H@D4qSyQ9srI7Ti/tfq/I@ONtAxjNWJNtQxApKWOgZA0gwsYqxjDCSNdEyBpLmOJUiNsY4hSMZUx9AcxDXRMQQpMbQEqzcz1jEzjo0FAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>Î         # Push 0 and the first input\n b        # Convert it to a binary string\n  v       # Loop over each bit `y` of this string:\n   ·      #  Double the current integer\n    y     #  Push bit `y`\n     I*   #  Multiply it by the second input\n       ^  #  Bitwise-XOR the two together\n          # (after the loop, the result is output implicitly)\n</code></pre>\n"},{"answer_id":252190,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252190#252190","body":"<h1><a href=\"https://v8.dev/\" rel=\"nofollow noreferrer\">JavaScript (V8)</a>, 69 bytes</h1>\n<p><em>-4 by using a single loop as in <a href=\"https://codegolf.stackexchange.com/a/252192/58563\">@jdt's C port</a></em><br />\n<em>-1 thanks to another suggestion from @jdt</em></p>\n<p>Prints all carryless factors, excluding 1 and the input itself.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>n=&gt;{for(p=n*n;--p;g(p/n|0,q=p%n)^n||print(q))g=p=&gt;p&amp;&amp;p%2*q^g(p&gt;&gt;1)*2}\n</code></pre>\n<p><a href=\"https://tio.run/##JY3NDoIwEITvPsVegBaLQsW/NNubV1/ASEJIQDysCxIuwLPXGi4zk282O@9yLL9V3/KQjBdXoyO0U/3pBSPFZJKETSN4T3OqOuSAZEHzzH1Lg@ikbJDRchhyoOOu8IfWZjLWizMPrSBXcFRwUqC9Ha4eeJilqcfn/LnZ@ZlbWb0EAVqYYP0a3QEhgi2QNFCLv66FD4t0Pw\" rel=\"nofollow noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n<p>Or <strong>68 bytes</strong> for a much slower version relying on arithmetic underflow:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>n=&gt;{for(p=n*n;--p;g(p/n,q=p%n)^n||print(q))g=p=&gt;p&amp;&amp;(p&amp;1)*q^g(p/2)*2}\n</code></pre>\n<p><a href=\"https://tio.run/##JY3NDoIwEITvPsVehBaLQsW/NMvNqy9gJGlIQDysCxIuwLPXEi4zk282Ox872F/ZNdzHw9VV6Ajzsfp2gpEiMnHMphZ8INUib0kWNE3cNdSLVsoaGXMOAsFBKqO2WA61jPTszFMryBScFJwVaG/Hmwcepkni8SV7bfZ@5W7LtyDAHEZY34YPQAhhByQNVGLRtfBhlu4P\" rel=\"nofollow noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n<h3>Commented</h3>\n<pre class=\"lang-javascript prettyprint-override\"><code>n =&gt; {            // n = input\n  for(            // loop:\n    p = n * n;    //   start with p = n²\n    --p;          //   decrement p until p = 0\n    g(            //   invoke g with:\n      p / n | 0,  //     floor(p / n)\n      q = p % n   //     q = p mod n\n    )             //   end of call\n    ^ n           //   XOR the result with n\n    || print(q)   //   print q if the result of g is equal to n\n  )               //\n    g = p =&gt;      //   g is a recursive function taking p:\n      p &amp;&amp;        //     stop if p = 0\n      p % 2 * q ^ //     XOR the result with q if the LSB of p is set\n      g(p &gt;&gt; 1)   //     recursive call with p right-shifted by 1\n      * 2         //     double the result to account for the shift\n}                 //\n</code></pre>\n"},{"answer_id":252207,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252207#252207","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 26 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f l=until(`notElem`l)(+1)0\n</code></pre>\n<p><a href=\"https://tio.run/##JYzBDoIwDIZfpQcPEmuyMRA8cPToExASFgJKLHMRfH1nW5K1a79/355@fY1EKU1AzTdsMx378N5uNC49ZceTzUxa/ByggcXHO8TPHDY4yAITtK3tsDVcOUp3aNFwOXS88bGY61hiwVh6zWSfDFZYqSREdKOyOLtl9c2Fv7OMS06ukqgvd8FZLUatcqWqY8RB16XfMJF/rOk8xPgH\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252204,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252204#252204","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>5</s> 4 bytes</h1>\n<pre><code>0ḟ1#\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9/g4Y75hsr/D7c/alrz/380F2e0YawOkDQAk0Y6ChCGsY6CIZANJoFsY7AgmAAKGMEETHUUTMBKIAwLsBScC9RtDkQw8yBSEOMNYGZDTIMbaAjTZQa21hCkwhSsyhKiCmY8hG0CVmgBMckilisWAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Doesn't use the bounds on the input.</p>\n<p>...am I missing something?</p>\n<pre><code>0       Starting with 0,\n  1#    find the first integer\n ḟ      which is not in the input.\n</code></pre>\n"},{"answer_id":252199,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/252199#252199","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>7</s> 6 bytes</h1>\n<pre><code>Bæc/ḂḄ\n</code></pre>\n<p><a href=\"https://tio.run/##DcwxCgIxEAXQfk7xWysziZmY1kMI1mIjewFLF0HwIBZiJStEtHLBe8xeZJzu8/j/73dddzBbjdftXFuv7WT6Hr5PbY/11N/1dZuOn/H8u8w2ZgGMQIyISBXBs7gIJSRkisjgQAUVkogTmMGxkGvBMhMv4Fj8oPqKK0nyopvkPw\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p><em>-1 thanks to Jonathan Allan</em></p>\n<p>Takes a list of <code>[a, b]</code>. (The dyadic equivalent is the very fun-looking <code>BæcḂḄɓB</code>.)</p>\n<pre><code>B         Convert a and b to their binary digits,\n æc/      and convolve them.\n    Ḃ     Take each mod 2\n     Ḅ    and convert from binary.\n</code></pre>\n"},{"answer_id":252202,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/252202#252202","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 6 bytes</h1>\n<pre><code>s∆ṁwfṁ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJz4oiG4bmBd2bhuYEiLCIiLCJbMSw0LDMsMl0iXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p><code>s</code>ort the input, get the <code>∆ṁ</code>iddle item(s), <code>w</code>rap in a list, <code>f</code>latten and get the <code>ṁ</code>ean of that. (<code>wf</code> is needed to handle cases where the list is of odd length)</p>\n<p>Or, without a trivial built-in</p>\n<h2><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 11 bytes</h2>\n<pre><code>L‹½₍⌈⌊$s$İṁ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJM4oC5wr3igo3ijIjijIokcyTEsOG5gSIsIiIsIlsxLjUsMS41LDEuNSwxLjUsMS41LDEuNSwxLjUsMS41LDEuNSwxLjUsLTUsMTAwMDAwLDEuMywxLjRdIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h2>Explained</h2>\n<pre><code>L‹½₍⌈⌊$s$İṁ\nL‹         # Length of the input - 1 (this accounts for 0 indexing)\n  ½        # halved\n   ₍⌈⌊      # a list of the ceiling and floor of that number\n     $s    # the input list sorted\n       $İ  # indexed at the positions in the ceil,floor list\n         ṁ # take the average of that\n</code></pre>\n"},{"answer_id":252200,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252200#252200","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, <s> 12 </s> 11 <a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">bytes</a></h1>\n<pre><code>B€æcþ`Ḃċ€BT\n</code></pre>\n<p>A monadic Link that accepts an integer and yields a list of integers.</p>\n<p><strong><a href=\"https://tio.run/##y0rNyan8/9/pUdOaw8uSD@9LeLij6Ug3kOcU8v//f2NLAA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong> Or see the <a href=\"https://tio.run/##y0rNyan8/9/pUdOaw8uSD@9LeLij6Ug3kOcU8l/ncPvRSQ93zlDx1oz8/99Ix0THVMdMx8hUx9hSx8RIx9DAAAA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">test-suite</a> (reduced set as code is slow).</p>\n<h3>How?</h3>\n<pre><code>B€æcþ`Ḃċ€BT - Link: integer, n\n €          - for each i in [1,n]:\nB           -   convert to binary\n     `      - use as both arguments of:\n    þ       -   table with:\n  æc        -     convolution\n      Ḃ     - modulo 2 (vectorises)\n         B  - convert n to binary\n        €   - for each row in the table:\n       ċ    -   count occurrences (of n in binary)\n          T - truthy indices\n</code></pre>\n"},{"answer_id":252201,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252201#252201","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 7 bytes</h1>\n<pre><code>WiNgUii\n</code></pre>\n<p>Takes input as separate command-line arguments. <a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJXaU5nVWlpIiwiIiwiIiwiMSAwIDcgNiAzIDExIDE1IDEgOSAyIDMgMSA1IDIgMyA0IDYgOCAxIDE4Il0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<h3>Explanation</h3>\n<pre><code>WiNgUii\nW        While\n i       a number (initially 0)\n  N      is an element of\n   g     the list of command-line args:\n    Ui     Increment the number\n      i  Output the final value\n</code></pre>\n"},{"answer_id":252192,"question_id":252189,"link":"https://codegolf.stackexchange.com/questions/252189/carryless-factors/252192#252192","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>89</s> 86 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>i;r(k,p){k=k?k%2*p^r(k/2,p*2):0;}f(n){for(i=n*n;--i;)r(i/n,i%n)^n||printf(&quot;%d &quot;,i%n);}\n</code></pre>\n<p><a href=\"https://tio.run/##TY5dDsIgEITfe4pNkyZQaUT8i5LGG3gBo4mp0pAqkhbjQ@Xq4lqtygvsN7PMFFlZFCFoWZOKWdpWebWqEpHaHYKhYDYVdMmlV8TQVl1qonOTGpllWlIchobpxNCdud9trY1TJE4OEHdQ@oAEznttCI3aCPC8gDs2brOFHFoQDCYMpgxmDARe4wUChCPOEc9R4@Blt4nZQLp13OTy/Yvb4mMwoJ3jndCnrNHWe75C3/ElYs8lNoU1/emK/E/26hoSxx/iIx8ehTrtyyZktyc\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p>Port of Arnauld's answer</p>\n<p>-2 bytes thanks to AZTECCO</p>\n<p>-2 bytes thanks to Arnauld</p>\n"},{"answer_id":252196,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252196#252196","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$5\\log_{256}(96)\\approx\\$</span> 4.116 bytes</h1>\n<pre><code>[FxmN\n</code></pre>\n<p><a href=\"https://fig.fly.dev/#WyJbRnhtTiIsIls1LDQsMSw1LDQsOCwyLDEsNSw0LDAsNyw3XSJd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Works for all numbers.</p>\n<pre><code>[FxmN\n   mN # All natural numbers [0, 1, 2, 3, ...]\n Fx   # Remove the inputs\n[     # Take the first one remaining\n</code></pre>\n"},{"answer_id":248952,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/248952#248952","body":"<h1><a href=\"https://github.com/Seggan/Fig\" rel=\"nofollow noreferrer\">Fig</a>, <span class=\"math-container\">\\$4\\log_{256}(96)\\approx\\$</span> <s>4.125</s> 3.292 bytes</h1>\n<pre><code>G:1'+\n</code></pre>\n<p>New language! Yay! This is a fractional byte language I've been advertising on TNB for a while now. It's pure printable ASCII, and has a <s>97</s> 96 char codepage. Although the spec is mostly written by now, this commit only has the bare minimum implemented for this challenge. To run this, check the README.\nIt will print Fibonacci numbers until your computer runs out of RAM. Explanation:</p>\n<pre><code>G1'+ - Takes no input\nG    - Generate an infinite list using initial terms...\n 1   - 1...\n  '  - And the generating function...\n   + - Addition (the initial terms are repeated to fit the arity)\n</code></pre>\n"},{"answer_id":252152,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/252152#252152","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, 5 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>►rg¶n\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjPz0n7///RtF1F6Ye25f3/DwA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>►     # Push 1000000\n r    # Pop and push a list in the range [0,1000000)\n  g   # Filter it by:\n   ¶  #  Is it a prime?\n    n # Join with newline delimiter\n      # (after which the entire stack is output implicitly as result)\n</code></pre>\n"},{"answer_id":252148,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/252148#252148","body":"<h1><a href=\"https://github.com/mousetail/CellTail/blob/main/README.md\" rel=\"nofollow noreferrer\">CellTail</a>, 165 bytes</h1>\n<pre><code>I=-1;O=N;N,-1,N:N,(1,1,1),N;999999..,N,N:N,N,N;A,(a,a,b),N:N,a,a+1;A,(a,b,0),N:N,(a+1,2),N;A,(a,b),N:N,(a,b,a%b),N;A,(a,b,c),N:N,(a,b+1,a%(b+1)),N;a,N,N:N,(a,1,a),N;\n</code></pre>\n<p>Should <em>eventually</em> produce the correct output, will take a very long time though.</p>\n<p><a href=\"https://mousetail.github.io/CellTail/#ST0tMTtPPU47TiwtMSxOOk4sKDEsMSwxKSxOOzk5OTk5OS4uLCBOLE46TixOLE47QSwoYSxhLGIpLE46TixhLGErMTtBLChhLGIsMCksTjpOLChhKzEsMiksTjtBLChhLGIpLE46TiwoYSxiLGElYiksTjtBLChhLGIsYyksTjpOLChhLGIrMSxhJShiKzEpKSxOO2EsTixOOk4sKGEsMSxhKSxOOw==\" rel=\"nofollow noreferrer\">Try it online</a></p>\n<p><a href=\"https://mousetail.github.io/CellTail/#ST0tMTtPPU47TiwtMSxOOk4sKDEsMSwxKSxOOzk5OS4uLCBOLE46TixOLE47QSwoYSxhLGIpLE46TixhLGErMTtBLChhLGIsMCksTjpOLChhKzEsMiksTjtBLChhLGIpLE46TiwoYSxiLGElYiksTjtBLChhLGIsYyksTjpOLChhLGIrMSxhJShiKzEpKSxOO2EsTixOOk4sKGEsMSxhKSxOOw==\" rel=\"nofollow noreferrer\">Try it online, numbers up to 1000 so it will actually complete in a few minutes</a></p>\n"},{"answer_id":252123,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252123#252123","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, 60 bytes (@Mukundan314)</h1>\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda x:x and zip(map(list.pop,x[::-2][::-1]),*f(x[:-1]))\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=NVBBasMwELz7FXtcGVmJA4HWRC8xpmyruBVY2sVRwO5Xesmlvfc5_U0lk1x2h9lhZtivH1nTB8fb7fuaxubp7zTaicKrI1i6BSg6-PSCgQQnf0lGWPTSd11zGMpsB6XrETNToLp7_PogPCeI1yAr0AWiVHfqjWWtCGymzJzdOWzLx4R73e41HvVRqcplRZ8lztM7ko67XXOosWlVXUdlEpcuqGDkGSL4uLm99N3zMFRst-OIJcq481kKQKeyrcwliLTTrJGtJWVomvBR_PGEfw\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<h2><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, 62 bytes</h2>\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda x:x and[*zip(map(list.pop,x[::-2][::-1]),*f(x[:-1]))]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=NZBBasMwEEX3PoWWIyErcSDQGpSLGFGmVZwILM3gKGD3Kt1k0256ot6mUppuZobP5_3PfHzxms-UbrfPax7bp5_DaCeMrx7F0i8Ckx_Ue2CIyDCFSzZMrJeh79udq7NzUqsRilJP6R6U7xCZ5izSNfIq8CISNw_pjXhtUNgimbnwKd5XSBm2uttq2Ou9lI0vjqFYfMAToE6bTbtT0HZSqSRNploGpBhpFkmEdKe9DP2zcw3ZEWqK8ccj1wN8AfJcI1B7TRrIWpQGpwmk_Kv8_4Bf\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Uses input format 1 (alternating upper and lower diagonals). Destroys the input.</p>\n"},{"answer_id":250098,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/250098#250098","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 59 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>i;main(n){for(;n&lt;1e6;i||printf(&quot;%d &quot;,n))for(i=n++;n%i--;);}\n</code></pre>\n<p><a href=\"https://tio.run/##S9ZNT07@/z/TOjcxM08jT7M6Lb9IwzrPxjDV2DqzpqagKDOvJE1DSTVFQUknT1MTJJtpm6etbZ2nmqmra61pXfv/PwA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a> (upto 1000)</p>\n"},{"answer_id":252115,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/252115#252115","body":"<h1><a href=\"https://dyalog.com\" rel=\"nofollow noreferrer\">APL(Dyalog Unicode)</a>, <sup><s></s></sup>16 bytes <sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre><code>{⊃⊃(+/,⊃)⍤⊢/⍵/1}\n</code></pre>\n<p><a href=\"https://razetime.github.io/APLgolf/?h=AwA&amp;c=c3vUNqH6UVczEGlo6@sAKc1HvUsedS3Sf9S7Vd@wFgA&amp;f=e9Q39VHbBLdDKx71bjYyAAA&amp;i=AwA&amp;r=tryapl&amp;l=apl-dyalog&amp;m=dfn&amp;n=f\" rel=\"nofollow noreferrer\">Try it on APLgolf!</a></p>\n<p>Straightforward &quot;repeatedly add previous two elements&quot; style approach. Not as short as <a href=\"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223225#223225\">using pascal's triangle</a>, but I'm still pretty proud of this :-)</p>\n<p>-1 thanks to <a href=\"https://codegolf.stackexchange.com/users/43319/ad%c3%a1m\">Adám</a> for reminding me of the atop operator, also known as the &quot;atoperator&quot;. Also from Adám, an optional &quot;full program&quot; version of this for -2:</p>\n<pre><code>⊃⊃(+/,⊃)⍤⊢/⎕/1\n</code></pre>\n<p>Code breakdown:</p>\n<pre><code>{⊃⊃(+/,⊃)⍤⊢/⍵/1} full dfn\n             ⍵/1  make a list of n 1s\n            /      reduce over them with the following tacit function\n          ⍤⊢       apply the following tacit function(?) to only the\n                   previous element (in js, think (a,b)=&gt;f(a))\n    (  , )          return a list of\n     +/               sum of elements ([5,3]=&gt;8)\n        ⊃             first element ([5,3]=&gt;5)\n                      ⍝([5,3]=&gt;[8,5])\n                   after the reduce, you're left with\n                   a scalar of the value [fib(n),fib(n-1)]\n  ⊃                take the first element of this scalar (the array)\n ⊃                 take the first element of the array (this is the end result)\n</code></pre>\n<p>As you can see, I'm still learning how APL works :P</p>\n<p>If there are any terminology fixes you want to make in my explanation, go ahead; You have my blessing.</p>\n"},{"answer_id":252099,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252099#252099","body":"<h1><a href=\"https://github.com/DennisMitchell/jellylanguage\" rel=\"nofollow noreferrer\">Jelly</a>, <s>9</s> 8 bytes</h1>\n<pre><code>ṙLHĊƊṚŒḌ\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700KzUnp3LBgqWlJWm6Fpt8PI50cT3cOfNw-8Ods45OerijZ0lxUnIxVPpmYbRSdLRprI5CtImOgqEBiGGso2AJZIMFjXQULIBsoJwRWM5QR8EcyAcqMQSqMQKrMQNygOoMgQqNTMCKgKoMgcqMjME8oLyREdgww9hYpViozQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>How?</p>\n<pre><code>ṙLHĊƊṚŒḌ : Main Link\n L       : length; used to count the number of elements\n  H      : Halve; divides by 2 \n   Ċ     : Rounds up (ceil)\n    Ɗ    : Last three links as a monad\nṙ        : Rotate x y times (x is implied input)\n     Ṛ   : Reverse element\n      ŒḌ : Reconstruct matrix from its diagonals\n</code></pre>\n"},{"answer_id":252130,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252130#252130","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"noreferrer\">Ruby</a>, 62 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>f=-&gt;d{(w=0..l=d.size/2).map{|r|w.map{|c|d[l+r-c][[r,c].min]}}}\n</code></pre>\n<p><a href=\"https://tio.run/##VYzRCoIwFIbvfYpBN0pzbSuNAnuFHuBwLmwmCDNkJVLqs6@5QeTVzv7/@37T397W1kV6qcZ4KDhjuqjYs/ncdzJhbdmNk5mGcKipAr01qUIAQxWytnngPM@2IzVTpdYxQIaYRBu49i88E/@Nol/tAo4UBCX5CSkBsV/TruAh98S/CiCzpeKUiOXNKZGOEp4/SBf7xfy4XnSYq4LqKS8F0il@ACP7BQ\" rel=\"noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n<p>Takes input as top-right to bottom-left.</p>\n<p>Maps 2d indexes to input, for example a 4X4 matrix:</p>\n<pre class=\"lang-ruby prettyprint-override\"><code>3,0  2,0  1,0  0,0\n4,0  3,1  2,1  1,1\n5,0. 4,1  3,2  2,2\n6,0  5,1  4,2  3,3\n</code></pre>\n"},{"answer_id":252088,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252088#252088","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, <del>84</del> 79 bytes</h1>\n<p>-1 byte thanks to Kevin Cruijsen<br>\n-5 bytes thanks to Mukundan314 and 07.100.97.109</p>\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:(z:=len(x)//2+1)and[x[z+c%z+~c//z][min(c%z,c//z)]for c in range(z*z)]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vwdI0BVuFmKWlJWm6Fjf9chJzk1ISFSqsNKqsbHNS8zQqNPX1jbQNNRPzUqIroqu0k1WrtOuS9fWrYqNzM_M0gFwdEE8zNi2_SCFZITNPoSgxLz1Vo0oLKAY1NbGgKDOvRCNNIzraNDZWU5MLma8TbaKjYByroxBthCZnZAoSNdBRMATRZjoKRsZAtgGIY2IEFLYEC5uDdEEsWrAAQgMA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Ported from Arnauld's JS answer</p>\n"},{"answer_id":252087,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252087#252087","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"noreferrer\">Vyxal</a>, <s>14</s> 12 bytes</h1>\n<pre><code>Ṗ'L√ẇÞDf?⁼;h\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLhuZYnTOKImuG6h8OeRGY/4oG8O2giLCIiLCIxLDY5LDAsMTMiXQ==\" rel=\"noreferrer\">Try it Online!</a></p>\n<p>Math? Sensible methods of putting things into arrays? Programs that finish in reasonable time? Couldn't be me.</p>\n<p>Times out for anything bigger than a 2x2 matrix.</p>\n<p>Takes input as a flattened list and outputs a flattened list.</p>\n<h2>Explained (old)</h2>\n<pre><code>f₌ṖL√vẇ'ÞD?⁼;h\nf₌ṖL√           # Push all permutations of the flattened input, as well as the square root of the length of the flattened input  \n     vẇ         # Split each permutation into chunks of that length\n       'ÞD?⁼;   # Keep those only where the diagonals equal the input (this basically means try each and every single possible matrix from the input until one is found with the same diagonals)\n              h # Get the first (and only) item\n</code></pre>\n"},{"answer_id":252114,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252114#252114","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"noreferrer\">Pip</a> <code>-x</code>, 22 bytes</h1>\n<pre><code>Fi,YMX#*aFki+R,yPPOa@k\n</code></pre>\n<p>Inputs a nested list of diagonals, starting from the top right, as a command-line argument; outputs a flattened matrix in row-major order to stdout, one number per line. <a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJGaSxZTVgjKmFGa2krUix5UFBPYUBrIiwiIiwiIiwiLXggXCJbWzVdOyBbNDsgMTBdOyBbMzsgOTsgMTVdOyBbMjsgODsgMTQ7IDIwXTsgWzE7IDc7IDEzOyAxOTsgMjVdOyBbNjsgMTI7IDE4OyAyNF07IFsxMTsgMTc7IDIzXTsgWzE2OyAyMl07IFsyMV1dXCIiXQ==\" rel=\"noreferrer\">Try It Online!</a></p>\n<h3>Explanation</h3>\n<p>For an <span class=\"math-container\">\\$N\\$</span> by <span class=\"math-container\">\\$N\\$</span> matrix, the top row can be found by taking the first number from each of the first <span class=\"math-container\">\\$N\\$</span> diagonals and reversing them. If we remove these numbers from their respective diagonals, the next row is the reverse of the first remaining number in the first <span class=\"math-container\">\\$N\\$</span> non-empty diagonals, and so on.</p>\n<pre><code>Fi,YMX#*aFki+R,yPPOa@k\n        a               Command-line argument, evaluated (-x flag)\n      #*                Length of each sublist\n    MX                  Maximum (this gives the size of the desired matrix)\n   Y                    Store in y\nFi,                     For i in range(y):\n         Fk               For k in\n              ,y          range(y)\n             R            reversed\n           i+             with i added to each element:\n                   a@k      Sublist at that index\n                 PO         Pop its first element\n                P           Print the popped element\n</code></pre>\n"},{"answer_id":252113,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252113#252113","body":"<h1><a href=\"https://pari.math.u-bordeaux.fr\" rel=\"nofollow noreferrer\">PARI/GP</a>, 43 bytes</h1>\n<pre><code>a-&gt;matrix(w=#a\\2+1,,i,j,a[w+i-j][min(i,j)])\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=NY9BCsIwEEWvMuimpVMw01p1oReJQbKpRFRCqahncVMQ8UziZfyd2tX8_-flJ3m8o2_Cbh-7Z03r16Wt8-Un8_nm5Nsm3JLreuq3khnmwAf29pqF_ODsKZwTBKlL_0e-PsbjPfGUbyg24dxCTnozoTrxacpkrZ07jJLJzHpRMK2gNRSmJTR2ojvDtIAHYsCIMhUMOANQSoVAGWBSqMNeRMuM6weu0zEWVisVxZAOnTM0_LulGB9WCmKFq4Vz4xe7bpg_\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Takes input from top-right to bottom-left.</p>\n"},{"answer_id":252092,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252092#252092","body":"<h1><a href=\"https://www.jsoftware.com\" rel=\"noreferrer\">J</a>, <sup>21</sup> 20 bytes</h1>\n<pre><code>/:&amp;;&lt;/.@i.@(,-)@%:@#\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=TU9LCsIwEN33FE9FayGtSWtTGxUKgiAIgtuQlVjUhW4qeBc3deENvIzn8AKOiUoXycy83yTX26F-dvOWEka2VO77XjvyS0wVfDBwKDphhNl6Ob-fqzIcPQaqN54MomIfFX0WBkVXFR1HPV-Bt93sTijB0l_HISBziOQHxKnDECcQHMOYI4fMvO1lX9F6vTgaBa1TYzy9Olf_4c8IRoGGQfPPJZKmkLgvakUNV5xaC4P4VMloPfVWTE9gsIkya4aRiAhntBprcToyWLtxX69rV98\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Takes in flat, outputs flat.</p>\n<ul>\n<li><p><code>%:@#</code> Square root of list length, to get matrix side length.  Call it <code>n</code>.</p>\n</li>\n<li><p><code>(,-)</code> Create list <code>n -n</code></p>\n</li>\n<li><p><code>i.</code> Assuming <code>n</code> is 5, eg, this will create the matrix:</p>\n<pre><code>4  3  2  1  0\n9  8  7  6  5\n14 13 12 11 10\n19 18 17 16 15\n24 23 22 21 20\n</code></pre>\n</li>\n<li><p><code>&lt;/.@</code> Create the boxed diagonals of this matrix:</p>\n<pre><code>┌─┬───┬──────┬─────────┬────────────┬──────────┬────────┬─────┬──┐\n│4│3 9│2 8 14│1 7 13 19│0 6 12 18 24│5 11 17 23│10 16 22│15 21│20│\n└─┴───┴──────┴─────────┴────────────┴──────────┴────────┴─────┴──┘\n</code></pre>\n</li>\n<li><p><code>/:&amp;;</code> Unbox that and use it to sort the original input, ie, whatever sort would put this into order, apply it to the original input.  This does exactly what we want.</p>\n</li>\n</ul>\n"},{"answer_id":252086,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252086#252086","body":"<h1>JavaScript (ES6), 65 bytes</h1>\n<p>Expects the diagonals from top-right to bottom-left.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;a[w=a.length&gt;&gt;1].map((_,y,A)=&gt;A.map((_,x)=&gt;a[w+y-x][x&lt;y?x:y]))\n</code></pre>\n<p><a href=\"https://tio.run/##bY/BDoIwEETvfkWPNBZCFwQxguE7msY0CKhBIEIUvh6XVU5ym9l529nezct02fPW9nbdXPKpiCcTJ0a9Y@NUeV321ySR2nmY1rLOYhQpj5N0sQMndDvag1bDcTwNh1FzPmVN3TVV7lRNaRWWUjstmPIFk@4sPMEi1DQEwfaoMQPKpGAhekQkMkBMgAY5iSD4BCElEQOPHOYA9JjU2L75b1@bLnVBRMJbhb4HuFj3OwS85Rc@4Jh2g3DenT4\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Also <strong>65 bytes</strong>:</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;[...a[w=a.length&gt;&gt;1]].map((_,y,A)=&gt;A.map(_=&gt;a[w+y--].shift()))\n</code></pre>\n<p><a href=\"https://tio.run/##bY/NDsIgEITvPgVHiJSUba16gKTPQUhDtD@a2hrbaHx6XFd70tvM7LfMcg73MB1up@ucDOOxjo2JwVinlAruYYLq66GdO2u19@oSrpxX8ilLYWxJtjIWufUzSbyaulMzcyFEPIzDNPa16seWN9y5jZfM5ZLp9C0yyfaoKQTJdqhxBjTTkm3RI6KRAWIKNMhpBCEnCCmNGGTkcA5Aj@GRQqx@2/@lS12xJ5H9hT4HpFj3PQSy5Rc5YEy7xfa9G18\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<hr />\n<h1>Flatten format, 89 bytes</h1>\n<p>This version expects a flatten array of the diagonals from top-right to bottom-left and returns another flatten array.</p>\n<p>The only benefit is that there's only one <code>map()</code>. But the math is much more verbose. So yeah ... that's a bit silly. :-) There may be a better/shorter formula, though.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;a.map((_,x)=&gt;a[y=x/w|0,x%=w,n=y+w+~x,(q=n&gt;w&amp;&amp;n-w)*~q-n*~n/2+(x&lt;y?x:y)],w=a.length**.5)\n</code></pre>\n<p><a href=\"https://tio.run/##bY7LCsIwFET3fkU2StLeVhO1PjD6ISIStL6oqS9MCtJfrxN0JW7C3DkzTE7mae6b2/HySGy5zZudboyem/RsLpyvyQscy0r7rnv1yLe1I6ur2MW1J37Vdu46HZs4EdXXxEa17aqY@1m18NNKrMhpkxa53T8OUZQORbMp7b0s8rQo93zHl0NiA2KyR6xPbAIFQxEbQ8FX8CWxEV5gCa7AM0hkJEIqlJGQiKgQAVNgSq6EaP1u/fE@A1lY7v/BYe4b@Q7gGoRvoZGN0Gje\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Given an input array of length <span class=\"math-container\">\\$N\\$</span>, we define for each index <span class=\"math-container\">\\$0\\le i \\lt N\\$</span>:</p>\n<p><span class=\"math-container\">$$x=i\\bmod w\\\\\ny=\\lfloor i/w \\rfloor\\\\\nn=y+w-x-1\\\\\nq=\\max(n-w,0)$$</span></p>\n<p>where <span class=\"math-container\">\\$w\\$</span> is the width of the matrix, i.e. <span class=\"math-container\">\\$\\sqrt{N}\\$</span>.</p>\n<p>The output value at this position is the value stored in the input array at the following index:</p>\n<p><span class=\"math-container\">$$\\frac{n\\times(n+1)}{2}-q\\times(q+1)+\\min(x,y)$$</span></p>\n"},{"answer_id":252085,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252085#252085","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>20</s> 18 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>g;ÝDδ-Z+èεNUεNX‚ßè\n</code></pre>\n<p>-2 bytes porting <a href=\"https://codegolf.stackexchange.com/a/252086/52210\"><em>@Arnauld</em>'s JavaScript answer</a> (somewhat). I have the feeling the <code>εNUεNX‚ßè</code> could perhaps be golfed some more.</p>\n<p>Input expected as option 2: top-right to bottom-left 2D list.<br />\nOutput as a matrix.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f8/3frwXJdzW3SjtA@vOLfVLxSIIx41zDo8//CK//@jo01jdRSiTXQUDA1ADGMdBUsgGyxopKNgAWQD5YzAcoY6CuZAPlCJIVCNEViNGZADVGcIVGhkAlYEVGUIVGZkDOYB5Y2MwIYZxsYCAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##NU07CsJAEO09RUjrEzKbzcZoYZPGRitBXLZQELFRwUSwCHgOQWxzAPUAbp9DeJF1x2AxnzfvM/vjcrVdu1M43h3KYhCEOKMTTsvij3K3Gdpb3jx6i66tm@dk5mv@uVzt3dauqvB@jZzWOjEGgdaRgSaojEfcnkTiQQTyXUHEINZIEYFFKm1FrJEtFSMDMRbogyREm5mCvDfDL06BBKgPIZkjUOqTefUfBFvJGPMF\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Original 20 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a> answer:</strong></p>\n<pre><code>g&gt;;©FD®£€нR,¦ε®N&gt;›i¦\n</code></pre>\n<p>Input expected as option 2: top-right to bottom-left 2D list.<br />\nOutputs each inner row-list on separated newlines to STDOUT.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f8/3frwukMr3VwOrTu0@FHTmgt7g3QOLTu39dA6P7tHDbsyDy37/z862jRWRyHaREfB0ADEMNZRsASywYJGOgoWQDZQzggsZ6ijYA7kA5UYAtUYgdWYATlAdYZAhUYmYEVAVYZAZUbGYB5Q3sgIbJhhbCwA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##NY09CsJAEIV7TxFSvyKz2fwpaBMEGwXbZQsFERsVTASLgHgVISBIOi0Em7UXz5CLrLsuNjPzZr73ZrObzVcLvfdH621ZdD0fB3T8SVn8Va6XvVejLsNcNercnq6f5xSqft9UM@63x8dK1bqqKnUfaCFEJCU8IQIJQYgz20K3YpERAcjUGCwEWYazABaKEwdZhrtTiAxkNUMK4mAuMwEZb4ZfXAxioBSM2xuBEpNsR/OBWStJKb8\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>g               # Get the length of the (implicit) input 2D list\n ;              # Halve it\n  Ý             # Push a list in the range [0, length(input)//2]\n   Dδ-          # Pop and push its subtraction table:\n   D            #  Duplicate the list\n    δ           #  Apply double-vectorized over the two lists:\n     -          #   Subtract\n      Z         # Push the flattened maximum (without popping),\n                # which is the length(input)//2\n       +        # Add it to each integer\n        è       # Index each inner-most integer into the (implicit) input\nε               # Map over each inner list of lists:\n NU             #  Store the map-index in variable `X`\n ε              #  Map over each inner list:\n  NX‚ß          #   Push the minimum of the inner and outer indices:\n  N             #    Push the inner map-index\n   X            #    Push the outer map-index from variable `X`\n    ‚           #    Pair them together\n     ß          #    Pop and push the minimum\n      è         #   Index that minimum into the list\n                # (after which the resulting matrix is output implicitly)\n</code></pre>\n<p><a href=\"https://codegolf.stackexchange.com/a/241931/52210\">Extracted from this 05AB1E answer of mine</a>, where I've used 45 degree matrix rotations for a word-search solver:</p>\n<pre class=\"lang-python prettyprint-override\"><code>g;              # Same as above\n  î             # Ceil it\n   ©            # Store this matrix-size in variable `®` (without popping)\n    F           # Pop and loop this many times:\n     D          #  Duplicate the current 2D list:\n      ®£        #  Only keep the first `®` amount of inner lists:\n        €н      #  Get the first item from each\n          R     #  Reverse it\n           ,    #  Pop and print it with trailing newline\n      ¦         #  Remove the first inner list\n       ε        #  Map over each remaining lists:\n            i   #   If\n        ®       #   dimension `®`\n           ›    #   is larger than\n         N&gt;     #   the 1-based map-index:\n             ¦  #    Remove the first item from this list\n</code></pre>\n"},{"answer_id":252091,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252091#252091","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"noreferrer\">MathGolf</a>, 21 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"noreferrer\">bytes</a></h1>\n<pre><code>h½)r■_@mÅε-_╙+§\\mÄ╓m§\n</code></pre>\n<p>Input expected as option 2: top-right to bottom-left 2D list.<br />\nOutput as a flattened list.</p>\n<p><a href=\"https://tio.run/##JY29DcIwEIV7NkE8pNzZceKOPYwV0UAKLCTECDBBFCQ6ukxASeP0DJFFjC9p7u9971043NrT5XxMqY3f9XV6vptdGB@/z7aZ@tcmDvsw3qe@C3FIybnS@5VzhYcjGCtNzRcu81yAcjVgBRJEcwFhTDUzguhFUbAg2Rk1SIOXxAqUrRZzmgExqAZr0QhU5WAZ8wMWK3n/Bw\" rel=\"noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>h          # Push the input-length (without popping)\n ½         # Integer-divide it by 2\n  )        # Increase it by 1\n   r       # Pop and push a list in the range [0,length(input)//2+1)\n    ■      # Get the cartesian product of this list, creating pairs\n_          # Duplicate this list of pairs\n @         # Triple swap input,pairs,pairs -&gt; pairs,input,pairs\n  m        # Map over each pair,\n   Å       # using 2 characters as inner code-block:\n    ε      #  Reduce the pair by:\n     -     #   Subtracting\n      _    # Duplicate this list\n       ╙   # Pop and push the maximum (which is length(input)//2+1)\n        +  # Add it to each integer in the list\n         § # Get the inner lists of the input at those indices\n \\         # Swap so the other pairs-list is at the top again\n  m        # Map over each pair,\n   Ä       # using 1 character as inner code-block:\n    ╓      #  Pop and push the minimum of the pair\n     m     # Map over both lists:\n      §    #  Index these minima into the inner lists\n           # (after which the entire stack is output implicitly as result)\n</code></pre>\n"},{"answer_id":252090,"question_id":252082,"link":"https://codegolf.stackexchange.com/questions/252082/reconstruct-matrix-from-its-diagonals/252090#252090","body":"<h1><a href=\"https://dyalog.com\" rel=\"nofollow noreferrer\">APL(Dyalog Unicode)</a>, <s>21</s> 22 bytes <sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre><code>⊖w↑i⊖↑⌽⍨≢↑⍥-i←⍳w←≢∘⍉∘↑\n</code></pre>\n<p><a href=\"https://razetime.github.io/APLgolf/?h=e9Q31dP/UdsEAwA&amp;c=e9Q1rfxR28TMR13TgNSjnr2Pelc86lwEYvcu1c181DbhUe/mchAFFOyY8ai3E0S2TQQA&amp;f=NY47EsQwCEP7nOKVSWcJx44vlPsfYcE7adBnkODltC5ODexCoYkj6UBGD@7lM1Gghe@U5kEdt@TBQmV2VPq@jvebip0dK6FtZ8zadGPtE45/qFFfZPcP&amp;i=AwA&amp;r=tryapl&amp;l=apl-dyalog&amp;m=train&amp;n=f\" rel=\"nofollow noreferrer\">Try it on APLgolf!</a></p>\n<p><code>∘↑</code> mix the lists into a matrix, padding on the right with 0s, then…</p>\n<p> <code>∘⍉</code> transpose, then…</p>\n<p>  <code>≢</code> tally the number of rows (this gives the size of the matrix)</p>\n<p><code>w←</code> store as <code>w</code> (for <strong>w</strong>idth)</p>\n<p><code>⍳</code> generate indices from 0 to that − 1</p>\n<p><code>i←</code> store as <code>i</code> (for <strong>i</strong>ndices)</p>\n<p><code>≢</code>…<code>⍥-</code> negate the argument length and that, then:</p>\n<p> <code>↑</code> take arg-length elements from (because negative; the rear) of the indices, padding with 0s</p>\n<p>…<code>⌽⍨</code> use those numbers to rotate left (because negative; right) the rows of:</p>\n<p> <code>↑</code> the original argument lists mixed into a matrix, padded on the right with 0s</p>\n<p><code>i⊖</code> rotate the columns up by the amounts <code>i</code></p>\n<p><code>w↑</code> take the first <code>w</code> rows of that</p>\n<p><code>⊖</code> flip upside-down</p>\n"},{"answer_id":164343,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164343#164343","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 6 bytes</h1>\n<pre><code>f!}TQZ\n</code></pre>\n<p><a href=\"https://pythtemp.herokuapp.com/?code=f%21%7DTQZ&amp;test_suite=1&amp;test_suite_input=%5B1%5D%0A%5B0%5D%0A%5B2%2C+0%5D%0A%5B3%2C+1%2C+0%2C+1%2C+3%2C+3%5D%0A%5B%5D%0A%5B1%2C+2%2C+3%5D%0A%5B5%2C+4%2C+1%2C+5%2C+4%2C+8%2C+2%2C+1%2C+5%2C+4%2C+0%2C+7%2C+7%5D%0A%5B3%2C+2%2C+1%2C+0%5D%0A%5B0%2C+0%2C+1%2C+1%2C+2%2C+2%2C+3%5D%0A%5B1%2C+0%2C+7%2C+6%2C+3%2C+11%2C+15%2C+1%2C+9%2C+2%2C+3%2C+1%2C+5%2C+2%2C+3%2C+4%2C+6%2C+8%2C+1%2C+18%5D&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n<p>Makes no assumptions on the contents of the list.</p>\n<h5>Explanation:</h5>\n<pre><code>f!}TQZ | Full code\n-------+--------------------------------\nf    Z | First T starting at 0 such that\n !}TQ  |  T is not in the input\n</code></pre>\n"},{"answer_id":252024,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252024#252024","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 5 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>@øX}f\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=QPhYfWY&amp;input=WzEgMCA3IDYgMyAxMSAxNSAxIDkgMiAzIDEgNSAyIDMgNCA2IDggMSAxOF0\" rel=\"nofollow noreferrer\">Try it here</a></p>\n<pre><code>@øX}f     :Implicit input of array U\n@         :Function taking an integer X as an argument\n øX       :  Does U contain X?\n   }      :End function\n    f     :First integer &gt;=0 that returns false when passed through that function\n</code></pre>\n<h2>Japt <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-g</code></a>, 5 bytes</h2>\n<pre><code>Lo kU\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LWc&amp;code=TG8ga1U&amp;input=WzEgMCA3IDYgMyAxMSAxNSAxIDkgMiAzIDEgNSAyIDMgNCA2IDggMSAxOF0\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>Lo kU     :Implicit input of array U\nL         :100\n o        :Range [0,L)\n   kU     :Remove the elements of U\n          :Implicit output of first element\n</code></pre>\n"},{"answer_id":252025,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252025#252025","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, <s>117</s> 113 bytes</h1>\n<pre><code>|l|{let mut r:Vec&lt;_&gt;=(0..22).collect();for i in l{if let Some(x)=r.iter().position(|&amp;n|n==i){r.remove(x);};}r[0]}\n</code></pre>\n<h1>Explanation</h1>\n<pre><code>|l| {\n    //Make a vector of the integers from 0 to 21\n    let mut r: Vec&lt;_&gt; = (0..22).collect();\n    //for each number in the input\n    for i in l {\n        //Check if it exists in the vector\n        if let Some(x) = r.iter().position(|&amp;n| n == i) { \n            //if so, remove it\n            r.remove(x);\n        };\n    }\n    //return the first remaining number in the vector\n    r[0]\n}\n</code></pre>\n<p><a href=\"https://tio.run/##fZNta4MwEMdfz09x7YsRQUStXbs693YfYLA3pYhICgFNXJJ2Y@pnd3nwoWvLgkjuvPv/7i6Rn4TsjxSqnFDkQuOAWiWWILGQWZELLCCFMy4We/NJL2OFB@@vI7h2RB7c@FYehMpt3mq/uv5@bauw6E7Y2oPYaNjN1kRNppLfqOcO20bdVBWMJVncPeJk6RWOjCfTRagz1yb72WaPxdh9bAK3lrCdhf9lBGM1VmBtNDZGRkHCYMDqjjQuHkpQQeHGYCDUxQQ3uEMynXHBOMeFVAe8v@zfjsNyY8uKQpU25eVUfGEudvCBi5fsVeXPt2XC@YRKlhGJOXJnZ5XXqG/LttE61UkC31mRFAW@H0WuX7CyVEUhNzkyDgQIhbIhRwN@ZxVG327Kfavr10wQSRhF7SNtaZoSt@E@xxU767ikSzquLmbXX1Qw69uGNAXlHhSuRg2tjfo/pEbDlAbX@I/olQuBuczw58IKJM5DzVXbJV2g5RubB2xVoemWXu7a@XdO5/S/\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":252023,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252023#252023","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>6</s> 5 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>₂ÝIKн\n</code></pre>\n<p>-1 byte thanks to <em>@emanresuA</em></p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//UVPT4bme3hf2/v8fbahjoGOuY6ZjrGNoqGNoqmOoY6ljBOLpmIJpE6CcBZBnaBELAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeX/R01Nh@dWel/Y@1/nf3S0YaxOtAEQG@mASGMdQx0DIDbWMQbygMhQxwjMNNUxAQqDSAugCIRloGOuYw7WBBIBaTcAawbpgegyBKsxAxpnCBQ2BcpYgmTA@kG0CVDOAqTDAqzZHKzVGCgElIiNBQA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>₂Ý     # Push a list in the range [0,26]\n       # (26 is the smallest 1-byte constant above 19)\n  IK   # Remove all values of the input-list from this ranged list\n    н  # Pop and push the first integer remaining (which is the minimum)\n       # (which is output implicitly as result)\n</code></pre>\n"},{"answer_id":252021,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/252021#252021","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a>, 31 bytes</h1>\n<pre class=\"lang-bash prettyprint-override\"><code>for ((;$@[(I)$[i]];i++)):\nbye i\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m724qjhjwc2FaflFCokKGlxKhkpcSgZAbKQAIo0VDBUMgNhYwRjIAyJDBSMw01TBBCgMIi2AIhCWgYK5gjlYE0gEpN0ArBmkB6LLEKzGDGicIVDYFChjCZIB6wfRJkA5C5AOCyUuTa7q4tQSBV1dBRXbRC6NpaUlaboW-0Hu1NCwVnGI1vDUVInOjI21ztTW1tS04kqqTFXIhKhaoWltY2OjYl8L4S5YAKEB\" rel=\"nofollow noreferrer\">Attempt This Online!</a>\nOutputs via exit code.</p>\n"},{"answer_id":251684,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251684#251684","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 14 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Èõ!²mÉ øX*j}iU\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=yPUhsm3JIPhYKmp9aVU&amp;input=NA\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":251671,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251671#251671","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 5 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>∞o&lt;ʒp\n</code></pre>\n<p>Outputs the infinite sequence.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//Uce8fJtTkwr@/wcA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p>Outputting the 1-based <span class=\"math-container\">\\$n^{th}\\$</span> value like the example in the challenge description, would be <strong>8 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></strong> in the <a href=\"https://github.com/Adriandmen/05AB1E/tree/fb4a2ce2bce6660e1a680a74dd61b72c945e6c3b\" rel=\"nofollow noreferrer\">legacy version of 05AB1E</a> instead:</p>\n<pre><code>µNbSPNp*\n</code></pre>\n<p><a href=\"https://tio.run/##MzBNTDJM/f//0Fa/pOAAvwKt//9NAA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>∞      # Push an infinite list of positive integers: [1,2,3,...]\n o     # Take 2 to the power each: [2,4,8,...\n  &lt;    # Decrease each by 1: [1,3,7,...]\n   ʒ   # Filter this list by:\n    p  #  Only keep the prime numbers\n       # (after which the result is output implicitly)\n\nµ      # Continue looping while `¾` is not equal to the (implicit) input-integer:\n       # (counter variable `¾` is 0 by default)\n N     #  Push the loop-index\n  b    #  Convert it to a binary string\n   S   #  Convert it to a list of digits\n    P  #  Check if all bits are 1 by taking the product\n N     #  Push the loop-index again\n  p    #  Check whether it's a prime number\n     * #  Check if both are truthy\n       #  (if they are: implicitly increase `¾` by 1)\n       # (after which the last index `N` is output implicitly as result)\n</code></pre>\n"},{"answer_id":251648,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/251648#251648","body":"<h1><a href=\"http://www.swi-prolog.org\" rel=\"nofollow noreferrer\">Prolog (SWI)</a>, <s>64</s> 35 bytes</h1>\n<p><em>-29 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/76162/jo-king\">@Jo King</a></em></p>\n<pre><code>L+X:-between(0,20,X),\\+member(X,L).\n</code></pre>\n<p><a href=\"https://tio.run/##PY/LCoMwEEV/JbhKcFLiq7UuBPd@QCDNQiEtgo@ggjt/3Y5JLUwyd3JvToidp3768GXrjqMOZcFbs27GjFRALEAyeIWDGVozUwk1ux0FHxrbd8tKVaXLklahhPc0D81Kg90SXpLd7mMAqgKpGQOlIg1K4IqBnC0BEqFyO@oEj7BwiP2QAUmd6UXujP@I9x5YnuONEyououf8UNGVv7unotPPXObpMxfY69QFc8/JtcbffgE\" rel=\"nofollow noreferrer\" title=\"Prolog (SWI) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":251647,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/251647#251647","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, 52 bytes</h1>\n<pre><code>L=[0...20]\nf(l)=L[[(i-join(e,l))^2.minfori=L]&gt;0].min\n</code></pre>\n<p><a href=\"https://www.desmos.com/calculator/2oau66cha7\" rel=\"nofollow noreferrer\">Try It On Desmos!</a></p>\n<p><a href=\"https://www.desmos.com/calculator/xqgoicgm3e\" rel=\"nofollow noreferrer\">Try It On Desmos! - Prettified</a></p>\n"},{"answer_id":251609,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251609#251609","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 57 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>a=1\nwhile 1:a-=~a;0in(a%d for d in range(2,a))or print(a)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LYxBCsIwFAX3nuKBCElpxYqCVnIDbyBSvja1gZqE9It040XcdKHeqbdRWlfvMQzz_PiWK2e7fu-Dsaxqup4KiijO1WEgx2id5XPvvJAiIglMEXTDwZwZ7OBs3WIQwZVGaULDWL9vXCabfksqndwrU2ukGSXqQbuFsYJmBUoXUMBYBLIXLZYxSflDQ0mQHAOvUqz-t-vG_QI\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p><code>a-=~a</code> taken from <a href=\"https://codegolf.stackexchange.com/a/251596\">Arnauld's JS answer</a></p>\n"},{"answer_id":251611,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251611#251611","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <sup><s>63</s></sup> 51 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>d;k;f(n){for(k=1;n;n-=d&lt;2)for(d=k-=~k;k%--d;);n=k;}\n</code></pre>\n<p><a href=\"https://tio.run/##VVDLboMwELznK1ZISHbAaoBGJHLcS9WvKByQbVLk1kQYqaiIfnrp8kjaWPJ6Pbsz3rFkZynHUXHDS2JpX9YNMSLillsm1CmmE6CEYeLbcOMzpjjlVhg@jJVt4aOoLKHQbwDXBOjuomWr1WsOAvokhDSEJAohijE5RMcpTaJdiuc@fowP6cBnrqyta0G@Fc0Wo5ZGN4uEl3UvcdYdn3HvvRD@3xNvZeOQQKbnK6t0h7QdX9MTuOpL1yW5DkYfVmB7QzgEwdxNZ7HFzNVQi2qLVAARvys5LJWkpfeoRvT2CzMz/2u4NNhSEs9XwJ4Ao@8yi67aEFx4M@6E0PkqO2yG8UeW78XZjezzFw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p><em>A port of <a href=\"https://codegolf.stackexchange.com/users/58563/arnauld\">Arnauld</a>'s <a href=\"https://codegolf.stackexchange.com/a/251596/9481\">JavaScript answer</a>.</em><br />\n<em>Saved a whopping 13 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/92689/steffan\">Steffan</a>!!!</em></p>\n<p>Inputs positive integer <span class=\"math-container\">\\$n\\$</span>.<br />\nReturns the 1-based <span class=\"math-container\">\\$n^{\\text{th}}\\$</span> Mersenne prime.</p>\n"},{"answer_id":251643,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/251643#251643","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 27 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 21 iota swap diff first ]\n</code></pre>\n<p><a href=\"https://tio.run/##lZFNDsIgEIX3nOJ5AQP90aoHMG7cGFfGRVNp0qhtBYwxDWevQ21aFy4oE2CAfMObmTzNTKXa42G3366h5eMpy0xq8ozGVapS3lAracy7VkVpsGGsYaDRQMDCf8zAe45P5ETPBZPIkQtJKacZklkPLui5KSp/8xOkNPSmRy5GRKxbE4rw9TiWZPYvFw75BV2G1vO/aOiDq4pT66N35ESnauHqSnhM51UXwSl2e0RviYucuKDUB84sa08IBIrKpNCvtMalyHPkhdIG5/ZOF/P2Aw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<pre><code>       ! { 3 1 0 1 3 3 }\n21     ! { 3 1 0 1 3 3 } 21\niota   ! { 3 1 0 1 3 3 } { 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }\nswap   ! { 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 } { 3 1 0 1 3 3 }\ndiff   ! { 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }\nfirst  ! 2\n</code></pre>\n"},{"answer_id":118270,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118270#118270","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 7 bytes</h1>\n<pre><code>Ṁ‘‘Ḷḟ⁸Ḣ\n</code></pre>\n<p><a href=\"https://tio.run/nexus/jelly#PY27DYAwDERrmCIDpCCET5gFZRegYQU6JGpqFGomSRYJ5iwjWafL@fyS4z2laaOJ4YphT3OI4cjPmpYz57EsRuM1aQWttWJjtTLkoeQtQggFtQStVg0qbBxW/5Ouexrh8YrxlbCZ9gONXHX41nyNFq2BW4Jn36DomOR86V8\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n<h2>How it works</h2>\n<pre><code>Ṁ‘‘Ḷḟ⁸Ḣ  Main Link; argument is z\nṀ‘‘      Takes 2 above the largest element in z\n   Ḷ     Takes lowered range (thus returning [0, ..., max(z) + 1])\n    ḟ⁸   Exclude all elements from the range that are also in z\n      Ḣ  Take the first element (which is the smallest)\n</code></pre>\n<p>Thanks to @LeakyNun for -1 byte!</p>\n"},{"answer_id":89563,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89563#89563","body":"<h1>Fourier, 17 bytes</h1>\n<pre><code>121(5d-io10ai^~i)\n</code></pre>\n<p>Since no output format is specified, each year is separated by a newline:</p>\n<p><a href=\"https://beta-decay.github.io/editor/?code=MTIxKDVkLWlvMTBhaV5-aSk\" rel=\"nofollow noreferrer\">Try it online</a></p>\n"},{"answer_id":63947,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/63947#63947","body":"<h1><a href=\"http://github.com/DennisMitchell/ShapeScript\" rel=\"nofollow noreferrer\">ShapeScript</a>, <s>16</s> 14 bytes</h1>\n<pre><code>_1@0@'@1?+'*!#\n</code></pre>\n<p>This reads an integer <strong>n</strong> (in unary) from STDIN and prints the <strong>n</strong><sup>th</sup> Fibonacci number.</p>\n<p><a href=\"http://shapescript.tryitonline.net/#code=XzFAMEAnQDE_KycqISM=&amp;input=MTExMTE=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h3>How it works</h3>\n<pre><code>        Input: a string of n 1's \n_       Get the length of the input to push n.\n1@      Swap it with 1 (F[-1]).\n0@      Swap it with 0 (F[0]).\n        STACK: F[-1]   F[0]   n\n'       Push a string that, when evaluated for the i-th time,\n        does the following:\n  @       Swap F[i-2] on top of F[i-1].\n  1?      Push a copy of F[i-1].\n  +       Add the copy of F[i+1] to F[i].\n'       STACK: F[i-1]   F[i]\n*!      Repeat the string n times and evaluate it.\n#       Discard F[n] from the stack.\n</code></pre>\n"},{"answer_id":62716,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/62716#62716","body":"<h1><a href=\"https://github.com/mbuettner/hexagony\" rel=\"nofollow noreferrer\">Hexagony</a>, 6 bytes</h1>\n<pre><code>1.}=+!\n</code></pre>\n<p>Ungolfed:</p>\n<pre><code>  1 .\n } = +\n  ! .\n</code></pre>\n<p>It prints the Fibonacci sequence without any separator.</p>\n"},{"answer_id":100659,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/100659#100659","body":"<h1><a href=\"http://www.enderscythe.com/projects/proglangs/stackish/\" rel=\"nofollow noreferrer\">Stackish</a>, 12 bytes</h1>\n<pre><code>01d\\+.qzcl2'\n</code></pre>\n<p>How it works:</p>\n<pre><code>0   Load 0 into stack (stack now 0).\n1   Load 1 into stack (stack now 0,1).\nd   Duplicate last number of stack (stack now 0,1,1).\n\\   Swap bottom with top (stack now 1,0,1).\n+   Add last two numbers (stack now 1,1).\n.   Pop to output (stack now 1).\nq   Undo pop (stack now 1,1).\nz   Pause.\nc   Clear screen.\nl2' Jump to 2nd character (d).\n\nd   Duplicate last number of stack (stack now 1,1,1).\n\\   Swap bottom with top (stack now 1,1,1).\n+   Add last two numbers (stack now 1,2).\n.   Pop to output (stack now 1).\nq   Undo pop (stack now 1,2).\nz   Pause.\nc   Clear screen.\nl2' Jump to 2nd character (d)\n\n...\n</code></pre>\n"},{"answer_id":137143,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/137143#137143","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, <s>7</s> 2 bytes</h1>\n<pre><code>İf\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//8iGtP//AQ\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n"},{"answer_id":78960,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/78960#78960","body":"<h1>Jelly, 16 bytes</h1>\n<pre><code>Ḥ⁴BL’¤Ð¡U×&quot;⁴B¤^/\n</code></pre>\n<p><a href=\"http://jelly.tryitonline.net/#code=4bik4oG0QkzigJnCpMOQwqFVw5ci4oG0QsKkXi8&amp;input=&amp;args=MTM+MTE\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":99709,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/99709#99709","body":"<h1><a href=\"https://github.com/mcparadip/ASMD\" rel=\"nofollow noreferrer\">ASMD</a>, 7 bytes</h1>\n<pre><code>W(i|P?p\n</code></pre>\n<p>Explanation:</p>\n<pre><code>W        # Push 1,000,000\n (       # Begin range loop (0 -&gt; 999,999)\n  i      # Push counter variable\n   |     # Duplicate\n    P?p  # If prime, print\n       . # Implicit end range loop\n</code></pre>\n"},{"answer_id":251634,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251634#251634","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 56 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda k,n=1,p=1:k and f(k-(p%n&gt;n&amp;n+1),n+1,p*n*n)or~-n\n</code></pre>\n<p><a href=\"https://tio.run/##FcuxDkAwFAXQ3Ve8hbQ8QyUWSf1LhSLl9qWxWPx6sZztyH1tEV3O3h7unGZHgWENizVDIIeZvAqtkhIjKjRG8wdLjRo6pqdF9jFRoB2UHNZFGe71UJCkHdd/dX4B\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n<p>Uses the <a href=\"https://codegolf.stackexchange.com/a/27022/20260\">Wilson's Theorem prime generator</a>, which could be implemented like this to find the <code>k</code>'th prime:</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda k,n=1,p=1:k and f(k-p%n,n+1,p*n*n)or~-n\n</code></pre>\n<p><a href=\"https://tio.run/##FcsxCoAgGAbQvVP8S6Bmgw4NgocxzBLrU8SlpatbrQ9euduRoXsP9nTX6h0lCatkscokcvAUWJrLCInpUwEBnuszo4dcKVEEVYd9Y0rqhZuBSo1of@L9BQ\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n<p>But, modifies it to count only numbers of the form <span class=\"math-container\">\\$2^a-1\\$</span> which are tested for as <code>n&amp;n+1==0</code>. This is combined with the primality check as <code>p%n&gt;n&amp;n+1</code>.</p>\n<p>Because this method recurses through all potential primes whether or not they have form <span class=\"math-container\">\\$2^a-1\\$</span>, it already exceeds the default maximum recursion depth for inputs of 5 and above.</p>\n<p><strong><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 65 bytes</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda k,n=3:k and f(k-all(n%d for d in range(2,n)),n-~n)or n/2\n</code></pre>\n<p><a href=\"https://tio.run/##RYwxCoAwEAR7X3GNkIOIGLEJ@JiTGJXEjQQbG78etbIbmGGO61wTTCl@jLJPTihojL0NJHDkVWgkRoX65ZTJ0QbKgmVWRoNZo7nBr0BryheEP@j0wLaiI284vxGXBw\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n<p>Recurses through numbers of the <span class=\"math-container\">\\$2^a-1\\$</span> by repeatedly applying <code>n-&gt;2*n+1</code>, using trial division to test for primality.</p>\n"},{"answer_id":251563,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/251563#251563","body":"<h2><a href=\"https://en.wikipedia.org/wiki/D_(programming_language)\" rel=\"nofollow noreferrer\">D</a>, 124 bytes</h2>\n<pre><code>auto f(int n){string s;for(import std;n;n--,s~=n%2?&quot;aeiou&quot;[uniform(0,5)]:&quot;bcdfghjklmnpqrstvwxyz&quot;[uniform(0,20)]){}return s;}\n</code></pre>\n<p>I'm not very good at code golf (but trying to get better) so this can probably be improved a lot</p>\n<p><a href=\"https://tio.run/##TY7LDoIwEEXX8hWTJiRtBIMkbqjEDzEu0AKOylTbgg@Cv47FjS5uzuYk56oRm6s2DqxTCz/Ucixap6HiSA5I9NYZpBqsrLThP1mSpDiO7DunMN2wokTdsm1L6LWGJ9FK7DK2P6iqPp7Ol4auN2Ndd388X/9Wmoid6AdTutaQbwxjp1FBUyBxAX0AAN@sv4KQw1J6rCFNJs5zSEUwuxt0ZXUhzkKVQWhZBBhN94WQwTB@AA\" rel=\"nofollow noreferrer\">Try it online</a></p>\n"},{"answer_id":251596,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251596#251596","body":"<h1>JavaScript (ES6), 50 bytes</h1>\n<p>Returns the <span class=\"math-container\">\\$n\\$</span>-th Mersenne prime, 1-indexed.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>n=&gt;{for(k=1;n;n-=d&lt;2)for(d=k-=~k;k%--d;);return k}\n</code></pre>\n<p><a href=\"https://tio.run/##FYpBCsIwEADvfcUeKmQpEerFw3b9gX9oaRLRlF1Jq5cQvx7b08DMvKbvtM7p@d6sqPM1cBW@5aDJRO5JSCy74YKHcBwt/yLFk7WOkJLfPkkglnpUAYaeQGBguO7sOoTcAMwqqy7@vOjDjHfTZim4r20ORrCMSE2pfw\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<h1><code>eval()</code> version, 48 bytes</h1>\n<p><em>Suggested by <a href=\"https://codegolf.stackexchange.com/users/92689/steffan\">@Steffan</a></em></p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>n=&gt;eval(`for(k=1;n;n-=d&lt;2)for(d=k-=~k;k%--d;)k`)\n</code></pre>\n<p><a href=\"https://tio.run/##FcpBCsMgEEDRfU4xixQcgoV008VkcoPeQYlaWmUsSclG7NVtsvrw@G@7221ZX5@vlux8C9yEZ7/bpEzIq4o8kpBodtMNT3AcNf8ixYvWjjAabCcLMIwEAhPD/egwIJQOYMmy5eSvKT@Veai@SMVj7UtQgtUgdbX9AQ\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<h3>How?</h3>\n<p>Numbers of the form <span class=\"math-container\">\\$2^n-1,\\:n&gt;1\\$</span> can be computed recursively with:</p>\n<p><span class=\"math-container\">$$\\begin{cases} a(0)=3\\\\a(n)=2\\times a(n-1)+1\\end{cases}$$</span></p>\n<p>Hence the golfed recurrence formula: <code>k-=~k</code>.</p>\n<h3>Commented</h3>\n<pre class=\"lang-javascript prettyprint-override\"><code>n =&gt; {         // n = input\n  for(         // outer loop:\n    k = 1;     //   start with k = 1\n    n;         //   stop when n = 0\n               //   after each inner loop,\n    n -= d &lt; 2 //   decrement n if d = 1 (i.e. k is prime)\n  )            //\n    for(       //   inner loop:\n      d =      //     update k to the next number of the form 2**N - 1\n      k -= ~k; //     and initialize the divisor d to the same value\n      k % --d; //     decrement d until it divides k\n    );         //\n  return k     // k is the n-th Mersenne prime: return it\n}              //\n</code></pre>\n"},{"answer_id":251625,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251625#251625","body":"<h1><a href=\"http://www.swi-prolog.org\" rel=\"nofollow noreferrer\">Prolog (SWI)</a>, 85 bytes</h1>\n<pre><code>Y+X:-X mod Y&lt;1-&gt;Y&lt;X;Y+1+X.\nQ-N-R:-2+Q,Q- \\Q-N-R;N&gt;1,Q- \\Q-(N-1)-R;R is Q.\nW-R:-3-W-R.\n</code></pre>\n<p><a href=\"https://tio.run/##LYo7CoAwEAV7T7GlEl8gahXFIwRi4wYsBQmoERU8fvxgNcww2x7mMOG4fIxOsAbTEkZyjULrGq6dUIJlYmHQaRTC5hY0fFqbVv2WGqjsKR35g6xM@ncu8UBGDarAOW27X8@UMxlv\" rel=\"nofollow noreferrer\" title=\"Prolog (SWI) – Try It Online\">Try it online!</a></p>\n<p>-4 bytes thanks to Jo King</p>\n"},{"answer_id":111724,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111724#111724","body":"<h1>MATL, <s>14</s> <s>12</s> 4 bytes</h1>\n<pre><code>H&amp;XX\n</code></pre>\n<p>Try it at <a href=\"https://matl.io/?code=H%26XX%0A%0AZD&amp;inputs=%7B%27here+is%2Csome%2Csample%27%2C%27data%2Cdelimited%2Cby+commas%27%7D%0A%27%2C%27&amp;version=19.8.0\" rel=\"nofollow noreferrer\"><strong>MATL Online</strong></a> (the link has a modification at the end to show the dimensionality of the output cell array).</p>\n<p><strong>Explanation</strong></p>\n<pre><code>        % Implicitly grab the first input as a cell array of strings\n        % Implicitly grab the delimiter as a string\nH       % Push the number literal 2 to the stack\n&amp;XX     % Split the input at each appearance of the delimiter\n        % Implicitly display the result\n</code></pre>\n"},{"answer_id":136722,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136722#136722","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 8 bytes</h1>\n<pre><code>&amp;=Rsqf1)\n</code></pre>\n<p>Gives an error (without output) if no duplicate exists.</p>\n<p>Try at <a href=\"https://matl.io/?code=%26%3DRsqf1%29&amp;inputs=%5B2%2C+3%2C+3%2C+1%2C+5%2C+2%5D&amp;version=20.2.2\" rel=\"nofollow noreferrer\"><strong>MATL Online!</strong></a></p>\n<h3>Explanation</h3>\n<pre><code>&amp;=   % Implict input. Matrix of all pairwise equality comparisons\nR    % Keep the upper triangular part (i.e. set lower part to false)\ns    % Sum of each column\nq    % Subtract 1\nf    % Indices of nonzero values\n1)   % Get first. Gives an error is there is none. Implictly display\n</code></pre>\n"},{"answer_id":121057,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121057#121057","body":"<h1>MATL, <s>8</s> 7 bytes</h1>\n<pre><code>46&amp;YbO)\n</code></pre>\n<p>Try it at <a href=\"https://matl.io/?code=46%26YbO%29&amp;inputs=%27what..is..this..file%27&amp;version=19.11.0\" rel=\"nofollow noreferrer\">MATL Online</a>!</p>\n<p><strong>Explanation</strong></p>\n<pre><code>        % Implicitly grab input as string\n46      % ASCII for '.'\n&amp;Yb     % Split the input string at the '.' characters\nO)      % Retrieve just the last part\n        % Implicitly print the result\n</code></pre>\n"},{"answer_id":251627,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251627#251627","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 7 bytes</h1>\n<pre><code>&amp;‘&lt;Ẓø#Ṫ\n</code></pre>\n<p><a href=\"https://tio.run/##ARkA5v9qZWxsef//JuKAmDzhupLDuCPhuar///80\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<pre><code>     #     Count up the first n matches\n      Ṫ    then take the last\n    ø      starting from 0:\n&amp;          Is the candidate bitwise AND\n ‘         itself + 1\n  &lt;        less than\n   Ẓ       whether or not it's prime?\n</code></pre>\n"},{"answer_id":251623,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251623#251623","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 14 bytes</h1>\n<pre><code>;2{;X≜^-₁ṗ}ᶠ⁽t\n</code></pre>\n<p><a href=\"https://tio.run/##AVAAr/9icmFjaHlsb2cy/3t3IiAtPiAidz/ihrDigoLhuol94bWQ/zsyeztY4omcXi3igoHhuZd94bag4oG9dP//WzEsMiwzLDQsNSw2LDcsOCw5XQ\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<p>Worth noting it started with <code>∧{≜;2↔^-₁ṗ}ᶠ↖?t</code>.</p>\n<pre><code>;2{       }ᶠ⁽     Find the first n possible outputs given 2 from:\n   ;X             pair the 2 with an unbound variable,\n     ≜            label the variable to an integer,\n      ^           raise the 2 to that power,\n       -₁         subtract 1,\n         ṗ        and fail if not prime.\n             t    Yield only the last of the results.\n</code></pre>\n"},{"answer_id":251620,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251620#251620","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 52 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{r=1;1until(2...r+=r+1).all?{|x|r%x&gt;0}&amp;&amp;1&gt;n-=1;r}\n</code></pre>\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6vusjW0NqwNK8kM0fDSE9Pr0jbtkjbUFMvMSfHvrqmoqZItcLOoFZNzdAuTxeosqj2f4FCWrRR7H8A\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":251598,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251598#251598","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>G</code>, 7 bytes</h1>\n<pre><code>Þ∞E‹~æẎ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJHIiwiIiwiw57iiJ5F4oC5fsOm4bqOIiwiIiwiMSJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>7 bytes flagless (change <code>Ẏ</code> to <code>i</code>) if 0-indexing is allowed.</p>\n<h2>But how?</h2>\n<pre><code>Þ∞E‹~æẎ\nÞ∞      # all positive integers\n  E‹    # as the power of 2 minus 1 (basically, all numbers that are of the form 2^m -  1)\n    ~æ  # with only primes kept\n      Ẏ # take the first (input) items\n# The -G flag outputs the biggest of the final list\n</code></pre>\n"},{"answer_id":251607,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251607#251607","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 7 bytes</h1>\n<pre><code>!fṗm←İ2\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/XzHt4c7puY/aJhzZYPT//39TAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<pre><code>!fṗm←İ2\n   m    # map over\n     İ2 # powers of 2\n    ←   # decrementing each one\n f      # then filter to keep only\n  ṗ     # primes\n!       # and get the input-th one.\n</code></pre>\n"},{"answer_id":251602,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251602#251602","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 28 bytes</h1>\n<pre><code>2^MersennePrimeExponent@#-1&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2773yjON7WoODUvLzWgKDM31bWiID8vNa/EQVnXUO0/UCivRMEhPdok9v9/AA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":251601,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251601#251601","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 26 bytes</h1>\n<pre><code>Ｎθ≔¹ηＷθ«≔⊕⊗ηη≧⁻﹪±Π…¹ηηθ»Ｉη\n</code></pre>\n<p><a href=\"https://tio.run/##LU67DoMgFJ31KxiviR06dHJq2sVBY/wDxBsgQVC4tEPTb6cYOp2cnKdQ3AvHTUq93SONcVvQw9F09T0ELS1cW6YyeyttkGWBferqL/VWeNzQEq7wdHExGVXTlEA18L34Zi0VwaBtDC0b3BqNgxElJ4TJZyoIZm4llqmSb9l54VtPXluCBw90Nncp3dLlZX4\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>Ｎθ\n</code></pre>\n<p>Input <code>n</code>.</p>\n<pre><code>≔¹η\n</code></pre>\n<p>Start with <code>1</code>.</p>\n<pre><code>Ｗθ«\n</code></pre>\n<p>Repeat until <code>n=0</code>.</p>\n<pre><code>≔⊕⊗ηη\n</code></pre>\n<p>Double and increment the value.</p>\n<pre><code>≧⁻﹪±Π…¹ηηθ\n</code></pre>\n<p>If the value is prime then decrement <code>n</code>. For decremented powers of 2, <code>(n-1)!%-n</code> is either <code>0</code> for composite or <code>-1</code> for prime. (In fact, <code>(n-1)!²%n</code> is <code>0</code> for any positive non-prime and <code>1</code> for any prime.)</p>\n<pre><code>»Ｉη\n</code></pre>\n<p>Output the final value.</p>\n"},{"answer_id":251599,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251599#251599","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"nofollow noreferrer\">Retina</a>, 38 bytes</h1>\n<pre><code>\\d+\n_\n$\n_$`\n&quot;$+&quot;}/^(__+)\\1+$/+`$\n_$`\n_\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxLNPz/PyZFmyueS4UrXiWBS0lFW6lWP04jPl5bM8ZQW0VfOwEiEf//vykA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a> No test suite due to the program's use of history. Explanation:</p>\n<pre><code>\\d+\n_\n</code></pre>\n<p>On the first pass through the loop, replace the input with <code>1</code> in unary.</p>\n<pre><code>$\n_$`\n</code></pre>\n<p>Double and increment the value.</p>\n<pre><code>/^(__+)\\1+$/+`\n</code></pre>\n<p>While the value is composite...</p>\n<pre><code>$\n_$`\n</code></pre>\n<p>... double and increment the value.</p>\n<pre><code>&quot;$+&quot;}\n</code></pre>\n<p>Repeat the above <code>n</code> times.</p>\n<pre><code>_\n</code></pre>\n<p>Convert to decimal.</p>\n"},{"answer_id":251597,"question_id":251594,"link":"https://codegolf.stackexchange.com/questions/251594/find-the-nth-mersenne-prime/251597#251597","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.primes.lucas-lehmer</code>, 48 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 1 lfrom [ lucas-lehmer ] lfilter lnth 2^ 1 - ]\n</code></pre>\n<p><a href=\"https://tio.run/##VYzBCsIwEETv@Yr5gQYUT/UDxIsX8VRaCGFLg5u0bNZD/fm46MnLMLx5zByirtIe9@vt0uNJUojBqWr9pefw3pGDLt/wm6RMRl8x1I5pySTYhFR3W4ri7NzJtQEH8CxrxoA/dTScWK1xscvjZGKHscXADN8@\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>0-indexed.</p>\n<ul>\n<li><code>1 lfrom</code> A lazy list of the natural numbers</li>\n<li><code>[ ... ] lfilter</code> Select the ones that...</li>\n<li><code>lucas-lehmer</code> ...are Mersenne numbers</li>\n<li><code>lnth</code> Take the nth one</li>\n<li><code>2^ 1 -</code> Turn a Mersenne number into a Mersenne prime</li>\n</ul>\n"},{"answer_id":25142,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/25142#25142","body":"<h2>JavaScript (ES6) - 24 Characters</h2>\n<pre><code>f=x=&gt;x&lt;3?1:f(x-1)+f(x-2)\n</code></pre>\n<h2>JavaScript - 24 Characters (snippet)</h2>\n<pre><code>for(a=b=1;--n;a=b-a)b+=a\n</code></pre>\n<p>Set a value for <code>n</code> and it will calculate the nth Fibonacci value.</p>\n"},{"answer_id":78685,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/78685#78685","body":"<h1>Molecule (v6+), 19 bytes</h1>\n<pre><code>0{1+_p?~}u1000000L\n</code></pre>\n<p>Explanation:</p>\n<pre><code>0{1+_p?~}u1000000L\n0{1+_p?~}          Push 0, add a code block.\n         u1000000  Push one million.\n                 L Repeat the code block 1000000 times.\n</code></pre>\n"},{"answer_id":251555,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/251555#251555","body":"<h1><a href=\"https://factorcode.org\" rel=\"nofollow noreferrer\">Factor</a> + <code>pair-rocket sequences.repeating</code>, 62 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ &quot;bcdfghjklmnpqrstvwxyz&quot;=&gt; &quot;aeiou&quot;swap cycle [ random ] map ]\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=RYwxDoIwFEB3TvHTHTcTo5FR4-JinAhD_XywUtryW0S8iguLDt6I22hCjNNL3kve41VIDJaHcXM87PbbJTipOGaLFQWoiA1p8NS0ZJD8jMmRDMqUwNLktv4nUBZWUTR_tqGIF2OSgjhhXpTnS6Vr4xr24drd-rtYJyAkKdsK30kH2KMmSH-_DOqvzKbLG6XW0LEKNIlhmPgB\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<pre><code>                                   ! 5\n&quot;bcdfghjklmnpqrstvwxyz&quot;=&gt; &quot;aeiou&quot;  ! 5 { &quot;bcdfghjklmnpqrstvwxyz&quot; &quot;aeiou&quot; }\nswap                               ! { &quot;bcdfghjklmnpqrstvwxyz&quot; &quot;aeiou&quot; } 5\ncycle                              ! { &quot;bcdfghjklmnpqrstvwxyz&quot; &quot;aeiou&quot; &quot;bcdfghjklmnpqrstvwxyz&quot; &quot;aeiou&quot; &quot;bcdfghjklmnpqrstvwxyz&quot; }\n[ random ] map                     ! &quot;furom&quot;\n</code></pre>\n"},{"answer_id":251554,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/251554#251554","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 89 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=(n,b)=&gt;(b?&quot;aeiou&quot;:&quot;bcdfghjklmnpqrstvwyxz&quot;)[~~(Math.random()*(b?5:21))]+(--n?f(n,!b):&quot;&quot;)\n</code></pre>\n<p><a href=\"https://tio.run/##ZYxbCsIwEACvsgY/djUtqIhYUE/gCUqh6SOtGrPaxvooiofwhF6k6rd/A8PMVjWqTqvNwXmWs7zr9AKtTGixxGQlVL7hkwhEkma6KLc7s7eHY1W75ny93ASFjweulSv9StmM90iDbzQNxiOiaIieZ1f6O@slFAhBneYKMGVbOzDAGsKJhKmEmYR5RPATbHLfcIFxvzV3eD9fS@i3Gg3d5R/E1H0A\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online! (includes tests)</a></p>\n<p>Takes <code>n</code> as length and <code>b</code> as whether to return vowel or consonant, default consonant.</p>\n<p>Returns consonant or vowel based on <code>b</code>, decrements <code>n</code> and recurses with opposite <code>b</code> value.</p>\n"},{"answer_id":251551,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/251551#251551","body":"<h1><a href=\"https://www.gnu.org/software/bash/\" rel=\"nofollow noreferrer\">Bash</a>, <sup>93</sup> 89 bytes</h1>\n\n<pre class=\"lang-bash prettyprint-override\"><code>v=aeiou]\nuntil tr -dc a-z&lt;/dev/urandom|head -c$1|grep -E &quot;^[^$v([$v[^$v)*[$v?$&quot;;do\n:\ndone\n</code></pre>\n<p><a href=\"https://tio.run/##S0oszvhfnFqiYPK/zDYxNTO/NJarNK8kM0ehpEhBNyVZIVG3ykY/JbVMv7QoMS8lP7cmIzUxRUE3WcWwJr0otUBB11VBKS46TqVMI1qlDERragEZ9ipK1in5XFZcKfl5qf//AwA\" rel=\"nofollow noreferrer\" title=\"Bash – Try It Online\">Try it online!</a></p>\n<p>A full command line program.</p>\n<p>It generates random lowercase alpha strings of the required size in a loop until we find one matching the pattern <code>^&lt;vowel&gt;(&lt;cons&gt;&lt;vowel&gt;)*&lt;cons&gt;?</code>.</p>\n"},{"answer_id":251543,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/251543#251543","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 12 bytes</h1>\n<pre><code>RC*[.CZVW]Ha\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJwaXAiLCIiLCJSQypbLkNaVlddSGEiLCIiLCIiLCI3Il0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<h3>Explanation</h3>\n<p>This should be 11 bytes; the <code>.</code> is a no-op to work around a bug in the current language version.</p>\n<pre><code>RC*[CZVW]Ha\n   [    ]    List containing:\n    CZ         Lowercase consonants\n      VW       Lowercase vowels\n          a  Command-line argument\n         H   Take that many elements (cycling the list as necessary)\nRC*          Random choice from each\n</code></pre>\n<hr />\n<p>I also found several 13-byte solutions:</p>\n<pre><code>RC{VW::CZ}M,a\nRC[CZVW]@_M,a\nLaORC(VW::CZ)\n</code></pre>\n"},{"answer_id":251506,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/251506#251506","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>s</code>, 9 bytes</h1>\n<pre><code>⟑₂¨ikvk¹℅\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJzIiwiIiwi4p+R4oKCwqhpa3ZrwrnihIUiLCIiLCI3Il0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Explanation:</p>\n<pre><code>⟑          # Map over the range 1 to n\n ₂¨i       # If even:\n    kv     #   Push the string &quot;aeiou&quot;\n           # Otherwise:\n      k¹   #   Push the lowercase consonants\n        ℅  # Get a random character from the top of the stack\n           # Concatenate the character list into a string with the s flag\n</code></pre>\n"},{"answer_id":251495,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/251495#251495","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 83 bytes</h1>\n<pre class=\"lang-py prettyprint-override\"><code>lambda n:[*map(choice,[&quot;bcdfghjklmnpqrstvwxzy&quot;,&quot;aeiou&quot;]*n)][:n]\nfrom random import*\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=LYw9DsIgGEB3T0GIAzSYaCfTxFM4Ygf6Q_m0fCBStV7FhcTonbyNmjq94b28-8uP0ThMD73ZPYeoF-v3tle2ahTBQmZWeVYbB3UrJK3qRndmf-gt-mM4xfPlehupoKoFN9AyQ17KAsuZDs6SoLD5Aqx3IWb_9Vy7QIAA_nTXspXIlyLnhQ-AkYHQDDif2pQmfgA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Outputs a list of characters.</p>\n<p>This is conceptually the same as <a href=\"https://codegolf.stackexchange.com/a/11879/113573\">grc's answer for &quot;Generate a pronounceable word&quot;</a>, since the questions are almost identical.</p>\n"},{"answer_id":251406,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/251406#251406","body":"<h1><a href=\"https://github.com/TvoozMagnificent/SunSip\" rel=\"nofollow noreferrer\">SunSip</a> <code>-w -n</code>, 298 bytes</h1>\n<p>(just means disable warnings and newlines)</p>\n<pre><code>set a to\ndefined\nset 5 to 5\ncalc multiplication 5 last\nskip\nset to &quot;\nin\ncalc int last\nrecurse\nout\nset to 1\ncalc greater a last\ncalc multiplication 5 last\nskip\nset to 1\nexit\n\n\n\nset 1 to 1\ncalc subtraction a 1\nrecurse\nset b to\ncalc subtraction a 1\ncalc subtraction last 1\nrecurse\ncalc addition last b\n</code></pre>\n<p>A big fat 298 bytes but I'm still proud.</p>\n<p>Syntax Highlighted:</p>\n<p><img src=\"https://i.stack.imgur.com/yjXEn.png\" alt=\"\" /></p>\n"},{"answer_id":223243,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223243#223243","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, <s>36</s> <s>35</s> <s>33</s> 32 bytes</h1>\n<p><em>-2 bytes thanks to dingledooper</em></p>\n<pre><code>1x&lt;&gt;~~/^(..?)*$(??{++$i})/;say$i\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9n5evUJ5YlJeZl16soJ5aUZBalJmbmleSmGNlVZybWFSSm1iSnKFu/d@wwsaurk4/TkNPz15TS0XD3r5aW1sls1ZT37o4sVIl8/9/I9N/@QUlmfl5xf91fU31DAwNAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>This works by using the regex <code>^(..?)*$</code> to count <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Symbolic_method\" rel=\"nofollow noreferrer\">how many distinct partitions</a> <span class=\"math-container\">\\$n\\$</span> has as a sum of the numbers <span class=\"math-container\">\\$1\\$</span> and <span class=\"math-container\">\\$2\\$</span>.</p>\n<p>For example, <span class=\"math-container\">\\$5\\$</span> can be represented in the following <span class=\"math-container\">\\$8\\$</span> ways:</p>\n<pre><code>1+1+1+1+1\n1+1+1+2\n1+1+2+1\n1+2+1+1\n1+2+2\n2+1+1+1\n2+1+2\n2+2+1\n</code></pre>\n<p>This tells us that the <span class=\"math-container\">\\$F_5=8\\$</span>.</p>\n<p>I had this basic idea on <a href=\"https://gist.github.com/Davidebyzero/9090628#gistcomment-1185486\" rel=\"nofollow noreferrer\">2014-03-05</a> but it didn't occur to me until today to try coding it into a program.</p>\n<p><em>The following two paragraphs explain the <strong>33 byte</strong> version:</em></p>\n<p>To count the number of distinct matches <code>^(..?)*$</code> can make in a string <span class=\"math-container\">\\$n\\$</span> characters long, we must force Perl's regex engine to backtrack after every time the regex completes a successful match. Expressions like <code>^(..?)*$.</code> fail to do what we want, because Perl optimizes away the non-match, not attempting to evaluate the regex even once. But it so happens that it does <em>not</em> optimize away an attempt to match a backreference. So we make it try to match <code>\\1</code>. This will always fail, but the regex engine isn't &quot;smart&quot; enough to know this, so it tries each time. (It's actually possible for a backreference to match after <code>$</code> with the multiline flag disabled, if it captured a zero-length substring. But in this particular regex, that can never happen.)</p>\n<p>Embedded code is used to count the number of times the regex engine completes a match. This is the <code>(?{++$i})</code>, which increments the variable <code>$i</code>. We then turn it into a non-match after the code block executes.</p>\n<p>To get this down to <strong>32 bytes</strong>, a &quot;postponed&quot; regular subexpression embedded code block is used, <code>$(??{</code>...<code>})</code> instead of <code>$(?{</code>...<code>})</code>. This not only executes the code, but then compiles that code's return value as a regex subexpression to be matched. Since the return value of <code>++$i</code> is the new value of <code>$i</code>, this will cause the match to fail and backtrack, since a decimal number (or any non-empty string) will never match at the end of a string.</p>\n<p>This does make the 32 byte version about 7 times slower than the 33 byte version, because it has to recompile a different decimal number as a regex after each failed match (i.e. the same number of times as the Fibonacci number that the program will output). Using <code>(??{++$i,0})</code> is almost as fast as <code>(?{++$i})\\1</code>, as Perl optimizes the case in which the return value has not changed last time. But that would defeat the purpose of using <code>$(??{</code>...<code>})</code> in the first place, because it would be 1 byte longer instead of 1 byte shorter.</p>\n<p>As to the sequence itself – for golf reasons, the program presented above defines <span class=\"math-container\">\\$F_0=1,\\ F_1=1\\$</span>. To define <span class=\"math-container\">\\$F_0=0,\\ F_1=1\\$</span> we would need an extra byte:</p>\n<pre><code>1x&lt;&gt;~~/^.(..?)*$(??{++$i})/;say$i\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9n5evUJ5YlJeZl16soJ5aUZBalJmbmleSmGNlVZybWFSSm1iSnKFu/d@wwsaurk4/Tk9DT89eU0tFw96@WltbJbNWU9@6OLFSJfP/fyOzf/kFJZn5ecX/dX1N9QwMDQA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>In the versions below, <code>(?{++$i})\\1</code> is used for speed (at the golf cost of 1 extra byte), to make running the test suite more convenient.</p>\n<p>Here it is as a (reasonably) well-behaved anonymous function (<strong><s>47</s> <s>46</s> 44 bytes</strong>):</p>\n<pre><code>sub{my$i;1x pop~~/^.(..?)*$(?{--$i})\\1/;-$i}\n</code></pre>\n<p><a href=\"https://tio.run/##VY5NCsIwFISv8pBAErXRIm6M1YuIEDXVB00aktS/UpcewCN6kdq6EFzNN/ANjNO@mLdV0BCix32U0PNFeYv2GCTY8leA6qvTHo22URWLRTDKR6Pi/kTH9FzioYuqMzGiKvCuD1SCuQHJszZUu9rcCMr0Cq50j8dkK5gQaz4kbF0nCcGGb9KJ7KGVfw/y0rN@mk0lwWU2S7sYjXgNmDOCvHYebRxs7KCBLwJBQeH9fAEVjOTJqre4bNoP\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a> - Displays <span class=\"math-container\">\\$F_0\\$</span> through <span class=\"math-container\">\\$F_{31}\\$</span></p>\n<p>The above actually runs faster than the standard recursive approach (<strong>39 bytes</strong>):</p>\n<pre><code>sub f{my$n=pop;$n&lt;2?$n:f($n-2)+f($n-1)}\n</code></pre>\n<p><a href=\"https://tio.run/##HcpBCsIwEEDRqwwl0IRgsRU3ToMXcaPSyIBOQ5IiErL1AB7Ri8Sa1f@L5yZ/35clTBCip2tE@P/z7Jn4FrCE5QI2PV6CjZsdCh6Ho@CDlYI3g9K1vcoF7ezlyshsUdBodv0arVUCWg2p5DxxbE7cZKgLgroWvu8PtJ2sRGEuPw\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a> - Displays <span class=\"math-container\">\\$F_0\\$</span> through <span class=\"math-container\">\\$F_{31}\\$</span></p>\n<p>If that is golfed down using <a href=\"https://codegolf.stackexchange.com/a/182864/17216\">Xcali's technique</a> it becomes even slower, at <strong>38 bytes</strong>:</p>\n<pre><code>sub f{&quot;@_&quot;&lt;2?&quot;@_&quot;:f(&quot;@_&quot;-2)+f(&quot;@_&quot;-1)}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9X1qcqlBcUpSZXGKtAGKXJxblZealF1v/Ly5NUkirVnKIV7IxsgdRVmkaIErXSFMbyjLUrP1vnZZfpJFbqZJpa2Ctkmlja2wIpLS1NasVMtM0VDI1qwuKMvNKlGLylGoVwEwFlUw9dYVHbZMU1PU0wEo0FWr/AwA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a> - Displays <span class=\"math-container\">\\$F_0\\$</span> through <span class=\"math-container\">\\$F_{31}\\$</span></p>\n<p>or with the same indexing as my main answer here, <strong>34 bytes</strong>:</p>\n<pre><code>sub f{&quot;@_&quot;&lt;2||f(&quot;@_&quot;-2)+f(&quot;@_&quot;-1)}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9X1qcqlBcUpSZXGKtAGKXJxblZealF1v/Ly5NUkirVnKIV7IxqqlJ0wCxdI00taEsQ83a/9Zp@UUauZUqmbYG1iqZNrbGIEpbW7NaITNNQyVTs7qgKDOvRCkmT6lWAcxUUMnUU1d41DZJQV1PA6xEU6H2PwA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a> - Displays terms <span class=\"math-container\">\\$0\\$</span> through <span class=\"math-container\">\\$30\\$</span></p>\n<p>See <a href=\"https://codegolf.stackexchange.com/questions/182797/patience-young-padovan/223250#223250\">Patience, young &quot;Padovan&quot;</a> for more variations and comparisons.</p>\n<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 28 bytes</h1>\n<pre><code>1x$_~~/^(..?)*$(??{++$\\})/}{\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9n5evUJ5YlJeZl16soJ5aUZBalJmbmleSmGNlVZybWFSSm1iSnKFu/d@wQiW@rk4/TkNPz15TS0XD3r5aW1slplZTv7b6/38j03/5BSWZ@XnF/3ULAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>I've just learned now, 16 months after posting the main answer above, that <a href=\"https://codegolf.stackexchange.com/questions/155938/sum-of-combinations-with-repetition/155955#155955\">Ton Hospel's Sum of combinations with repetition</a> answer used this same basic technique, predating my post by 3 years.</p>\n<p>By combining the tricks used in that answer with those already used here, the program length can be reduced even further.</p>\n<p>Perl actually literally wraps the program in a loop using string concatenation when called with <code>-p</code>, which I was surprised to learn (I would have implemented it in Perl as an emulated loop). So when this program is wrapped in <code>while (&lt;&gt;) {</code> ... <code>; print $_}</code> by the <code>-p</code> flag, it becomes:</p>\n<pre><code>while (&lt;&gt;) {1x$_~~/^(..?)*$(??{++$\\})/}{; print $_}\n</code></pre>\n<p><code>while (&lt;&gt;)</code> implicitly assigns the input from stdin, <code>&lt;&gt;</code>, to <code>$_</code> (which isn't done when using <code>&lt;&gt;</code> normally) at the beginning of each iteration of its loop.</p>\n<p><code>$\\</code> is the <code>print</code> output terminator. By default it is empty, but the above program turns it into an integer by incrementing it on every possible match found by the regex. If only one number <span class=\"math-container\">\\$n\\$</span> is sent to the program via stdin, followed by EOF, then upon exiting the loop <code>$\\</code> will actually represent the <span class=\"math-container\">\\$n\\$</span>th Fibonacci number.</p>\n<p>The <code>while (&lt;&gt;)</code> exits when it encounters EOF, giving <code>$_</code> an empty value. So then <code>print $_</code> will print that empty value, followed by the value of <code>$\\</code>.</p>\n<p>As such, it defeats the intended purpose of the <code>-p</code> flag, as this program works properly when given a single value followed by EOF; if given multiple newline delimited values, it will output the sum of those Fibonacci numbers after finally being sent EOF (if running the program interactively, this would be done by pressing Ctrl+D at the beginning of a line).</p>\n<p>Contrast this with an actually loopable Perl <code>-p</code> program at <strong>37 bytes</strong>:</p>\n<pre><code>1x$_~~/^(..?)*$(?{++$i})\\1/;$i%=$_=$i\n</code></pre>\n<p><a href=\"https://tio.run/##DcvNCoJAFAbQ/fcULibUJPVe/xXxTZIhhhrQUVRIiHz0JrcHzqyWIbNmct5yMdo8V8dV@6wWPSqzyaGu11Eu2yi3x8ttLO2iP47o7oVh51@F13WfIBD660eN0JdW9K3Q1sYgMBKkyJCjQIkKdCKBGJSAUlAGykEFqARV4Bh8HgYn4BSc/aZ505NZ7W0e/g\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>If the same multiline input is given to the 28 byte program, this happens: <a href=\"https://tio.run/##DctLCoMwFAXQ@V2FA0GtVH1P468DN1JaQpFW0BhioILo0ps6PXB0b0bh1Ox9pVGDei9e0K@6N8PUKyvHtl0maewk7esT3Byt/vM40keYJF108cOu2@LYv@9Rum/OZSAwchQQKFGhRgM6kUAMykEFSIBKUAWqQQ04A5@HwTm4AIvfrO0wq8Vd9fgH\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>Sadly, the <code>$\\</code> trick can't be used with <code>say</code>; it only applies to <code>print</code>. The <code>$,</code> variable applies to both <code>print</code> and <code>say</code>, but only comes into play if at least two items are printed, e.g. <code>say&quot;&quot;,&quot;&quot;</code>.</p>\n"},{"answer_id":250137,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/250137#250137","body":"<h2>Regex <code>🐇</code> (ECMAScript<sup><sup><a href=\"https://github.com/Davidebyzero/RegexMathEngine/\" rel=\"nofollow noreferrer\">RME</a></sup></sup> / Perl / PCRE / Raku), 8 bytes</h2>\n<pre><code>^(xx?)*$\n</code></pre>\n<p>Takes its input in unary, as a string of <code>x</code> characters whose length represents the number. Returns its output as the number of ways the regex can match. (The rabbit emoji indicates this output method. It can yield outputs bigger than the input, and is really good at multiplying.)</p>\n<p><a href=\"https://replit.com/@Davidebyzero/regex-Fibonacci-sequencehttps://replit.com/@Davidebyzero/regex-Fibonacci-sequence\" rel=\"nofollow noreferrer\">Try it on replit.com</a> (RegexMathEngine)<br />\n<a href=\"https://tio.run/##RU/LTsMwELz3K1bWqvKSR5MiLnVelcqVEzdarBK1koVpgx2kQBKOfACfyI@kTkDistqdnd2ZqQ5G3wwv74BGQKvP5V4DLoQb02Szvl9n/ex4NhxtGokkE9SCOrqJ2sqoUw1se2Kih0KnttKq5ixgvn17srU7kX4Q@zEdXkdS/o9GDqcVShLjL@sU96bQyZLaQj/Eu9TVaCf6GcCkrP4AVEk6EVznedRi6SwBZw1rUFH6ueB5x/MVGuJ563lY9rR9TqT8yDrk@dSERGM0O59P7ifzLlks4DcNqpDBz9c3sBBLR@zcqu@lvL3bSDk88qbJ6QqHIQqulxc\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a> - Perl v5.28.2<br />\n<a href=\"https://ato.pxeger.com/run?1=RU-7TsMwFBVrv8Kyripf8mhSFlTnVamsTGxtsUrUSBamDXEqBZIw8gGsLB2KxDcx8iU4SSUW-5zjc33P-Tzl20Idfy7g6YVAwUmt9ulGEZhwQ8NgMb-bR-0o2xcMdOjxIOJYE5kZhnVeyF1J6GpHeUsSFepcyZJRh9r68KBLMyJsx7d93D53pvhf9YyOMxDIu7-02bgpEhVMsU7U0l-H5vTWvB0R0m-WZwFkEPYGgywLa0hNJMJoRSuQGL5NWNyweAYFsri2LEhbXD0GQrxGDbC4By5iV02Px336Prxp5nMytAHpUvL7_kGoC6kxNuapbYW4uV0I8XUoM-f6-55VVYyXMNDj-Tp5ztV0wH8\" rel=\"nofollow noreferrer\" title=\"Perl – Attempt This Online\">Attempt This Online!</a> - Perl v5.36+<br />\n<a href=\"https://tio.run/##fVThbpswEP6fp7iytTGBVKGRpglCo67rtB9ZO0WptCnNEHUMsUoMMrCk7fp3D7BH3IMsO@OQ0nUbSsCc77777rszNMu6MaWbF1zQpJwzGGRUssPFcYsuQglBNp2BD2PjzWp1c90vP9/efposXq0WZPOFrNdDs/NyY/65Z9jQyfwgsxyv9YibF3OeKuCmSXIRP7XxFK0sXD73O25xUUCGyyJgUqaS0FTkBVREO0uW52HMzHvM47oUHWAwgK1VLSs7E/PEA8mKUgpwvIdWKXIeCzaHJBWxvoUiXzHpVdmWtwENkyQtC6J0qV@C6ySlN9ChJtxrd8vawfYQtooNuSDo0AK8sikWkTBBMrPrzPyeB5qQLg0y6htk6Boeriw/0w/DJMNT/O@ZaC8Rsn8UFJCqYIUf46LCbgJxkZWFCpcMOpJ50NQIRckKqaMly8uk0GulZhTlrLABi0OWcbHQO@lXRotUTvsznQpRfdBKpMuMJwxlOaQBJiemDR9Px2fB24vJyWgE3/Tb5eTdaxsOdGa9qFP1TI3JIyB7kpm1flHV4ohgWehtg6GAKo4SQqRUhcP@3IX9/ErgsDUwdZ4tcLNjSPuxl3o7QjyiirxTilYixqxIuGBEzxAXttbT9NDHqVtZccYw0UPQsEg5qZxqGVAH4diQpTlu652Iizlpd9tbXuoSjhISffb8Zv9cVyjj8C@4YFX@FiARF5M/YunmqnSCrfTbVDiWM/Nw/peoC8ltaK/bihiWkuPmzG/E74TgvlCzNfCF44Fl8WbFdafuTEBSKglpX4m2lmYrH1VC41Hj6mbAz@8/ACdXHxBk10ipZ0lNYD1PbM0okcyG88vRyAZkzHFEqt92CG3om94zPhpl0IODgxoRJa1m72w8vhgH5xcfTian780nkbtjU1M2ztR8GU/xWZKz/4dta6s/L1FS5ot/VNmo/qGl79VMu3oYJWNYi7n7imzPZ@th0@v2j37RKAnjfNNNlFi/AQ\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a> - PCRE1<br />\n<a href=\"https://tio.run/##hVXrTuNGFP6fpzh4W5hJnG0S1BWKMYgNkUDahVU2qNtlqWXscTJaZ2zZ4w1Q8bcP0EfsgzQ9c3FiSKRa4Mycy3fux1Ged2dRtHoTs4QLBp9Gk/EgGF2fj4Obq8tp8Nvl@fQCjlpvuIjSKmZwnEcFG7ydn7SieVhAkN/egQ8T5/1y@f3@sPr98fHLdP5uOSerP8jDwylt/7Sir3mOC@3cD/JO32sAl7LgYqaQNzSeIZWFi5MtuZMWFxJyPMqAFUVWkCgTpQTtVXvByjKcMQp/ljIeDiOUgONjsGR11HQm4tSDgsmqEND3nrcw1T3KYubCfZalkPlJmJYKVpuxcLeDX9/deS3AhydAdIKCGbMYgZUiBoeYDN@MLs4mR21qmS6U/IllCVk7/ktNachTSrUV9ZAMTk0QUVZJGMI6UKrCc7QaaA@G4LwKXis7Dmo534RD1/lI0qqcm0jWSWk9typR8plgMaSZmJlXKMolKzydsMVjEIVpim7Y2O0tuE@z6Du0Ixd@ZDyGdhzKEHOnkqSO4PtAFKdN9zcY1GJ3OuvK9GxlFiEXBAG0g/ktNkLKBMlpt3/n9zwTgukOyCPfIadDx8NTx8/Nj0PJ6Qj/9yjSK0Q8HAQSi4q6Cn6GBw3dBOIir6RS14FhCaFdsPq@CGU0D3Qs7c3ZoBWsrFLpmhJ4drA@X34da0qSlAyZGC@GMJPzFwLt7AeLJGrZSuCA1fYXOU8ZsU3x@dN0QvPobRSgs4S6FuPreHIdTMeTj5dXZ9PxeU0ef5mOr87VfV/7ZH@tJz266eC9AhvQ5r45Dfpt5Rqh@1vZCPAeShYkRbYI8lBKVghSYJdf3Xz4YAGaOji6kj1ITGJ98nfxLSzZQsEI1i1YQ7iNvnR39dlrAGMq5QveBOn2qdcQilku/1eoYFFVlDwTOwW12SQrQG@Xp3Xn4sZIcQUTM8hcuKb3qFd3vC4PqogepieUGSdaoC4/1l/0XcizEtmGgys9JgfdA2tUPaKvcosye36zz4dDoYinO3Cho@U70Ke4MERvg2V2rTIn2NLcbkW/07/zcNksMBOkdOHg4UA5hgkqkXnnN/TXSeC@UDN47Iu@B50Ob0ZcN@UTBXRKGSEH3wSGhKlDad2fCXF@juGfv/4G/LRwZJkVgo41rJlZUkP5srt0YzYnCp3mOBD6b9PTeLZlpN6Wcwb3uAf7@9bGnm@nbjK5ngRX1x/PpqML@kJRt19jvOqNIYuKvbLB8KuzpbvZ/ri/bcQ7Nrl6nlub967BSgrGyCa@7YE2Aus7bW5Ew8SdsV7YJhL8dKx63cPBv1GShrNy1U21TvfoPw\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a> - PCRE2 v10.33<br />\n<a href=\"https://ato.pxeger.com/run?1=hVZLb9tGED4W0K8YM621K1GpZKOBIZo2HFmADSR2oMhoGkUlaHIpLUItCXIZPwJf8wN67aWHFuglP6g99m_00tmHJNoSUMKi9jHzzeubkX_9GuVpVapPMIuirxOnk-ZRwfY6B870r9GzmCVcMHgzGA33gsHl6TC4ujgfBz-en47P4KDxjIsorWIGh1rp-fyoEc3DAoJ8MgUfRs7Lm5uP1_vVT3d378bzFzdz8kclk87Bnz-T29tj2vrWbP_-5l_6VNJxoZX7Qd7ueTUzpSy4mCk76zOe4SkLF0cbckcNLiTkuJQBK4qsIFEmSgnax9aClWU4YxQ-lzLu9yOUgMNDsMdqqc-ZiFMPCiarQkDPe9jAVPsoi5kL11mWQuYnYVoqWG3Gwk32fngx9RqAD0-A6HQFM2YxAitFDA4x-b4anJ2MDlrUXrpQ8nuWJWTl-PfLk5o8pVRbUQ_J4NgEEWWVhD6sAqUqPEergfagD86T4LWy46CW80E4dJWPBLkyN5GsktJ4aFSi5DPBYkgzMTOvUJQ3rPB0whZ3QRSmKbphY7e74DrNoo_Qilz4lPEYWnEoQ8ydSpJagu8DUTcturvGoBa73V5Vpmsrswi5IAigHcwnSISUCZLTTm_qdz0TgmEH5JHvkOO-4-Gq7efmy6HkeICfHYrnFSLu7wUSi4q6Cn6GCw1dB-Iir6RS14FhCaFVsOV-EcpoHuhYWuu1QStYWaXSNSXwbJu9PX8_1CdJUjK8xHgxhJmcPxJoZZ9YJFHLVgLbbWl_kfOUEUuKt2_GI5pHz6MAnSXUtRjvh6PLYDwcvT6_OBkPT5fHw3fj4cWp2u9qn-y39aRL1wzeKZCANvf1btBvK1cL3d_IRoD7ULIgKbJFkIdSskKQAll-cfXqlQWo62DrSnYrMYnLlb_t3sKSDRSMYEXBJYRb46W7jWdPAYyplC94HaTTo15NKGa5_F-hgkVVUfJMbBXUZpOsAD1d7lfMxYmR4kAmppG5cA33qLdkvC4PqogupieUGSdaYFl-rL_ouZBnJV6bGxzwMWl2mtaoekRP5RZldvw6z_t9oQ6Pt-BCW8u3oUdxYIjuGsvMWmVOsBuzm4heuzf1cNgsMBOkdKF521SOYYJKvJz6Nf1VErgvVA8e-qLnQbvN6xEvSXlPAZ1SRkjzg8CQMHUorfmZEOe7GP758gvgTwvHKzNC0LGaNdNLqikfs0sTs95R6DTHhtB_a07j2paRehvOGdzDLuzuWhs7vu260ehyFFxcvj4ZD87oI0VNv1p7LSeGLCr2xAbDX50N3fX0x_ltI94yydXz0Fi_tzVWUjBG1vFtNrQRWO1pfSKaS5wZq4FtIsGfDvM_wG-_dzv7e2b9Hw\" rel=\"nofollow noreferrer\" title=\"C++ (GCC) – Attempt This Online\">Attempt This Online!</a> - PCRE2 v10.40+<br />\n<a href=\"https://tio.run/##K0gtyjH7n1upoFKkYKugb6Nim5aZl1mcYadvrVCcWKmgraFeoV6hEq@pl5tYkpyhoVKkY5VaoamQll@kEGdkbM0FVf8/TqOiwl5TS@X/fwA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a> - Raku</p>\n<p>This uses the same technique as my <a href=\"https://codegolf.stackexchange.com/a/223243/17216\">Perl answer</a> – it counts <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Symbolic_method\" rel=\"nofollow noreferrer\">how many distinct partitions</a> <span class=\"math-container\">\\$n\\$</span> has as a sum of the numbers <span class=\"math-container\">\\$1\\$</span> and <span class=\"math-container\">\\$2\\$</span>. But the focus here is on variations possible in the regex, treating the logic behind invoking it as a black box – as the language this answer is written in.</p>\n<p>That block box doesn't just count the number of overlapping substrings that match (which would just be 1 with this regex, since it's anchored on both sides) but the number of ways in which different choices can lead to a full match (where choices are available, that is – in atomic constructs, the element of choice is eliminated). The counting of this is implemented by forcing the regex engine to backtrack at the end of any complete successful match (by turning it into a failed match), incrementing a counter every time that is done.</p>\n<p>One interesting way to modify the Fibonacci sequence regex is to change its indexing. Getting the sequence to start one earlier, yielding <span class=\"math-container\">\\$0, 1, 1, 2, 3, 5, 8...\\$</span>, is trivial, but the others are interesting, and starting 4 later is where it begins to get difficult (and I'm sure it can be golfed better than I have so far). At certain point, it should become optimal to emulate <code>(xx?)*</code> in the extra space that is missing, but I haven't worked out how to do that yet.</p>\n<p>2 earlier - <a href=\"https://tio.run/##hVXrTttIFP6fpzi4XZhJnG5CtQjFMYgNkUBqoUqDtluaWsYeJ6M6Y8seN4GWv/sA@4j7IMueuSQxJNJa4MzlnO/cvnMc5Xl7GkVPr2KWcMHgw2A0PAwG1@fD4Obqchz8cXk@voDjxisuorSKGfTzqGCHb2YnjWgWFhDktxPwYeT8vlh8u3tb/Xl//2k8O1rMyNPX5ZIsl6e0@frn19dP9KWA40Iz94O81fVq6KUsuJgq@M0Zz/CUhfOTLbmTBhcSclzKgBVFVpAoE6UE7VpzzsoynDIKP0oZ93oRSkC/D/ZYLfU5E3HqQcFkVQjoeo9bmGofZTFz4S7LUsj8JExLBavNWLjbw9@OJl4D8OEJEJ2lYMosRmCliMEhJs03g4uz0XGT2ksXSv7AsoSsHf91dVKTp5RqK@ohGZyaIKKsktCDdaBUhedoNdAe9MB5EbxWdhzUcr4Ih67zkaRVOTORrJPSeGxUouRTwWJIMzE1r1CUC1Z4OmHz@yAK0xTdsLHbXXCXZtE3aEYufM94DM04lCHmTiVJLcH3gaibJt3fYFCL3WqtK9OxlZmHXBAE0A7mt0iElAmS03Z34nc8E4JhB@SR75DTnuPhquXn5seh5HSA/3sUzytEfHsYSCwq6ir4KS40dB2Ii7ySSl0HhiWEZsFW@3koo1mgY2lu1gatYGWVSteUwLPd9fHy81CfJEnJ8BLjxRCmcvZMoJl9Z5FELVsJ7LKV/XnOU0YsKT5@GI9oHr2JAnSWUNdifB6OroPxcPT@8upsPDxfHQ8/jYdX52q/r32yv9aTDt0weK9AAtrc17tBv61cLXR/KxsB7kPJgqTI5kEeSskKQQpk@dXNu3cWoK6DrSvZUmISVyt/172FJVsoGMGagisIt8ZLdxfPXgIYUymf8zpIu0u9mlDMcvm/QgWLqqLkmdgpqM0mWQF6ujysmYsTI8U5TEwjc@Ea7lFvxXhdHlQRHUxPKDNOtMCq/Fh/0XUhz0q8Njc412Ny0D6wRtUjuiq3KLPn13ne6wl1eLoDF1pavgVdigNDdDZYZtYqc4ItzO5WdFvdiYfDZo6ZIKULB8sD5RgmqMTLiV/TXyeB@0L1YN8XXQ9aLV6PeEXKBwrolDJCDr4IDAlTh9Kanwlxfonhn7/@Bvy0cLwyIwQdq1kzvaSa8jm7NDHrHYVOc2wI/bfhNK5tGam35ZzB7Xdgf9/a2PNt141G16Pg6vr92XhwQZ8pavrV2ms1MWRRsRc2GH51tnQ30x/nt414xyRXz2Nj897VWEnBGNnEt93QRmC9p/WJaC5xZqwHtokEPx1Pnfbh0b9RkobT8qmdap328X8\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\"><strong>13 bytes</strong> - Try it online!</a>: <code>^xx(xx?)*$|^$</code><br />\n1 earlier  -  <a href=\"https://tio.run/##hVXrbtpIFP7PU5y4u8kMmC5QtYpwHJQlSInUJhUl2m7TrOXYYxjVjC17XEiq/O0D7CPugyx75gI4AWmtxMycy3fux1Get6dRtHoVs4QLBh@H41EvGF6fj4Kbq8tJ8Mfl@eQCjhuvuIjSKmZwkkcF672enTaiWVhAkN/egQ9j5/fF4tv9m@rPh4fPk9m7xYys/lqS5XJAm7@s6Eum40Iz94O81fVqyKUsuJgq6C2NZ0hl4fx0R@60wYWEHI8yYEWRFSTKRClBu9Wcs7IMp4zCj1LG/X6EEnByApasjprORJx6UDBZFQK63tMOprpHWcxcuM@yFDI/CdNSwWozFu629/bdndcAfHgCRGcomDKLEVgpYnCISfHN8OJsfNyklulCyR9ZlpCN47@tKTV5Sqm2oh6SwcAEEWWVhD5sAqUqPEergfagD86L4LWy46CW81U4dJOPJK3KmYlkk5TGU6MSJZ8KFkOaial5haJcsMLTCZs/BFGYpuiGjd3egvs0i75BM3Lhe8ZjaMahDDF3KknqCL4PRHGa9HCLQS12q7WpTMdWZh5yQRBAO5jfYiOkTJCctrt3fsczIZjugDzyHTLoOx6eWn5ufhxKBkP8P6BIrxDxTS@QWFTUVfBTPGjoOhAXeSWVug4MSwjNgq3v81BGs0DH0tyeDVrByiqVrimBZyfr0@WXkaYkScmQifFiCFM5eybQzL6zSKKWrQRO2Nr@POcpI7YpPn2cjGkevY4CdJZQ12J8GY2vg8lo/OHy6mwyOl@TR58no6tzdT/UPtlf60mHbjv4oMAGtLmvT4N@W7la6P5ONgK8h5IFSZHNgzyUkhWCFNjlVzfv31uAug6OrmRLiUlcn/x9fAtLdlAwgk0LriHcWl@6@/rsJYAxlfI5r4O0u9SrCcUsl/8rVLCoKkqeib2C2mySFaC3y@Omc3FjpLiDiRlkLlzTe9Rbd7wuD6qIDqYnlBknWmBdfqy/6LqQZyWyDQd3ekyO2kfWqHpEV@UWZQ78ep/3@0IRB3twoaXlW9CluDBEZ4tldq0yJ9jC3G5Ft9W983DZzDETpHThaHmkHMMElci882v6myRwX6gZPPFF14NWi9cjXjflIwV0ShkhR18FhoSpQ2ndnwlxfo3hn59/A35aOLLMCkHHatbMLKmhfN5dujHrE4VOcxwI/bftaTzbMlJvxzmDe9KBw0Nr48C3UzceX4@Dq@sPZ5PhBX2mqNuvNl7rjSGLir2wwfCrs6O73f64v23Eeza5ep4a2/e@wUoKxsg2vt2BNgKbO61vRMPEnbFZ2CYS/HSsOu3e23@jJA2n5aqdap328X8\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\"><strong>9 bytes</strong> - Try it online!</a>: <code>^x(xx?)*$</code><br />\noriginal  -  <a href=\"https://tio.run/##hVXrbtpIFP7PU5y4u8kMmC7Q3SrCOCibICVSm1SUaLtNWcuxxzCqGVv2uCSp8rcPsI@4D7LsmQvgBKS1EjNzLt@5H0d53p5F0epVzBIuGHw4G496wdn1@Si4ubqcBH9cnk8u4LjxiosorWIGgzwqWO/1/KQRzcMCgvx2Cj6Mnd@Xy693b6o/Hx4@TeZvl3Oy@ovc3w9p86cVfclzXGjmfpC3ul4NuJQFFzOFvKXxDKksXJzsyJ00uJCQ41EGrCiygkSZKCVor5oLVpbhjFH4Xsq4349QAgYDsGR11HQm4tSDgsmqEND1nnYw1T3KYubCXZalkPlJmJYKVpuxcLe9395OvQbgwxMgOkHBjFmMwEoRg0NMhm/OLk7Hx01qmS6U/JFlCdk4/suaUpOnlGor6iEZDE0QUVZJ6MMmUKrCc7QaaA/64LwIXis7Dmo5X4RDN/lI0qqcm0g2SWk8NSpR8plgMaSZmJlXKMolKzydsMVDEIVpim7Y2O0tuEuz6Cs0Ixe@ZTyGZhzKEHOnkqSO4PtAFKdJD7cY1GK3WpvKdGxlFiEXBAG0g/ktNkLKBMlpuzv1O54JwXQH5JHvkGHf8fDU8nPz41AyPMP/A4r0ChHf9AKJRUVdBT/Dg4auA3GRV1Kp68CwhNAs2Pq@CGU0D3Qsze3ZoBWsrFLpmhJ4drA@Xn4eaUqSlAyZGC@GMJPzZwLN7BuLJGrZSuCAre0vcp4yYpvi44fJmObR6yhAZwl1Lcbn0fg6mIzG7y@vTiej8zV59GkyujpX90Ptk/21nnTotoMPCmxAm/v6NOi3lauF7u9kI8B7KFmQFNkiyEMpWSFIgV1@dfPunQWo6@DoSnYvMYnrk7@Pb2HJDgpGsGnBNYRb60t3X5@9BDCmUr7gdZB2l3o1oZjl8n@FChZVRckzsVdQm02yAvR2edx0Lm6MFFcwMYPMhWt6j3rrjtflQRXRwfSEMuNEC6zLj/UXXRfyrES24eBKj8lR@8gaVY/oqtyizIFf7/N@XyjicA8utLR8C7oUF4bobLHMrlXmBFua263otrpTD5fNAjNBSheO7o@UY5igEplTv6a/SQL3hZrBgS@6HrRavB7xuikfKaBTygg5@iIwJEwdSuv@TIjzcwz//Pgb8NPCkWVWCDpWs2ZmSQ3l8@7SjVmfKHSa40Dov21P49mWkXo7zhncQQcOD62NA99O3Xh8PQ6urt@fTs4u6DNF3X618VpvDFlU7IUNhl@dHd3t9sf9bSPes8nV89TYvvcNVlIwRrbx7Q60EdjcaX0jGibujM3CNpHgp2PVafd@/TdK0nBWrtqp1mkf/wc\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\"><strong>8 bytes</strong> - Try it online!</a>: <code>^(xx?)*$</code><br />\n1 later  -  <a href=\"https://tio.run/##hVXrbuJGFP7PU5x42zADZguJuoowDsoSpETaTVYsUbebpZZjj2G0ZmzZ4w1Jlb99gD5iH6TpmQvgBKRaiZk5l@/cj6M878yj6PlNzBIuGHwaTcZHwej6fBzcXF1Og98uz6cXcNJ4w0WUVjGDQR4V7Ojt4rQRLcICgvx2Bj5MnPf399/vjqvfHx6@TBfv7hfk@Y/VkKxWQ9r66Zm@5joutHI/yNs9rwZdyoKLucLe0niGVBYuT3fkThtcSMjxKANWFFlBokyUErRfrSUry3DOKPxZyrjfj1ACBgOwZHXUdCbi1IOCyaoQ0POedjDVPcpi5sJdlqWQ@UmYlgpWm7Fwt0e/vpt5DcCHJ0B0ioI5sxiBlSIGh5gc34wuziYnLWqZLpT8kWUJ2Tj@y5pSk6eUaivqIRkMTRBRVknowyZQqsJztBpoD/rgvApeKzsOajnfhEM3@UjSqlyYSDZJaTw1KlHyuWAxpJmYm1coyntWeDphy4cgCtMU3bCx21twl2bRd2hFLvzIeAytOJQh5k4lSR3B94EoTosebjGoxW63N5Xp2sosQy4IAmgH81tshJQJktNOb@Z3PROC6Q7II98hw77j4ant5@bHoWQ4wv8DivQKEY@PAolFRV0FP8eDhq4DcZFXUqnrwLCE0CrY@r4MZbQIdCyt7dmgFaysUumaEnh2tD5ffh1rSpKUDJkYL4Ywl4sXAq3sB4skatlK4Iit7S9znjJim@Lzp@mE5tHbKEBnCXUtxtfx5DqYjicfL6/OpuPzNXn8ZTq@Olf3Q@2T/bWedOm2gw8KbECb@/o06LeVq4Xu72QjwHsoWZAU2TLIQylZIUiBXX518@GDBajr4OhKtpKYxPXJ38e3sGQHBSPYtOAawq31pbuvz14DGFMpX/I6SKdHvZpQzHL5v0IFi6qi5JnYK6jNJlkBers8bjoXN0aKS5iYQebCNb1HvXXH6/KgiuhiekKZcaIF1uXH@oueC3lWIttwcKnHpNlpWqPqET2VW5Q58Ot93u8LRRzuwYW2lm9Dj@LCEN0tltm1ypxg9@Z2K3rt3szDZbPETJDSheaqqRzDBJXInPk1/U0SuC/UDA580fOg3eb1iNdN@UgBnVJGSPObwJAwdSit@zMhzs8x/PPX34CfFo4ss0LQsZo1M0tqKF92l27M@kSh0xwHQv9texrPtozU23HO4A66cHhobRz4duomk@tJcHX98Ww6uqAvFHX71cZrvTFkUbFXNhh@dXZ0t9sf97eNeM8mV89TY/veN1hJwRjZxrc70EZgc6f1jWiYuDM2C9tEgp@O527n6PjfKEnDefncSbVO5@Q/\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\"><strong>10 bytes</strong> - Try it online!</a>: <code>^x?(xx?)*$</code><br />\n2 later  -  <a href=\"https://tio.run/##hVXbbttGEH3XV4yZ1t6VqFRS0MAQTQuOLMAGEjlQZDSN4xA0uZQWoZYEuYxlt37tB/QT@yFVZy@SaEtACZvay8yZ25lhlOftWRStXsUs4YLBx@Fk1AuGV@ej4Hp8OQ1@uzyfXsBx4xUXUVrFDE7yqGC91/PTRjQPCwjym1vwYeK8u7//fvem@v3h4fN0/vZ@TlbfloPlgCyXA9ok3/6kP63oSxnHhWbuB3mr69UMlLLgYqYsbM94hqcsXJzuyJ02uJCQ41IGrCiygkSZKCVo75oLVpbhjFH4o5Rxvx@hBJycgD1WS33ORJx6UDBZFQK63tMOptpHWcxcuMuyFDI/CdNSwWozFu6m9@vbW68B@PAEiE5UMGMWI7BSxOAQk@nr4cXZ5LhJ7aULJX9kWUI2jv@yPqnJU0q1FfWQDAYmiCirJPRhEyhV4TlaDbQHfXBeBK@VHQe1nK/CoZt8JGlVzk0km6Q0nhqVKPlMsBjSTMzMKxTlPSs8nbDFQxCFaYpu2NjtLrhLs@g7NCMXfmQ8hmYcyhBzp5KkluD7QNRNkx5uMajFbrU2lenYyixCLggCaAfzGyRCygTJabt763c8E4JhB@SR75BB3/Fw1fJz8@NQMhji/wHF8woR3/QCiUVFXQU/w4WGrgNxkVdSqevAsITQLNh6vwhlNA90LM3t2qAVrKxS6ZoSeLbBPl1@GemTJCkZXmK8GMJMzp8JNLMfLJKoZSuBjba2v8h5yoglxaeP0wnNo9dRgM4S6lqML6PJVTAdTT5cjs@mo/P18ejzdDQ@V/tD7ZP9tZ506JbBBwUS0Oa@3g36beVqofs72QhwH0oWJEW2CPJQSlYIUiDLx9fv31uAug62rmRLiUlcr/x99xaW7KBgBBsKriHcGi/dfTx7CWBMpXzB6yDtLvVqQjHL5f8KFSyqipJnYq@gNptkBejp8rhhLk6MFEcxMY3MhWu4R70143V5UEV0MD2hzDjRAuvyY/1F14U8K/Ha3OBoj8lR@8gaVY/oqtyizIFf53m/L9ThYA8utLR8C7oUB4bobLHMrFXmBLs3uxvRbXVvPRw2C8wEKV04Wh4pxzBBJV7e@jX9TRK4L1QPnvii60GrxesRr0n5SAGdUkbI0VeBIWHqUFrzMyHOzzH889ffgJ8WjldmhKBjNWuml1RTPmeXJma9o9Bpjg2h/7acxrUtI/V2nDO4Jx04PLQ2DnzbdZPJ1SQYX304mw4v6DNFTb9ae60nhiwq9sIGw6/Oju52@uP8thHvmeTqeWps3/saKykYI9v4dhvaCGz2tD4RzSXOjM3ANpHgp2PVafd6/0ZJGs7KVTvVOu3j/wA\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\"><strong>16 bytes</strong> - Try it online!</a>: <code>^x?x?(xx?)*(^|)$</code><br />\n3 later  -  <a href=\"https://tio.run/##hVXbbttGEH3XV4yZ1t6VqFRU0MAQTQuuLMAGEjlQZDSN4xA0uZQWoZYEuYwvjV/7Af3Efkjd2Ysk2hJQ2pL2MnPmdmYYF0V3HsdPrxKWcsHgw2g67oeji9NxeDk5n4W/n5/OzuCw9YqLOKsTBkdFXLL@68VxK15EJYTF1TUEMHV@u739dvOm/uP@/tNs8fZ2QZ6@3g3VH7m7G9I2@foD9z/oT0/0paTjQrsIwqLj@Q0zlSy5mCs7mzOe4ymLlsdbcsctLiQUuJQhK8u8JHEuKgnax/aSVVU0ZxT@rGQyGMQoAUdHYI/VUp8zkWQ@lEzWpQDPf9zCVPs4T5gLN3meQR6kUVYpWG3Gwl31f3177bcAH54C0ekK58xihFaKGBxi8n05OjuZHrapvXSh4g8sT8na8V9WJw15Sqm2oh6Sw9AEEee1hAGsA6UqPEergfZgAM6L4LWy46CW80U4dJ2PNKurhYlknZTWY6sWFZ8LlkCWi7n5ikR1y0pfJ2x5H8ZRlqEbNna7C2@yPP4G7diF7zlPoJ1EMsLcqSSpJQQBEHXTpvsbDGqxO511ZXq2MsuIC4IA2sHiComQMUEK2vWug55vQjDsgCIOHDIcOD6uOkFhfhxKhiP87FE8rxHxTT@UWFTUVfBzXGjoJhAXRS2Vug4MSwjtkq32y0jGi1DH0t6sDVrJqjqTrimBb9vs4/nnsT5J04rhJcaLIczl4plAO//OYolathLYbiv7y4JnjFhSfPwwm9Iifh2H6CyhrsX4PJ5ehLPx9P355GQ2Pl0djz/NxpNTtd/XPtlf60mPbhi8VyIBbe6b3aC/rVwj9GArGyHuI8nCtMyXYRFJyUpBSmT55PLdOwvQ1MHWlexOYhJXq2DXvYUlWygYwZqCKwi3wUt3F89eAhhTGV/yJkjXo35DKGGF/F@hksV1WfFc7BTUZtO8BD1dHtbMxYmR4UAmppG5cA33qL9ivC4PqogepieSOSdaYFV@rL/wXCjyCq/NDQ74hBx0D6xR9QhP5RZl9oImzwcDoQ6HO3Cho@U74FEcGKK3wTKzVpkT7NbsroTX8a59HDZLzASpXDi4O1COYYIqvLwOGvrrJPBAqB48CoTnQ6fDmxGvSPlAAZ1SRsjBF4EhYepQWvMzJc7PCfzz19@ArxaOV2aEoGMNa6aXVFM@Z5cmZrOj0GmODaH/N5zGtS0j9becM7hHPdjftzb2Att10@nFNJxcvD@Zjc7oM0VNv0Z7rSaGLGv2wgbDt86W7mb64/y2Ee@Y5Op5bG2@dzVWWjJGNvFtN7QRWO9pcyKaS5wZ64FtIsFXx1Ov2/f@jdMsmldP3UzrdA//Aw\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\"><strong>22 bytes</strong> - Try it online!</a>: <code>^x?x?x?(xx?)*(^|^x?|)$</code><br />\n4 later  -  <a href=\"https://tio.run/##hVX9TttIEP8/TzG4HOw6TpvQuwrFuBGFSCC1UKVB1ytwlrHXyarO2rLXJVD49x7gHvEe5LjZjySGRDoLnNnZmd98j@Oi6Ezi@OlVwlIuGHw@Gg33wqPz42F4cXY6Dn8/PR6fwH7rFRdxVicMDoq4ZHuvp@9b8TQqISwuryGAkfPh9vb7zdv6j7u7r@Ppu9spefqTDMggmM/nlMwH9Oevj2SOv@4DeSBzQgd0MN9G6uoDEgPysK05Lt1@oi@hHA/cIgiLds9v@FHJkouJcmTF4zlyWTR7vyb3vsWFhAJJGbKyzEsS56KSoINwZ6yqogmj8LOSSb8fowQcHIBlK1LzmUgyH0om61JAz39cw1TnOE@YBzd5nkEepFFWKVhtxsJd7v327tpvAT48BaLzGU6YxQitFDE4xBTk4ujkcLTvUnvpQcXvWZ6SpeNvFpyGPKVUW1EPyWFggojzWkIfloFSFZ6j1UB70AfnRfBa2XFQy7kSDl3mI83qamoiWSal9diqRcUngiWQ5WJiXpGoblnp64TN7sI4yjJ0w8ZuT@FNlsffwY09@JHzBNwkkhHmTiVJkRAEQNSNS3dWGNRit9vLynRtZWYRFwQBtIPFJTZCxgQpaKd3HXR9E4LpDijiwCGDvuMj1Q4K8@NQMjjC/y2K/BoR3@6FEouKugp@goSGbgJxUdRSqevAsITglmxxnkUynoY6FndFG7SSVXUmPVMC387hl9NvQ81J04rhJcaLIUzk9JmAm/9gsUQtWwmcx4X9WcEzRmxTfPk8HtEifh2H6CyhnsX4Nhydh@Ph6NPp2eF4eLxgD7@Oh2fH6ryjfbK/1pMuXXXwVokNaHPfnAb9tnKN0IO1bIR4jiQL0zKfhUUkJSsFKbHLzy4@frQATR0cXcnmEpO4oIJN9xaWrKFgBMsWXEB4jb70NvXZSwBjKuMz3gTp9KjfEEpYIf9XqGRxXVY8FxsFtdk0L0Fvl/tl5@LGyHBjEzPIXHim96i/6HhdHlQRXUxPJHNOtMCi/Fh/0fOgyCu8Njf4BUjIbmfXGlWP6KncosxW0Ozzfl8o5mADLrS1fBt6FBeG6K6wzK5V5gS7NadL0Wv3rn1cNjPMBKk82J3vKscwQRVeXgcN/WUSeCDUDB4EoudDu82bES@a8p4COqWMkN0rgSFh6lBa92dKnF8S@OevvwE/LRyvzApBxxrWzCypoXzeXboxmxOFTnMcCP236mmkbRmpv@acwT3ows6OtbEV2Kkbjc5H4dn5p8Px0Ql9pqjbrzFei40hy5q9sMHwq7Omu9r@uL9txBs2uXoeW6v3psFKS8bIKr71gTYCyzNtbkRziTtjubBNJPjpeOp29rr/xmkWTaqnTqZ1Ovv/AQ\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\"><strong>55 bytes</strong> - Try it online!</a>: <code>^(?(?=xxx)(x?){4}(xx?)*|(|(x()?)?x$|(x\\B)?x?(|$)?)?x*)$</code></p>\n<p>To go 3 earlier or beyond, the rules would need to be extended to allow returning a negative sign via a capture group being set or unset (because there can't be a negative number of choices).</p>\n"},{"answer_id":250488,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/250488#250488","body":"<h1><a href=\"https://github.com/Radvylf/trianguish\" rel=\"noreferrer\">Trianguish</a>, <s>152</s> 135 bytes</h1>\n<pre><code>00000000: 0c05 10d8 0201 40d7 0401 4110 4102 a060\n00000010: 2c02 b080 2c02 8050 20e4 0211 0710 e209\n00000020: 1110 4028 0d00 6020 2902 10c3 0802 a107\n00000030: 02a1 0502 8027 0910 290b 1110 403b 0890\n00000040: 204d 03d0 503c 0790 602a 1071 02a0 9027\n00000050: 0280 b110 8111 0402 70e2 0501 402a 0202\n00000060: 9106 1107 0291 0b11 0902 702b 1040 2a10\n00000070: 6110 2102 9050 2802 70b1 1071 1104 1102\n00000080: 02a1 0502 802c 05   \n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/W3v8e.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/W3v8e.png\" alt=\"Two loop? Too many loop!\" /></a></p>\n<p><a href=\"https://radvylf.github.io/trianguish/#bRpe5WBWEKfq54fcmvocykcKIEW_rK16GoV0e6r4lucnIdyGjbqJf3c9repFoZbw_neIAf.TpzYLM_49nZVTcuaHAboCGhtT0aTOf5j23UhN0GP.S0Qh2nYlxQT2rGokPwlJ_bsoF6-iPeFkRxL%7EJvlaoxY%7E-Cu47GiimG5Ib0E.HGAeRg69H\" rel=\"noreferrer\">Try it online!</a></p>\n<hr/>\n<p>Trianguish is my newest language, a cellular automaton sort of thing which uses a triangular grid of &quot;ops&quot; (short for &quot;operators&quot;). It features self-modification, a default max int size of 216, and an interpreter which, in my opinion, is the coolest thing I've ever created (taking over forty hours and 2k SLOC so far).</p>\n<p>This program consists of two precisely timed loops, each taking exactly <s>17</s> 11 ticks. The first, in the top right is what actually does the fibonacci part; two S-builders are placed in exactly the right position such that two things occur in exactly the same number of ticks:</p>\n<ol>\n<li>The left S-builder, <code>x</code>, copies its contents to <code>y</code></li>\n<li>The sum of <code>x</code> and <code>y</code> is copied to <code>x</code></li>\n</ol>\n<p>Precise timing is required, as if either of these occurred with an offset from the other, non-fibonacci numbers would appear in brief pulses, just long enough to desync everything. Another way this could have been done is with T-switches allowing only a single tick pulse from one of the S-builders, which would make precise timing unneeded, but this is more elegant and likely smaller.</p>\n<p>The second loop, which is also 11 ticks, is pretty simple. It starts off with a 1-tick pulse of <code>1n</code>, and otherwise is <code>0n</code>, allowing an n-switch and t-switch to allow the contents of <code>x</code> to be outputted once per cycle. Two S-switches are required to make the clock use an odd number of ticks, but otherwise it's just a loop of the correct number of wires.</p>\n<p>This program prints infinitely many fibonacci numbers, though if run with Mod 216 on, it will print them, as you might guess, modulo'd by 216 (so don't do that :p).</p>\n"},{"answer_id":250371,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250371#250371","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 25 bytes</h1>\n<pre><code>^\n,\n+`,(.)(.*)\\1\n$1,$2\n,\n\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wP45Lh0s7QUdDT1NDT0szxpBLxVBHxQgo@P9/IhAkAQFXYlIikACyExO5khKTk5MSwbzkZKBMMhABAA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> (Test harness borrowed from <a href=\"https://codegolf.stackexchange.com/a/250221/16766\">Neil's answer</a>.)</p>\n<h3>Explanation</h3>\n<pre><code>^\n,\n</code></pre>\n<p>Insert a comma at the beginning of the string. (Any non-alphabetic delimiter will do.)</p>\n<pre><code>+`,(.)(.*)\\1\n$1,$2\n</code></pre>\n<p>Repeat until the regex no longer matches: Match the delimiter, the next character after it (group 1), any run of characters (group 2), and the character from group 1 again. Replace with the character from group 1, the delimiter, and group 2.</p>\n<p>In effect: Comb through the string from left to right. On each iteration, move the first character to the output section, and delete another copy of that character from later in the string.</p>\n<pre><code>,\n\n</code></pre>\n<p>Remove the delimiter.</p>\n"},{"answer_id":250369,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250369#250369","body":"<h1>x86-64 machine code, 12 bytes</h1>\n<pre><code>AC 84 C0 0F BB C2 77 01 AA 75 F5 C3\n</code></pre>\n<p><a href=\"https://tio.run/##fVLBctsgED2zX7FVxxMUyxnHTX2wq15y7qWnzsQ5IEA2GYQ0gFq5Hv963UWKk57KAMvuvn27LMiuW@ylvFxEaJDj94zD3d62lbBYQ@03zCsvnEKtBqg3zLYqVMCiDhGFLWgBq6JM7gK1GIC9CAzAQmwJFzbsxf0mIuZ1hDzDfAt6iNo7zB4zPP1sjcKay4PweOt16G0sULaOyCdbyLc4gfz/UWeAj8ZJ2yuNX0JUpr07fAUA4yI2wjiewwnYCDeu6@PT6vP6ucCJbVS2wH4djNXIgxSu5tksZMUEzrEs8T4HRhSs88SZ3Iv71TuColndeuQpocESl1sSH0p8IDmfU@wYzOge1xu8B/7DuU6UE2J0nVPGPqbC@c3O3SQj2a4BO/dNyINxmvqh9CZL7lTBkCoo8EiqavF0heNsufpBCY4l570LZu@0Gnt4m9f50zCfP1Mn8bUNx1T@cnj8lEjfGPjMYHWk9893jpgGcp7p89CoaICoBG10FuJV0KESUlaTLiVBJE0IWgdQrWohCk8TRNcJayFq0TQiaqAXliYYeuc/srZiHy6LZv1AG/3UkqrR9i8\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Following the standard calling convention for Unix-like systems (from the System V AMD64 ABI), this takes in RDI an address at which to place the result, as a null-terminated byte string; and the address of the input, as a null-terminated byte string, in RSI.</p>\n<p>In assembly:</p>\n<pre><code>f:  lodsb           # Load a byte from the string into AL, advancing the pointer.\n    test al, al     # Set flags based on that byte. In particular, ZF=1 iff it's 0.\n    btc edx, eax    # Invert the bit in EDX indexed by the low 5 bits of that byte.\n                    #  Set CF to the previous value of that bit. Leave ZF unchanged.\n    ja s            # Jump if CF and ZF are both 0.\n    stosb   # (If CF=1 or ZF=1) Add the byte to the output, advancing the pointer.\ns:  jnz f           # Jump back, to repeat, if ZF is 0.\n    ret             # Return.\n</code></pre>\n<p>Because EDX is not initialised, this can keep either the odd instances or the even instances of each letter; either possibility is acceptable. In the TIO demonstration, a <code>RDRAND</code> instruction is added to show multiple possibilities.</p>\n"},{"answer_id":250294,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250294#250294","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 7 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ηε¤¢É}Ï\n</code></pre>\n<p>Outputs the first valid prefix.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//3PZzWw8tObTocGft4f7//5MSk5OTEgE\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfaXL/3Pbz209tOTQosOdtYf7/@v8j1ZKBIIkIFDSUUpMSgRTQH5iIpwBZiYlJicnwcSSk8GKk4FIKRYA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p>Or alternatively (port of <a href=\"https://codegolf.stackexchange.com/a/250215/52210\"><em>@emanresuA</em>'s Vyxal answer</a>):</p>\n<pre><code>æʒº{I{Q\n</code></pre>\n<p>Outputs a list of all valid results, with duplicates.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//8LJTkw7tqvasDvz/PykxOTkpEQA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeWhlf8PLzs16dCu6kPrqgP/1@r8j1ZKBIIkIFDSUUpMSgRTQH5iIpwBZiYlJicnwcSSk8GKk4FIKRYA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>η        # Get all prefixes of the (implicit) input-string\n ε   }   # Map each prefix to:\n  ¤      #  Push its last character (without popping)\n   ¢     #  Count how many times this character occurs\n    É    #  Check if the count is odd\n      Ï  # Keep all characters of the (implicit) input-string at the truthy indices\n         # (after which this string is output implicitly)\n\næ        # Get the powerset of the (implicit) input-string\n ʒ       # Filter it by:\n  º      #  Mirror it (to duplicate its characters)\n   {     #  Sort its characters\n      Q  #  Check if it's equal to\n    I{   #  The input-string with sorted characters as well\n         # (after which the filtered list is output implicitly)\n</code></pre>\n"},{"answer_id":250267,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250267#250267","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 13 bytes</h1>\n<pre><code>®;©ṛ\nÇ®ċ%2\nÇƇ\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8///QOutDKx/unM11uP3QuiPdqkZAxrH2/w93bznc/qhpTeT//4lAkAQEXIlJiUACyE5MhFJARlJicnIShJ@cDFSSDEQA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<pre><code>® (load register)\n ; (concatenate with [tacit argument, character we're filtering])\n  © (store result of previous link in register)\n   ṛ (return right argument [tacit argument, character we're filtering])\n\n\nÇ (previous link as a monad, [v=character, new_v=character])\n ®ċ (count occurrences of [character] in register)\n %2 (mod2 of [count])\n\n\nÇ (previous link as monad, [v=character, new_v=1 or 0])\n Ƈ (filter all items, keeping all that satisfy condition, [v=argument])\n</code></pre>\n<p>Filter each character, storing them in a growing list of previous seen characters. Every time you see a character for an odd numbered time, keep it.</p>\n"},{"answer_id":250252,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250252#250252","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 7 bytes</h1>\n<pre><code>q#.-QTy\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/v1BZTzcwpPL/f6WkxOTkpEQlAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<p>Returns the half of the input which occurs last in the input, repeated for every time it appears as a subsequence of the input.</p>\n<pre><code>q#.-QTy\n      y  subsequences of input\n #       filtered by\n  .-QT   multiset difference with input\nq        equals the subsequence\n</code></pre>\n"},{"answer_id":250236,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250236#250236","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"noreferrer\">Brachylog</a>, 3 bytes</h1>\n<pre><code>p~j\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/pfXa6koGunoFRu/6htw6Ompoe7Omsfbp3wv6Au6///aKVEIEgCAiUdpcSkRDAF5CcmwhlgZlJicnISTCw5Gaw4GYiUYgE\" rel=\"noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<p>(<code>jp</code> with reversed I/O appears not to work.)</p>\n<p>Originally, I had <code>⊇.jp?∧</code> (which <a href=\"https://tio.run/##SypKTM6ozMlPN/pfXa6koGunoFRu/6htw6OmpofbFqQ83NVZ@3DrhP8FdVl6ao@62v//j1ZKBIIkIFDSUUpMSgRTQH5iIpwBZiYlJicnwcSSk8GKk4FIKRYA\" rel=\"noreferrer\">can generate all halves, with an extreme volume of duplicates</a>), but it turns out that <a href=\"https://tio.run/##SypKTM6ozMlPN/r/3/TR/GUF1eVKVgqleckZiXnpqSkKBUWpaZkVCvlpCkrl9o/apiQ@amoEUnVApTYPd3UqPupYYQCkax91Lf3/HwA\" rel=\"noreferrer\">the order in which <code>p</code> tries permutations maximizes the length of the prefix of items which are not rearranged</a>. So:</p>\n<pre><code>p      Permute the input such that\n ~j    the output is a string which concatenated with itself is the input.\n</code></pre>\n<p>It appears that the output is guaranteed to be in a valid order because of this, but I'm not entirely sure--<a href=\"https://www.swi-prolog.org/pldoc/doc/_SWI_/library/lists.pl?show=src#permutation/2\" rel=\"noreferrer\">relevant</a> <a href=\"https://www.swi-prolog.org/pldoc/doc/_SWI_/library/lists.pl?show=src#select/3\" rel=\"noreferrer\">source</a> if anyone else wants to reason through it, or engineer a counterexample.</p>\n"},{"answer_id":250233,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250233#250233","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>46</s> 45 bytes</h1>\n<p><em>-1 Thanks to @Command Master</em></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda s:s and s[:s.count(s[0])%2]+f(s[1:])\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P802JzE3KSVRodiqWCExL0WhONqqWC85vzSvRKM42iBWU9UoVjsNyDS0itX8X1CUCRRP01BKBIIkIFDS1ORCCCYlogkA1SQmYhFCE0xKTE5OwlSXnIxmfDIQAYX@AwA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":250223,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250223#250223","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 11 bytes</h1>\n<pre><code>#~2|1#.]=]\\\n</code></pre>\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuoKNgoGAFxLp6Cs5BPm7/leuMagyV9WJtY2P@a3KlJmfkK6QpqCcmJiUlJqpD@GCeuoKuFUQGxAPyYXIImaREJNFEhAZko5ISk2ESQGZyEsKOpGRkHcnJ2CSSkkG8/wA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>#~</code> Filter by</li>\n<li><code>2|1#.]=]\\</code> Prefixes where the count of items that equal the last item is odd.</li>\n</ul>\n<p>Just noticed this is the same approach as the BQN answer, though this one I arrived at independently after waking up today.</p>\n<h2>port of loopy walt's answer, 14 bytes</h2>\n<pre><code>{~[:/:~_2{.\\/:\n</code></pre>\n<p><a href=\"https://tio.run/##bYsxCsJAEEX7nGKI4BpjZtVyMBAUrMTC1oDMDAZJkwNE9urrbrFsCosZ/vuPP/oSzQAtgYEd7IHCNQiXx@3qZ/ckS@51nLG35KvifkZYhbJG66jbbGvbnzC8NX6xKg9dW7z1M4FhFjHQEAwxRwqcXDbCi5bzQIQ5CWFNIkQVzgtdLlT/CdFI/gc\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/250225/15469\">loopy walt's excellent idea</a>.</p>\n"},{"answer_id":250235,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250235#250235","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a> / MATLAB, <s>31</s> 30 bytes</h1>\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(s)s(j^2.^sum(triu(s==s'))&gt;0)\n</code></pre>\n<p>Anonymous function that inputs and outputs character vectors.</p>\n<p>The code keeps each character that has appeared an even number of times so far.</p>\n<p><a href=\"https://tio.run/##ZcwxCoAwDAXQ3Ys0XYK4VzxJIY0WKohiqtePmYTSz1/y@OTkSu@mOSCiLiBeYI8TRnkOqHd5QEIQ5/08el2LXJDBkSVZjIffErW3LYh6aS0Rc@pWzO1ntproBw\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":250232,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250232#250232","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 5 bytes</h1>\n<pre><code>⇧y_sİ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJBIiwiZiIsIuKHp3lfc8SwIiwi4oiRIiwiYWFhYWJiYmJcbmFiYWJcbmFhYmJhYVxuYWFiYmFhYWFcbmJhY2NiYVxuYWFiYmNjXG5hYmNhYmNcbmFiYWFjYmNhIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Port of loopy walt's answer. I/O as list of chars.</p>\n<pre><code>⇧y_sİ\n⇧     # Grade up\n y_   # Every other item starting from the first\n   s  # Sort\n    İ # Index into the input\n</code></pre>\n<p><code>y_</code> (uninterleave, pop) could alternatively be <code>2Ḟ</code> (every 2nd item).</p>\n"},{"answer_id":250231,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250231#250231","body":"<h1><a href=\"https://www.r-project.org\" rel=\"nofollow noreferrer\">R</a>, 24 bytes</h1>\n<pre><code>\\(x,`+`=order)x[!++x%%2]</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PU5BCsIwELz3FwYKuzRePHnJS6zQTUyhEmzIRmj7FS_14B_8Sn9jTNBhYWZ2FnYez7Buir0bomphRuuAY8geZikEYnUdh1vKFvTE0cIizegcebYqxVWvXvfY74_vFibZNZ0aw8UGnE67ppnq-nAu8UZM3rsZDAhK0AlCCtKUKXmiv8hSkzH6tzMmH5s0AmULjN9W0ENpyphQHq1r4Q8\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":250230,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250230#250230","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"noreferrer\">BQN</a>, 6 bytes</h1>\n<pre><code>⊢/˜2|⊒\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RiDihpAg4oqiL8ucMnziipIKRsKoIOKfqCJhYWFhYmJiYiIsImFiYWIiLCJhYWJiYWEiLCJhYWJiYWFhYSIsImJhY2NiYSIsImFhYmJjYyIsImFiY2FiYyLin6k=\" rel=\"noreferrer\">Try it at BQN REPL</a></p>\n<p>BQN's &quot;Occurrence count&quot; (<code>⊒</code>) operator, which returns a number for each element indicating how many previous elements match it, is pretty useful here.<br />\nSelect elements from the input (<code>⊢/˜</code>) specified by the occurrence count of each of them (<code>⊒</code>) modulo 2 (<code>2|</code>).</p>\n"},{"answer_id":250229,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250229#250229","body":"<h1><a href=\"https://nodejs.org\" rel=\"noreferrer\">JavaScript (Node.js)</a>, 23 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;a.filter(c=&gt;a[c]^=1)\n</code></pre>\n<p><a href=\"https://tio.run/##jc@xCsMwDATQvZ@RJfZQQefg/khIQb7awcFYJQn9fUdroYOOGzQ8DrTxlw/s5XPem7xTz6FzeDLlUs@0O@g9Y3mFh@@QdkhNVGV12c1ENLAmaobF0yaluXH0frr9k5EtSteYrc4iIwPRuAhY/oD21/UL\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":250228,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250228#250228","body":"<h1><a href=\"https://www.informatik.uni-kiel.de/%7Epakcs/\" rel=\"nofollow noreferrer\">Curry (PAKCS)</a>, 28 bytes</h1>\n<pre><code>f[]=[]\nf(a:b++a:c)=a:f(b++c)\n</code></pre>\n<p><a href=\"https://tio.run/##Sy4tKqrULUjMTi7@/z8tOtY2OpYrTSPRKklbO9EqWdM20SpNA8hO1vyfm5iZp2CrkKaglJiYlJQIBEr/AQ\" rel=\"nofollow noreferrer\" title=\"Curry (PAKCS) – Try It Online\">Try it online!</a></p>\n<p>This may returns multiple results, with duplicates, but not necessarily all of them. If this is not allowed, you can add the flag <code>:set +first</code> to print only the first result: <a href=\"https://tio.run/##DcZNCoAgEAbQfaeQVop0gQFPIi4@hyakH0Jt0eWbfKvHT63vcmPnpioxhZgmsaDsPYhdAIkdZ6cnymWCETMDOWOY9WM5sDWltnb1UmrrPw\" rel=\"nofollow noreferrer\" title=\"Curry (PAKCS) – Try It Online\">Try it online!</a>.</p>\n"},{"answer_id":250220,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250220#250220","body":"<h1><a href=\"https://github.com/molarmanful/lin\" rel=\"nofollow noreferrer\">lin</a>, 40 bytes</h1>\n<pre><code>.#n.n `pset&quot;2rep.n \\;.' eq&quot;`#\n.(&quot;&quot;sort )\n</code></pre>\n<p><a href=\"https://replit.com/@molarmanful/try-lin\" rel=\"nofollow noreferrer\">Try it here!</a> Outputs an iterator of subsequences.</p>\n<p>For testing purposes (use <code>-i</code> flag if running locally):</p>\n<pre><code>&quot;abcabc&quot; ; `_\n.#n.n `pset&quot;2rep.n \\;.' eq&quot;`#\n.(&quot;&quot;sort )\n</code></pre>\n<h2>Explanation</h2>\n<p>Similar to @emanresu A's answer. Prettified code:</p>\n<pre><code>.#n .n `pset ( 2rep .n (.( &quot;&quot;sort )).' eq ) `#\n</code></pre>\n<ul>\n<li><code>.#n</code> input as <em>n</em></li>\n<li><code>.n `pset</code> powerset of <em>n</em></li>\n<li><code>(...) `#</code> filter each subsequence <em>s</em>...\n<ul>\n<li><code>2rep</code> repeat <em>s</em></li>\n<li><code>.n</code> push <em>n</em></li>\n<li><code>(.( &quot;&quot;sort )).'</code> sort <em>s</em> and <em>n</em></li>\n<li><code>eq</code> check if equal</li>\n</ul>\n</li>\n</ul>\n"},{"answer_id":250225,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250225#250225","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a> NumPy, 36 bytes</h1>\n<pre>lambda s:s[sorted(s.argsort()[::2])]</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY3VXISc5NSEhWKrYqji_OLSlJTNIr1EovSQWwNzWgrK6NYzVioWr3M3AKgsEJeaW5BJVdBUWZeiUaaBpinVxQfHa2llJiUmJiclJyoFBurqQnRtWABhAYA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Takes and returns arrays of characters.</p>\n"},{"answer_id":250222,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250222#250222","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> + <code>-lF -M5.10.0</code>, 20 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>say grep++${$_}%2,@F</code></pre>\n<p><a href=\"https://dom111.github.io/code-sandbox/#eyJsYW5nIjoid2VicGVybC01LjI4LjEiLCJjb2RlIjoic2F5IGdyZXArKyR7JF99JTIsQEYiLCJoZWFkZXIiOiIjIHRoaXMgaXMgbmVlZGVkIHRvIHJ1biBtdWx0aXBsZSB0ZXN0c1xuJHskX309MGZvciBhLi56OyIsImFyZ3MiOiItbEZcbi1NNS4xMC4wIiwiaW5wdXQiOiJhYWFhYmJiYlxuYWJhYlxuYWFiYmFhXG5iYWNjYmFcbmFhYmJjY1xuYWJjYWJjIn0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":250221,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250221#250221","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 34 bytes</h1>\n<pre><code>(.)(?=(?(\\1)((?&lt;-3&gt;)|()).|.)*$)\\3\n\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wX0NPU8PeVsNeI8ZQU0PD3kbX2E6zRkNTU69GT1NLRTPGmOv//0QgSAICrsSkRCABZCcmciUlJicnJYJ5yclAmWQgAgA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n<pre><code>(.)(?=\n</code></pre>\n<p>Capture a character, then looking ahead...</p>\n<pre><code>(?(\\1)\n</code></pre>\n<p>... if the initial character appears, then...</p>\n<pre><code>((?&lt;-3&gt;)|())\n</code></pre>\n<p>... unset <code>$3</code> if it's set, otherwise set it to the empty string...</p>\n<pre><code>.|.)*$)\n</code></pre>\n<p>... and check all the remaining characters in the string.</p>\n<pre><code>\\3\n</code></pre>\n<p>If <code>$3</code> is set at this point (i.e. has been toggled an odd number of times), then...</p>\n<pre><code>\n</code></pre>\n<p>... delete the character.</p>\n"},{"answer_id":250218,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250218#250218","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"noreferrer\">Charcoal</a>, 9 bytes</h1>\n<pre><code>Φθ﹪№…θκι²\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMMtM6cktUijUEfBNz@lNCdfwzm/FCjsXJmck@qckV8AksnW1FHIBGIjTU1N6///ExWSEvOAUCGJ679uWQ4A\" rel=\"noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code> θ          Input string\nΦ           Filtered where\n   №        Count of\n       ι    Current character in\n     θ      Input string\n    …       Truncated to length\n      κ     Current index\n  ﹪     ²   Is odd\n</code></pre>\n"},{"answer_id":250216,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250216#250216","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 27 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>for$c(a..z){s/$c.*?\\K$c//g}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/z8tv0glWSNRT69Ks7pYXyVZT8s@xlslWV8/vfb//0QgSAICrsSkRCABZCcmciUlJicnJYJ5yclAmWQg@pdfUJKZn1f8X7cAAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":250215,"question_id":250213,"link":"https://codegolf.stackexchange.com/questions/250213/generate-an-arbitrary-half-of-a-string/250215#250215","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"noreferrer\">Vyxal</a>, 8 bytes</h1>\n<pre><code>ṗṠ'ds?s=\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLhuZfhuaAnZHM/cz0iLCIiLCJiYWNjYmEiXQ==\" rel=\"noreferrer\">Try it Online!</a></p>\n<p>Tack on a <code>;U</code> if halves must be unique.</p>\n<pre><code>ṗṠ       # Subsequences as strings\n  '      # Filtered by\n   ds    # It doubled, sorted\n       = # Equals...\n     ?s  # The input sorted\n</code></pre>\n"},{"answer_id":250166,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/250166#250166","body":"<h2><a href=\"https://esolangs.org/wiki/RASEL\" rel=\"nofollow noreferrer\">RASEL</a>, 12 bytes.</h2>\n<pre><code>1:.:3\\01\\--#\n</code></pre>\n"},{"answer_id":250151,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/250151#250151","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, <s>33</s> 31 bytes</h1>\n<pre><code>b=.5\nf(n)=round((b+b5^b)^n/5^b)\n</code></pre>\n<p><a href=\"https://www.desmos.com/calculator/cigime5dwm\" rel=\"nofollow noreferrer\">Try It On Desmos!</a></p>\n<p>f(n) = 1,1,2,3,5,... for n=1,2,3,4,5,...</p>\n"},{"answer_id":249230,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/249230#249230","body":"<h1><a href=\"https://github.com/Steffan153/chocolate\" rel=\"nofollow noreferrer\">Chocolate</a>, 4 bytes</h1>\n<pre><code>G+c1\n</code></pre>\n<p><a href=\"https://chocolate-lang.netlify.app/#WyJHK2MxIiwiIl0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h2>Explanation</h2>\n<pre><code>G+c1\nG     ## Generate an infinite list...\n +    ## With the addition function\n  c1  ## Starting from [1, 1]\n</code></pre>\n"},{"answer_id":220983,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/220983#220983","body":"<h1>Regex (ECMAScript / Java), <s>38</s> <s>37</s> <s>34</s> 33 bytes</h1>\n<pre><code>\\b(?=(^|x))((x*)\\3\\3(?=\\3$))*x\\1$\n</code></pre>\n<p><a href=\"https://tio.run/##TY89b8IwGIT/CrUQvG/SmARQVWEMUweGdmjHppUMmMStcSzbQMrHb0@ToVKXG@453em@xFH4jVM2JN6qrXT7ynzLn8ZxI0@9V1k81RbgzBejqMnXsOTwea0RAeoI80k@aZ180keM6jzrN9HojDRUb8EpUwBSr9VGwsN9MkVknqfsVCotATR3Umy1MhIQ77g5aI2XgmvqrVYBhpQOkakdgOEF1dIUocTF@HpV/kW8gOJWOC9XJkDxnn4g/gH5H5hFtsxmHcZQuupEVuYotNr2nDCFnPVIrNmucsDUnEum4hi7QVDzdEkSMiMEY1IT6qSVIsCzCCUVaw@q7aN7ETYlOMSLHwxsezZA9y9j9hB8cG2I3W5NMk6nj5R2@gs\" rel=\"nofollow noreferrer\" title=\"JavaScript (SpiderMonkey) – Try It Online\">Try it online!</a> - ECMAScript<br />\n<a href=\"https://tio.run/##bVNtT9swEP7Or7hFTLXb4iWwT5gIbdMmTRrbBB@bTnISpzE4TmY7NMD47d05zQZIRFHO9@Ln7p67XItbcXRd3uxU07XWwzXqTLVszuG5pfdKv2qzciMH9Bx0fa5VAYUWzsGFUAYeYLI5LzyK21aV0KCHXHmrzAaE3bjVmoKvbbt18HkoZOdVizcPAL4oLaFKjdyORxKxoi0lQ39E@ce@qqSV5aUUpbSQj2EvjeTfzUmtKOVTXrf0fFsHfEJcmmMPovymjCSUvklNrzVVFXFM/u6FdiR6N5/PI0ofXobuEQjxrwI8IIL/j4AA7xAhx7gb7hbpLDOzID1/3NsefwrvpTVg0@mE3TZdSOAoRzbyttVSGLhPK0SUHK4KYQy2rkzXe0ghdDvZyNWd87JhylAOU59jGKuF@y4Hj2WOFANMhGisHTH2QQYjphYn/2oNGt0hirlOK0@iLGP44iTwkgcTo/ur8bgLlnXCOokK0at4TZdgkledTEuz8fXZMZxDiIRTFMkaEYta2NV6mJoatQvha9aIgYwHkTtiYrp8UhJKF8mawwdrxZ1jldKaDMvZMEO4AcHT2dGMjx1XrQ1sYM2piTmYs9QkKBYLpATxiho5bTC1xXSjRsZdN/hLfMJK9jvGtlZ0ZEpWtN3dj@pSmI3EnOYsPo9Pk2e1YWWUBqIqIA2WZkrkP@zHPZ0G1SLrW6u8JGExKL9Pve3DjJ/cHc7BVyR66yJklPLH8ByEzdxlOTlPya8/A6WEDHOanWQnaMlODimdD1lyuAvrtztK4uP3jIXvXw\" rel=\"nofollow noreferrer\" title=\"Java (JDK) – Try It Online\">Try it online!</a> - Java</p>\n<p>Takes its input in unary, as an optional <code>-</code> sign followed by a string of <code>x</code> characters, the count of which represents the absolute value of the number. (As such, it is not bijective unary, as zero can be represented in two ways. The regex works with both.)</p>\n<p>Sets a flag for whether a negative sign is present. Operating on the absolute value, repeatedly divides by 4 (requiring that there is no remainder), and then asserts that the remaining number is 1 if there was no negative sign, or 2 if there was.</p>\n<pre><code>\\b                    # Anchor on the border between {start or &quot;-&quot;} and &quot;x&quot;; in the\n                      # domain of this problem, it is actually equivalent to\n                      # (?&lt;=^(?=x)|-|x$) - so it can anchor on the end instead of the\n                      # beginning, but that would result in a non-match.\n(?=(^|x))             # \\1 = 1 if negative sign is present, 0 if not\n(                     # loop the following:\n    (x*)\\3\\3(?=\\3$)   # assert tail is divisible by 4; tail = tail / 4\n)*                    # iterate as many times as possible (minimum 0)\nx                     # tail -= 1\n\\1                    # tail -= \\1\n$                     # assert tail==0\n</code></pre>\n<h2>Regex (ECMAScript), 36 bytes</h2>\n<pre><code>^(-(x*)(?=\\2$))?((x*)\\4\\4(?=\\4$))*x$\n</code></pre>\n<p><a href=\"https://tio.run/##TY/NbsIwEIRfhVoIdpPGhCiqKozJqQcO5dAeSyu5YBK3xrFsAyk/z54mh0q9rDTzjWY1X@Io/MYpGxJv1Va6fW2@5U/ruJGnwYssnxoLcOaLSdR@QAJNhFDwdTZELKBX63yd907eOVEzbKPJGWmoX4NTpgSkXquNhIf7JEdknqfsVCktATR3Umy1MhIQ77g5aI2XkmvqrVYBxpSOkakdgOEl1dKUocJFdr0qvxIrUNwK5@XSBCjf0nfEPyD/A7OYFtNZjzFUrj6RpTkKrbYDJ0wpZwMSa7arHTA155KpOMb@Iah5WpCEzAjBmDSEOmmlCPAsQkXFpwfV9dG9CJsKHOLFj0a2Gxug3zdl9hB8cF2I3W5tkqX5I6X9/QU\" rel=\"nofollow noreferrer\" title=\"JavaScript (SpiderMonkey) – Try It Online\">Try it online!</a></p>\n<p>This was the original version I posted; I'm keeping it here, as it's sufficiently different, yet close enough in length, to be interesting.</p>\n<p>If it sees a negative sign, it strips it and divides the number by 2 (requiring that there is no remainder). It then asserts that the remaining number is a power of 4.</p>\n<pre><code>^\n(\n    -                 # eat a leading negative sign\n    (x*)(?=\\2$)       # assert tail is even; tail = tail / 2\n)?                    # do the above optionally\n# Assert that tail is a power of 4\n(                     # loop the following:\n    (x*)\\4\\4(?=\\4$)   # assert tail is divisible by 4; tail = tail / 4\n)*                    # iterate as many times as possible (minimum 0)\nx$                    # assert tail == 1; if this fails to match, the regex engine will\n                      # try backtracking the loops, but that cannot result in a match\n</code></pre>\n<h1>Regex (Perl / PCRE / Boost / Python / Ruby / .NET), 32 bytes</h1>\n<pre><code>^(-)?((x*)\\3\\3(?=\\3$))*x(?(1)x)$\n</code></pre>\n<p><a href=\"https://tio.run/##RU/LasMwEPyVJYhYm/iluL1UVuxAeu2ptyo1TolBoCau5IKKcH/dldNALsvO7OzObH8y@nH6/AFiOHh9@Wg1kIwHKMr97nW3HaG7GEqsyHm55ehBdQGh7406D7CQ5wUfodbC9loNNJKpTKPYfh/tELaaOGExw9PXrKvubB54fCIN8vmcDaatqXW5QV/rN3YQoeYHfrNWN0hUKa7j0K3X6FUHlEZJ5IKkzBFSiFwEDtqjDQwiiF/IiMnQE7tcXvNe44ZfGP@PTxQfx7Fpnl/2TTO90wQrSt0KZSELWglZEMSVoxVl6JBMU8LyzUOazvUP\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a> - Perl<br />\n<a href=\"https://tio.run/##XVBNa4NAEL3nVyyysDOJGk16KF3FS1sIlB7a3mK6GLtGwayLGhBCfrudDT11YYf5ePPezNjazklma8t4z1LmrT0WMtvrk@q1bYtSg1iHy0ypumhHVXZn27S6zyFHmX@sB@EzQb@ipDppBzCjNuMASr3u3l6UQp/FSJRELBdV1wNv0kjyNq0IPsDn1/PuHSVeWVMBb/fD2LfakIdBfEhTLzceEni4HKlCaT/ygxhdv55s2/1o8MLQ8wkviaDsLmZ0zcmGuvbEQDY6yAVjd2nzF3OTpPc6easVkjaD@87nYixr4L1P2CTKRCCehMCQtN05dDGCmIRfHAeqIz12dWM3qMu6c7NKRuvFkrmYcSNvpHz7dztAOX9DgBnAtMR8m28hS/MtR1xOkEGME/J5DjbRw2MYOvsL\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a> - PCRE2<br />\n<a href=\"https://tio.run/##bVLbjtowEH3nK2bZVTMmlxKo@pAQkPoJVR9aAY1MMIlV4kS5iOxW@@ulY2ehga0f4tgzc86ZM07K0k2T5PwoVXJs9wIWu6Kom4@VSEXnZWW5HCUZryAu11uI4Ov4y@n0azdvfzw/f/@WfT5leP6JLlshdhO2mW/muIo28yfGJh2u0Gcdezqz@5qxA5MyikvbD0f/iCXxVoLny9HjXhykEpDzDrmzY4DI2RJ3RMNZQDsbSdVQWCpk8HsEtMo1VR@FwpK5/jaahtBSznwWN1Doky5I9U/d7IOAcqVK6bJsm9DUJ4WqGzDNB4HpHiqBpXNzFQQy4bVg4eW2znmTZHDK@BvMoagANdfLlSsVzZG6QXNIpHJ6WhZepOulS9SUHOZNIdEkeElMMpExB5TvQFnUFO4j5M4ex543ZuEVQfkU1kkP0bDHIFD6cvUfYLBNvg0zBgGxh7dqcsIzE9jVqKakwvz4bMBpnsZE61Li1J/WKrdn2xBykdeiwdom6VZnUQ852VavlW@b8Vwxro7JSOk5LSLlh2DbcmjPVZSS2gRYRjAlSH14U@XqXRKFPAA@UB7TZFI/Wsu1wlskShmONa4Fr5IMceAb@6DLbQLaOma@Dr0Hdq/pgvbCgIzVBqC1URbJeIn88F1q/wSKtoHFAuRt/PWdxLsuukEXfXL/rUTTVgrI0tez609nnzxPf/8khyNP67N7NK3GptO/\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a> - Boost<br />\n<a href=\"https://tio.run/##NY7basMwDEDf8xXC9EHKxcTNnpKafEiTQba5rYdnB9lj6ddndcdehBDnHLTe0y34brdfa@AE8R5rNvVnDH4A1iyE2F@xoRFxK2nqpg5HPXUHonLDERVtdNgf0Fn1jZoHsLotLoHBgfU5JmP6sL4vwGkn4@psQiGloALsBZzx6Oh07MFV2hWQRZ9FXvzVoPUJ3bmdqf7b1EyVokcru2xkNAu/35BrEI0o0Z9aqsQmyuUtoqcnmEnbw8q5QM@DVsP/Y@E7yR@2yWBMnJW9Ue3xRco8fwE\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a> - Python<br />\n<a href=\"https://tio.run/##PU9La8MwDL7vV2imUCkjIo@dlppQ6K47jN2SNrTUTQ3GDY5Ls8v@emaXrQcJPul7SO56@J4dSPhUvZoGtuoGm/XXmp3aHyvQMqvgdtZGgZG98uMTgD6BadJ8K6VorajCwjQZc1psK1D2GBhhwuNgtMcl85L@NGyU7f0ZaVUEURMMgu6hOV0cWNAW4pD9pdOYZ8QciQ8YeHcvRLvKapGKNyHoRUwisbw/jATyB1wVGfo5Xj5c/XgPiJ/kATttPdj/zNhjdd37x6br5h2mVCNOCbVlW2It23JBlExYY04TLeY5zbPilTn2Xw\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a> - Ruby<br />\n<a href=\"https://tio.run/##RY/RaoQwEEV/RWQgGW2Crn1aCW7pc79ALVg3WwNpIjGLsuK329hS@jJw5t65zB3tLN00SK13cKJ28lMu7fls5EwvZH@nDCtKlwSboiloJZoCEJOFVjTHBWEnl6f41X6NSstrjCU8RFberJNdP1DQkTIRKDPePa7QCdBsGrXyccMbHpfqRqHjvb0bz7SPTocnFdDVWbuFDApG1Mr49mdTgmFa/nF@cJriemQ4/tb5fpATJYwk9DD6KMOULCSpgzSEPi8fUxAQfy8euM5OeckGO/ktPJ2X/xwxY0N9rYyMwGzbtrM8Oz1zfsxv\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a> - .NET</p>\n<p>Uses essentially the same algorithm as the 33 byte ECMAScript version, but in a more straightforward way, which never matches strings outside the problem's domain.</p>\n<pre><code>^\n(-)?                  # \\1 = negative sign if it is present; unset otherwise\n(                     # loop the following:\n    (x*)\\3\\3(?=\\3$)   # assert tail is divisible by 4; tail = tail / 4\n)*                    # iterate as many times as possible (minimum 0)\nx                     # tail = tail - 1\n(?(1)x)               # if \\1 is set, then tail = tail - 1, else do nothing\n$                     # assert tail == 0\n</code></pre>\n"},{"answer_id":249963,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/249963#249963","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/Regenerate\" rel=\"nofollow noreferrer\">Regenerate</a>, 19 bytes</h1>\n<pre><code>(($3!x)($1)!){$~1}x\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72qKDU9NS-1KLEkdcGCpaUlaboWmzU0VIwVKzQ1VAw1FTWrVeoMaysgMlAFy6KVDA2VYqE8AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>The input <span class=\"math-container\">\\$n\\$</span> is zero-indexed, taken as a command-line argument in decimal. The output is in unary, as a string of <code>x</code> characters whose length is the <span class=\"math-container\">\\$n\\$</span>th Fibonacci number.</p>\n<pre><code>(           # Capture group $1 - unset on the first iteration, and on each\n            # subsequent, contains the previous iteration's match.\n    ($3!x)  # On the second iteration, match a single &quot;x&quot;, seeding the Fibonacci\n            # sequence. On subsequent iterations, match $3.\n    ($1)    # Copy $1 into capture group $3, and also match it.\n!           # Try the below only when the above cannot match.\n            # Zero-width match - executed only on the first iteration, seeding\n            # the Fibonacci sequence.\n){$~1}      # Iterate the number of times passed as command-line argument #1.\nx           # Match a single &quot;x&quot;, representing the 0th Fibonacci number.\n</code></pre>\n<p>This works similarly to <a href=\"https://codegolf.stackexchange.com/questions/126373/am-i-a-fibonacci-number/126405#126405\">Martin Ender's Fibonacci-matching regex</a>, but it is freed from one of its limitations. To illustrate, a straight port of that regex would have been the following 23 byte Regenerate program (shown alongside this 19 byte one):</p>\n<pre><code>(($3!)($1)!x){$~1-1}x!x\n(($3!x)($1)!){$~1}x\n</code></pre>\n<p>Martin Ender's regex has to work around the fact that any loop with an indefinite maximum iteration count will exit after making a zero-width match. But unlike a regex that must <em>match</em> any arbitrary Fibonacci number, for this problem we <em>generate</em> one from a known index, giving us a definite iteration count. Thus our first iteration can make a zero-width match.</p>\n<p>A straight port of Martin Ender's regex to Regenerate is 4 bytes longer, because it's naturally &quot;-1 indexed&quot; rather than 0 or 1 indexed. So it needs <code>{$~1-1}</code> to fix the indexing; that in turn forces the need for a <code>!x</code> alternative at the end, because a negative number of loop iterations causes a non-match. If keeping it &quot;-1 indexed&quot;, the two would be identical in length:</p>\n<pre><code>(($3!)($1)!x){$~1}x  # -1 indexed: 1, 2, 3, 5, 8, 13, ...\n(($3!x)($1)!){$~1}x  #  0 indexed: 1, 1, 2, 3, 5,  8, ...\n</code></pre>\n<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/Regenerate\" rel=\"nofollow noreferrer\">Regenerate</a>, 30 bytes (26 characters)</h1>\n<pre><code>((($4!‍)($2)!){$~1}‍)${#1}\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72qKDU9NS-1KLEkdcGCpaUlaboW-zQ0NFRMFB819GpqqBhpKmpWq9QZ1oK4KtXKhrUQRVC1y6KVDA2VYqE8AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>The output is in decimal. This is achieved by outputting the Fibonacci number in unary invisibly, using a string of Zero-Width Joiner (U+200D) characters instead of <code>x</code>, before outputting the length of that string in decimal using <code>${#1}</code> (measured using by wrapping the entire unary regex in capture group <code>$1</code>, thus incrementing the previous capture group numbers).</p>\n"},{"answer_id":249323,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/249323#249323","body":"<h1><a href=\"https://github.com/tobyck/cubestack\" rel=\"nofollow noreferrer\">Cubestack</a>, 22 bytes</h1>\n<pre><code>M R' M' z u2 b u2 R z'\n</code></pre>\n<p>Outputs forever in the <a href=\"https://github.com/tobyck/cubestack#usage\" rel=\"nofollow noreferrer\">offline version</a> and in the online version it outputs as many as it can in 5 seconds.</p>\n<p><a href=\"https://cubestack.surge.sh?TSBSJyBNJyB6IHUyIGIgdTIgUiB6Jw%3D%3D&amp;\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Explanation:</p>\n<pre><code>M R' M'                 # Push 1 to the stack\n        z               # Open an (infinite) while loop\n          u2 b          # Without popping, print\n               u2 R     # Without popping, add\n                    z'  # Close while loop\n</code></pre>\n"},{"answer_id":248649,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/248649#248649","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <strike>111</strike> 109 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>#define P printf(&quot;%f &quot;\nf(a,l,i)int*a;{float s=*a++,p=s;for(i=l-1;i--;p+=*a++,p/=2)s+=*a;P,s/=l);P,p);P,p-s);}\n</code></pre>\n<p><a href=\"https://tio.run/##TY7dCsIwDIXv@xRhIqxby5yIKKHv4L14UWYrhdqVdt449uyzqz8YDgnn5COk47eum@fVVWnjFJzAB@MGXRZrDQXRpWSWGZqiSuKobS8HiKKSdc28iKj7UBpheYuGc/T1Z9OILY2LwROLjbA0TZ8bjxSnmaR7cJfGlZSMBFItgQzhfAEBY8vgrV3WnsEh65g04Y@3yiU6mqfq058hUGj@3HlzoUgynD1b@G8S1PAIDjZIpvkF\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":248643,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/248643#248643","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 48 bytes</h1>\n<pre><code>[ [ unclip [ + 2 / ] reduce ] keep mean 2dup - ]\n</code></pre>\n<p><a href=\"https://tio.run/##TY/BTsMwEETv@YpRJU4IsBNUJfABiAsXxKn0YLmb1mrjGHt9QFW/PWysKtTrw@y@mZXdG8tjnL4@3z/eXpDoJ5O3lDAYPuBI0dOp6MfEhl1iZxNCJObfEJ1n9GMUzM7v8VpV5wpyztCo0eBy7Rrp9NJphVqhUf9YzRMlQN2adBktk2epDq0sarEWpW9Xlpoda6Gt0G5hXUnNmZnra@4ybbBB9vbkgoh7eeETtoi0y5ZEHIkCBjIe9S4HPGArgdVdRrnffoXy/V6sdhzCmAhk7GH6Aw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":248434,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/248434#248434","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf\" rel=\"nofollow noreferrer\">MathGolf</a>, 1 byte</h1>\n<pre><code>f\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjPz0n7/x@IzAA\" rel=\"nofollow noreferrer\" title=\"MathGolf – Try It Online\">Try it online!</a></p>\n"},{"answer_id":248343,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/248343#248343","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 6 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>╡à⌂≤¬)\n</code></pre>\n<p><a href=\"https://staxlang.xyz/#p=b5857ff3aa29&amp;i=swap%0Athe%0Afirst%0Aand%0Alast%0Aletters%0Aof%0Aeach%0Aword%0Ain%0Aa%0Agreen%0Ameadow&amp;a=1\" rel=\"nofollow noreferrer\">Run and debug it</a></p>\n<p>Uses newline for the word delimiter</p>\n"},{"answer_id":248102,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/248102#248102","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 23 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>repeat show(F&lt;-T+(T=F))\n</code></pre>\n<p><a href=\"https://tio.run/##K/r/vyi1IDWxRKE4I79cw81GN0RbI8TWTVPz/38A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Similar to, but shorter than, <a href=\"https://codegolf.stackexchange.com/a/89653/67312\">this answer</a>, prints the sequence indefinitely. Based on <a href=\"https://codegolf.stackexchange.com/a/247838/67312\">this answer</a> to a related challenge. Thanks to <a href=\"https://codegolf.stackexchange.com/users/95126/dominic-van-essen\">Dominic van Essen</a> for some golfs.</p>\n"},{"answer_id":247990,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/247990#247990","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 7 bytes</h1>\n<pre><code>⌈ƛḣǔp;Ṅ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCLijIjGm+G4o8eUcDvhuYQiLCIiLCJTd2FwIHRoZSBmaXJzdCBhbmQgbGFzdCBsZXR0ZXJzIG9mIGVhY2ggd29yZCJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>⌈     Ṅ # To the words split on spaces...\n ƛ   ;  # Over each\n  ḣ     # Take the first character and the rest\n   ǔ    # Rotate the rest\n    p   # Append the first char\n</code></pre>\n"},{"answer_id":247913,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/247913#247913","body":"<h1><a href=\"https://geogebra.org/calculator\" rel=\"nofollow noreferrer\">GeoGebra</a>, 38 bytes</h1>\n<pre><code>n\nInputBox(n\nIteration(p+q,p,q,{0,1},n\n</code></pre>\n<p>Input in Input Box. Outputs the nth term of the 0-indexed Fibonacci sequence starting at <span class=\"math-container\">\\$F_0=0\\$</span>, <span class=\"math-container\">\\$F_1=1\\$</span>.</p>\n<p><a href=\"https://www.geogebra.org/calculator/mtkpy32b\" rel=\"nofollow noreferrer\">Try It On GeoGebra!</a></p>\n"},{"answer_id":247803,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/247803#247803","body":"<h1><a href=\"https://github.com/Radvylf/rSNBATWPL\" rel=\"nofollow noreferrer\">rSNBATWPL</a>, 28 bytes</h1>\n<pre><code>n~cond{n&lt;2}{1}${n- 1}+{n- 2}\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJyYWlzaW4tYmF0d2FmZmxlIixudWxsLCJmPW5+Y29uZHtuPDJ9ezF9JHtuLSAxfSt7bi0gMn07IiwiZiQ1IiwiIiwiIl0=\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n"},{"answer_id":247627,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/247627#247627","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>benchmark.fib3</code>, 3 bytes</h1>\n<pre><code>fib\n</code></pre>\n<p><a href=\"https://tio.run/##S0tMLskv@h8a7OnnbqWQlJqXnJGbWJStl5aZZKxQUJRaUlJZUJSZV6JgzcVl@h8o@l/vPwA\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>And a non- built-in version:</p>\n<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 32 bytes</h1>\n<pre class=\"lang-factor prettyprint-override\"><code>[ 0 1 rot [ tuck + ] times nip ]\n</code></pre>\n<p><a href=\"https://tio.run/##BcE7CoAwEAXA3lO8XhAtbPQAYmMjVmIRwoaEfFk3haePM0Zpydyucz@2BZ44UcBrqzGBEJVYFCaRr7BLgrXr5nZjxATOghtStUePB@IivUiu4GlahYCh/Q\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241424,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241424#241424","body":"<h1><a href=\"http://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, 13 bytes</h1>\n<pre><code>{grep :k,|@_}\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/Or0otUDBKlunxiG@9n9xYqVCmoaWgo2CgY6CjamCrqmCkYKukYKBneZ/AA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p>Raku's <code>grep</code> filtering built-in can return matching indices instead of matching values if given the adverb <code>:k</code>.  This is just an anonymous function that adds <code>:k</code> to the arguments it's given and passes them all to <code>grep</code>.</p>\n<p>Raku's function objects actually have an <code>assuming</code> method that returns a new function with some of the arguments to the original function fixed in advance, so this code would more idiomatically be written <code>&amp;grep.assuming(:k)</code> or the even terser <code>&amp;grep.assuming:k</code>, but that's too long for golf.</p>\n"},{"answer_id":247157,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/247157#247157","body":"<h1><a href=\"https://github.com/dloscutoff/esolangs/tree/master/BitCycle\" rel=\"nofollow noreferrer\">BitCycle</a> <code>-u</code>, <s>67</s> 45 bytes</h1>\n<pre><code>v1&lt;   &lt;\nBvC1Av\nv~~v &lt;\n&gt;  Cv&gt;^\n   v~~\n  \\&gt;101!\n</code></pre>\n<p><a href=\"https://dloscutoff.github.io/Esolangs/BitCycle/?p=s1wc3wrBsC1Asrsz2scwrec2Csenrc3sz2rc2ie101b&amp;f=1\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>It's beautiful... I have some idea of how this works.</p>\n<p>The <code>A</code>, <code>B</code> and <code>C</code> are collectors. when the field is empty, the first non-empty collector (sorting in alphabetical order) has all collectors opened.</p>\n<p>The basic idea is that the two numbers are stored in the <code>B</code> and <code>A</code> collectors. On each iteration:</p>\n<ul>\n<li>The bits stored in A are emitted into the main C collector</li>\n<li>The bits stored in B are duplicated and sent to the main C collector, and the C collector next to the A collector. This is necessary because otherwise the <code>A</code> collector would open before the <code>C</code> collector.</li>\n<li>Both <code>C</code> collectors open. One emits its bits into A (previously stored in B).</li>\n<li>The other duplicates its bits, and sends one stream to the B collector and the other stream to an output device</li>\n<li>Duplicating bits also emits negated bits. <em>one</em> of these (a 0) from the B collector is sent to the output device via the <code>\\</code></li>\n</ul>\n<p>This is because integer outputt in BitCycle is done in unary, with a sequence of n 1s and then a 0. a 0 must be sent before the next iteration begins.</p>\n<p>The <code>101</code> is initially emitted to the output device to print 1, 1 (the 0 to print the next 1 is supplied before the 2 is emitted).</p>\n"},{"answer_id":225081,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/225081#225081","body":"<h1><a href=\"https://www.gnu.org/software/gawk/\" rel=\"nofollow noreferrer\">AWK</a>, 18 bytes</h1>\n<pre><code>1,$0=NF~gsub($1,e)</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704sTx7wYKlpSVpuhabDHVUDGz93OrSi0uTNFQMdVI1IRJQ-QU3tQ0VkCCXoYKRgrGCCZeZgqUCGHOZcZkrmHOZAMUNIHoA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Revisiting my former answer, I realized that if I wanted <code>$0</code> to be printed every time, I can use <a href=\"https://www.gnu.org/software/gawk/manual/gawk.html#Ranges\" rel=\"nofollow noreferrer\">range patterns</a>. In fact, if <em>begpat</em> (the left part) is always true, then the range pattern is always true. So I substituted the appending <code>( )e</code> technique to the range pattern <code>1,</code>, saving one byte.</p>\n<h3>AWK, 19 bytes (former answer)</h3>\n<pre><code>$0=(NF~gsub($1,e))e\n</code></pre>\n<p><a href=\"https://tio.run/##SyzP/v9fxcBWw8@tLr24NElDxVAnVVMz9f9/QwUkyGWoYKRgrGDCZaZgqQDGXGZc5grmXCZAcQMA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n<p>In details:</p>\n<pre><code>       gsub($1,e)    Searches and substitutes every occurrence of the first number\n                     of the input ($1) for a null variable (e). It returns the\n                     number of substitutions made.\n\n    NF~              Matches the Number of Fields (i.e., number of items) and the\n                     number of substitutions.\n                     We expect 1 or 0 as result, but there will be no output when\n                     it parses as 0. (AWK skips falsey patterns, and 0 is falsey.)\n\n   (             )e  Appending a null variable converts 1 to &quot;1&quot; and 0 to &quot;0&quot;.\n                     That's good, because strings are always true.\n\n$0=                  Sets the original input to the resulting &quot;1&quot; or &quot;0&quot;.\n                     As the pattern is a string, it is printed.\n</code></pre>\n"},{"answer_id":247058,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247058#247058","body":"<h1>TI-Basic, 5 bytes</h1>\n<pre><code>min(Ans=min(Ans\n</code></pre>\n<p>Takes input in <code>Ans</code>. Outputs <code>0</code> for falsey, and <code>1</code> for truthy.</p>\n"},{"answer_id":224077,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224077#224077","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 12 bytes</h1>\n<pre><code>length∘∪\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPivqGCr8D8nNS@9JONRx4xHHav@OxRn5JcrKEYb6iigo1guJEkjHQVjHQUThJiZjoKljgKURBJGMM11FMwRPBOwGQax/wE\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<ul>\n<li>outputs 1 if all numbers are equal, &gt;1 else</li>\n<li><code>∘</code> is for function composition</li>\n<li><code>∪</code> is <code>union</code>, equivalent to <code>unique</code> for a single argument. <code>Set</code> would also work for the same number of bytes (but <code>∪</code> is nicer)</li>\n</ul>\n<h1><a href=\"https://julialang.org\" rel=\"nofollow noreferrer\">Julia 1.8</a>, 8 bytes</h1>\n<pre><code>allequal</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m700qzQnM3HBYkUF26WlJWm6FisSc3JSC0sTcyDcm4UOxRn55QqK0YY6CugolgtJ0khHwVhHwQQhZqajYKmjACWRhBFMcx0FcwTPBGyGQSzE4gULIDQA\" rel=\"nofollow noreferrer\">Attempt This Online!</a> <sub><sup>when ATO updates to 1.8</sup></sub></p>\n<ul>\n<li>the boring solution</li>\n</ul>\n<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 0.6</a>, 3 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>var\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0@6@oYPu/LLHov0NxRn65gmK0oY4COorlQpI00lEw1lEwQYiZ6ShY6ihASSRhBNNcR8EcwTMBm2EQ@x8A\" rel=\"nofollow noreferrer\" title=\"Julia 0.6 – Try It Online\">Try it online!</a></p>\n<ul>\n<li>outputs <code>0</code> or <code>NaN</code> for truthy, anything else for falsy</li>\n<li>for Julia 1.0+, add <code>using Statistics</code></li>\n<li><code>std</code> would work the same way</li>\n</ul>\n"},{"answer_id":247098,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/247098#247098","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>LI\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJMSSIsIiIsIkhlbGxvIFdvcmxkIl0=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>S</code>, 2 bytes</h1>\n<pre><code>v¤\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJTIiwiIiwidsKkIiwiIiwiSGVsbG8gd29ybGQiXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h3>If we want to port the Jelly answer, then:</h3>\n<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>rs</code>, 3 bytes</h1>\n<pre><code>fð•\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJycyIsIiIsImbDsOKAoiIsIiIsIkhlbGxvIHdvcmxkISJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":247067,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247067#247067","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, 6 bytes</h1>\n<pre><code>a0I=u;\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/z/RwNO21Pr/fzMuSy4wBgA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p>This one works by sorting the list of number and comparing the top and bottom of the stack.</p>\n<pre><code>a       - sort the stack, implicitly reads the numbers first\n 0I     - copy the bottom entry to top of the stack\n   =    - compare the top two entries\n    u;  - print boolean result, exit to stop from auto printing the stack\n</code></pre>\n"},{"answer_id":247060,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247060#247060","body":"<h1>Batch, 93 bytes</h1>\n<pre><code>@set i=%1\n:l\n@if %i:~,1%==%i:~-1% (if %i% gtr 9 (set/ai=%i%/10&amp;goto:l)else echo 1)else echo 0\n</code></pre>\n<p>Takes input from the command line as a string of numbers. Outputs <code>0</code> for falsey, and <code>1</code> for truthy.</p>\n"},{"answer_id":247056,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247056#247056","body":"<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a>, 16 bytes</h1>\n<pre>def f(a):b,={*a}</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vwYKlpSVpuhYbUlLTFNI0EjWtknRsq7USayHCN5PT8osUEhUy8xSiDXUMdYxidYC0sY4pkDbSAcNYKy4FhYKizLwSjUSd1LwUWyUrJU2gUElRpRXIQGuIXEhRaSpIOLUiObWgxAoi6JaYU5yqCbEK5hIA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Signals by exit code.</p>\n<h1><a href=\"https://www.python.org\" rel=\"nofollow noreferrer\">Python</a> NumPy, 16 bytes</h1>\n<pre>lambda a:a.ptp()</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhYbchJzk1ISFRKtEvUKSgo0NCHCN0Mycwvyi0oU8kpzCyq50vKLFBIVMvMUog11DHWMYnWAtLGOKZA20gHDWCsuBYWCosy8Eo1EHSUrJZ00DbBOvcSiosRKjURNTVtbA6jZCxZAaAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Takes a numpy array and returns 0 for True and 1 or more for False.</p>\n"},{"answer_id":247055,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247055#247055","body":"<h1><a href=\"https://www.jsoftware.com\" rel=\"nofollow noreferrer\">J</a>, 6 bytes</h1>\n<pre><code>1=#&amp;~.</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m70wa8FOJT31NAVbKwV1BR0FAwUrINbVU3AO8nFbWlqSpmuxzNBWWa1OD8K5Ga7JlZqcka-QpmCIDBGCRgrGCiYwrpmCJQTDBWAMcwVzGNMEqMcAYvyCBRAaAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Outputs <code>0</code> for falsey, and <code>1</code> for truth.</p>\n<h2>How?</h2>\n<pre><code>1=#&amp;~.\n   &amp;    Compose:\n  #     The length of\n    ~.  The nub (of the input)\n1=      Is it equal to one?\n</code></pre>\n"},{"answer_id":247052,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/247052#247052","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 22 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:len(set(n))&lt;2\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHPKic1T6M4tUQjT1PTxuh/QVFmXolGmka0oY4COorV1OGCyBjpKBjrKJhABcx0FCx1FKAkTAxKm@somEOZJmB9BrGamv8B\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>Set function takes all the unique elements of the group only.</p>\n"},{"answer_id":230667,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/230667#230667","body":"<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 38 bytes</h1>\n<pre><code>var a,b=1\nwhile 1&gt;0:a=b-a;echo a;b+=a\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704LzN3wYKlpSVpuhY31coSixQSdZJsDbnKMzJzUhUM7QysEm2TdBOtU5Mz8hUSrZO0bRO5IKqhmmCaAQ\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 64 bytes, with arbitrary precision</h1>\n<pre><code>import bigints\nvar a,b=initBigInt(1)\nwhile 1&gt;0:a=b-a;echo a;b+=a</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704LzN3wYKlpSVpuhY3HTJzC_KLShSSMtMz80qKucoSixQSdZJsM_MyS5wy0z3zSjQMNbnKMzJzUhUM7QysEm2TdBOtU5Mz8hUSrZO0bRMh5kCNgxkLAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Thanks to @JoKing  and @cairdcoinheringaahing</p>\n"},{"answer_id":246337,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/246337#246337","body":"<h1><a href=\"https://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 48 bytes</h1>\n<pre><code>proc f(n:int):int=(if n&lt;=2:1 else:f(n-1)+f(n-2))</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m704LzN3wYKlpSVpuhY3DQqK8pMV0jTyrDLzSjRBhK1GZppCno2tkZWhQmpOcaoVUFLXUFMbRBlpakL0QbXDjAEA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Bytes counted using <code>wc -c</code>. This is the standard recursive function approach, as opposed to the iterative full program of my other <a href=\"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/230667#230667\">answer</a>.</p>\n"},{"answer_id":243108,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/243108#243108","body":"<h1><a href=\"https://github.com/PyGamer0/flax\" rel=\"nofollow noreferrer\">flax</a>, 3 bytes</h1>\n<pre><code>1+ⁿ\n</code></pre>\n<p>Port of the Jelly answer. Takes input from stdin. Works similarly to the Jelly answer.</p>\n"},{"answer_id":246008,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/246008#246008","body":"<h1><a href=\"http://lolcode.org/\" rel=\"nofollow noreferrer\">LOLCODE</a>, 262 bytes</h1>\n<pre><code>HAI 1\nI HAS A x\nGIMMEH x\nx IS NOW A NUMBR\nBOTH SAEM x 0\nO RLY?\nYA RLY\nVISIBLE &quot;0&quot;\nNO WAI\nI HAS A a ITZ 0\nI HAS A b ITZ 1\nI HAS A c ITZ 0\nIM IN YR l UPPIN YR i WILE BOTH SAEM i SMALLR OF i DIFF OF x 2\nc R SUM OF a b\na R b\nb R c\nIM OUTTA YR l\nVISIBLE b\nOIC\nKTHXBYE\n</code></pre>\n<p>Reads <code>n</code> from STDIN and returrns the <code>n</code>th Fibonacci number.</p>\n<p><a href=\"https://tio.run/##RY5BDoIwEEX3c4ofTiBcwBQFO5FS0xYRd7S6ICFhy@2xYNDNzP8zmfdnnMYwvd7LIgUjJYYUFgIzXVipQkYxgy1q3cZp3ajcUK6dhBWFwowDaZiqO1In1k53tpxXBZJDQrVGK/iH7MHuGQ927zf/jwz7XoFrdAYjmtvtKwe0HKn/5AFWiaoy0GXUZy7LVc3IKMDANmq1PTz10XrysYaVrBvnxAb/vepJ84muTj7yrliWNPsA\" rel=\"nofollow noreferrer\" title=\"LOLCODE – Try It Online\">Try it online!</a></p>\n"},{"answer_id":237489,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/237489#237489","body":"<h1><a href=\"https://github.com/cgccuser/quipu\" rel=\"nofollow noreferrer\">Quipu</a>, 33 bytes</h1>\n<pre><code>1&amp;0&amp;\\n\n[][]/\\\n^^/\\0&amp;\n--++??\n1&amp;\n++</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m720sDSzoHTBgqWlJWm6FjcVDdUM1GLyuKJjo2P1Y7ji4vRjDNS4dHW1te3tuQzVuLS1IQqh6mH6AA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Saved 4 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/76162/jo-king\">Jo King</a>.</p>\n<p>It prints the Fibonacci sequence separated by newlines.</p>\n<p>Equivalent pseudocode:</p>\n<pre><code>  a = [0, 0, 0]    // implicitly\n0:\n  a[0] = a[1] - a[0] + 1\n1:\n  print a[0]\n  a[1] = a[0] + a[1]\n2:\n  print &quot;\\n&quot;\n  goto 0\n</code></pre>\n"},{"answer_id":245853,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/245853#245853","body":"<h2>PHP 4 (58 chars)</h2>\n<p>The function <strong>f</strong> will print <em>$n</em> Fibonacci numbers.<br />\nIf <em>$n</em> = 0 <strong>f</strong> will take it for Infinity, then reach the PHP floating point limit and print NAN forever.</p>\n<pre class=\"lang-php prettyprint-override\"><code>function f($n){for($i=!$j=0;$n-=print' '.$j=-$j+$i+=$j;);}\n</code></pre>\n<h2>PHP with GMP (70 chars)</h2>\n<p>If <a href=\"https://www.php.net/manual/en/intro.gmp.php\" rel=\"nofollow noreferrer\">GMP</a> is available, it allow for arbitrary-length integers to be worked with.<br />\nSo we can compute <code>f(1e5)</code>, output will be <em>1,045,063,704</em> chars long with no precision loss.</p>\n<pre class=\"lang-php prettyprint-override\"><code>function f($n){for($i=!$j=0;$n-=print' '.$i=gmp_add($k=$i,$j);$j=$k);}\n</code></pre>\n<p><strong>Info:</strong> <code>f(1e5)</code> = <code>25974...46875</code> has 20,899 digits.</p>\n"},{"answer_id":242916,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/242916#242916","body":"<h1><a href=\"https://github.com/catseye/Mascarpone\" rel=\"nofollow noreferrer\">Mascarpone</a>, 45 bytes</h1>\n<pre><code>v['1.]v*'b&lt;^[v{^vv'b&gt;'a&lt;[ab]v*'b&lt;^a'\n.:!]v*:!\n</code></pre>\n<p><a href=\"https://tio.run/##y00sTk4sKsjPS/3/vyxa3VAvtkxLPckmLrqsOq6sTD3JTj3RJjoxCSqaqM6lZ6UI5Fgp/v8PAA\" rel=\"nofollow noreferrer\" title=\"Mascarpone – Try It Online\">Try it online!</a></p>\n<p>Outputs the numbers in unary, separated by newlines.</p>\n<p>High-level explanation (go read <a href=\"https://github.com/catseye/Mascarpone\" rel=\"nofollow noreferrer\">the language specification</a> first):</p>\n<p>I redefine the interpreter to have two symbols, <code>a</code> and <code>b</code>, which kind of act as variables. Each symbol's operation prints a certain amount of <code>1</code>s, so they kind of act as numbers in unary, and the operation corresponding to the string <code>ab</code> prints out the sum of <code>a</code> and <code>b</code>. At the start, <code>a</code> corresponds to 0 and <code>b</code> is 1. Each step, I simultaneously redefine <code>(a, b) = (b, a+b)</code> and then I output the new value of <code>a</code>.</p>\n<p>Slightly less high-level explanation:</p>\n<p>I will replace the newline with <code>N</code> because its only function is to help push a newline character — it doesn’t actually do anything special in terms of the logic of the program.</p>\n<p>Due to the longness of the program, I’ll divide this explanation up into parts.</p>\n<p>The beginning:</p>\n<pre><code>v['1.]v*'b&lt;^\n</code></pre>\n<p>This changes the current interpreter so that the symbol <code>b</code> corresponds to the operation of outputting a single <code>1</code>. (<code>a</code> corresponds to a no-op by default, so it doesn’t have to be mentioned here).</p>\n<p>The rest of the program:</p>\n<p>I will use the notation <code>[x]</code> (where <code>x</code> can be any character) to mean “the operation the current interpreter associates with the symbol <code>x</code>’, since that’s a lot to type and I don’t have much margin space to write the explanation in.</p>\n<pre><code>[v{^vv'b&gt;'a&lt;[ab]v*'b&lt;^a'N.:!]v*:!\n[                         :!]v*:!  Loop forever:\n v{^                                 Hard to explain\n    v                                Create a new interp,\n         'a&lt;                           where a is assoc with\n     v'b&gt;                                [b]\n                  'b&lt;                  and b is assoc with\n            [ab]v*                       [ab] (i.e. [a], then [b])\n                     ^               Set current interp := that interp\n                      a              Now run the op corresponding to a\n                       'N.             and print a trailing newline.\n</code></pre>\n"},{"answer_id":229021,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/229021#229021","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 6 bytes</h1>\n<pre><code>kr↔2lṄ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJrcuKGlDJs4bmEIiwiIiwiQmx1cnJ5IHZpc2lvbiJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>kr↔    # Remove non-alphanumeric\n   2l  # Get chunks of length 2\n     Ṅ # Join with spaces\n</code></pre>\n"},{"answer_id":243511,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/243511#243511","body":"<h1><a href=\"https://www.lua.org/\" rel=\"nofollow noreferrer\">Lua</a>, <s> 40</s> 36 bytes</h1>\n<p>Prints the infinite Fibonacci sequence. Saved 4 bytes by using a goto operator instead of a while loop.</p>\n\n<pre class=\"lang-lua prettyprint-override\"><code>i,j=0,1::a::j,i=i,i+j print(i)goto a\n</code></pre>\n<p><a href=\"https://tio.run/##yylN/P8/UyfL1kDH0Moq0coqSyfTNlMnUztLoaAoM69EI1MzPb8kXwGoCgA\" rel=\"nofollow noreferrer\" title=\"Lua – Try It Online\">Try it online!</a></p>\n"},{"answer_id":243354,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/243354#243354","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, <s>74</s> 73 bytes</h1>\n<pre><code>(load library\n(d D(q((K N)(i K(a(i(mod N K)0 K)(D(s K 1)N))0\n(q((N)(D N N\n</code></pre>\n<p><a href=\"https://tio.run/##FcohEoAgEAXQ7il@/NsgeAMaMxROgEPZGRQFC6dHDK@9V69RtN9zstSUUfRoqY2NGY4P6RGECs9E5VkzAryYhY4dHlaCiPl7/PvKbpUwGWH3@QE\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n<p>-1 byte thanks to DLosc.</p>\n<p>And without <code>library</code> just for fun:</p>\n<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, <s>97</s> 90 bytes</h1>\n<pre><code>(d D(q((N K)(i(l N K)N(D(s N K)K\n(d F(q((K N)(i K(a(i(D N K)0 K)(F(s K 1)N))0\n(q((N)(F N N\n</code></pre>\n<p><a href=\"https://tio.run/##Hcw9DoUwDAPgnVN4dDY6cIOKJVIWTlDEUqnv8btw@pJ2s@IvfvL/Lfk@auWGyJM0qDCzoAVj5N2TDg7mBhTmAMrkLPZybD@zS0UQExkbXvqa351YZdnThpLXK12vDPylAwsYnh1hEqkf\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n<p>-7 bytes thanks to DLosc.</p>\n"},{"answer_id":243459,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/243459#243459","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, <sup><s>21</s></sup> 17 bytes</h1>\n<pre><code>+/@(=_2:^i.@&gt;:@|)\n</code></pre>\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuoKNgoGAFxLp6Cs5BPm7/tfUdNGzjjaziMvUc7KwcajT/a3JxpSZn5CukKegawVnG/wE\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":243457,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/243457#243457","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 7 bytes</h1>\n<pre><code>ḃb-₂ᵐ×?\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r//@GO5iTdR01ND7dOODzd/v//eAsA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a> Or, <a href=\"https://tio.run/##SypKTM6ozMlPN/r/qG3Do6bG04v@P9zRnKT7qKnp4dYJh6fb//8fHW@hoxBvDsRmQGwKxCZAbAzERkBsqKNgoKMAJIEcoBhQCqgCqBCoHqjNEigFkgbKGwIVGAJVGAKVGALVGJrF/o8AAA\" rel=\"nofollow noreferrer\">verify all inputs from -8 to +16</a>.</p>\n<h3>Explanation</h3>\n<pre><code>ḃ        Convert to binary, ignoring the sign (so -2 and 2 both become [1,0])\n b       Behead: remove the first element\n  -₂ᵐ    Subtract 2 from each element\n     ×   Product of that list\n      ?  Assert that the result equals the original input number\n</code></pre>\n<p>Some examples to show how this works:</p>\n<pre><code>         -8          1    2      0    6\nḃ        [1,0,0,0]   [1]  [1,0]  [0]  [1,1,0]\n b       [0,0,0]     []   [0]    []   [1,0]\n  -₂ᵐ    [-2,-2,-2]  []   [-2]   []   [-1,-2]\n     ×   -8          1    -2     1    2\n</code></pre>\n<ul>\n<li>If the number is <span class=\"math-container\">\\$(-2)^n\\$</span> for some integer <span class=\"math-container\">\\$n\\$</span>, <code>ḃb</code> produces a list of <span class=\"math-container\">\\$n\\$</span> zeros; subtracting 2 from each turns it into a list of <span class=\"math-container\">\\$n\\$</span> copies of <span class=\"math-container\">\\$-2\\$</span>, and taking the product gives us <span class=\"math-container\">\\$(-2)^n\\$</span> again.</li>\n<li>If the number is <span class=\"math-container\">\\$-(-2)^n\\$</span>, we get <span class=\"math-container\">\\$(-2)^n\\$</span> instead, which doesn't match the input.</li>\n<li>For any other number, <code>ḃb</code> gives a list containing some amount of <span class=\"math-container\">\\$-2\\$</span> mixed with <span class=\"math-container\">\\$-1\\$</span>. The product of this list is <span class=\"math-container\">\\$\\pm2^m\\$</span> for some <span class=\"math-container\">\\$m\\$</span>; but since our input is not of the form <span class=\"math-container\">\\$\\pm2^m\\$</span>, it doesn't match.</li>\n</ul>\n"},{"answer_id":243405,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/243405#243405","body":"<h1>x86-32 machine code, <s>20 18</s> 16 bytes</h1>\n<p>-2 bytes thanks to @xiver77\n-2 bytes by removing an unnecessary jump</p>\n<p>(This submission was originally 19 bytes, but I adjusted it to 20 since I forgot to add <code>ret</code>).</p>\n<pre><code>00000000: f8a9 ffff 7f00 7507 c1f8 1730 e0d1 f8c3  ......u....0....\n</code></pre>\n<p><a href=\"https://tio.run/##dVJbbsIwEPz3KbauKjkSqSBBKqKAeoZeIDKOA64cG8UGQiuu3nTjkEBf@@FoZ2dfsxG7XbwRorlXRuh9LmGhrPOV5OWKXLG18k76W0RoVSL4DXI@VwZZZG2tBuWM3OzsMWGFttxDHcEHAbQ9ktIk83B6JgHIMu7KLMPvwWrulZbosFfKQrS10h5A8noED5Omx4QWQ9xL5zvCuH4qWhtCb@YdpMnJADheddQkHbDaVsD1CPj2StsGWvAxfx76RjT4c6DLFyEEBXaKeqRCrx48TKXRZb9K@n1lgLWyRLj0mZCDVXmY@qc4QboTLG/kq/s6qO98Luzew2IBdftQiFdAL2FVDOP8YtOTdMgLy2gn/yEZS/9qFRzUQIfR8XpQcmVYP3K3Ae@qH7d4PmB3XQFlHqUtWNRTr6WVgdWqT@pPyHjUAedb3cbYtolnJJ6SOCHxhIzJhCQkJVMy@xSF5hvXxGWa4IP/0RLnk/oL\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a></p>\n<p>Expects a single precision float in <code>eax</code>. Output is in the carry flag.</p>\n<p>It takes advantage of some fundamental properties of floats, for some power of -2 <code>n</code>:</p>\n<ul>\n<li><code>abs(n)</code> is a power of 2, therefore <code>n</code>'s mantissa must be 0.</li>\n<li><code>n</code> is positive for odd numbered exponents, and negative for even exponents. In other words, <code>sign ^ exponent[0] = 1</code> where <code>exponent[0]</code> is the least significant bit of the exponent.</li>\n</ul>\n<p>NASM source:</p>\n<pre><code>[BITS 32]\n\nisnegpow2:\n    ; Clear carry\n    clc\n    ; Check if mantissa is non-zero\n    test eax, 0x7fffff\n    ; If it is, then abs(eax) is not a\n    ; power of 2, so eax cannot be a power\n    ; of -2\n    jnz .end\n\n    ; Shift away the mantissa\n    sar eax, 23\n    ; Now ah contains the sign,\n    ; and al contains the exponent.\n    ; For powers of -2, sign ^ exponent[0] = 1\n    xor al, ah\n    ; Check lsb by shifting it to the carry flag\n    ; If it's 1, then eax is a power of -2, so the\n    ; carry will be set\n    sar eax, 1\n.end:\n    ret\n</code></pre>\n"},{"answer_id":243380,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/243380#243380","body":"<h1>x86_(32/64) machine code, 23 bytes</h1>\n<pre><code>\\x0f\\xbc\\xc1\\xf3\\x0f\\xb8\\xc9\\xa8\\x01\\x74\\x06\\x01\\xc8\\x3c\\x20\\xf5\\xc3\\x83\\xf9\\x01\\x74\\xf9\\xc3\n</code></pre>\n<p><a href=\"https://tio.run/##TU/tToQwEPwNT7GpkrQ5uIDoeV9cfA9rCJTiNeGKKb0Lau7ZcReN@qPdme3s7FQlr0pNN8aq7txo2A@@Mf3yeJjKsvLemfrsdVlyPmjlTW85W3o9eiaEAHWsHNTGPr9AETI5pq0cayVHlcmxzX/4GvlGjhXWFPuP91hX31hhL0f9XYr6B@Q4s8bTbv60hFXOdtPgK28UGOuh5XRbAZ9hQMjtwgDTDqeyhEvfoa7TwMMgYKf@ArdZDFGkq1Fa6Rl1VdV1lJttiRVPSikG3ImY6IKwFdv5DadwQqC/0/7sLK26hiEtPVXG8jnCm0PechY1UL97PUjLYhjMh@5bjlsEJJCRRds7mJMbKCDJVjsE@wIILBZmtvrvlRwgamYvE9OXBXlcf5OklGSavgA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>This is a kind of problem for which the CPU usually has a built-in instruction to solve it easily but most high level languages don't support it straightforwardly.</p>\n<p>Two x86 instructions does the main job.</p>\n<ul>\n<li><code>bsf</code> - count trailing zeros (bit-scan forward)</li>\n<li><code>popcnt</code> - count bits set</li>\n</ul>\n<p>The <code>bsf</code> type of instruction is very common on many architectures with varying names. <code>popcnt</code> is a less popular one, but ARM and RISC-V also supports it as an extension.</p>\n<h3>algorithm</h3>\n<p>When you look at the binary representation of an integer power of -2, you can see a pattern.</p>\n<pre><code>16 -&gt; 10000\n4 -&gt; 100\n1 -&gt; 1\n-2 -&gt; ..110\n-8 -&gt; ..11000\n-32 -&gt; ..1100000\n</code></pre>\n<p>When the trailing-zero count is even, there is one bit set. When the trailing-zero count is odd, the sum of this and the set-bit count equals the word size.</p>\n<h3>assembly</h3>\n<pre><code>; out: carry flag, in: eax = 1, ecx = arg\nentry:\n    bsf eax, ecx\n    ; if ecx == 0 then eax == 1\n    ; relies on an undocumented behaviour (for Intel)\n    popcnt ecx, ecx\n    test al, 1\n    jz even\n    add eax, ecx\n    cmp al, 32\nflip:\n    cmc\n    ret\neven:\n    cmp ecx, 1\n    je flip\n    ret\n</code></pre>\n"},{"answer_id":143041,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/143041#143041","body":"<h1>Excel VBA, 41 Bytes</h1>\n\n<p>Anonymous VBE immediate window function that takes input from <code>[A1]</code> and outputs to the VBE immediate window</p>\n<pre class=\"lang-vb prettyprint-override\"><code>For i=1To[A1]:s=s-i*([A1]mod i=0):Next:?s\n</code></pre>\n<h1>Excel, 41 Bytes</h1>\n\n<p>Worksheet formula that takes input from <code>[A1]</code> and outputs to the caller</p>\n<p>Requires MS Excel Version 16.0 or later for access to <code>Let(...)</code> function</p>\n<pre class=\"lang-vb prettyprint-override\"><code>=LET(a,SEQUENCE(A1),SUM((MOD(A1,a)=0)*a))\n</code></pre>\n"},{"answer_id":243355,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/243355#243355","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.primes.factors math.unicode</code>, 15 bytes</h1>\n<pre><code>[ divisors Σ ]\n</code></pre>\n<p><a href=\"https://tio.run/##S0tMLskv@h8a7OnnbqWQm1iSoVeal5mcn5IK4RQUZeamFuulgZUVKxSnFpam5iWnFisUFKWWlFQCpfNKFKy5uKoVzBUMTRWMDBQMFUwVav9HK6RklmUWg/ScW6wQ@z83sUBB7z8A\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241963,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/241963#241963","body":"<h1><a href=\"https://github.com/Radvylf/risky\" rel=\"nofollow noreferrer\">Risky</a>, 3 bytes</h1>\n<pre><code>+/?+??\n</code></pre>\n<p><a href=\"https://radvylf.github.io/risky?p=WyIrLz8rPz8iLCJbN10iLDBd\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":241961,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/241961#241961","body":"<h1><a href=\"https://github.com/Radvylf/risky\" rel=\"nofollow noreferrer\">Risky</a>, 14 bytes</h1>\n<pre><code>__-+_-2{[?+_0:__0+_0+__?+_0\n</code></pre>\n<p><a href=\"https://radvylf.github.io/risky?p=WyJfXy0rXy0ye1s_K18wOl9fMCtfMCtfXz8rXzAiLCJbLTRdIiwwXQ\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><strong>Explanation:</strong></p>\n<ul>\n<li><code>__-+_-</code>: <code>-2</code>, written as <code>-1 + -1</code> with padding</li>\n<li><code>2</code>: Power</li>\n<li><code>{[?+_0</code>: <code>log_2(abs(input))</code>, with <code>+_0</code> as padding</li>\n<li><code>:</code>: Equals</li>\n<li><code>__0+_0+__?+_0</code>: Input (<code>?</code>), with padding</li>\n</ul>\n<p>So basically, <code>-2 ** log_2(abs(input)) == input</code></p>\n"},{"answer_id":243315,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/243315#243315","body":"<h1><a href=\"https://github.com/DRH001/Rattle\" rel=\"nofollow noreferrer\">Rattle</a>, 25 bytes</h1>\n<pre><code>|!I=@[0q][=#%[1=#1g`bb]]@\n</code></pre>\n<p><a href=\"https://rattleinterpreter.pythonanywhere.com/?flags=&amp;code=%7C!I%3D%40%5B0q%5D%5B%3D%23%25%5B1%3D%231g%60bb%5D%5D%40&amp;inputs=Hello%2C%20World!\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Might not be the most elegant solution...</p>\n<h1>Explanation</h1>\n<pre><code>|                  parse input\n !                 disables implicit output (necessary only for special case of empty input)\n  I                save input as char array in consecutive memory slots, move pointer to next empty slot\n   =@              set top of stack to value of pointer\n     [0q]          if the pointer is in the zero position (meaning empty input), terminate the program\n         [     ]@  repeat x number of times where x is the value of the pointer (to iterate over all input characters)\n      \n  =#               set top of stack to current loop iterator\n    %              mod 2\n     [1       ]    if the result is 1...\n       =#1         set top of stack to current loop iterator for main loop\n          g`       get value from the memory slot according to the top of the stack\n            bb     add char to output buffer twice with no separator              \n</code></pre>\n"},{"answer_id":243290,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/243290#243290","body":"<h1><a href=\"https://www.lua.org/\" rel=\"nofollow noreferrer\">Lua</a>,<strike>77</strike> 83 bytes</h1>\n<p>Edited to comply with code golf rules. Assumes at least a space in input because I'm not entirely sure how to make it work with nil input without throwing an error.</p>\n\n<pre class=\"lang-lua prettyprint-override\"><code>p,t=io.read(),{} for i=0,#p,2 do t[i],t[i+1]=string.sub(p,i,i),string.sub(p,i,i)end\n</code></pre>\n<p><a href=\"https://tio.run/##yylN/P@/QKfENjNfryg1MUVDU6e6ViEtv0gh09ZAR7lAx0ghJV@hJDozVgdIaBvG2haXFGXmpesVlyZpFOhk6mRq6mCIpOal/P//HwA\" rel=\"nofollow noreferrer\" title=\"Lua – Try It Online\">Try it online!</a></p>\n"},{"answer_id":243112,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/243112#243112","body":"<h1><a href=\"https://github.com/chunkybanana/halfwit/\" rel=\"nofollow noreferrer\">Halfwit</a>, 5.5 bytes</h1>\n<pre><code>n&gt;&lt;?(:}+\n</code></pre>\n<p><a href=\"https://dso.surge.sh/#@WyJoYWxmd2l0IixudWxsLCJuPjw/KDp9KyIsIiIsIls2XSIsIiJd\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>Halfwit's an experimental golfing language where most commands fit within half a byte. It's stack-based.</p>\n<pre><code>n        Push the context variable n, 1 in global scope\n &gt;&lt;      Push an empty compressed integer = 0\n   ?(    Input times, do the following...\n         Example with stack = [2, 3]\n     :   Duplicate [2, 3, 3]\n      }  Rotate stack right [3, 2, 3]\n       + Add [3, 5]\n         And the next pair is now on the stack\n         The last one is implicitly output\n</code></pre>\n<p>Here, <code>n(}</code> take up one byte each, and <code>&gt;&lt;?:+</code> take up half a byte each.</p>\n"},{"answer_id":243055,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243055#243055","body":"<h1><a href=\"https://github.com/DRH001/Rattle\" rel=\"nofollow noreferrer\">Rattle</a>, 32 bytes</h1>\n<pre><code>dark&amp;light&amp;\\|!I&lt;gI0nr`gI1R1+\\%b`\n</code></pre>\n<p><a href=\"https://rattleinterpreter.pythonanywhere.com/?flags=&amp;code=dark%26light%26%5C%7C!I%3CgI0nr%60gI1R1%2B%5C%25b%60&amp;inputs=d2\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h1>Explanation</h1>\n<p>This essentially just takes the sum of the number and the ASCII value of the letter, sees if it's even or odd, and outputs &quot;dark&quot; or &quot;light&quot; accordingly.</p>\n"},{"answer_id":243037,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243037#243037","body":"<h1>x86-16 machine code, IBM PC DOS, 36 bytes</h1>\n<pre><code>00000000: b408 cd21 8ad0 cd21 32c2 ba1f 01d0 e873  ...!...!2......s\n00000010: 03ba 1901 b409 cd21 c36c 6967 6874 2464  .......!.light$d\n00000020: 6172 6b24                                ark$\n</code></pre>\n<p>Listing:</p>\n<pre><code>B4 08       MOV  AH, 8          ; DOS read char from STDIN \nCD 21       INT  21H            ; first char in AL \n8A D0       MOV  DL, AL         ; move to DL  \nCD 21       INT  21H            ; second char in AL \n32 C2       XOR  AL, DL         ; XOR ASCII values to get low bit \nBA 011F     MOV  DX, OFFSET D   ; default to &quot;dark&quot; string \nD0 E8       SHR  AL, 1          ; put low bit into CF \n73 03       JNC  TO_STDOUT      ; if 1, output &quot;dark&quot; \nBA 0119     MOV  DX, OFFSET L   ; otherwise, &quot;light&quot; \n        TO_STDOUT: \nB4 09       MOV  AH, 9          ; DOS write stiing to STDOUT \nCD 21       INT  21H            ; DX written to STDOUT \nC3          RET                 ; return to DOS \n                 \n        L   DB   'light$' \n        D   DB   'dark$' \n</code></pre>\n<p>Just does a simple <code>XOR</code> on the ASCII values of the two chars and the lowest order bit determines which string to output.</p>\n<p>Standalone executable DOS program (since STDIN/STDOUT is a requirement).</p>\n<p><a href=\"https://i.stack.imgur.com/yucoI.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/yucoI.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":243048,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243048#243048","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/Acc!!\" rel=\"nofollow noreferrer\"><em>Acc!!</em></a>, 138 bytes</h1>\n<pre><code>N+N\nCount i while _%2 {\nWrite 108\nWrite 105\nWrite 103\nWrite 104\nWrite 116\n0\n}\nCount i while _ {\nWrite 100\nWrite 97\nWrite 114\nWrite 107\n0\n}\n</code></pre>\n<p><a href=\"https://tio.run/##S0xOTkr6/99P24/LOb80r0QhU6E8IzMnVSFe1Uihmiu8KLMkVcHQwALOMoWzjOEsExjL0IzLgKsW3SQkcwygLEtzuBa4ZgNzkOb//5OMAA\" rel=\"nofollow noreferrer\" title=\"Acc!! – Try It Online\">Try it online!</a></p>\n<h3>Pseudocode</h3>\n<pre><code>Read two characters, add their codepoints, and store the result in the accumulator\nWhile the accumulator value is odd:\n    Write l, i, g, h, t\n    Set the accumulator to 0\nWhile the accumulator value is nonzero:\n    Write d, a, r, k\n    Set the accumulator to 0\n</code></pre>\n"},{"answer_id":243043,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/243043#243043","body":"<h1><a href=\"https://github.com/DRH001/Rattle\" rel=\"nofollow noreferrer\">Rattle</a>, 9 bytes</h1>\n<pre><code>+s[p+~$]0\n</code></pre>\n<p><a href=\"https://rattleinterpreter.pythonanywhere.com/?flags=&amp;code=%2Bs%5Bp%2B%7E%24%5D100&amp;inputs=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Note: the link only runs this loop 100 times instead of infinitely because the online interpreter behaves strangely with an infinite loop for this code (which is a problem with the website, not the interpreter).</p>\n<h1>Explanation</h1>\n<pre><code>+s           increment the top of the stack (to 1) and save to memory\n  [    ]0    infinite loop\n   p         print top of stack\n    +~       increment top of stack by the value in storage\n      $      swap the value on top of the stack with the value in storage\n</code></pre>\n"},{"answer_id":243042,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243042#243042","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.unicode</code>, <s>36</s> 35 bytes</h1>\n<pre><code>readln Σ odd? &quot;light&quot;&quot;dark&quot;? print\n</code></pre>\n<p><a href=\"https://tio.run/##HcaxDYAgEAXQVX4YwNJCC0tjY2McgHCnEPHQEydyH1fCxFe9xbqctMzTMPYNQsLF583i@MJus8fGKhz/V7cEl4jRFmVLUfA@SEQdTAyrz8aQ1c10ODRILmWtPw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":243040,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243040#243040","body":"<h1><a href=\"https://codegolf.stackexchange.com/questions/242897/golf-the-prime-numbers-in-shue\">Shue</a>, 80 bytes</h1>\n<pre><code>light\ndark\nbb=\nb=light\n=dark\na=\nc=\nd=b\ne=\nf=b\ng=\nh=b\n1=\n2=b\n3=\n4=b\n5=\n6=b\n7=\n8=b\n</code></pre>\n<p><a href=\"https://tio.run/##lVVNj9owEL37V1ic7ELTZumXIlk97Z4qbQ9VL5BWTjIQq4kd2c5u0ZbfTscOsIFdqm0uZmaen2denkO38bXR851qO2M9tTCjbuOIhZQKjJLStJ1qgNliwtjih8j/LJeCv@JMjKPPE05IBSvaa3Cl7IApnhGKjwWPRMVkEiMsYvQ2/l4ZS0uqNFUDMjxqFSFSV1gSYd9yOXks7wmn@8JJfkwd4@YpmbjAJf6fSl9qS7@M62y3VA7od9n0cG2tsWw1@SqtA0shhBldG0/LWlpZekw@lFsqV@EXqsBPuS/pNjSSjsAOnh1h48GxRZkPvOfdvqjT69svb65vb857xAN6q8NCBrd0YefRKohtlZbeWIedOvBsv61v4DTTKB0zKnFdozyLsvOjq5rgqoh57LuNdk6TVvqyZg0fW65N1tb0HZvzM0HCwX8EfWBHWx@gKecz@iQ754s0yznf/kPl0ZSB@jnm7VitEX42dDRoB7@h7D2wckbHAh5AOO6gbjmM2mt1Bxhj/kENB7Smwuib7SGG9zXe85AciRYRNxKHOOY03P8ckT2@lIP6Lqh/QJzOjlrHamw02w/oXro7lOWsCIA44mn1gDCxLvUaWAOaOT5N@VPkoZuFycw04CTPw8WRz0PPBw9vzi0yk0@LKXLsGbJ8e3H3mdhnr2TMTS5dM2vWVraHe6YNOqRrZAktaO@otEA745wq8C2iYdEjeAMqWkAt75TpLQ/faFKaCg/E7/Fk16h17Ukl7S9SFIIUYkiImJGClIJUoiAgyAqXtSA1LqkgV7jMBXmHy3tBPuDyUZBPotghKfr/dZoTonQXzLFxifOV0okFWTGegA7no2HwDyZY9GhizKKPdcdJZ5X2DMtJBQOY74qrvw\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>Pretty sure this is optimal. The empty string represents even letters/integers and a &quot;b&quot; represents odd letters/integers.</p>\n"},{"answer_id":243039,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243039#243039","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 11 bytes</h1>\n<pre><code>C∑₂`⟇ǎ↔β`½i\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJD4oiR4oKCYOKfh8eO4oaUzrJgwr1pIiwiIiwiYTciXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Explanation:</p>\n<pre><code>C∑₂`⟇ǎ↔β`½i ; takes the coordinate\nC           ; character values of the input\n ∑          ; sum of char values\n  ₂         ; is even?\n   `⟇ǎ↔β`   ; compressed string &quot;lightdark&quot;\n         ½  ; split in half (yielding [&quot;light&quot;, &quot;dark&quot;])\n          i ; index into\n</code></pre>\n"},{"answer_id":243036,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243036#243036","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 43 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>print([:dark,:light][sum(read(stdin))%2+1])\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/v6AoM69EI9oqJbEoW8cqJzM9oyQ2urg0V6MoNTFFo7gkJTNPU1PVSNswVvP//yRDAA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":243032,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/243032#243032","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, <sup><s>48</s> <s>40</s></sup> 37 bytes</h1>\n<pre><code>&gt;@{&amp;('dark';'light')@{:@#:@+/@(a.&amp;i.)\n</code></pre>\n<p>− 8 bytes by replacing <code>(-2&amp;*@&lt;.@%&amp;2)</code> with <code>{:@#:</code> <br>\n− 3 bytes by removing <code>@&gt;:</code></p>\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuoKNgoGAFxLp6Cs5BPm7/7Ryq1TTUUxKLstWt1XMy0zNK1DUdqq0clK0ctPUdNBL11DL1NP9rcqUmZ@QrpCmoZxiqw9lJFur/AQ\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":242238,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/242238#242238","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, <s>116</s> <s>108</s> 96 bytes</h1>\n<pre><code>(d S(q((L A)(i L(i(a(h L)1)(c(a(h L)A)(S(t L)(a(h L)A)))(c(S(h L)A)(S(t L)A)))L\n(d f(q((L)(S L 0\n</code></pre>\n<p><a href=\"https://tio.run/##XYyxCsMwDER3f8WNpy1O0tC1uzZ/QWkpNZSSUC/9ekU2ptAgJO7diSv5/X3lz2rGOxI3UnERZigzr3xCJQpvXXqSWFz8WGqY/sPqavC@R@tzG4rBWDGiT2jIKDhs6H8jJrCe2W1xjOCMM7gITs62Aw\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n<p>-8 bytes by removing <code>(load library</code> thanks to chunes <a href=\"https://chat.stackexchange.com/transcript/message/60327802#60327802\">in chat</a>. -12 bytes thanks to some <a href=\"https://codegolf.stackexchange.com/a/242255/67312\">type abuse</a>.</p>\n"},{"answer_id":242236,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/242236#242236","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 16 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>l/f=findall(f,l)\n</code></pre>\n<p><a href=\"https://tio.run/##bY7RCsIwDEXf/Yr7IrTYsrZuTMHuR8SHgRQqochQ2N/XrChWJoSQkHOS3J4URzvnTE3wIabrSCSCIpnvU0wPSgJnq@AUTIn9p@BoL43ADD1w8h5Gys1XagvbKfQKljdY7mxfGVu4tXVQODJn3o5bvMrZ8QgD3K/ER3RXftTLnxV/wor8S@QX\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>Boring builtin, just change of order of parameters, let's move on. (The answers are all 1-indexed, by the way.)</p>\n<h3><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 18 bytes</h3>\n\n<pre class=\"lang-julia prettyprint-override\"><code>l/f=findall(f.(l))\n</code></pre>\n<p><a href=\"https://tio.run/##bY7RCsIwDEXf/Yr7IrTYurZuTMHuR8SHgRQqoYgo7O9rVhQrE0JIyDlJrk@Ko51ypib4ENNlJBJhK0jKfLvH9KAkcLIKTsGU2H0KjvbcCEzQAyfvYaRcfaW2sJ1Cr2B5g@XO9pWxhltae4UDc@btuNmrnA2PMMD9SnxEd@VHPf9Z8UcsyL9EfgE\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>This looks very similar, but works differently and shows off Julia's generalized broadcasting feature: <code>f.(l)</code> automatically maps <code>f</code> over each element of <code>l</code>, collects the results into an Array, type-infers that to be as a <code>BitVector</code> (a 1-D array of booleans), and passes that on to <code>findall</code>. This single argument version of <code>findall</code> accepts only arrays of booleans, and returns indices where there are <code>true</code> values.</p>\n<h3><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 21 bytes</h3>\n\n<pre class=\"lang-julia prettyprint-override\"><code>l/f=axes(l)[1][f.(l)]\n</code></pre>\n<p><a href=\"https://tio.run/##bY7dCsIwDEbvfYrvRmixdW3dmILdi5Re7MLBpIzhD/Tta1YUKxNCSMg5Sa7PMPY6phSqwfbxcmeBO@3dsKfCp/k2To8wMTgtYARUjsOnoKh9xRAhO0rWQnG@@Up1ZhuBVkDTBk2dbgtjC7O2jgIn4tTbMYtXODsaoYP5leiIbPKPcvmz4M9YkX@J9AI\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>Even avoiding <code>findall</code> altogether, the answer isn't too much longer!</p>\n<p><code>axes(l)</code> returns the indices in each dimension of <code>l</code>. Here since <code>l</code> is one dimensional, we take <code>axes(l)[1]</code> which gives the indices of the list. On that, we use <a href=\"https://docs.julialang.org/en/v1/manual/arrays/#Logical-indexing\" rel=\"nofollow noreferrer\">Logical indexing</a>: As seen above, <code>f.(l)</code> returns an array of booleans. When we use that to index within the list of indices, we get back the indices where the function <code>f</code> returns <code>true</code>.</p>\n"},{"answer_id":242227,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/242227#242227","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, 48 bytes</h1>\n<pre><code>(load library\n(d A(q((L F)(all-indices(map F L)1\n</code></pre>\n<p><a href=\"https://tio.run/##VY7BCsIwEETv/Yo57h6EJFqqp9KLp36A12iCBNKoTRHqz8e1B7W7sAw7b2CmkOYY8r0UijfrEMN5tONckUNHD6IeRyYb4yYkFy4@02DvOKJnXagDSXSChoGS3S5XYcd4@fHWcvVFdmLWaKA19Ba6YfinT//EHgdotQBGGJa3Hc7Ogk4f7XNuYRTIOmdwEpRlfvEalPwVNUuXRRmGYoiyU3j6doWatVXe\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n<p>The <code>library</code> unsurprisingly contains some rather useful functions for golfing; not sure if this should be scored as <code>tinylisp + library</code>. Takes the test harness from <a href=\"https://codegolf.stackexchange.com/a/241431/67312\">DLosc's answer</a>.</p>\n"},{"answer_id":242041,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/242041#242041","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 14 bytes</h1>\n<pre><code>{+/&amp;~1!x%!1+x}\n</code></pre>\n<p><a href=\"https://ngn.codeberg.page/k#eJxFj8FuwjAMhu9+iqBtaFNV0oSEokZo5532AAhpXUmhApqOpKgIwbMvSVN6sPzZ+f07LrNbhKcPMuneJiTq7gAmu72ur49zViKEOvGjDuL9p8yro+jEVZw/Nncw61QsNzYRLihzQBPBqO8I4hIXiw0Ahr0xjc4wLtRW7tSxnGmTFwfZFfu83slZoU74r5XaVKrWmDCapASXVb2NzV7Guj3FqvS4rS6VVmft6vqzyXdyRacm/13lhaku8sVibFQD8FU3rclQCpAijAhaWXSUWiKuGfnmEuC7NV66fA4RDkB4GLOF57nlgNziPCh472dzhFzMgzFlo7PjYE0TAJoEa1t4ps4jMPNrPDprFtSJkwd10q+0OXIP/V5mg4bdjI67HQ9n2W8OR40C8ny3Vw9HcxjuJK7Z2y7GocU/V46GYw==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<ul>\n<li><code>!1+x</code> generate sequence from <code>1..x</code></li>\n<li><code>x%</code> divide the input by each term in this range</li>\n<li><code>&amp;~1!</code> identify values in the range that evenly divide the input</li>\n<li><code>+/</code> take (and implicitly return) their sum</li>\n</ul>\n"},{"answer_id":240592,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/240592#240592","body":"<h1><a href=\"https://www.raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, <s>25</s> <s>23</s> 22 bytes</h1>\n<p>thanks ovs for 2 byte improvement<br>\nalso JoKing for 1 byte improvement</p>\n<pre class=\"lang-raku prettyprint-override\"><code>{sum grep $_%%*,1..$_}\n</code></pre>\n<pre><code>declare anonymous block ($_ implicitly declared)\nfilter (grep) numbers from 1 to $_ inclusive using the whatever variable (*) that are divisible by $_\nget the sum of that list\n</code></pre>\n<p><a href=\"https://tio.run/##NY3NCoJAGEX331NcRMMJHRpRC8SeoqUggUMM@YejRojPPn0u2p5zOXfUU5u77otTY9bYLh1Kt4VKSr8W8jXpMfTrIDgLyWp3i9V4aDsXRK3ptZXvVXbPMYzvqEzfRKgOjI0ATobMGA3LLFDiMPIzTI0tWBsL08v/aQQeRfBmbmPj0u7RLtwVN1IZkpSSC9KEFBRlyH8\" rel=\"nofollow noreferrer\" title=\"Raku – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241970,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/241970#241970","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, 42 bytes</h1>\n<pre><code>{var s=0;for(i in 1..it)if(it%i==0)s+=i;s}\n</code></pre>\n<p><a href=\"https://tio.run/##hc7NCoJAFAXgfU9xEIIZInEmrUimfeueQFDhko7ijG7Et2jZ0/Ui5s8iksC7OJt7v8t5FDYj3TdRhZgaMkV1r3NcwG7a8v11SNW349YoL0yLihFIQ7guWU4pI7slpTxudopC0/VprZFHpBlvMcxmjOHs@5rhxKEUcOYoK9I208yxibECZWRMEuP9ejr8DxTBBKW/gHINSm@CvlzAwxqEmKuKBfRX4VwVxwUMfmHXfwA\" rel=\"nofollow noreferrer\" title=\"Kotlin – Try It Online\">Try it online!</a></p>\n"},{"answer_id":235937,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/235937#235937","body":"<h1><a href=\"https://www.typescriptlang.org\" rel=\"nofollow noreferrer\">TypeScript's type system</a>, <strike>193</strike> <strike>188</strike> 186 bytes</h1>\n<pre class=\"lang-typescript prettyprint-override\"><code>type L='length'\ntype T&lt;N,U extends 0[]=[]&gt;=U[L]extends N?U:T&lt;N,[...U,0]&gt;\ntype S&lt;A,B&gt;=T&lt;A&gt;extends[...infer U,...T&lt;B&gt;]?U[L]:0\ntype F&lt;N&gt;=N extends 0|1?N:[...T&lt;F&lt;S&lt;N,1&gt;&gt;&gt;,...T&lt;F&lt;S&lt;N,2&gt;&gt;&gt;][L]\n</code></pre>\n<p>There's no way to do I/O here, but we can use hovering to view the value (also note that the generated JS is empty):</p>\n<p><a href=\"https://i.stack.imgur.com/fxJ2p.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/fxJ2p.png\" alt=\"Fibonacci(10)\" /></a></p>\n<p>Unfortunately, TypeScript has strict recursion limits and on F<sub>18</sub> we get a <code>Type instantiation is excessively deep and possibly infinite.</code> error:</p>\n<p><a href=\"https://i.stack.imgur.com/33Bqv.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/33Bqv.png\" alt=\"Fibonacci(11)\" /></a></p>\n<p><a href=\"https://www.typescriptlang.org/play?ts=4.5.4#code/C4TwDgpgBAMgvAcgDYQHYHNgAsEChSRQAqAPAHIA0AqlBAB7BoAmAzlAAwDaAunDwHxwqnGN3qNUrKGQD8VAFylKnAHRqqFdt375w0AMokAghQBCg0kf7jmLVWoCWqAGYQATlA1qVpc9zki3PLsuoQAYuSCZLQMthwAPgCMMmTy9j4kEYaUifx5FN6kWeQUAEx5-NyBuDUowFDOiQDs8lARzfwA3Lh1DYkAHK3t-V1AA\" rel=\"nofollow noreferrer\"><strong>Demo on TypeScript Playground</strong></a></p>\n<hr />\n<p>Ungolfed version:</p>\n<pre class=\"lang-typescript prettyprint-override\"><code>type NTuple&lt;N extends number, Tup extends unknown[] = []&gt; =\n  Tup['length'] extends N ? Tup : NTuple&lt;N, [...Tup, unknown]&gt;;\n\ntype Add&lt;A extends number, B extends number&gt; =\n  [...NTuple&lt;A&gt;, ...NTuple&lt;B&gt;]['length'];\n\ntype Sub&lt;A extends number, B extends number&gt; =\n  NTuple&lt;A&gt; extends [...(infer Tup), ...NTuple&lt;B&gt;] ? Tup['length'] : never;\n\ntype Fibonacci&lt;N extends number&gt; =\n  N extends 0 | 1 ? N : Add&lt;Fibonacci&lt;Sub&lt;N, 1&gt;&gt;, Fibonacci&lt;Sub&lt;N, 2&gt;&gt;&gt;;\n</code></pre>\n"},{"answer_id":241540,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241540#241540","body":"<h1>F#, 79 bytes</h1>\n<pre><code>let x a p = a|&gt;Seq.mapi(fun i a -&gt; i,a)|&gt;Seq.filter(fun(_,a)-&gt;p a)|&gt;Seq.map fst\n</code></pre>\n"},{"answer_id":241557,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241557#241557","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 34 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;y=&gt;x.flatMap((b,i)=&gt;y(b)?i:[]);\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@7/C1q7S1q5CLy0nscQ3sUBDI0knUxMoppGkaZ9pFR2raf0/OT@vOD8nVS8nP10jTSPaUEfBSEfBAIyMYQwgMonV1KhQsLVTABK2Cgaamv8B\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f = x =&gt; y =&gt; x.flatMap((b, i) =&gt; y(b) ? i : []);\n\nconsole.log(f([1, 2, 0, 0, 3, 0, 0, 0, 4])(x =&gt; x == 0))\nconsole.log(f([4, 3, 5, 7, 11, 13, 17])(x =&gt; x % 2 == 0))\nconsole.log(f([8, 9, 10, 11, 12, 13])(x =&gt; x + 10 &gt; 20))\nconsole.log(f([5, -5, 2, -2, 0])(x =&gt; x &lt; 0))\nconsole.log(f([5, 2, 0])(x =&gt; x &lt; 0))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":241517,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241517#241517","body":"<h1><a href=\"https://github.com/ismael-miguel/SimpleTemplate\" rel=\"nofollow noreferrer\">SimpleTemplate</a> 0.84, 36 bytes</h1>\n<p>Requires that an array of characters is passed to the <code>render()</code> method in PHP. <a href=\"https://www.php.net/manual/en/functions.arguments.php#example-159\" rel=\"nofollow noreferrer\">Argument unpacking</a> can be used for convenience. Each argument is 1 character.</p>\n<pre><code>{@eachargv}{@if__ is mod2}{@echo_,_}\n</code></pre>\n<p>This is a full program.</p>\n<hr>\n<h2>How it works?</h2>\n<p>It simply loops all over the arguments passed to the <code>render()</code> method.</p>\n<p>It checks if the index is odd, and, in case it is, displays the character twice.</p>\n<hr>\n<h2>About the code...</h2>\n<ul>\n<li><p><code>{@eachargv}</code><br />\nThis is a simple loop over the elements in <code>argv</code>.<br />\nAutomatically, the current value is stored in the variable <code>_</code> and the index is stored in <code>__</code>.<br />\nA more readable example is <code>{@each argv as _ key __}</code></p>\n</li>\n<li><p><code>{@if__ is mod2}</code><br />\nThis checks if the key's <a href=\"https://www.php.net/manual/en/language.operators.arithmetic.php\" rel=\"nofollow noreferrer\">modulo</a> is a truthy value.<br />\nIf it is a truthy value, it means we are dealing with an odd index (the language is 0-indexed, like PHP).\nA readable alternative is <code>{@if __ is not multiple of 2}</code></p>\n</li>\n<li><p><code>{@echo_,_}</code><br />\nSimply outputs the character twice.</p>\n</li>\n<li><p>Usually, it would be needed to close the loop and the <code>if</code>, but it is optional since there isn't any other code to run outside.</p>\n</li>\n</ul>\n<hr>\n<p>You can try this on <a href=\"http://sandbox.onlinephpfunctions.com/code/b006b2ec293bab18cd6db2f1b8a2454da047ea49\" rel=\"nofollow noreferrer\">http://sandbox.onlinephpfunctions.com/code/b006b2ec293bab18cd6db2f1b8a2454da047ea49</a></p>\n<p>Please pick PHP 7.4.13.</p>\n"},{"answer_id":241295,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241295#241295","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> -p, 14 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/.(.?)/$1$1/g\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/79YX09Dz15TX8VQxVA//f//xKTklNQ0rtLcpKLUnJxErpx8GMhLVyhJrSjhAqrgqshOTuHyACrI11EIzy/KSVHkcuHy9ubyyOTKT0mJz0nNSy/JUPyXX1CSmZ9X/F@3AAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241462,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241462#241462","body":"<h2><strong><a href=\"https://www.mathworks.com/products/matlab.html\" rel=\"nofollow noreferrer\">MATLAB</a>, 25 bytes</strong></h2>\n<pre><code>@(x)repelem(x(2:2:end),2)\n</code></pre>\n"},{"answer_id":241454,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241454#241454","body":"<h1>Excel, 46 bytes</h1>\n<pre><code>=CONCAT(REPT(MID(A1,SEQUENCE(2^15,,2,2),1),2))\n</code></pre>\n<p>Input is in cell <code>A1</code>. Output is wherever the formula is.</p>\n<p>Working from the inside out:</p>\n<ul>\n<li><code>SEQUENCE(2^15,,2,2)</code> creates an array of even numbers from 2 to 32,768. This is the <a href=\"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\" rel=\"nofollow noreferrer\">limit</a> for how many characters can be in a cell so it's the limit of the input.</li>\n<li><code>MID(A1,SEQUENCE(~),1)</code> pulls out all the even-index characters one at a time.</li>\n<li><code>REPT(MID(~),2)</code> doubles all those characters.</li>\n<li><code>CONCAT(REPT(~))</code> combines them all into a single string.</li>\n</ul>\n<p><a href=\"https://i.stack.imgur.com/oWHG9.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/oWHG9.png\" alt=\"Screenshot\" /></a></p>\n"},{"answer_id":241441,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241441#241441","body":"<h1>Kotlin, <strike>72</strike> 61 bytes</h1>\n<pre><code>fun &lt;T&gt; List&lt;T&gt;.f(p:(T)-&gt;Boolean)=indices.filter{p(this[it])}\n</code></pre>\n<p>0-based solution.</p>\n<p>Uses built-in <a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/indices.html\" rel=\"nofollow noreferrer\"><code>indices</code></a> to perform a filter on.</p>\n<p>Example:</p>\n<pre><code>fun main() {\n    println(listOf(1, 2, 0, 0, 3, 0, 0, 0, 4).f { it == 0 })\n}\n</code></pre>\n"},{"answer_id":241387,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241387#241387","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> + <code>-p</code>, 11 bytes</h1>\n<p>Takes a list of chars (to differentiate from <a href=\"https://codegolf.stackexchange.com/a/241295/9365\">@Kjetil's answer</a>).</p>\n<p>2 bytes saved thanks to <a href=\"https://codegolf.stackexchange.com/users/17602/neil\">@Neil</a>!</p>\n\n<pre class=\"lang-perl prettyprint-override\"><code>$_ x=$|--*2\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/18lXqHCVqVGV1fL6P9/D65UrhwgzOfS4VLgCgfSRUBeCpfiv/yCksz8vOL/ugUA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<p>Uses the string repetition operator (<code>x</code>) to repeat <code>$_</code> <code>$|--*2</code> times which, since <code>$|</code> can only be <code>1</code> or <code>0</code>, will alternate between <code>0</code> or <code>2</code> for each character of input.</p>\n"},{"answer_id":241431,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241431#241431","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, 84 bytes</h1>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>(d w(q((L F N)(i L(i(F(h L))(c N(w(t L)F(a 1 N)))(w(t L)F(a N 1)))L\n(q((L F)(w L F 0\n</code></pre>\n<p>The second line is an anonymous function that implements argwhere; the first line is a helper function. Uses 0-indexing (though it could just as easily be 1-indexing; simply change the number on the second line). <a href=\"https://tio.run/##XY6xDsIwEEN3vsKjb0tSKmDq1qnqCmsgEUQqBdoKBD9fjoqhoJMiy37n3JDaZ5P66zgy4MEbWaFELUyomFjyhEqEB9R8cFBd0qOGFTX/jWqhHdtvh8b4VJmRzcUHNGnf@e4pC25B/XGAhYPRyabXYCl4xe5SzJClhjlWsBY2g10J4j22c2KNDayZAKeMqO3P@@DB3UfHvi/gDOhDcNgpqnfO1nOwjUfkordMygmMQJUf0j0WP6j7jcY3\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>The helper function <code>w</code>, in addition to <code>L</code> (the list) and <code>F</code> (the function), gets an extra argument <code>N</code> (the current index). Its logic boils down to:</p>\n<ul>\n<li>If <code>L</code> is nonempty:\n<ul>\n<li>If the result of calling <code>F</code> on the <code>h</code>ead of <code>L</code> is truthy, <code>c</code>ons <code>N</code> to the front of a recursive call to <code>w</code> with arguments:\n<ul>\n<li><code>t</code>ail of <code>L</code></li>\n<li><code>F</code></li>\n<li><code>a</code>dd 1 to <code>N</code></li>\n</ul>\n</li>\n<li>Else, just do the recursive call</li>\n</ul>\n</li>\n<li>Else, return <code>L</code> (empty list)</li>\n</ul>\n<p>The anonymous function calls <code>w</code> with an initial index of 0.</p>\n"},{"answer_id":241430,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241430#241430","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a> <code>-xp</code>, 7 bytes</h1>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>bMa@*:1\n</code></pre>\n<p>Takes a list and a function that returns 0 (falsey) or 1 (truthy) as command-line arguments. Uses 0-indexing. <a href=\"https://ato.pxeger.com/run?1=m724ILNgebSSbkWBUuyCpaUlaboWy5N8Ex20rAwhPKjgTcVopWgLa0trQwNrQ0NrQyNrQ-NYJR2l6kRtQwM7I4NauHYA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h3>Explanation</h3>\n<pre class=\"lang-lisp prettyprint-override\"><code>b        ; Second argument (the function)\n M       ; Mapped to each element of\n  a      ; First argument (the list)\n   @*:   ; Find all indices of\n      1  ; 1 (truthy)\n</code></pre>\n"},{"answer_id":241364,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241364#241364","body":"<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 20 bytes</h1>\n<p>-9 bytes thanks to @Joe Slater. Didn't know that <code>select</code> can take a flag.</p>\n<pre><code>(a,g)-&gt;select(g,a,1)\n</code></pre>\n<p><a href=\"https://tio.run/##Zc7dCoMwDAXgVzkIg5alYDvFDaYvIl4EURHKKOqFe/qudT@9GOQi4XwJcbzManJ@RO0F0yRVsw526DcxEZOWnp2zT8FQDdwyP7bQZnHI0LO1YiSwlIS2bTXBEPKjLt8mVNER9riyo66RdxEXBykJFUGHRR0mXSV4gkn4SriFOP9QE3mi55CggXnbcFKVxyMqPpPYHT/wH3TSvwA\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n<hr />\n<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 29 bytes</h1>\n<pre><code>(a,g)-&gt;[i|i&lt;-[1..#a],g(a[i])]\n</code></pre>\n<p><a href=\"https://tio.run/##Zc7dCoMwDAXgVzk4Bi1LxbqJG6gvUnoRBkpBRpFdONi7d6376cUgFwnnS4jnxanJhxF9EEyTVINxT9cpo8tyx5YmwcZZaQN7Pz8EQw3wi7vdY1ukocCV51mMBJaSYIzRhJpQbXX8NrFOlrCmlRV9j8omfNpIQ2gJOi7qOOk2wz3qjM@ES4yrD60Tz/QQEwyo3zaeVM32iErPZNbhB/4DK8ML\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241429,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241429#241429","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 85 bytes</h1>\n<p>1-based.</p>\n<p>Takes an integer array with a length and a function taking an integer.</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>m;f(s,l,p)int*s,p();{putchar(91);for(m=l;l--;s++)p(*s)&amp;&amp;printf(&quot;%d,&quot;,m-l);puts(&quot;]&quot;);}\n</code></pre>\n<p><a href=\"https://tio.run/##bZLLboMwEEX3fMWIKpFNTIUhNI0c8gVRd11FLBCExhIPi0cVKeLb6dhJ0wgqGT/m3DszFk7drzQdx1LkpGUFU1RWndMyRai4qr5Lz0lDtpyKvG5IGRWicF3RrlZUEaely6VqUJ8Te5Exm5VuQQWaWmLHNhXD@CKrtOizE@zaLpP163lvWagHxYleLhSu0Jy6vqngsvcFDDfqz2kUeQ8czPHCfxas54IV9/b@nyKcK3aGGlwmsiLftcyQWwA65MhjHOkDgLYeY3rlDHwGAQM3ZBAO7B/omRH8bnCsJ7q1wZhgw4CjieOJbyaidwZbDHt3ia9lE0l4awORq@vO6VP04/NwwM3AoHhcKjQlsIk3001w44mw7vcnjsJEhN7lCvtQmFJhuwrvoEL9aZNx6MeS6B8ij0ksIMH3Ymw50QFdV88KZyqsYfwB\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241426,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241426#241426","body":"<h1><a href=\"http://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 60 bytes</h1>\n<pre><code>proc a[S,F](s:S,f:F):S=\n for i,x in s:\n  if f x:result.add i\n</code></pre>\n<p><a href=\"https://tio.run/##NY07CsMwEAV7n@KVEizB@VQLglS@gErjQrEtsuB4g2SDbq84gcAUU82s8qr1nXRE6D11g8nsKXJn2bsGUROECmRF5gaQiIjCac77sp3CNEHqPD4Vwdz7M@FCaH9c/3JwGwjfgyl8hDbLeKgucChwDq2tHw\" rel=\"nofollow noreferrer\" title=\"Nim – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241420,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241420#241420","body":"<h1><a href=\"https://desmos.com/calculator\" rel=\"nofollow noreferrer\">Desmos</a>, 34 bytes</h1>\n<pre><code>a=[1...l.length]b(l)\nf(l)=a[a&lt;1/0]\n</code></pre>\n<p><span class=\"math-container\">\\$b(l)\\$</span> is the inputted black box function, which you will need to change for each test case (Desmos doesn't support inputting functions as arguments). <span class=\"math-container\">\\$f(l)\\$</span> is the argwhere function. The output will be 1-indexed.</p>\n<p>Further details in the graph links.</p>\n<p><a href=\"https://www.desmos.com/calculator/cmv1jhnh15\" rel=\"nofollow noreferrer\">Try It On Desmos!</a></p>\n<p><a href=\"https://www.desmos.com/calculator/dyanvc3doi\" rel=\"nofollow noreferrer\">Try It On Desmos! - Prettified</a></p>\n"},{"answer_id":241422,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241422#241422","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 45 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>def f(L,F,t=0):F(L[t])and print(t);f(L,F,t+1)\n</code></pre>\n<p><a href=\"https://tio.run/##hZFfa9swFMXf9SkujFKbKsF2kmZLlsIeaiiErZT2yZiiRfIm5kjCuh3Op8@uLDuUvswI68@9v3OObHfC39YszmepGmiSPS857rJ0Uyb7CutUGAmu0wYTTLdj@SZPz/robIfgT56xT1DaDlB51OYXh6M9/IkMNG/mgNoaQAtCymGCVnsEbTwqIcE2sZVIsG/Inu6/7V8fnx6@P8MuVtiPl@fHl7CtahZCxjh9umEAsTYXzikj6YyxhqK02ihyCOnmHqU2oXX/6rHjUMZJ9U4dUMmwI@mjcAmtqLvTjg8Cc@9ajcn19jpNA05d6q9ok0EnnJR00orjTymg38TaIF4tN3WoTxYT@N6Sgk7h48UAsDuFmBB/QhQ4KIfwYKTq77vOdrHuhPe0oPHuYyWT2O7iy0eD9FzlHAoO2TAW04LGsoYtQA@zO3oRmkF86LAqhtYVh1sO65pVy2m/5pCTYE67fF2P7aPGFRSTTtDIiPvM4Qt1ZiNVBLK@2IzcDTXAHRRZ5Eia7FZEk99sNaSfhRuM4Af66yX4QJPNIqIfkf@i9T8\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>A function that prints the indices to STDOUT and terminates with an error.</p>\n"},{"answer_id":241411,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241411#241411","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 18 bytes</h1>\n<pre><code>Position[1&gt;0]@*Map\n</code></pre>\n<p><a href=\"https://tio.run/##bY3BCoJAEEDvfoWw4KFG2FkVC1LsAwSjo3hYTGkPulF7G/TXt0UTIpqBubzHvEGaezdIo1pp@8xW@qWM0mONOW@KXSkftnqq0dQszPuiYE0wX1s5zuQRyzIegP8ZQhDA3UbL5RBPE3hU6lvNQDSrS7HDCaSACBgBpovD9shzsf2iAxwB@aIIZ63K6SvlUwJh4nKhK/7HGzgbPVzgF3iTfQM\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input <code>[f, list]</code>. Returns a list of 1-indexed <code>{index}</code>s.</p>\n<p>Finds the positions of <code>True</code>s when the function is mapped onto the list.</p>\n<hr />\n<h3><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 13 bytes</h3>\n<pre><code>Position@_?#&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##bY3BCsIwDEDv@4pBYBczaLuNKbhZP0CY51JkqMMetoL2FvrttWwOREwgl/fIG3v3uI@9M9c@DE3o7Ms4Yyd5OUAWuqeZnCIAn7eDAq1AaJ1JKSkhaBqWYfoZ4iiQxS3my7D0HhM62ZsCFHpxqYy4who5R14gr2cHNpy1Yv1FW9whZ7MiorUo@69UShXmVczlsfgfr@Do7HjGX5D48AY\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input <code>[f][list]</code>. Returns a list of 1-indexed <code>{index}</code>s.</p>\n<p>Finds the positions of elements that satisfy a predicate - basically a built-in. However, this can possibly include the index of the head of the expression (<code>{0}</code>) if the predicate returns <code>True</code> when applied to that head (<code>List</code>).</p>\n"},{"answer_id":241397,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241397#241397","body":"<h1><a href=\"https://www.gnu.org/software/gawk/manual/gawk.html\" rel=\"nofollow noreferrer\">GNU AWK</a>, 35 bytes</h1>\n<pre><code>BEGIN{RS=&quot;.|&quot;}{printf NR%2?e:RT RT}\n</code></pre>\n<p>or</p>\n<pre><code>BEGIN{RS=&quot;.|&quot;;ORS=e}$0=NR%2?e:RT RT\n</code></pre>\n<p><a href=\"https://tio.run/##SyzP/v/fydXd0686KNhWSa9Gqba6oCgzryRNwS9I1cg@1SooRCEopJZLGUWRtT@QkVqrYmCLrIpLubggJ7NEQ8VAJ1EnVbM6Lb9II1MhM08hURNqZiZYcWJ0ZiwI1/7/75Gak5OvoxCeX5SToggA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n<p>This is possible thanks to the <code>RT</code> variable, only available in GNU AWK. The characters are stored one at a time in <code>RT</code>, and the ternary conditional operator is used to skip the odds and double the even characters.</p>\n<h1>AWK, 47 bytes</h1>\n<pre><code>split($0,a,e){for(i in a)printf i%2?e:a[i]a[i]}\n</code></pre>\n<p><a href=\"https://tio.run/##SyzP/v9f2cnV3dOvOijYVkmvRqm2uqAoM68kTcEvSNXIPtUqKEQhKKSWC1WRtT@QkVqrYmCLrIqruCAns0RDxUAnUSdVszotv0gjUyEzTyFRE2pkJlhtYnRmLAjX/v/vkZqTk6@jEJ5flJOiCAA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n<p>Splits the input character by characters into the array <code>a</code>, and does the skip-and-double magic through the ternary operator <code>?:</code>.</p>\n"},{"answer_id":241326,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241326#241326","body":"<h1><a href=\"http://xn--wxa.land/convey/\" rel=\"nofollow noreferrer\">convey</a>, 8 bytes</h1>\n<p><em>-1 thanks to Wheat Wizard!</em></p>\n<pre><code>v2{\n0&quot;!}\n</code></pre>\n<p><a href=\"https://xn--wxa.land/convey/run.html#eyJjIjoidjJ7XG4wXCIhfSIsInYiOjEsImkiOiInSGVsbG8sIFdvcmxkIScifQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><a href=\"https://i.stack.imgur.com/px7Oo.gif\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/px7Oo.gif\" alt=\"example run\" /></a></p>\n<p>The 0 and 2 loop around, applying themselves to the input via <code>!</code> (take), thus duping the element 0 or 2 times.</p>\n"},{"answer_id":241283,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241283#241283","body":"<h1><a href=\"https://github.com/ZippyMagician/ayr\" rel=\"nofollow noreferrer\">ayr</a>, <s>9</s> 8 bytes</h1>\n<p>Using Jonah's J method gets me -1 byte</p>\n<pre><code>]#0 2$`#\n</code></pre>\n<p>I have the advantage of <code>#</code>'s args being swapped compared to J, but unfortunately monadic 2-trains are not hooks like in J.<br>\nOld answer:</p>\n<pre><code>:,_2]/,@:\n</code></pre>\n<p><a href=\"https://zippymagician.github.io/ayr#Zjo@/XSMwIDIkYCM@/PWYiICdIZWxsbywgV29ybGQhJyAnYWJjZGVmJyAndW1icmVsbGEn//\" rel=\"nofollow noreferrer\">Try it!</a></p>\n<h1>Explained</h1>\n<p><code>:</code> is partial application (K-style train)</p>\n<pre><code>     ,@:   Zip-self with concatenation\n _2]/      Split into groups of two, take right element\n,          Flatten\n</code></pre>\n"},{"answer_id":241347,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241347#241347","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 28 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=([,y,...z])=&gt;y?y+y+f(z):''\n</code></pre>\n<p><a href=\"https://tio.run/##PYxNbsMgEIX3nGK6MiiUAzQi3aRSJB/AiyRKsPkxNTYWppGdqmd3IVU6QsOb7828T3ETUxPsGF8HL9WqeXr4SBfKGLufCd8t78tm2Wh8J29FsUbgcEWibqTSwHdQ11Jqjb76OijnREZ9H0KSAjn/rMFAVHPM7j/zxsQ4zznrLwjNXSOz7Dop0SHFeQqVD06@ZKoSoLSqQkjuPhNUlvkrS3SwWViLvJQXpwYT28dNmi5KGdO26MpisD0mbBqdjbg4DQVhvRixy4vuifNQELJFkWkfPkTTYny0FNSZZOsbATR@mLxTzHmDFXAOGltCHz3d/ZDt@gs\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241371,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241371#241371","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, <s>5</s> 4 bytes</h1>\n<p><em>Edit: -1 byte thanks to Razetime</em></p>\n<pre><code>`fNm\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/qKnx3G47IwNtQ4NHjRs0/yek@eX@//8/2kLHUsfQQMfQUMfQSMfQOBYA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<p>Razetime already pointed-out in the comments that <a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a> has a one-byte built-in for <code>argwhere</code>: the <code>where</code> or <code>W</code> function.</p>\n<p>So this is an implementation without <code>W</code> or any other function that acts-on or returns indices.</p>\n<pre><code>`f     # filter (select the elements that satisfy a condition)\n  N    # the natural numbers\n       # using this list to represent yes/no:\n   m   # map \n       # the black-box function provided as (implicit) argument 1\n       # across all elements of (implicit) argument 2\n</code></pre>\n"},{"answer_id":241369,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241369#241369","body":"<h1>Haskell + <a href=\"https://gitlab.com/WheatWizard/haskell-golfing-library\" rel=\"nofollow noreferrer\">hgl</a>, 19 bytes</h1>\n<pre><code>(cx&lt;ixm pM).^m&lt;m gu\n</code></pre>\n<h2>Explanation</h2>\n<p>Here's the same code converted to a more convenient format:</p>\n<pre><code>f q x =\n  cx $ ixM pM $ m (gu q) x\n</code></pre>\n<p>To start we have <code>gu</code> which takes a boolean and produces <code>[]</code> if false and <code>[()]</code> if true.</p>\n<p>We map <code>gu q</code> across the input list, this converts things that pass the test to <code>[()]</code> and things that fail to <code>[]</code>.</p>\n<p><code>pM</code> takes a list and a value and replaces everything in that list with that value.  <code>ixM</code> is an index map.  It combines every element with its index using some function.  Here we use <code>pM</code> as the function so that our <code>[()]</code>s get replaced with <code>[index]</code>.</p>\n<p>Then <code>cx</code> concats everything back together.</p>\n<p>You can reorganize things a bit to get:</p>\n<h1>19 bytes</h1>\n<pre><code>cx.^ixm&lt;(pM^.)&lt;m gu\n</code></pre>\n<p>Which is equivalent to</p>\n<pre><code>f q x =\n  cx $ ixM (\\x y -&gt; pM x $ gu $ q y)\n</code></pre>\n<p>But this is also 19 bytes so nothing is saved.</p>\n<p>There is also:</p>\n<h1>19 bytes</h1>\n<pre><code>(st.^^fl&lt;fm cr)^.eu\n</code></pre>\n<p>This solution uses an entirely different set of tools to solve the problem but is the same length.</p>\n<p>This can be translated to the more conventional</p>\n<pre><code>f q x =\n  m st $ fl (q &lt; cr) $ eu x\n</code></pre>\n<p>First <code>eu</code> pairs every element with its index in the list.  Then <code>fl (q &lt; cr)</code> filters using <code>q</code> on the second element of each pair.  Finally <code>m st</code> gets all the indices from the remaining list.</p>\n"},{"answer_id":241370,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241370#241370","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a>, 24 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(x,f)which(f(x))\n</code></pre>\n<p><a href=\"https://tio.run/##jc/RCsIgFMbx@57iuxkonYHaxopl7xIyczcLRjEhenZTaXTjIDgXCv5/eOZwnW@LG@ZBB/uczGO8T8yT5YsbjWOWec6D14ZJgiKIPIf1EKfhPaz@pfzloTXEu8cqZ2@XkCa3LaEjyCjKeJNdQagqqG3mSDjFUHwRlaACso9PcIEqI/EXdZuXqtNihf6MzfL/InwA\" rel=\"noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Uses <a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a>'s built-in <code>which</code> function, which is pretty-close to <code>argwhere</code> except for the manner in which <code>x</code> and <code>f</code> are supplied...</p>\n<hr />\n<h1><a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a>, 26 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(x,f)seq(!x)[f(x)]\n</code></pre>\n<p><a href=\"https://tio.run/##jc/RCsIgFMbx@57i62Kg5EBtY8WyF4kuYszqZpEVCdGz21Ea3TgIzoWC/x8eFw7u@Dz1rjfBPobufr4MzAvLb/2VzT3fWeb5PnjTMSWgBWSa5XigqXgLa34xf3kYA/luMdpJnEWkSm0t0AgoEhXdVJMRigJ6mlkJrCmUX0RHKIMs6Am20HmEflHWaakyLpbpN5gs/y/CBw\" rel=\"noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Roll-your-own version without any built-in.</p>\n<p>Note that many/most <a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a> functions vectorize, and this is assumed here (and indeed applies to all the test-cases).  However, this isn't universal, so if <code>f</code> is a non-vectorizing function we'd need <a href=\"https://tio.run/##K/qfWJRenpFalGr7P600L7kkMz9Po0InTbM4tVBDsUIzujixoCCnEiwU@7/CNlnDUEfBSEfBAIyMYQwgMtG0VkizRZihWV2hYGurYFBrrQCzAmwKF8gQE7BeUx0Fcx0FQ6CJhkCeoTkWE1RVFYxwG2Oho2AJ1GgANcQIZBAWQ7SBShTsFIywGwJ0ha4p2FO6II9h0W@jgFMn8Tr@AwA\" rel=\"noreferrer\">+7 bytes</a>: <code>function(x,f)seq(!x)[sapply(x,f)]</code>.</p>\n"},{"answer_id":241372,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241372#241372","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"noreferrer\">APL (Dyalog Unicode)</a>, 4 bytes</h1>\n\n<p>Full program. Prompts for array, then function.</p>\n<pre class=\"lang-apl prettyprint-override\"><code>⍸⎕¨⎕\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qKO94P@j3h2P@qYeWgEkQAL/FcCggAvI9wr291OPNtRRMNJRMAAjYxgDiExi1bmqDRRsFR71bq0FannUO1ehQkHXDkjY2ioYcGEYZALWb6qjYK6jYAg01RDIMzSHmWKkUIPFJFWgOHbTLHQULIH6DaBmGYHMA5llZKBgAxRW0MZimjZIwk7BCItxQGfpmoJ9qgvyLcRVdljMsFHArpugLgA\" rel=\"noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n<p><code>⍸</code> where</p>\n<p><code>⎕</code> the function</p>\n<p><code>¨</code> mapped to</p>\n<p><code>⎕</code> the array</p>\n"},{"answer_id":241366,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241366#241366","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 35 bytes</h1>\n<pre>-&gt;a,f{(0..a.size).select{f[a[_1]]}}</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72kqDSpcsGiNNulpSVpuhY3lXXtEnXSqjUM9PQS9Yozq1I19YpTc1KTS6rTohOj4w1jY2troUpVChTSoqMNdYx0DIDQGEwa6JjE6ujaVVRXKNjaKhjUxkLULlgAoQE\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":241362,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241362#241362","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 6 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>δ.Vƶ0K\n</code></pre>\n<p>The input black-box function is a string. 1-based.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//3Ba9sGPbDLz//w/RNjJ41LCLK9pCR8FSR8HQAIgNgdgIiI1jAQ\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfWVC8f9zW/TCjm0z8P6v8z86WileSSfaUMdIxwAIjcGkgY5JbKyOQrTS4Q6gnAlQ1FTHXMfQUMfQWMfQHCIVom1k8KhhF1DeQsdSx9AALG0EVAGRBsrtBMqZ6uiaAo3WBZqOJg4WiQUA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>δ       # Map over the (implicit) second input-list,\n        # using the first (implicit) input-string as argument:\n .V     #  Evaluate the string as 05AB1E code\n   ƶ    # Multiply each item by its 1-based index\n    0K  # Remove all 0s\n        # (after which the result is output implicitly)\n</code></pre>\n"},{"answer_id":241365,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241365#241365","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 28 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>p!v=[i|(i,x)&lt;-zip[0..]v,p x]\n</code></pre>\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/v0CxzDY6s0YjU6dC00a3KrMg2kBPL7ZMp0ChIvZ/bmJmnm1BUWZeiYqGnaGhpmK0pZ6eoUXsfwA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<p>To get the indices we <code>zip</code> the list with the natural numbers <code>[0..]</code>.  Then we use a list comprehension to get only the correct indices.</p>\n"},{"answer_id":241363,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241363#241363","body":"<h1><a href=\"https://v8.dev/\" rel=\"noreferrer\">JavaScript (V8)</a>, 34 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;f=&gt;a.map((x,i)=&gt;f(x)&amp;&amp;print(i))\n</code></pre>\n<p><a href=\"https://tio.run/##hc7RCoIwFAbg@57iJ0h2aIZbioZtl75EdDGCYEEhJuLbr@MqEBKCw9hh/3d2bm5wz0vn2z4dqtCY4Iy9Gut2d9cKMUpP3IuRkqTt/KMXnijUq0aclISWyGLtvxeu/EwCI4ydDoOMarzlek0R5jFfSJQSiqco7lQ5UxvoZVlJHDibfZye7Mxt@QkW@hfyZ2kR902nnWfmiMX0n1R4AQ\" rel=\"noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241361,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241361#241361","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 43 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;y=&gt;x.reduce((a,b,i)=&gt;y(b)?[...a,i]:a,[])\n</code></pre>\n<p><a href=\"https://tio.run/##NYhBCsIwEAC/kuMurEurnoSNDwk5bNNUIqWRtkr6@hgEYRiGeepHt7Cm135a8hjrJLWIPcQWXuP4DhFAaaCEbcKAd8fMSsnflJzHGvKy5TnynB8wgevJnMl0Py7/aFw9QjFiTZOYDrF@AQ\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>0-indexed, takes input in curry format f(array)(function)</p>\n"},{"answer_id":241360,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241360#241360","body":"<h1><a href=\"https://docs.python.org/3.8/\" rel=\"noreferrer\">Python 3.8 (pre-release)</a>, 45 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda l,F:[i for i,e in enumerate(l)if F(e)]\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM7YoKPqfZhvzPycxNyklUSFHx80qOlMhLb9IIVMnVSEzTyE1rzQ3tSixJFUjRzMzTcFNI1Uz9n9BUWZeiUaaRrShjpGOARAag0kDHZNYHahJFVYKFQq2tgoGmpr/AQ\" rel=\"noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n<p>Looks like it won't get much shorter than this.</p>\n<p>Explanation: keep all indexes (found by unpacking; the index is the first item of each 2-element tuple in the return value of <code>enumerate</code>) for which the function returns <code>True</code> for the corresponding element.</p>\n"},{"answer_id":241359,"question_id":241357,"link":"https://codegolf.stackexchange.com/questions/241357/implement-an-argwhere-function/241359#241359","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>MT\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCJgWzgsIDksIDEwLCAxMSwgMTIsIDEzXWBFXG7OuzEwKzIwPjsiLCJNVCIsIiIsIiJd\" rel=\"noreferrer\">Try it Online!</a></p>\n<p>100% pure ascii. 0-indexed</p>\n<h2>Explained</h2>\n<pre><code>MT\nM  # Map the function to the list\n T # and return indicies where the result is truthy\n</code></pre>\n"},{"answer_id":241327,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241327#241327","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>35</s> <s>34</s> 32 bytes</h1>\n<p><em>Edit: -1 byte thanks to Giuseppe</em></p>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(x)rep(x,`[&lt;-`(x,0:1*2))\n</code></pre>\n<p><a href=\"https://tio.run/##jc@9TsMwFAXgPU9hymJXqQRMCLWdGKiyFmVgSJPca8eKfyrrBpmnD2YAV0z2YulY35FPWAPazgN0MJgOP91hlYsbSXvHowh45bG@fOx3l3Q/vDxun4RYtaOzfyf5zP9ZvqTw7E@O@KYfRkC5EUKwe3Y4smEAkLIqsosdAhrTZ21tCCnoy7zxv8cpRhgpF/29eKWIYqxKx9wuKUNxHiGreQYoc29puq9Z64OBu1yAKa7rtg2htOg14z3aK30dy1zTZNg0hZ/W2WhdZn5ig07RdDMzZR2iUtNUrd8\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241345,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241345#241345","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 32 bytes</h1>\n<pre>-&gt;s{s.scan(/.(.)/).map{_1*2}*&#39;&#39;}</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=PVBLToQwGI7b_xSVzcCEYaIrN8zKxSQcgIUaUugDQnmkLQkGOIkbYvRQehr7Q8Yu-j37N-3Hlx7y9_VTxN-DFaenH3K6mMlEpqCtf478KDgHUUP7KXs4Pi7Hw2HZe793gUfzgnFB4gvJc8aEgKHJNVeKotU0WjtKQXW31Upi-Wgx_fc6Ka0dR3Cz9kEw1gVDWteMwdWN60KSdlqxe3S5M8IwTbV26TM6kCQISQLXCklVQcdYpngrbbmdcSrjXMqyBJReZHpVWd97bb39bbOqWj4DQbiFWzMgsEScFuU0W25sqLlxtZ6gAEJj8YLsDS26bXHsKsRRXbUWLwBYYP-xdd3xDw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":241332,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241332#241332","body":"<h1><a href=\"https://github.com/tomtheisen/munge\" rel=\"nofollow noreferrer\">munge</a>, 20 bytes</h1>\n<pre><code>/.(.)?/=&gt;{$1 $1}\n</code></pre>\n<p><a href=\"https://munge.netlify.app/#eyJtIjoiLy4oLik/Lz0+eyQxICQxfSIsImkiOiJhYmNkZWZcbnVtYnJlbGxhXG5sb29vb29vb29vbmcgdGV4dFxuYWJjXG54a2NkXG5IZWxsbywgV29ybGQhXG5EXG5LS1xuSGlcbm9kZF9sZW5ndGghXG4ifQ==\" rel=\"nofollow noreferrer\">Munge it!</a></p>\n"},{"answer_id":241331,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241331#241331","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 9 bytes<sup><a href=\"https://github.com/mlochbaum/BQN/blob/master/commentary/sbcs.bqn\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre class=\"lang-none prettyprint-override\"><code>⊢/˜≠⥊0‿2˙\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RiDihpAg4oqiL8uc4omg4qWKMOKAvzLLmQoKUyDihpAgKCjiiqIty5wrYMOXwqwp4oiYPeKKlOKKoikKPijiiqLii4jCt0Ygwq8x4oaTwrfiipEnPSfiirhTKcKoKEArMTApIFMgImFiY2RlZiA9PiBiYmRkZmYKdW1icmVsbGEgPT4gbW1ycmxsYWEKbG9vb29vb29vb25nIHRleHQgPT4gb29vb29vb29vb2dndHR4eAphYmMgPT4gYmIKeGtjZCA9PiBra2RkCkhlbGxvLCBXb3JsZCEgPT4gZWVsbCwsV1dycmRkCkQgPT4gPGVtcHR5PgpLSyA9PiBLSwpIaSA9PiBpaQpvZGRfbGVuZ3RoISA9PiBkZF9fZWVnZ2hoCiA9PiA8ZW1wdHk+Ig==\" rel=\"nofollow noreferrer\">Run online!</a></p>\n<p>Uses Jonah's J idea.</p>\n<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 10 bytes<sup><a href=\"https://github.com/mlochbaum/BQN/blob/master/commentary/sbcs.bqn\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre class=\"lang-none prettyprint-override\"><code>2/1⊑˘⌊‿2⊸⥊\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RiDihpAgMi8x4oqRy5jijIrigL8y4oq44qWKCgpTIOKGkCAoKOKKoi3LnCtgw5fCrCniiJg94oqU4oqiKQo+KOKKouKLiMK3RiDCrzHihpPCt+KKkSc9J+KKuFMpwqgoQCsxMCkgUyAiYWJjZGVmID0+IGJiZGRmZgp1bWJyZWxsYSA9PiBtbXJybGxhYQpsb29vb29vb29vbmcgdGV4dCA9PiBvb29vb29vb29vZ2d0dHh4CmFiYyA9PiBiYgp4a2NkID0+IGtrZGQKSGVsbG8sIFdvcmxkISA9PiBlZWxsLCxXV3JyZGQKRCA9PiA8ZW1wdHk+CktLID0+IEtLCkhpID0+IGlpCm9kZF9sZW5ndGghID0+IGRkX19lZWdnaGgKID0+IDxlbXB0eT4i\" rel=\"nofollow noreferrer\">Run online!</a></p>\n"},{"answer_id":241328,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241328#241328","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 23 bytes</h1>\n<pre><code>#~##&amp;~#&amp;/@#~Drop~;;;;2&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##NYo/C8IwFMT3foqaQCZFcLWWgh2ELoKDg4q8JukfTBOJTyiI@eqxr@ANd8fvbgDs9ADYS4jNLvLAuQhcrAseSu@eYTtpI@LR9xYvfJWzK2NZ3hT7DjxI1P5V8GymNxFOEmz4JAxqqXTDlgl7D7XXxgB14/6ybYp6RILTlWJ8SEV5mM5umZ6dN2pBoCSrqnnryZ1Sd6Nti928s@Qbfw\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input a list. Drops odd indices and doubles everything left.</p>\n"},{"answer_id":241323,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241323#241323","body":"<h1><a href=\"https://github.com/FMNSSun/Burlesque\" rel=\"nofollow noreferrer\">Burlesque</a>, 6 bytes</h1>\n<pre><code>2en)^^\n</code></pre>\n<p><a href=\"https://tio.run/##SyotykktLixN/Z@TV/3fKDVPMy7uf21udHBATHRxxn@P1JycfB2F8PyinBRFrsSk5JTUNK7S3KQioHgiV04@DOSlK5SkVpSAVHBVZCencLlweXtzeWRy5aekxOek5qWXZCgCAA\" rel=\"nofollow noreferrer\" title=\"Burlesque – Try It Online\">Try it online!</a></p>\n<pre><code>2en # Take every 2nd\n)^^ # Map duplicate char\n</code></pre>\n"},{"answer_id":241293,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241293#241293","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"nofollow noreferrer\">sed 4.2.2</a>, 5 bytes</h1>\n<pre><code>n;p;p\n</code></pre>\n<p><a href=\"https://tio.run/##K05N@f8/z7rAuuD//0SuJK5krpR/@QUlmfl5xf918wA\" rel=\"nofollow noreferrer\" title=\"sed 4.2.2 – Try It Online\">Try it online!</a></p>\n<p>Takes string input one character per line (if allowed).</p>\n<ul>\n<li><code>-n option</code> Don't print by default</li>\n<li><code>n;</code> Skips a line.</li>\n<li><code>p;p</code> Print the line twice.</li>\n</ul>\n<h2><a href=\"https://www.gnu.org/software/sed/\" rel=\"nofollow noreferrer\">sed 4.2.2</a>, 15 bytes</h2>\n<pre><code>s/.\\(.\\)/\\1\\1/g\n</code></pre>\n<p><a href=\"https://tio.run/##K05N@f@/WF8vRkMvRlM/xjDGUD/9/3@P1JycfB2F8vyinBSuiuzkFAA\" rel=\"nofollow noreferrer\" title=\"sed 4.2.2 – Try It Online\">Try it online!</a></p>\n<p>Solution taking a single string.</p>\n<ul>\n<li><code>s/.\\(.\\)/</code> Substitute any char, followed by any other char...</li>\n<li><code>\\1\\1/</code> With the 2nd char repeated twice...</li>\n<li><code>g</code> Globally</li>\n</ul>\n"},{"answer_id":241316,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241316#241316","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, 4 bytes</h1>\n<pre><code>i#o:\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/P1M53@r///yUlPic1Lz0kgxFAA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n<p>Terminates with an error.</p>\n<p><a href=\"https://codegolf.stackexchange.com/questions/237085/swap-every-two-elements-in-a-list/237115#237115\">This again?</a></p>\n<h2>How?</h2>\n<pre><code>i     Take an input (instruction pointer (IP) going right)\n #    IP bounces off # and starts going left\ni     Take another input\n   :  Duplicate it\n  o   Output it\n #    IP bounces off # and starts going right\n  o   Output again\n   :  Duplicate (Useless)\n\nAnd now, we're back to where we started, at the first character facing right.\nThe code will continue executing until it terminates with an error when running out of input.\n</code></pre>\n"},{"answer_id":241310,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241310#241310","body":"<h1><a href=\"https://www.lexurgy.com/sc\" rel=\"nofollow noreferrer\">Lexurgy</a>, 32 bytes</h1>\n<p>Docs <a href=\"https://www.meamoria.com/lexurgy/html/sc-tutorial.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n<p>Due to Lexurgy's input considering strings as &quot;stuff surrounded by whitespace&quot;, no whitespace can appear in the input string. Otherwise, Lexurgy will consider <code>[&quot;Hello, world!&quot;]</code> as <code>[&quot;Hello,&quot;, &quot;world!&quot;]</code>. Whitespace must be replaced with a different character (such as <code>_</code>).</p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>o:\n[] []$1=&gt;* $1 $1\n[]=&gt;* /_ $\n</code></pre>\n<p>Ungolfed:</p>\n<pre class=\"lang-bash prettyprint-override\"><code>only-evens:\n [] []$1 =&gt; * $1 $1 # capture the second character and dup it\n [] =&gt; * / _ $ # remove last odd character as well\n</code></pre>\n"},{"answer_id":241307,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241307#241307","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 34 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda s:s and s[1:2]*2+f(s[2:])\n</code></pre>\n<p><a href=\"https://tio.run/##PYzNasMwEITveortKXZrCvHRoJ5yCPgBfAjBSFn9YVkSkkzcp3ellHYvO/vNzoTvrL3rj0NSy1aODNKQgDmEdDsP/f29/5BNuvXDvT2e2lgB54GAcaEDv@UAFCJ7zuXectN@pmBNbk5Av@DUEgjRuAyyKXYLlL4SB@MPFLK@cI4oJdlWHoW1rKJ1jbFIRqz/G6cgiz1X9595pXLed1K6fovIvjywymVBJNdS5zuYfLT4VqkooOumKcbiXioh41jXOJKrqcIY4hFnK5zK@pUp1yyEUlr/AA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241304,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241304#241304","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 5 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>+1 byte for the unnecessary restriction that we use 1-indexing.</p>\n<pre><code>Åë m²\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=xesgbbI&amp;input=IkhlbGxvLCBXb3JsZCEi\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":241301,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241301#241301","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 35 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(char*c){for(;*c++;c++)c[-1]=*c;}\n</code></pre>\n<p><a href=\"https://tio.run/##S9ZNT07@r5yZl5xTmpJqU1ySkpmvl2H3P00jOSOxSCtZszotv0jDWitZW9saiDWTo3UNY221kq1ruf7nJmbmaWhWgxQqJEfH2ip5pObk5OsohOcX5aQoKlkDzdC0LijKzCsBs2r/AwA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241299,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241299#241299","body":"<h1><a href=\"https://github.com/sporeball/naz\" rel=\"nofollow noreferrer\">naz</a>, 40 bytes</h1>\n<pre><code>2x1v1x1f1r3x1v2e1r3x1v2e2o1f0x1x2f0a0x1f\n</code></pre>\n<p>It's sure been a while, hasn't it? Works for any null-terminated input string.</p>\n<p><a href=\"https://sporeball.dev/naz/?code=2x1v1x1f1r3x1v2e1r3x1v2e2o1f0x1x2f0a0x1f&amp;input=Hello%252C%2520World!&amp;n=true\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><strong>Explanation</strong> (with <code>0x</code> instructions removed)</p>\n<pre><code>2x1v                                     # Set variable 1 equal to 0\n    1x1f                                 # Function 1\n        1r                               # Read a byte of input\n          3x1v2e                         # Goto function 2 if it equals variable 1\n                1r                       # Read another byte of input\n                  3x1v2e                 # Goto function 2 if it equals variable 1\n                        2o1f             # Otherwise, output twice and call function 1\n                              1x2f       # Function 2\n                                  0a     # No-op\n                                      1f # Call function 1\n</code></pre>\n"},{"answer_id":241280,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241280#241280","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, <s>76</s> 74 bytes</h1>\n<pre><code>&#9;I =INPUT\nN&#9;I POS(X) LEN(1) (LEN(1) | '') . E @X =E E&#9;:S(N)\n&#9;OUTPUT =I\nEND\n</code></pre>\n<p><a href=\"https://tio.run/##K87LT8rPMfn/n9NTwdbTLyA0hMsPyAzwD9aI0FTwcfXTMNRU0IDSNQrq6poKegquCg4RCrauCq6cVsEafppcnP6hIUCdQAO4XP1c/v/3SM3JyddRCM8vyklRBAA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241294,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241294#241294","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 12 bytes</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>{⍵/⍨0 2⍴⍨≢⍵}\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qKM97X/1o96t@o96VxgoGD3q3QJkPOpcBBSqBcn@VwCCNC5DLgj9qHezoQEA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n<p>APL port of @jonah 's j answer</p>\n"},{"answer_id":241296,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241296#241296","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 74 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>from functools import*\nlambda s:reduce(tuple.__add__,zip(s[1::2],s[1::2]))\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P60oP1chrTQvuSQ/P6dYITO3IL@oRIsrJzE3KSVRodiqKDWlNDlVo6S0ICdVLz4@MSUlPl6nKrNAozja0MrKKFYHSmtq/v8PAA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241277,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241277#241277","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, <s>6</s> 5 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>{ï¥∞*\n</code></pre>\n<p>-1 byte thanks to <em>@Neil</em>.</p>\n<p><a href=\"https://tio.run/##y00syUjPz0n7/7/68PpDSx91zNP6/18pMSk5JTVNiUupNDepKDUnJxHIzMmHgbx0hZLUihKgGFAdkKzITk4BUh5Ahfk6CuH5RTkpikC@CxB7e4MkMoFEfkpKfE5qXnpJhqISAA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>{      # Foreach over the characters of the (implicit) input-string:\n ï     #  Push the 0-based loop index\n  ¥    #  Modulo-2 this index\n   ∞   #  Double it\n    *  #  Repeat the current character that many times (0 results in an empty string)\n       # (after which the entire stack joined together is output implicitly)\n</code></pre>\n"},{"answer_id":241292,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241292#241292","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 13 bytes</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>{2/⍵/⍨~2|⍳≢⍵}\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qKM97X@1kf6j3q1AvKLOqOZR7@ZHnYuA/FqQ5H8FIEjjMuSC0EBJQwMA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n<p>pretty self explnatory</p>\n"},{"answer_id":241271,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241271#241271","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>sequences.repeating</code>, 19 bytes</h1>\n<pre><code>[ &lt;odds&gt; 2 repeat ]\n</code></pre>\n<p>Get the odd-indexed elements then repeat them twice.</p>\n<p><a href=\"https://i.stack.imgur.com/jVlhQ.gif\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/jVlhQ.gif\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":241291,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241291#241291","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 8 bytes</h1>\n<pre><code>⭆Ｓ×ι⊗﹪κ²\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRCO4BEil@yYWaHjmFZSWQLgamjoKIZm5qcUamToKLvmlSTmpKRq@@SmlOfka2ToKRpogYP3/v0dqTk6@jkJ4flFOiiLXf92yHAA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code> Ｓ          Input as a string\n⭆           Map over characters and join\n   ι        Current character\n  ×         Repeated by\n      κ     Current index\n     ﹪      Modulo\n       ²    Literal integer `2`\n    ⊗       Doubled\n</code></pre>\n"},{"answer_id":241290,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241290#241290","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 10 bytes</h1>\n<pre><code>.(.?)\n$1$1\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/P9fT0PPXpNLxVDF8P//xKTklNQ0rtLcpKLUnJxErpx8GMhLVyhJrSjhAqrgqshOTuHyACrI11EIzy/KSVHkcuHy9ubyyOTKT0mJz0nNSy/JUAQA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation: Port of @l4m2's JavaScript answer. In Retina 1 you can write <code>2*$1</code> for the same byte count.</p>\n"},{"answer_id":241289,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241289#241289","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"noreferrer\">J</a>, 8 bytes</h1>\n<pre><code>#~0 2$~#\n</code></pre>\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuoKNgoGAFxLp6Cs5BPm7/lesMFIxU6pT/a3KlJmfkK6QpqHuk5uTk6yiE5xflpCiqw4UrspNT1P8DAA\" rel=\"noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<ul>\n<li><p><code>0 2$~#</code> Repeat the pattern <code>0 2</code> for the length of the string:</p>\n<pre><code>Hello, World\n020202020202\n</code></pre>\n</li>\n<li><p><code>#~</code> Use that mask to &quot;copy&quot; the characters: zeros get deleted, twos get doubled:</p>\n<pre><code>eell,,WWrrdd\n</code></pre>\n</li>\n</ul>\n"},{"answer_id":241287,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241287#241287","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 53 bytes</h1>\n<pre><code>func[s][foreach c extract/index s 2 2[prin c prin c]]\n</code></pre>\n<p><a href=\"https://tio.run/##K0pN@R@UmhIdy5Vm9T@tNC85ujg2Oi2/KDUxOUMhWSG1oqQoMblEPzMvJbVCoVjBSMEouqAoMw8oBaFiY/@nKSh5pObk5OsohOcX5aQoKv0HAA\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n<p><code>extract/index s 2 2</code> says &quot;get every other element of <code>s</code> starting at index 2&quot; (keeping in mind Red is 1-indexed). Then print each of those elements twice.</p>\n"},{"answer_id":241285,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241285#241285","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 23 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f(a:b:c)=b:b:f c\nf _=[]\n</code></pre>\n<p><a href=\"https://tio.run/##y0gszk7Nyfmfm5iZp2CrkJlXklqUmFyikPY/TSPRKskqWdM2CUilKSRzpSnE20bH/v/vAVSfr6MQnl@Uk6IIAA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241284,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241284#241284","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"noreferrer\">Husk</a>, 5 bytes</h1>\n<pre><code>Ṙ2Ċ2t\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//@HOGUZHuoxK/v//75Gak5OvoxCeX5SToggA\" rel=\"noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>Ṙ2Ċ2t\n    t   drop first char\n  Ċ2    take every 2-nd char\nṘ2      repeat each char 2 times\n</code></pre>\n"},{"answer_id":241279,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241279#241279","body":"<h1>APL+WIN, <s>15</s> 14 bytes</h1>\n<p>-1 byte thanks to Adám</p>\n<p>Prompts for string</p>\n<pre><code>2/(~2|⍳⍴m)/m←⍞\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNzkksLs5M/v@ob6qvz6O2CcZcQJanP5BlyPWooz3tv5G@Rp1RzaPezY96t@Rq6ucCZR71zvsPlOP6n8aVmJSckprGlcZVmptUlJqTkwhk5uTDQF66QklqRQkXWB2QrMhOTgFSHkCF@ToK4flFOSmKQL4LEHt7gyQygUR@Skp8TmpeekmGIgA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Classic) – Try It Online\">Try it online! Thanks to Dyalog Classic</a></p>\n"},{"answer_id":241282,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241282#241282","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 29 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;x.replace(/.(.?)/g,'$1$1')\n</code></pre>\n<p><a href=\"https://tio.run/##PYzNTsQgFEb3PEVNJikY7Ni1tm6MmaRLF102FC4US6FSxjAxPnuF8YfN/e75uOeNfbCNe72GO@sE7LLZY9PGysNqGAd8rHD1RI6Klof6UJdkf0Ae3s/aAy7lVpL0kYkXbeD1Yjm@p6VhQdv6WvwacHVLiqYt8kwiPFBGR9K0n9zZzRmojFM4ISoxI@SL7GzkAmQ@GUchpETnZfRgDMtoWbxPkSHj/p5VRYAYcvvPnFIhxIiS60eE4sxFjvMsBDolnaNF77wRN5lCApT2vfepfc7kEZY1XFrUdXnrOnTSOWiNnBCDAavCdD1N2wCg1DR9Aw\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241278,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241278#241278","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"noreferrer\">brainfuck</a>, 8 bytes</h1>\n<pre><code>,,[..,,]\n</code></pre>\n<p><a href=\"https://tio.run/##SypKzMxLK03O/v9fRydaT09HJ/b///yUlPic1Lz0kgxFAA\" rel=\"noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241272,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241272#241272","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, 11 bytes</h1>\n<pre><code>ii::1+?!;oo\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/PzPTyspQ217ROj/////8lJT4nNS89JIMRQA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n"},{"answer_id":241275,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241275#241275","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>y2•\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJ5MuKAoiIsIiIsInVtYnJlbGxhIl0=\" rel=\"noreferrer\">Try it Online!</a></p>\n<p>Vyxal has a better built-in for this than Jelly.</p>\n<pre><code>y2•     Full Program\ny       Uninterleave; push a[::2] and a[1::2]\n 2•     Repeat each character twice\n</code></pre>\n"},{"answer_id":241273,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241273#241273","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 4 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ιθºS\n</code></pre>\n<p>I/O as a list of characters.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//3M5zOw7tCv7/P1rJQ0lHKRWIc6A4H4hBUAGIw6H8IqhcChArKsUCAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9TVmmvpPCobZKCkn1l8P9zO8/tOLQr@L@Xzv/EpOSU1DSu0tykotScnESunHwYyEtXKEmtKOECquCqyE5O4fIAKsjXUQjPL8pJUeRy4fL25vLI5MpPSYnPSc1LL8lQBAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>ι     # Uninterleave the (implicit) input-list into two parts\n      #  e.g. [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;] → [[&quot;a&quot;,&quot;c&quot;,&quot;e&quot;],[&quot;b&quot;,&quot;d&quot;,&quot;f&quot;]]\n θ    # Only leave the last/second part\n      #  → [&quot;b&quot;,&quot;d&quot;,&quot;f&quot;]\n  º   # Mirror/double each character\n      #  → [&quot;bb&quot;,&quot;dd&quot;,&quot;ff&quot;]\n   S  # Convert the list of strings to a flattened list of characters\n      #  → [&quot;b&quot;,&quot;b&quot;,&quot;d&quot;,&quot;d&quot;,&quot;f&quot;,&quot;f&quot;]\n      # (after which it is output implicitly as result)\n</code></pre>\n"},{"answer_id":241269,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241269#241269","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, 37 bytes</h1>\n<pre>lambda a:&quot;&quot;.join(x*2for x in a[1::2])</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vweI025ilpSVpuhY3VXMSc5NSEhUSrZSU9LLyM_M0KrSM0vKLFCoUMvMUEqMNrayMYjWhinUKijLzSjTSNJRKc5OKUnNyEpU0NbnggvkpKfE5qXnpJRmKQHGIngULIDQA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n"},{"answer_id":241268,"question_id":241267,"link":"https://codegolf.stackexchange.com/questions/241267/remove-odd-indices-and-double-the-even-indices/241268#241268","body":"<h1><a href=\"https://github.com/DennisMitchell/jellylanguage\" rel=\"noreferrer\">Jelly</a>, 4 bytes</h1>\n<pre><code>Ḋm2Ḥ\n</code></pre>\n<p><a href=\"https://jht.hyper-neutrino.xyz/tio#WyIiLCLhuIptMuG4pCIsIiIsIiIsWyJ1bWJyZWxsYSJdXQ==\" rel=\"noreferrer\">Try It Online!</a></p>\n<pre><code>Ḋm2Ḥ    Main Link\nḊ       Remove the first character\n m2     Return every other character\n   Ḥ    Double. This turns [&quot;a&quot;, &quot;b&quot;] into [&quot;aa&quot;, &quot;bb&quot;], which\n        is not the correct format for a Jelly string, but displays\n        correctly when printed.\n</code></pre>\n"},{"answer_id":240763,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/240763#240763","body":"<h1>Hexagony - 61 bytes, return seperator</h1>\n<pre><code>))')).............../{\\/{\\)))/=.(\\=.+\\\\*{/..==..\\&gt;{;&quot;!&lt;.({(&quot;/\n</code></pre>\n<p><a href=\"https://hexagony.net/#lzN4Igxg9gJgpiBcICUSDkKB0Xs9wemAB1CDiUk8BeDACmOoGpjiAqYPLS6jYgPmADchEAEIAPLWB0QeEABoQASwB2ABwCuAFwQgGARkLKGAJnlK1WgLLQ4iAIYAnAOYgAvkA=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":240693,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240693#240693","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 25 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>W=Uv)?[W¶Ô?ßWÔ:V±W]cßUV:U\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=Vz1Vdik/W1e21D/fV9Q6VrFXXWPfVVY6VQ&amp;input=WzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdCi1R\" rel=\"nofollow noreferrer\">Try it</a></p>\n<p>Or, if we can replace empty sub-arrays with <code>null</code> in the output:</p>\n<h2><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 23 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h2>\n<pre><code>W=Uv)©[W¶Ô?ßWÔ:V±W]cßUV\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=Vz1VdimpW1e21D/fV9Q6VrFXXWPfVVY&amp;input=WzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdCi1R\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":240666,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240666#240666","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>30</s> 29 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>0U&quot;εdiXćy+š¬ëXD¬šUy®.V}sU&quot;©.V\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/fIFTp3NaUzIgj7ZXaRxceWnN4dYTLoTVHF4ZWHlqnF1ZbHKp0aKVe2P//0YY6RjrGOtEgwiRWJzoWyDXUiTbRsdCJNovVMQXyY//r6ubl6@YkVlUCAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeV/g1Clc1tTMiOOtFdqH114aM3h1REuh9YcXRhaeWidXlhtcajSoZV6Yf91/kdHx@ooRFuACEMdIx1jCAMKQZxoIAnFEDkMAaAunWgQYQIUjAVygWpMdCx0os1idUyBfIgpOjAVUGugdGzsf13dvHzdnMSqSgA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n<p>Unfortunately 05AB1E lacks recursive methods. We can however mimic this behavior by using <code>&quot;recursive_function_here®.V&quot;©.V</code>. One big disadvantage about this however, is that the variables will always be in the scope of the full program, rather than this recursive function. So instead, we use and modify a list as variable.</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>0U         # Start with X=[0] (or actually X=0, but it behaves as [0])\n  &quot;...&quot;    # Push a string with the recursive function explained below\n       ©   # Store this string in variable `®` (without popping)\n        .V # Evaluate it as 05AB1E code\n           # (after which the result is output implicitly)\n\nε          # Map each item `y` to:\n di        #  If `y` is a (non-negative) integer:\n   X       #   Push list X\n    ć      #   Extract its head; pop and push remainder-list and first item\n           #   separated to the stack\n     y+    #   Add the current integer `y` to this head\n       š   #   Prepend it back to the remainder-list\n        ¬  #   Push this prepended head again (without popping the list)\n  ë        #  Else (`y` is an inner list instead):\n   X       #   Push `X`\n    D      #   Push `X` again by duplicating\n     ¬š    #   In this second `X`, prepend its own head\n       U   #   Pop and replace `X` with this modified list\n   y       #   Push the current list `y`\n    ®.V    #   Do a recursive call with it\n  }        #  After the if-else statement:\n   s       #   Swap so the (potentially modified) `X` is at the top of the stack\n    U      #   Pop and replace `X` with this modified list\n</code></pre>\n"},{"answer_id":240625,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240625#240625","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>111</s> <s>107</s> <s>103</s> 98 bytes</h1>\n<p><em>Edit: -5 bytes each thanks to pajonk and Giuseppe</em></p>\n\n<pre class=\"lang-r prettyprint-override\"><code>`~`=function(x,t=0)`if`(length(x),`if`(is.list(y&lt;-el(x)),c(list(y~t),x[-1]~t),c(y+t,x[-1]~y+t)),x)\n</code></pre>\n<p><a href=\"https://tio.run/##ZU5BDoIwELz7ChIv3bgYWxBqIn7EGDENKglBQ5cELnwdS1uNymlnZ3Zmpxm1utTnZ9XqbMyHPLu2taLyUbMOKdtAXl5zVhX1je6sA7RrqddVqYn1@7CoDAuomCMGAuyOIT9NQLF@RX41yJx1MJLimb2FhaaGfZ4zIwAsSAkny7kurJ44naMb8D/nvsT60rdPYORuJxB7HxjaR8YoHUgAt4aHYBmEh8C7I0ycKpFz5NuPX@LOV4hQ@CiRGr@J4XzeKrWtpGv1Ve3dyG4/eJ4hAcYX\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":240656,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240656#240656","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 39 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>f=-&gt;d,t=0{d.map{|x|x*0==0?t+=x:f[x,t]}}\n</code></pre>\n<p><a href=\"https://tio.run/##XU/RasMwDHz3V5jubbuWOGk7b@DtQ1Q9dGvCBmsoqQseSb49kxMnlGFk6U7nk9zcPn6HoXLrtxO8y9rT5ny8tF3owmPmXPbun1x4rSjAc98PRMTQxAyliWysbQIGOYpIGBTYL2Q6U0MU2GKXmiRsiti@h/PrfxIhcp7jfq7gaC08CxTZFha0Z5mFfFkKZGFkmd2os3gR3wJ5dH0WnciNWXbD7Jg@lvK06ehmspGNv50zs@JNefz8ajtfXj2a8nr78Z3SwVUUGVb6omMRc5Cr@a69Xj20wblJ3B/qQ71SWqleDX8\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n<p>Ruby has the same operator <code>*</code> for Integer and Array which takes the same right operand type(number).<br />\nIf we multiply a number by 0 we get 0, if an Array we get an empty Array.</p>\n"},{"answer_id":240655,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240655#240655","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 52 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=([h,...t],v=0)=&gt;h?[h+0&gt;h?f(h,v):v+=h,...f(t,v)]:[]\n</code></pre>\n<p><a href=\"https://tio.run/##bVDRDoIwDHz3K3wc4QQGihODfsjSB6PiNEaMkP3@LCgEhSxN095de93tYA/V8XV91otHeTo7V@RCGwRBUBNsHnn5zuy18SNOhTCwXmb9vCUUouaSMk3uWD6q8n4O7uVFFEKT523nYTjXNPtDVA@pESYRI@lxiQTpBOf7BjxWYYnViKsl4Rs9e9gbz55ScDemLqY9M9JYYAZxyYIlFHRK7Anx70HQCpLtr1qywoZ3JYibJWsms0bKiUPQLfj8UZcHZ7XDZdRCzcd1mdwb\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":240634,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240634#240634","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 39 bytes</h1>\n<pre><code>a_~f~b___:=Join[{f@@a},0&amp;@@a+f@b]\n_f={}\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78/z8xvi6tLik@Pt7K1is/My@6Os3BIbFWx0ANSGmnOSTFcsWn2VbX/g8oyswriVbWtQPKK8eq1QUnJ@bVVXNV1@pwVVuACEMdIx1jCAMKQZxqIAnFEDkMAaAunWoQYQIUrAVygWpMdCx0qs1qdUyBfIgpOjAVUGugdC1X7X8A\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input <code>[list...]</code>. Inputting <code>[list]</code> works, but returns inside an extra layer of <code>{}</code>.</p>\n<pre><code>a_~f~b___:=                         when input is nonempty:\n                 f@@a                 recurse on first element\n                                      (do nothing if it's an integer)\n           Join[{    },      f@b]     followed by recursion on remainder\n                           a+           with first element added\n                       0&amp;@@             (or 0 if it's a list)\n_f={}                               otherwise return empty list\n</code></pre>\n<hr />\n<h3><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 40 bytes</h3>\n<pre><code>f=#/.{a_,b___}:&gt;Join[{f@a},0&amp;@@a+f@{b}]&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##ZU1NC8IwDL33bxR6MX5PGYKjZ0@CxzFKNiz2sArSW8j@em1pPUnIS97LSzJjeD1nDG7CGO1VbjeEBkZjDF@629v5nqxGhp3SGldW08iDiveP86GX685qOajlMaFfSBCDoDbDHg5wLE2NTChhzTL7E9IWUIYmiZxo8jTQAp0ZTomXK/Bz1De1suD4BQ\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input <code>[list]</code>.</p>\n"},{"answer_id":240632,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240632#240632","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 51 bytes</h1>\n<pre><code>⊞υ⊞Ｏθ⁰Ｆυ«≔⊟ιηＦＬι«≔§ικζ¿⁼ζ⁺ζ⟦⟧⊞υ⊞Ｏζη«≧⁺ζη§≔ικη»»»⭆¹θ\n</code></pre>\n<p><a href=\"https://tio.run/##bY7LSgQxEEXX3V@RZQVKsHUUYVazcCEoNroMWYQx0wmGfuQh0jLfHivRBhdCSFF1b91TR6P8cVIu5z4FAwlZqc@z9ipOHhZkl5zv29PkGSTOvtrmEIIdRuinGSxHZkhtqvyoxyEaGlbb5jvEh/FNf4JF9k72tdgbe2JwvyTlAqxEdKlWITnt/nvHWkB1Vbuga37zpOYfxosdTISSQvm/F238v/hNOrf0zm3v7RjhNVIZKAs6ZAsxchaiwyu8RlG@nUQhqe1Q7PAOxa3EG@qlzBcf7hs\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>⊞υ⊞Ｏθ⁰\n</code></pre>\n<p>Temporarily push the initial accumulator to the list and push that list to the list of lists.</p>\n<pre><code>Ｆυ«\n</code></pre>\n<p>Loop over all of the lists.</p>\n<pre><code>≔⊟ιη\n</code></pre>\n<p>Remove the accumulator from the list.</p>\n<pre><code>ＦＬι«\n</code></pre>\n<p>Loop over the elements of the list.</p>\n<pre><code>≔§ικζ\n</code></pre>\n<p>Get the current element.</p>\n<pre><code>¿⁼ζ⁺ζ⟦⟧\n</code></pre>\n<p>Check whether it's a list. Adding an empty list to a list produces the original list, but adding it to an integer vectorises therefore producing the empty list rather than an integer.</p>\n<pre><code>⊞υ⊞Ｏζη\n</code></pre>\n<p>If it's a sublist then temporarily push the accumulator to the sublist and push the sublist to the list of lists.</p>\n<pre><code>«≧⁺ζη§≔ικη\n</code></pre>\n<p>Otherwise add the value to the accumulator and replace the value with the total.</p>\n<pre><code>»»»⭆¹θ\n</code></pre>\n<p>Pretty-print the result as the default output format doesn't handle ragged lists very well.</p>\n"},{"answer_id":240629,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240629#240629","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a> <code>-xp</code>, 27 bytes</h1>\n<pre><code>b|:0FdacPB:xNd?b+:d(fdb)c|l\n</code></pre>\n<p>Recursive main program, takes the list as a command-line argument. <a href=\"https://ato.pxeger.com/run?1=m724ILNgebSSbkWBUuyCpaUlaboWu5NqrAzcUhKTA5ysKvxS7JO0rVI00lKSNJNrciAqoApvakQrRRtaG1kbW0eDCJNY6-hYINfQOtrE2sI62izW2hTIj4WbDAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h3>Explanation</h3>\n<pre><code>b|:0FdacPB:xNd?b+:d(fdb)c|l\n                             a (1st arg) is the input list; b (2nd arg) is the starting\n                             number for the scan\n                             When the function is called as the main program, b is not\n                             specified, so it is nil\nb|:0                         If b is falsey (nil or 0), set it to 0 instead\n                             c and d are also local variables which are nil b/c 3rd and\n                             4th arguments are not given\n    Fda                      For each element d in the input list:\n           xNd                 Does d contain x (empty string)?\n              ?                If so, it's an integer:\n               b+:d              Add it to b in-place\n                               If not, it's a list of integers:\n                   (f  )         Make a recursive call\n                     d           using d as the new list\n                      b          and the current value of b as the new starting point\n       cPB:                    Take that result and push it onto the end of c\n                               (Pushing an element to a nil variable makes it a list)\n                        c    After the loop, return c...\n                         |   except if c is falsey, it's still nil...\n                          l  so return empty list instead\n</code></pre>\n"},{"answer_id":240620,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240620#240620","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"noreferrer\">BQN</a>, 34 bytes<sup><a href=\"https://github.com/mlochbaum/BQN/blob/master/commentary/sbcs.bqn\" rel=\"noreferrer\">SBCS</a></sup></h1>\n<pre class=\"lang-none prettyprint-override\"><code>{×≠𝕩?(⊑𝕩)𝕤{=𝕨?𝕩∾˜⋈𝔽𝕨;𝕨+0∾𝕩}𝕊1↓𝕩;𝕩}\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RuKGkHvDl+KJoPCdlak/KOKKkfCdlakp8J2VpHs98J2VqD/wnZWp4oi+y5zii4jwnZS98J2VqDvwnZWoKzDiiL7wnZWpffCdlYox4oaT8J2VqTvwnZWpfQoKCj7ii4jiiJhG4oiY4oCiSnPCqOKfqCJbOF0iCiJbMSwyLDNdIgoiWzEsMSwxLDEsMV0iCiJbWzFdLFsxXSxbMV1dIgoiWzEsWzFdLFsxXSxbMV1dIgoiWzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdIgoiW1sxLDIsMyw0XSxbMSwyLDNdLFsxLDIsM11dIuKfqQ==\" rel=\"noreferrer\">Run online!</a></p>\n<pre><code>{×≠𝕩?(⊑𝕩)𝕤{=𝕨?𝕩∾˜⋈𝔽𝕨;𝕨+0∾𝕩}𝕊1↓𝕩;𝕩} # Function taking a nested list as 𝕩\n ×≠𝕩?                          ;𝕩  # If the list is empty, return it\n                            1↓𝕩    # Tail of 𝕩\n                           𝕊       # Recursive call on the tail\n                                   # If that fails, return the tail (for the base case)\n      ⊑𝕩                           # The first element of the list\n        𝕤{      ...      }         # Call the inner function with parameters\n                                   #  - 𝕩: result of recursive call\n                                   #  - 𝕨: first element\n                                   #  - 𝔽: a reference to the outer function\n          =𝕨?&lt;list&gt;;&lt;int&gt;          #   Conditional, the rank of 𝕨 is 0 for ints and 1 for lists\n                 𝔽𝕨                #   If 𝕨 is a list, call 𝔽 on that \n             𝕩∾˜⋈                  #   And insert the result in the front of 𝕩\n                      0∾𝕩          #   If 𝕨 is an integer, prepend 0 to the list 𝕩\n                    𝕨+             #   And add 𝕨 to each integer in the resulting nested list\n</code></pre>\n<p>I tried to handle the base case with <code>⎊</code> (Catch) instead of an explicit conditional, but couldn't get it to work properly. See <a href=\"https://codegolf.stackexchange.com/revisions/240620/2\">the revision history</a> for my failed attempts.</p>\n"},{"answer_id":240615,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240615#240615","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, <sup><s>57</s> <s>54</s></sup> 53 bytes</h1>\n<pre>f=lambda x,a=0:[i*0==0and(a:=a+i)or f(i,a)for i in x]</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vwYKlpSVpuhY3TdNscxJzk1ISFSp0Em0NrKIztQxsbQ0S81I0Eq1sE7UzNfOLFNI0MnUSNdOArEyFzDyFilioZuuCosy8Eo00jWhDHQUjHQVjHYVoCGUSC2TGggWBUtEmOgoWQMoMKGIKEo3V1IQYAXMHAA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Thanks to @ovs for -3 bytes.</p>\n<h1><a href=\"https://github.com/pxeger/whython\" rel=\"noreferrer\">Whython</a>, 42 bytes</h1>\n<pre>f=lambda x,a=0:[(a:=a+i)?f(i,a)for i in x]</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m728PKOyJCM_b8GCpaUlaboWN7XSbHMSc5NSEhUqdBJtDayiNRKtbBO1MzXt0zQydRI10_KLFDIVMvMUKmKhOqwLijLzSjTSNKINdRSMdBSMdRSiIZRJLJAZCxYESkWb6ChYACkzoIgpSDRWUxNiBMxyAA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Uses the <code>?</code> operator to catch <code>TypeError: unsupported operand type(s) for +: 'int' and 'list'</code> and recurse in that case.</p>\n"},{"answer_id":240616,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240616#240616","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 44 bytes<sup><a href=\"https://github.com/mlochbaum/BQN/blob/master/commentary/sbcs.bqn\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre class=\"lang-none prettyprint-override\"><code>0⊸{0=≠𝕩?𝕩;×≡⊑𝕩?(⋈𝕨𝕊⊑𝕩)∾𝕨𝕊1↓𝕩;a∾(a←𝕨+⊑𝕩)𝕊1↓𝕩}\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RiDihpAgMOKKuHswPeKJoPCdlak/8J2VqTvDl+KJoeKKkfCdlak/KOKLiPCdlajwnZWK4oqR8J2VqSniiL7wnZWo8J2VijHihpPwnZWpO2HiiL4oYeKGkPCdlagr4oqR8J2VqSnwnZWKMeKGk/Cdlal9Cgo+KOKLiCBGKcKo4p+o4oCiSnMiW10iCuKAokpzIls4XSIK4oCiSnMiWzEsMiwzXSIK4oCiSnMiWzEsMSwxLDEsMV0iCuKAokpzIltbMV0sWzFdLFsxXV0iCuKAokpzIlsxLFsxXSxbMV0sWzFdXSIK4oCiSnMiWzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdIgrigKJKcyJbWzEsMiwzLDRdLFsxLDIsM10sWzEsMiwzXV0i4p+p\" rel=\"nofollow noreferrer\">Run online!</a></p>\n"},{"answer_id":240613,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240613#240613","body":"<h1>Python3, 74 bytes:</h1>\n<pre><code>f=lambda x,h=0:x and[int==type(x[0])and(h:=h+x[0])or f(x[0],h)]+f(x[1:],h)\n</code></pre>\n<p><a href=\"https://tio.run/##dY5NCsMgEIX3PUWWSmYRmx@C4EmGWaSkYqFNRLJITm9H2yySUkSc9703M/ptcfNU9z7EaM1zeN3GoVjBmUqvxTCN@JgWY5bN38WKFUlGwmnjyqzmUNjMwUkqU6l0qqMP3CesQAVXqKGBFjqS8nLimE0CJJYKsIEesCNoWR/iB9H/TjqR7zlQVLznc0/pf87@@eTkJfvLqfgG\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":240589,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/240589#240589","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 2 bytes</h1>\n<pre><code>ΣḊ\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//9zihzu6/v//b2QAAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n"},{"answer_id":240265,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/240265#240265","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/index.html\" rel=\"nofollow noreferrer\">BQN</a>, <s>17</s> 13 bytes</h1>\n<p>(non-recursive version)</p>\n<p><em>Edit: -4 bytes thanks to hints from ovs</em></p>\n<pre><code>{⊑+´⊸∾⟜⊏⍟𝕩↕2}\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RmliIOKGkCB74oqRK8K04oq44oi+4p+c4oqP4o2f8J2VqeKGlTJ9CkZpYsKoIOKGlTIw\" rel=\"nofollow noreferrer\">Try it at BQN online REPL</a></p>\n<hr />\n<h1><a href=\"https://mlochbaum.github.io/BQN/index.html\" rel=\"nofollow noreferrer\">BQN</a>, 17 bytes</h1>\n<p>(recursive version)</p>\n<pre><code>{𝕩&gt;1?+´𝕊¨𝕩-1‿2;𝕩}\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RmliIOKGkCB78J2VqT4xPyvCtPCdlYrCqPCdlaktMeKAvzI78J2VqX0KRmliwqgg4oaVMjAK\" rel=\"nofollow noreferrer\">Try it at BQN online REPL</a></p>\n"},{"answer_id":239961,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/239961#239961","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.primes</code>, 22 bytes</h1>\n<pre><code>1e6 primes-upto stack.\n</code></pre>\n<p><a href=\"https://tio.run/##S0tMLskv@h8a7OnnbqWQm1iSoVdQlJmbWqxQUJRaUlIJ5OSVKFj/N0w1U4BI6JYWlOQrFJckJmfr/f8PAA\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>1e6 primes-upto</code> Get a list of primes up to a million</li>\n<li><code>stack.</code> Prettyprint each element of a sequence, one per line</li>\n</ul>\n"},{"answer_id":239947,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/239947#239947","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>k4'æ\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyIiLCIiLCJrNCfDpiIsIiIsIiJd\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>k4   # 1m\n  '  # 1...^ filtered by\n   æ # is prime?\n</code></pre>\n"},{"answer_id":238215,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/238215#238215","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>s</code>, 1 byte</h1>\n<pre><code>K\n</code></pre>\n<p><a href=\"https://vyxal.pythonanywhere.com/#WyJzIiwiIiwiSyIsIiIsIjciXQ==\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p><code>K∑</code> flagless. <code>K</code> just gets the divisors of a number.</p>\n"},{"answer_id":238214,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/238214#238214","body":"<h1>TI-Basic, 16 bytes</h1>\n<pre><code>sum(seq(Inot(fPart(Ans/I)),I,1,Ans\n</code></pre>\n<p>Takes input in <code>Ans</code>. Output is stored in <code>Ans</code> and displayed.</p>\n"},{"answer_id":238201,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/238201#238201","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 45 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sum(i for i in range(1,n+1)if n%i&lt;1)\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/PycxNyklUSHPqrg0VyNTIS2/SCFTITNPoSgxLz1Vw1AnT9tQMzNNIU8108ZQ8/9/AA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203899,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203899#203899","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, <s>27 24 22</s> 21 bytes</h1>\n<pre><code>&quot; &quot;/2':(2!&quot;/9@Z`z&quot;')_\n</code></pre>\n<p><a href=\"https://ngn.bitbucket.io/k#eJy9kk1Lw0AQhu/5FW8XIUlFCoUcTA7WQg+9e7LEZFPzRfPFJikbRX+771oUz1KyDLPDu8s8M8NkvoBYrW3fWS/E6n7zHL8J240sa/Dfbw7Tp/Iz6CBuT4ETZ7KsAh1MgXLDD2s4iMdEhMZh1nMhH7/R4D07+fUHDYbzkXfFA8G7Yt5xG/K2GpWacC77sm1Yw7ZCNWJUULQJ05lPKHv09C345WrkvV1DNki1rLsqXZC9r1FLozUpZWjGVDp0rCm90mgM+algQ7SoaYeIqfMyYf6QOorfZulZCFseMBg+0hw5dS7H/8oxZEcuk+XRvfVe7jSB8rJpHjz9N98XjjmwXw==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><code>&quot;/9@Z`z&quot;'</code> binary search in the given string</p>\n<p><code>2!</code> mod 2</p>\n<p><code>(2!&quot;/9@Z`z&quot;')_</code> drop non-alphanumeric chars</p>\n<p><code>2':</code> make a list of pairs of adjacent chars</p>\n<p><code>&quot; &quot;/</code> join with spaces</p>\n"},{"answer_id":211202,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/211202#211202","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 11 bytes</h1>\n<pre><code>B X_%2+1MEa\n</code></pre>\n<p><a href=\"https://tio.run/##K8gs@P/fSSEiXtVI29DXNfH///@JSckpqWnpAA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n<p>-2 from Dlosc.</p>\n"},{"answer_id":237051,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/237051#237051","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 10 bytes</h1>\n<pre><code>WV(UWa!*h)\n</code></pre>\n<p><a href=\"https://tio.run/##K8gs@P8/PEwjNDxRUStD8////4lJySmpaekA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>I love it when I can abuse built-in numbers for some other purpose.</p>\n<pre><code>WV(UWa!*h)\n     a      First command-line argument\n   UW       Unweave into a list of two strings, each containing every other character\n        h   100\n      !*    Logically negate each digit\n  (      )  Index into the list using each of those values\nWV          Weave the resulting list of three strings back together\n</code></pre>\n<p>For instance, if the input is <code>abcde</code>:</p>\n<pre><code>   UWa      [&quot;ace&quot;; &quot;bd&quot;]\n      !*h   [0; 1; 1]\n  (      )  [&quot;ace&quot;; &quot;bd&quot;; &quot;bd&quot;]\nWV          &quot;abbcdde&quot;\n</code></pre>\n"},{"answer_id":236982,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/236982#236982","body":"<h1>TI-Basic, 39 bytes</h1>\n<pre><code>For(I,2,1.5length(Ans),3\nsub(Ans,1,I)+sub(Ans,I,1-I+length(Ans\nEnd\n</code></pre>\n<p>Same as <a href=\"https://codegolf.stackexchange.com/questions/188988/ddoouubbllee-ssppeeaakk/235283#235283\">this answer</a> except for the first line. Input is taken in <code>Ans</code>. Output is stored in <code>Ans</code>.</p>\n"},{"answer_id":236948,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/236948#236948","body":"<h1><a href=\"https://www.gnu.org/software/gawk/manual/gawk.html\" rel=\"nofollow noreferrer\">GNU AWK</a>, 36 bytes</h1>\n<pre><code>BEGIN{RS=&quot;.|&quot;;ORS=e}$0=NR%2?RT:RT RT\n</code></pre>\n<pre><code>BEGIN{RS=&quot;.|&quot;;ORS=e}  This reads one character at a time,\n                      which can be retrieved by the RT variable.\n\n$0=NR%2?RT:RT RT      If NR=1 (mod 2), i.e., True, assigns &quot;RT&quot; to the output.\n                      Otherwise, assigns &quot;RT RT&quot;, which is RT concatenated to itself.\n                      This conditional simply doubles the even occurrences.\n</code></pre>\n<p><a href=\"https://tio.run/##SyzP/v/fydXd0686KNhWSa9GydofyEitVTGw9QtSNbIPCrEKClEICvn/PzEpOSUVAA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n"},{"answer_id":236946,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/236946#236946","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, 17 bytes</h1>\n<pre><code>irs[l!s[p:o0]po]&gt;\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/z@zqDg6R7E4usAq3yC2ID/W7v//xKTklFQA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p>This is pretty much a direct translation of the description of the challenge.  It reads in the all the input, then loops over the list printing each character once or twice.</p>\n<pre><code>ir                - read input as codepoints onto the stack, reverse the stack\n  s               - save a codepoint to the backup cell, just has to be non-zero\n   [           ]  - loop while the stack isn't empty\n    l!s           - load the backup cell, flip 1/0, save it back\n       [   0]p    - if/then, true for even numbered chars\n        p         - pop (delete) the if/then test boolean\n         :o       - duplicate top of stack and print as char\n              o   - print the top of stack as a char\n                &gt; - switch stacks to avoid auto-printing \n</code></pre>\n"},{"answer_id":236924,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/236924#236924","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, <s>5</s> 3 bytes</h1>\n<pre><code>3•y\n</code></pre>\n<p><a href=\"https://lyxal.pythonanywhere.com?flags=&amp;code=3%E2%80%A2y&amp;inputs=abcde&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<pre><code>3•  # Repeat each character three times\n  y # Get every other character\n</code></pre>\n"},{"answer_id":235554,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/235554#235554","body":"<h1>x86-16 machine code, 22 bytes</h1>\n<pre><code>00000000: 33c0 9992 d792 d7d7 3bc2 75f7 33c0 d792  3.......;.u.3...\n00000010: d73b c275 f9c3                           .;.u..\n</code></pre>\n<p>Listing:</p>\n<pre><code>33 C0       XOR  AX, AX         ; AL = 0, starting hare position\n99          CWD                 ; DL = 0, starting tortoise position\n        L1:\n92          XCHG AX, DX         ; swap t/h in AL\nD7          XLAT                ; tortoise crawl to next\n92          XCHG AX, DX         ; swap t/h in AL\nD7          XLAT                ; hare hops\nD7          XLAT                ; hare hops again \n3B C2       CMP  AX, DX         ; did they land on same element?\n75 F7       JNZ  L1             ; loop if not\n33 C0       XOR  AX, AX         ; start tortoise at beginning to find first index match\n        L2:\nD7          XLAT                ; tortoise crawls\n92          XCHG AX, DX         ; swap t/h in AL\nD7          XLAT                ; hare hops\n3B C2       CMP  AX, DX         ; did they land on same element?\n75 F9       JNZ  L2             ; loop if not\nC3          RET                 ; return to caller\n</code></pre>\n<p>The old Tortoise and Hare (cycle detection) algorithm... using as many 1 byte opcodes as possible.</p>\n<ul>\n<li>Time complexity: O(2n), linear</li>\n<li>Space complexity: O(1) (uses no additional  memory - all work done in CPU registers)</li>\n</ul>\n<p>As a callable function, input pointer to list at <code>[BX]</code>, output index in <code>AL</code>.</p>\n<p>Test results using DOS DEBUG:</p>\n<p><a href=\"https://i.stack.imgur.com/jPFi5.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/jPFi5.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":186083,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/186083#186083","body":"<h1>x86-16 machine code, IBM PC DOS, <del>39</del> <del>38</del> 32 bytes</h1>\n<pre><code>$ xxd pwas.com\n00000000: d1ee ac8a c8ac 8bd6 8bfe f2ae 574f 4f8a  ............WOO.\n00000010: 25a4 4e88 245e 41e2 efb8 2409 aacd 21c3  %.N.$^A...$...!.\n</code></pre>\n<p>Unassembled:</p>\n<pre><code>D1 EE       SHR  SI, 1              ; DOS PSP (80H) for command line input \nAC          LODSB                   ; get input length, SI at beginning \n8A C8       MOV  CL, AL             ; input length in CX \nAC          LODSB                   ; load a space (word delimiter) into AL \n8B D6       MOV  DX, SI             ; save pointer for later output \n        WORD_LOOP: \n8B FE       MOV  DI, SI             ; start DI at beginning \nF2 AE       REPNZ SCASB             ; search for next word delimiter \n57          PUSH DI                 ; save beginning of next word \n4F          DEC  DI                 ; DI will now point to the byte after the space \n4F          DEC  DI                 ;  so it's necessary to back up two chars \n8A 25       MOV  AH, BYTE PTR[DI]   ; move last letter to AH \nA4          MOVSB                   ; move first letter to last position \n4E          DEC  SI                 ; offset MOVSB incrementing SI \n88 24       MOV  BYTE PTR[SI], AH   ; move last letter to first position \n5E          POP  SI                 ; SI to beginning of next word \n41          INC  CX                 ; offset LOOP decrementing CX \nE2 EF       LOOP WORD_LOOP          ; loop if not end of input string \nB8 0924     MOV  AX, 0924H          ; AH = 9, AL = '$' \nAA          STOSB                   ; write DOS string delimiter to end \nCD 21       INT  21H                ; write to console \nC3          RET                     ; return to DOS\n</code></pre>\n<p>Standalone PC DOS executable.  Input via command line, output to console.</p>\n<p><a href=\"https://i.stack.imgur.com/fxyWa.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/fxyWa.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":236099,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/236099#236099","body":"<h1><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>S</code>, 7 bytes</h1>\n<pre><code>⌈ƛḣṫ∇p+\n</code></pre>\n<p><a href=\"https://lyxal.pythonanywhere.com?flags=S&amp;code=%E2%8C%88%C6%9B%E1%B8%A3%E1%B9%AB%E2%88%87p%2B&amp;inputs=hello%20world&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Two can play at the 7 bytes with S flag game.</p>\n<h2>Explained</h2>\n<pre><code>⌈ƛḣṫ∇p+\n⌈       # Split the input on spaces\n ƛ      # and to each item S:\n  ḣṫ    #   push S[0], S[1:-1], S[-1]\n   ∇    #  rotate the top three items to leave the stack as S[-1], S[0], S[1:-1]\n    p   #  prepend the middle of S to the head of S\n     +  #  and append that to the tail of S\n        # the -S flag joins the TOS on spaces\n</code></pre>\n"},{"answer_id":236098,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/236098#236098","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 60 bytes</h1>\n<pre><code>[ &quot; &quot;split [ 1 cut 1 short cut* spin 3append ] map &quot; &quot;join ]\n</code></pre>\n<p>This doesn't run on TIO (Try it Online) because <code>spin</code> postdates build 1525, the one TIO uses. Here's a screenshot of running it in build 1889, the official 0.98 release:</p>\n<p><a href=\"https://i.stack.imgur.com/IiSaz.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/IiSaz.png\" alt=\"A screenshot of running the above code in the Factor Listener (REPL)\" /></a></p>\n<h2>Explanation</h2>\n<p>It's a quotation (anonymous function) that takes a string from the data stack as input and leaves a string on the data stack as output. Assuming <code>&quot;in a green meadow&quot;</code> is on top of the data stack when this quotation is called...</p>\n<div class=\"s-table-container\">\n<table class=\"s-table\">\n<thead>\n<tr>\n<th style=\"text-align: center;\">Snippet</th>\n<th>Comment</th>\n<th>Data stack (the bottom is the top)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: center;\"><pre>&quot; &quot;split</pre></td>\n<td>Split a string into a sequence of space-delimited strings</td>\n<td><pre><code>{ &quot;in&quot; &quot;a&quot; &quot;green&quot; &quot;meadow&quot; }</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><pre>[ ... ] map</pre></td>\n<td>Apply a quotation to each element of a sequence, collecting the results in a new sequence of the same length</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"></td>\n<td>Inside the quotation during the first iteration of <code>map</code> now...</td>\n<td><pre><code>&quot;in&quot;</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><pre>1 cut</pre></td>\n<td>Split a string in two at index 1</td>\n<td><pre><code>&quot;i&quot;<br>&quot;n&quot;</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><pre>1 short</pre></td>\n<td>The minimum of 1 and the length of the sequence on top of the stack — prevents <code>cut*</code> from trying to cut at an invalid index</td>\n<td><pre><code>&quot;i&quot;<br>&quot;n&quot;<br>1</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><pre>cut*</pre></td>\n<td>Like <code>cut</code>, but works from the end of the sequence; not the start</td>\n<td><pre><code>&quot;i&quot;<br>&quot;&quot;<br>&quot;n&quot;</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><pre>spin</pre></td>\n<td>Swap the object on top of the data stack with the third object from the top of the data stack</td>\n<td><pre><code>&quot;n&quot;<br>&quot;&quot;<br>&quot;i&quot;</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><pre>3append</pre></td>\n<td>Append three sequences</td>\n<td><pre><code>&quot;ni&quot;</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"></td>\n<td>And so forth...</td>\n<td><pre><code>{ &quot;ni&quot; &quot;a&quot; &quot;nreeg&quot; &quot;weadom&quot; }</code></pre></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><pre>&quot; &quot;join</pre></td>\n<td>Join a sequence of strings into a single string separated by a space</td>\n<td><pre><code>&quot;ni a nreeg weadom&quot;</code></pre></td>\n</tr>\n</tbody>\n</table>\n</div>"},{"answer_id":236092,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/236092#236092","body":"<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">jq</a>, <s>73</s> 68 bytes</h1>\n<pre><code>./&quot; &quot;|map((length&lt;2//[./&quot;&quot;|.[-1],.[1:-1][],.[0]]|add?)//.)|join(&quot; &quot;)\n</code></pre>\n<p><a href=\"https://tio.run/##JY1BboMwEEX3nGLkbkAKpukyqtI7dAssRngAR8bj2kYoKb16XYeu/tPTzP@3r/StrVvjBeQJeI0Hlkk2AsS@oCtLQ3aK8/tb07TZil229bk/yfZ8ydk@6bXvd1Tqo2oaWe031rbM31WqfuBlB9GJrpTHSNUJqK9wiP@tbEQKGzqIM8GofYiAVoHBDIZiJB@ARyAcZtjYq2ImY/iJRhWR8tWAgULhPE8el0XbCdz6eBgKR9HAimBiMxbaAsLkiSwshIq34o538DjQgP6XXdRsQ6o//R8\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n<h2>How?</h2>\n<pre><code>  . / &quot; &quot;                             # Split on spaces\n| map(                                # For each word...\n    (\n         length&lt;2                     # If it's shorter than 2 letters, emit false\n      // [   . / &quot;&quot;                   # Otherwise, emit the word's characters\n           | .[-1], .[1:-1][], .[0]]  # ...in the order last, middle, first\n      | add?                          # Then re-join the characters into an updated word. If we don't have a list of characters, (if the original was too short), emit nothing\n    ) // .                            # If we didn't get a value, emit the word unchanged\n  )\n| join(&quot; &quot;)\n</code></pre>\n"},{"answer_id":236071,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/236071#236071","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <strike>46</strike> 44 bytes</h1>\n<pre><code>lambda n,a=5**.5:((.5+a/2)**n-(.5-a/2)**n)/a\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/PycxNyklUSFPJ9HWVEtLz9RKQ0PPVDtR30hTSytPF8jWhbI19RP//wcA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>Uses <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Binet%27s_formula\" rel=\"nofollow noreferrer\">Binet's formula</a> to derive the <code>nth</code> Fibonacci number.</p>\n<p><em><strong>Very</strong></em> wrong answer from me misreading the question:</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>g=lambda n:n+g(n-1)if n else n\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P902JzE3KSVRIc8qTztdI0/XUDMzTSFPITWnOFUh7/9/AA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":236088,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/236088#236088","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 15 bytes</h1>\n<pre><code>aR+XW{@a::a@va}\n</code></pre>\n<p>Takes the string as a command-line argument. <a href=\"https://replit.com/@dloscutoff/pip\" rel=\"nofollow noreferrer\">Try it here!</a> Or, here's a <strong>14-byte</strong> version in Pip Classic: <a href=\"https://tio.run/##K8gs@P8/MUg7Irw62CEx0aEssfb////F5YkFCiUZqQppmUXFJQqJeSkKOYlARk5qSUlqUbFCfppCokJ5flEKAA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>aR+XW{@a::a@va}\na                In the command-line argument,\n R               replace all matches of\n  +XW            the regex `\\w+`\n     {        }  with the following callback function:\n      @a          Take the first character of the matched string\n          a@v     and its -1th (last) character\n        ::        and swap them\n             a    Return the modified string\n</code></pre>\n"},{"answer_id":235723,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/235723#235723","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 30 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;x.find(z=&gt;(x[~z]+='0')[10])\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@7/C1q5CLy0zL0WjytZOoyK6ripW21bdQF0z2tAgVvO/NVdyfl5xfk6qXk5@ukaaRrSRjoIxGBnqKJjqKBjFamr@BwA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>No effort on bonus at all</p>\n"},{"answer_id":235677,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/235677#235677","body":"<h1>TI-Basic, 32 bytes</h1>\n<pre><code>Prompt A\nRepeat 2=Ans(I\nI+1→I\ncumSum(ʟA=ʟA(I\nEnd\nʟA(I\n</code></pre>\n<p>needs a fresh interpreter or <code>I</code> initialized to <code>0</code>. Will error if there is no duplicates</p>\n"},{"answer_id":235653,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/235653#235653","body":"<h1>TI-Basic, 39 bytes</h1>\n<pre><code>Prompt A\nʟA\nAns(1+sum(not(cumSum(seq(I≠1+sum(not(cumSum(Ans=Ans(I)))),I,1,dim(Ans\n</code></pre>\n<p>Output is stored in <code>Ans</code> and is displayed at the end. Throws an error if there are no duplicates.</p>\n"},{"answer_id":235631,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/235631#235631","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 13 bytes</h1>\n<pre><code>Tg@iNgHiUig@i\n</code></pre>\n<p>Takes the numbers as separate command-line arguments. <a href=\"https://replit.com/@dloscutoff/pip\" rel=\"nofollow noreferrer\">Try it here!</a> Or, here's a 15-byte equivalent in Pip Classic: <a href=\"https://tio.run/##K8gs@P8/JN0h0y/dwSZTWzsTyPz//7/Rf2MgNPxv@t8IAA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>               g is list of cmdline args; i is 0 (implicit)\nT              Loop till\n g@i           the i'th element of g (0-indexed)\n    N          is in\n     gHi       the first i elements of g:\n        Ui      Increment i\n          g@i  Return the i'th element of g\n</code></pre>\n<p>This outputs the first duplicate or, if there are no duplicates, the first number in the list (because the indexing wraps around).</p>\n"},{"answer_id":235629,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/235629#235629","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-æ</code></a>, 5 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>VaWbU\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LeY&amp;code=VmFXYlU&amp;input=WzIsIDMsIDMsIDEsIDUsIDJd\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":235628,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/235628#235628","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 21 bytes</h1>\n<pre><code>[ duplicates ?first ]\n</code></pre>\n<p><a href=\"https://tio.run/##HYwxCsJAEEX7nOKfQNhoIGqhndjYSCqxWNYJLC7rZmZSiOTs6yi/ee8Vf/RBX1yH6/ly2kFIBYVJ9V04ZsWTOFOyPs2UAwn2TfNBi7XNoTNazDfYGjlrnVH/b63Vnzss9YbHXFIMXu3hMEYWxb0qxyNWgpDIc/0C\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Returns <code>f</code> in case the input has no duplicates. This is idiomatic for Factor rather than <code>-1</code>. Let me know if that's not allowed and I can fix it (i.e. make it much longer).</p>\n<ul>\n<li><code>duplicates</code> Return only the elements that repeat in a sequence (in order).</li>\n<li><code>?first</code> Return the first element of a sequence or <code>f</code> if the sequence is empty.</li>\n</ul>\n"},{"answer_id":235141,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/235141#235141","body":"<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">jq</a> <code>-n</code>, <s>30</s> 28 bytes</h1>\n<p>-2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/90812/michael-chatiskatzi\">Michael Chatiskatzi</a>!</p>\n<p>Prints the infinite sequence.</p>\n<pre><code>[0,1]|while(1;[last,add])[1]\n</code></pre>\n<p><a href=\"https://tio.run/##yyr8/z/aQMcwtqY8IzMnVcPQOjonsbhEJzElJVYz2jD2//9/@QUlmfl5xf918wA\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n<p>Start with <code>[0,1]</code>.<br />\n<code>while(1; ... )</code> infinite loop, <code>1</code> is a truthy value.<br />\n<code>[last,add]</code> the new pair is the last value of the old pair and the sum of the old pair.<br />\n<code>while</code> returns all intermediate pairs, <code>[1]</code> gets the second element of each pair.</p>\n<hr />\n<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">jq</a>, <s>35</s> 33 bytes</h1>\n<p>A recursive filter written for <a href=\"https://codegolf.stackexchange.com/a/235138/64121\">this tip</a>.</p>\n<pre><code>def f:(.&lt;2//[.-1,.-2|f]|add?)//.;\n</code></pre>\n<p><a href=\"https://tio.run/##yyr8/z8lNU0hzUpDz8ZIXz9aT9dQR0/XqCYttiYxJcVeU19fz/p/UWJeeqqGoYFmTdr/f/kFJZn5ecX/dfOKAA\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n"},{"answer_id":233270,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/233270#233270","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 27 bytes</h1>\n<pre><code>[ [ real? ] filter minmax ]\n</code></pre>\n<p><a href=\"https://tio.run/##TYxBa8MwDIXv@RUPQW5jLEmzrd1hx7WXXcZOaQ/GVRozx05tFwYlvz1TS0MneEL63pNapZMP0/fX5vNjhdaHXqVk3AGRjyd2miOEdNf2GJNKJiajI344OLZ4y7JzBqkzCpSosECNZ7zgFeON18JKLMUvnmSZ8SUigNZsrScx7tb8iWr6x@aJCgKVokq0oOvdODVoEFjZd@zQGps4oDeuV7/YiUf5/gH5fusIQzAutZLSvh98ZLDS3fQH\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Integers are <code>object</code>s, <code>real</code>s, and <code>integer</code>s in Factor, so we can save a few bytes by using the shortest class predicate word to filter out the strings.</p>\n"},{"answer_id":216969,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/216969#216969","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 54 bytes</h1>\n<p>Another Python solution: the mandatory solution using <code>lambda</code> was missing :)</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda y:[f(e for e in y if e*0==0)for f in (min,max)]\n</code></pre>\n<p><a href=\"https://tio.run/##FYnBCoQgGAZf5bul8QdaBEvgk7QdjJSE1eKngz69a5cZmLnLc15pqtl868/G/bAoy@qFg78YDiGhIHi4Xhmj5Bv9G0UMiaLNcqs3h/SILFZNGAkTQc@Ejpm7Jq0ah7Y@m5T1Dw\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>-10 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/104303/aeh5040\">aeh5040</a></p>\n"},{"answer_id":216975,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/216975#216975","body":"<h1><a href=\"https://codeberg.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 19 bytes</h1>\n<pre><code>(&amp;/;|/)@\\:(`i=@:')#\n</code></pre>\n<p><a href=\"https://ngn.bitbucket.io/k#eJwVy0EKwjAUBNB9TzF8QRMItD/JtzWDkKWHcOHGglDwAh7en83AvGH2Fs4zf3PszxZen3tvl3iaph2KjIIKwxUrNhfzlnHzRReYQ1i5URfK430cX6HR4mBlZmFlEhOHnnRoEhWnPKKMqP6If5rFGXY=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<ul>\n<li><code>(`i=@:')#</code> filter input to only integers</li>\n<li><code>(&amp;/;|/)@\\:</code> apply min (<code>&amp;/</code>) and max (<code>|/</code>), returning a list</li>\n</ul>\n"},{"answer_id":232970,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/232970#232970","body":"<h1><a href=\"https://github.com/AMiller42/Grok-Language\" rel=\"nofollow noreferrer\">Grok</a>, 16 bytes</h1>\n<pre><code>1z1j\nwYZlYp2yp+9\n</code></pre>\n<p><a href=\"http://grok.pythonanywhere.com?flags=5&amp;code=1z1j%0AwYZlYp2yp%2B9&amp;inputs=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Prints an infinite, tab-separated sequence. (Tabs instead of spaces/newlines since they are golfier.) The <code>5</code> flag is just so it times out faster.</p>\n<p>Explanation:</p>\n<pre><code>1z           # Print the initial 1\n  1          # Push 1 to the stack\n   j         # Start the IP moving down\n   l         # Start the IP moving right\n    Yp       # Get the last number on the stack\n      2yp    # Get the number before that (initially 0)\n         +   # Add them together\nw         9  # Print a Tab\n YZ          # Print the next number without popping it\n</code></pre>\n"},{"answer_id":232939,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/232939#232939","body":"<h1><a href=\"https://docs.python.org/3.8/\" rel=\"nofollow noreferrer\">Python 3.8 (pre-release)</a>, 126 bytes</h1>\n<p>Neither short nor pretty, but possibly a new method!</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>from decimal import*\ndef f(n):l=n//4+1;p=10**l;getcontext().prec=n*l-l+1;return int(str(Decimal(p**2)/Decimal(p**2-p-1))[-l:])\n</code></pre>\n<p>Uses, for example:</p>\n<p><code>1/(1000000-1000-1) = 0.000 001 001 002 003 005 008 013 021 034 055 089 ...</code></p>\n<p><code>l</code> can be any upper bound for the number of digits of the Fibonacci number after the one we want.</p>\n<p><a href=\"https://tio.run/##XY7BCoMwEETvfkWO2dTUxPZQFG/9C/EgGlshbpZtCu3Xp4pQSg8zMPBmGHrHe8DThTilicMiRjfMS@/FvFDgqLLRTWKSCJVvsCjOB1tTY41Svr65OASM7hUlHInd0KDy2q8Eu/hkFDNG@Ygsr/ukJKVKKH6TJm0BWu2rDtIUWGwlwT3enLR5aaDKBPG2g/l2ArIv1Fpj8lW7me6fTB8\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":231624,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/231624#231624","body":"<h1 id=\"brachylog-10-bytes-pjnj\"><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 10 bytes</h1>\n<pre><code>1|¬0&amp;~×₂ṅ↰\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r/37Dm0BoDtbrD0x81NT3c2fqobcP///EWAA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h3 id=\"explanation-b3sh\">Explanation</h3>\n<p>A recursive solution:</p>\n<pre><code>1|          Either the input is 1 (base case), or...\n  ¬0        The input is not 0\n    &amp;       and\n     ~×₂    some integer times 2 equals the input\n        ṅ   Negate that integer\n         ↰  and call the predicate recursively\n</code></pre>\n"},{"answer_id":231597,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/231597#231597","body":"<h1 id=\"vyxal-r-6-bytes-n4ql\"><a href=\"https://github.com/Vyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>r</code>, 6 bytes</h1>\n<pre><code>ȧʀudec\n</code></pre>\n<p><a href=\"https://lyxal.pythonanywhere.com?flags=r&amp;code=%C8%A7%CA%80udec&amp;inputs=-2&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Very rude, I know, but it gets the job done.</p>\n<h2 id=\"explained-q561\">Explained</h2>\n<pre><code>ȧʀudec\nȧʀ     # range(0, abs(input) + 1)\n  ud   # -2 (-1 * 2). 2N would have worked just the same, but that wouldn't be as funny now would it.\n    e  # -2 ** the range (vectorises)\n     c # is input in ^\n</code></pre>\n"},{"answer_id":231596,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/231596#231596","body":"<p><strong>HP 28s 36 bytes</strong></p>\n<pre><code>WHILE DUP ABS 1 &gt; REPEAT 2 NEG / END 1 ==\n</code></pre>\n"},{"answer_id":231587,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/231587#231587","body":"<h1 id=\"python-3.8-pre-release-39-bytes-ucsy\"><a href=\"https://docs.python.org/3.8/\" rel=\"nofollow noreferrer\">Python 3.8 (pre-release)</a>, 39 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:len(x:=bin(n))&amp;1==x.count('1')\n</code></pre>\n<p><a href=\"https://tio.run/##DcZLCoAgEADQq8yqZqACCSoCT1It7GMN1ChiUKe33ur5Nx5O6s6HZPWYTnPNqwHpz03w6fXMgkKUKa2fanG3RMxVTskH/jswWBeAgQWCkX3DUjWFagnYgkWmidIH\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":231571,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/231571#231571","body":"<h1 id=\"pxem-53-bytes-filename-eqng\"><a href=\"https://esolangs.org/wiki/Pxem\" rel=\"nofollow noreferrer\">Pxem</a>, 53 bytes (filename).</h1>\n<p>Been a while since my last post of Pxem.</p>\n<p>Backslash followed by three digits of octet: a character whose codepoint is so:</p>\n<pre><code>._.c\\001.y\\001.r.-\\002.!XX.a.c\\003.x.c\\004.%.w.d.a\\004.$.c\\003.a\\001.z.d.aY.o\n</code></pre>\n<p><a href=\"https://tio.run/##fVdrV@JIE/7ur2gykXQDuTSiIjE6DLjKjqKi4@sl6AkQFIwJS4Kigf3r81Z3Eklm54znSPqpqq573579p59fUFkrU6RtIVpV0M72xqZFt7a2ymtf0Lcfl@io3kT1NjrodE476PKofokUEf3vtPP9ArXajdNO56BxeXyjo79a1wdNdHTQOVhzPUxwDtn9Jw@JIZX9p2XZcwZ7@TLRGcsbILnuIvk1mNFFMEVyw0fmnSbvdJF0Z7qFrrR4nNoTpBDdtwMk2zN99mL5z0jTymXdnk@8aYCOGw/142OjoePgfWKjRzvoe@4wn@eo7728WO6A7KkD@1V1Z46Dynt5ms/Hk8/ql0eGIOJYDsmTRAFnETFkn2JtGQ3kpZCY/dFuXT9cXDaNsqZtJMSz04vW9fHNQ5wOg@p3SBDDb/WLo4erg85F67RdAx2om8/zgDw08fzRPELFb5H07X@F7ZeZYwU28p@4qDcJYPjmTQf@xBkF@bzljCwfyY9IgjQXBfGrsJQMiX2lfL794/i4cdI0alw9ZqYGuv80GgY8qwPE5GJCVKovREAGosyy6@n2q@UgIYeGluPbwmIBJK6Iy84Xvj1Akq/O1XdV9@HnQ5X49A/UZbII@Hofis3FpaE3xY7Vsx1DAKM6CcFL7C0w16LeV7ZENazVdbGnt3XVdDk@A733imK6qqr36voyggqlZVGdqHoQ46qWgZRSUfVWeHsnAykFcTfFrmYg1TZFdZRib2TgDnAfUhB091dwazsDKQVpP@XoRgZSCqZfU@ytDKQahDlMeaJlINUgTDtleycDKa2I6jSlvJyBlIL4W4q9nYG0DMbmKXY1A2kZbL@n2DsZSMtg7COVJS0LwZaVcnwzAymFNAQp3ZUMpBrYekllZTsDqQa2Binl1QysQAWKKQim5RXcAG4uBcERMQXB0jqDSylaLgMSrQGV71xqeMi6d64PoFEP2RwTKyYxsemyX6VgElE1N8yySVWQ8lWlAG09T3a6SFXN0cVcqN69zd8/rEFXzYVtveeAwqX@DqtCRaqu3t3HXNZMoooGakaH7CIpNn93/7XUBbvgAb6LhuBC@StiLjzFMhEdKQVgcc8i6xDPhLspqiVG7YELUKYQUC70YVRXJ3rvHKiRWOkrKPgUHHwKDtRmIpgRSzhxHmpTXQwjc18RUw17AZdG9YQS1HlqxVwbOKZ7h@SPbmHAtAXTFAVC4vnpRsGqnGWB2IRXMgrOimYtwdva@adKhfsWnGdrkuTjCDLTrENe5nFxeWZXeYvycxhr4v@RK5EncdV/N1FK9tJUPdTRMN4vDcGkAgl5IPhu4rmjh77/OrSnwUsxJ67LXSZtUkx09TGSYe1ohrRkLhnrDJs05llpj/xZDwusHkKJzd6HsVCDzbnEzZJlbDAr/yfhpqj2prb1zAGUrY4Fx/MmyPUC9GIF/aeR@yiA6Ge4oL3I3MdE7YGTmBLC3cxxghYBEcA/CVjngAKQyFIgaz//atdPDgxJeVD6pqZR5Z3/ThUZvmUld32tWJyzocz5t6KsrytvykCxOBBjpsWnfTD6jeJJa43T9uVB@9JYW@tbvg2HHrcjoJGLcEEtLAqmqW1uF0h0xZFUxuAiEtxxdN32rf7aZDpyg@Hn3MVbH8l9BPyfQ2M4c/vByHNNpPvTviF9OzhstUN/ClcROBHtAVnC8TgUpDPcJOHF3XPpOyZdo6nDsFssxswDTMKpHcymLsoVQSAm/70iA3GPxuTvKzLTElMvM1RmRqYJ7xp3SNgxQITblWU9luzEAjPcIGEUpmDC37onlBox7xB3SrefuuFu5Yxce0/bF7WanLh0FBkQqc576543bhFaTBBIhoQi0i/mfzDzM9dITNbxSewOOlkIfSuAXLNr2yhAicUJhPv2NHJsnIPsEe8zaTAKgbJYzPA1MGKqi1ulq1Kz5JAQliOfEl4ZIKA7hmO7j8ETviI6u9rorV1HJzOMmwY47gdTfFUqFlslaOl/BR6EsN8sVqq1yiZZxtpHYPMMH67MPeCTUqN0W7oh4YkhKA811IalY6GB3R@9wF0MIrMf7Sl8J7NA0BsGzNVv4bLJPdC5k5Xt3UY@39jdrBK@GHWgNf4V7it3G5tdEfaRW6NSkRvx5Gi9ggiuRtNoBXLQMIyNMgkjEbgTByN3Zi9ZeploY7dSBZm9zW3CSJHxldlIM7kx8A1BDblS1Vmd9DN8W7hJAu0n2T7Dl6vw/YR6/VmWVyjAuHRFwpahcUNjg7copHvMmrI0luWuccWqwlCry4mtYrHL8bib5Hq6sghZxHyhkQIrdWLqbbUSfnFijs9L3EQOlhbLZw7QOW@DK@N8lwnGE6/iGe9/nLH3mxkfn9bZFG5dXnkQJN4/wTo0VvQXoD@zvQeeB2eYMRNOD1uQuKhv/2Zte4atfZhYtFjQtes4eH216AsGlcsFbO1qpMCqAt8kef/8qmwcr4HrODo8LjgEugFsCMo6HAwKdJpQQ7f2FK5Jo9eRD3udwJqAJd/aH@85@@N1p@asj2t8rMJYHUMtltFOCG4ZWhdqzl4Jv26kfSJIsWdDHD0kPkXijVtYePyQMaKjJjre4fYERw97rslT95ku@jMYDSQkIXlYTs4kuI2c4Txhb5nEiM2bMDroQmg43ojPxaJeLI53MdsaWbNBCqN0jmMIA6L/3jkWwcB2bHjZQdGghbnKlgGNDZvGLkwv0qiV@Ybf4hqLFPo72oqLEYaNWvcW1tszvKQROzbYi/aOnTL81TtjXe69sNccEKf/Ia5e4YMKktuVjMBigSfwsqzDS3U0KNnB6MUuTfqTWenV/9AH8CYli9QrvvLHV/wisEYOXEwrqSyzy3FYZTcUfg2SFhg0mKaLitHlWi7TynalurFVqZJFDxIG@YOjUkjChe3XEDFGIk7e7fXO4cNJ/Xqx4PMr2s4WUcsyLSNCkBTv1j2jh0SN7AGMT4qe3jMEYXnQbiaEpYQWc2v6CNG35igu3vynXP4/\" rel=\"nofollow noreferrer\" title=\"ksh – Try It Online\">Try it online!</a>\nThrough this problem I noticed a bug in my interpreter.\nMaybe I need to redesign the interpreter; shortening the code makes maintainance difficult.</p>\n<h2 id=\"usage-mah0\">Usage</h2>\n<ul>\n<li>As a string of decimal integer from stdin for input.</li>\n<li>Outputs a letter Y for truthy; nothing for falsey.</li>\n</ul>\n<h2 id=\"how-it-works-with-comments-hxuf\">How it works: with comments</h2>\n<pre><code>XX.z\n# push an integer of input\n.a._XX.z\n# NOTE Pxem does not have negative constants\n# So negative inputs must be changed to positive\n# and then get multiplied by two\n.a.c\\001.y\\001.r.-\\002.!XX.aXX.z\n# Pxem does not have log() nor something similar\n# Just keep dividing by four\n# And exit if it seemed not to be 4^n\n.a.c\\003.xXX.z\n  .a.c\\004.%.w.d.aXX.z\n  .a\\004.$XX.z\n.a.c\\003.aXX.z\n# final check for &lt;4\n.a\\001.z.d.aY.o\n</code></pre>\n"},{"answer_id":231141,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/231141#231141","body":"<h1 id=\"japt-11-bytes-9pql\"><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 11 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>kÈ¶sÃÍg[TJ]\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=a8i2c8PNZ1tUSl0&amp;input=WyIxIiwgIjIiLCAiMyIsICI0IiwgNV0\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>kÈ¶sÃÍg[TJ]     :Implicit input of array\nk               :Remove elements that return true\n È              :When passed through the following function as X\n  ¶             :  Is strictly equal to\n   s            :  X converted to a string\n    Ã           :End remove\n     Í          :Sort\n      g         :Get elements at 0-based indices\n       [TJ]     :  0 and -1 (last)\n</code></pre>\n"},{"answer_id":231133,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/231133#231133","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 7 bytes</h1>\n<pre><code>ℕˢ⟨⌋≡⌉⟩\n</code></pre>\n<p><a href=\"https://tio.run/##ATgAx/9icmFjaHlsb2cy///ihJXLouKfqOKMi@KJoeKMieKfqf//WzUsMTIsMywiaGkiLCIxNiIsMV3/WA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code> ˢ      Select the elements of the input list which...\nℕ       ...are integers &gt;= 0\n  ⟨   ⟩  Make a list containing...\n   ⌋     ...the minimum element...\n     ⌉   ...and the maximum element...\n    ≡   ...and return it unchanged\n</code></pre>\n"},{"answer_id":231131,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/231131#231131","body":"<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 6 bytes</h1>\n<pre><code>0+∩₍gG  # main program\n</code></pre>\n<pre><code>0+      # add 0 to each element of input if number, else append 0\n  ∩     # take the set intersection\n   ₍    # apply the following two operations on top of stack and wrap\n    gG  # min and max\n        # implicit output\n</code></pre>\n<p>It may be possible to take this down a byte if there is a command that only affects strings but not numbers. I couldn't find one after some basic searching, but its possible a single command exists that does that.</p>\n<p><a href=\"https://lyxal.pythonanywhere.com?flags=&amp;code=0%2B%E2%88%A9%E2%82%8DgG&amp;inputs=%5B5%2C%204%2C%202%2C%20%22Hello%22%2C%201%2C%2010%2C%20%2222%22%5D&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":230615,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/230615#230615","body":"<h1><a href=\"https://github.com/catseye/Mascarpone\" rel=\"nofollow noreferrer\">Mascarpone</a>, 25 bytes</h1>\n<pre><code>,['0.]v*1['1.]v*']&lt;[:,&gt;!]v*' &lt;:' &gt;,&lt;:,&gt;!\n</code></pre>\n<p><a href=\"https://tio.run/##y00sTk4sKsjPS/3/Xyda3UAvtkzLMFrdEESrx9pEW@nYKYKYCjZW6gp2OjYgPtf//9HmCkAYCwA\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>This program accepts strings similar to this one:</p>\n<pre><code>&quot;[2 8 1 6 4]&quot;\n</code></pre>\n<p>and prints either '1' or '0' to stdout, with no newline.</p>\n<h3>Explanation</h3>\n<pre><code>,['0.]v*1['1.]v*']&lt;[:,&gt;!]v*' &lt;:' &gt;,&lt;:,&gt;!\n,['0.]v*1                                    First we take and ignore the first input\n                                             character '[', and create an interpreter\n                                             for which the default operation is to print\n         ['1.]v*']&lt;                          '0'. Next we bind the operation &quot;print '1'&quot;\n                                             to the symbol ']' under this interpreter.   \n                   [:,&gt;!]v*                  Now we push an operation that takes a symbol\n                                             from stdin, extracts the operation associated\n                                             with that symbol from the interpreter on the\n                                             stack, and executes it.                     \n                           ' &lt;               We now bind this operation to the space\n                              :' &gt;           character.  Immediately, we extract the\n                                             operation back out of the interpreter, and\n                                  ,&lt;         bind it to the next symbol from stdin, which\n                                             is the first number in the list.  Finally, we\n                                    :,&gt;!     manually execute the function once, to begin\n                                             the cycle.  Now, the interpreter will continue\n                                             to take input until it receives a symbol that\n                                             is neither space nor the first number.  The\n                                             program will print '1' if that symbol is ']',\n                                             otherwise it will print '0'.\n</code></pre>\n<p>I wrote a solution in 36 characters, however the input/output format is inconvenient enough that I don't think it qualifies:</p>\n<pre><code>,[$.]v*1['1.]v*']&lt;[:,$,&gt;!]v*,&lt;:,$,&gt;!\n</code></pre>\n<p>It takes strings similar to this:</p>\n<pre><code>&quot;[2 8 1 6 4 ]&quot;\n</code></pre>\n<p>and prints '1' if the items are all equal, and '[' otherwise.</p>\n<p>As Mascarpone is character-set-agnostic (provided the set contains the 17 symbols used by the initial interpreter) and only 26 unique characters are needed for this program to succeed (the 17 original instructions, the space character, and the characters 2-9), we require only 5 bits per character.  By this logic, the solutions would be 25 bytes and 22.5 bytes in size, respectively.</p>\n"},{"answer_id":226305,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/226305#226305","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">Golfscript</a>, 4 bytes</h1>\n<pre><code>~.&amp;,\n</code></pre>\n<p>For the input: a set of numbers should be placed in '[]' without commas.</p>\n<p>For the output: 1 is a truthy value while integers greater than 1 are falsey.</p>\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPn/v05PTef//2gDBSiMBQA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h2>Explanation:</h2>\n<p>I hope this does not count as a 'trivial solution'... :)</p>\n<pre><code>~    # Evals the input to generate a list. \n .   # Duplicates the list. \n  &amp;  # Does setwise AND. Doing AND on two same lists will have the effect of removing duplicate elements. \n   , # Returns the length of the remaining list. \n</code></pre>\n"},{"answer_id":230241,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230241#230241","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell Core</a>, <s>37</s> 30 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)1..$a|%{$r+=$a%$_}\n$r\n</code></pre>\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNydFNzi9K/f@/ILEoMVdDJVHTUE9PJbFGtVqlSNtWJVFVJb6WS6Xo////hiYA\" rel=\"nofollow noreferrer\" title=\"PowerShell Core – Try It Online\">Try it online!</a></p>\n<p><em>-7 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/80745/mazzy\">@mazzy</a>!</em></p>\n"},{"answer_id":230061,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230061#230061","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, <s>15</s> 13 bytes</h1>\n<pre><code>ns,[:lf%f,]&amp;+\n</code></pre>\n<p><a href=\"https://tio.run/##y6n8/z@vWCfaKidNNU0nVk37/39DEwA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n<p><em>Thanks LyricLy for the tip that dropped 2 chars.</em></p>\n<p>This generates the modulo numbers on a stack, then sums them and relies on the default action to print the stack to show the answer.</p>\n<pre><code>ns,             # Read the N req from STDIN, stash it away, then decrement\n    [     ,]    # Loop to decrement the top of stack and exit then that's 0\n     :l         # Duplicate the top of stack, restore N from backup cell\n       f%f      # Flip top two stack enrtries, do modulo math, flip again\n             &amp;+ # Sum the stack\n                # Ends with one entry on the stack, which prints as a number\n</code></pre>\n"},{"answer_id":230062,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230062#230062","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a>, 30 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>;=x+=s=y 0P;W&gt;x=y+yT=s+s%x yOs\n</code></pre>\n<p><a href=\"https://tio.run/##rVhbU9tGFH62f8XiDJbWlhtJuDMZy7KHpJBhSiCBpHkANzWyDJoRskeSG2igfz095@yutGubtGnLg8Tunuu35yZHveso@vosyaJ0NYuHRTlLFj/cjJr6TppcGVtReb@M14jyJLs2tsrkVtDM4nmSxSxNWbrIrulRbb4/@fCGefXy/P0Z8@vlL/tnrF8vD09esRf18uwD82riw@Nzjfbkw7FG@uHkzf75z3bBmQ2P9p/ej7w62z8HpeIoupnmHV4R6zRgp2Ifjfr1ycnBRzzK4Ah9eYD/hkPzHMXTOfzzYKcph5VB8PL09Jgo4DEGrwbgiqb77LU4BNbKuN@n6Srm/CKb8GaTzIYbiKe34Vnr4PTQ/hqEd92wCO@Z@zb4OLoL77v378OiW@zesfvT4isHolbQhCtZTvMitjn70mwkWcmSoNmAXRLvsM58lUWwgwpYBOvydukUy@zCn4RfXMd9DJrAxkJBD28XiD/fJGlsgzlAaAurHNa6LC@zy/llzr48XkxsPnjW4qS0kcyZLY1nYcisZxZnQoTa3YHdywy2u12xA0oacVrE@sajVMzspJgl10mp2EENWug5lZHi3WGey7qsI03sdjnrMcu1QBaalHCWx@Uqz0SIPjABORsOWZ9XXiZFuvgc53YEYpU@9vDAlA0RrSJy7JPFpbvJFleS0HMA3bDaXjMCMwGMgOhhQJLNVksbL4NJjHoMVlyyCX2XllUrb1kCbaACUyvt7PlzBvkK/4MJy2lRsvImBpnTvARiCWhHIYQ3EaGShrIK0/XvrIKnx8UNaV5jFLkTsCVSvhar5RKh5Or@1Y4OrB4pAKgmEGWooFtmEHFQLTDGpKkChvcWG1PdGMiNQ9zAyjHAioHhrKKEio3wzcY0QFOnabqI7L7reBw9wm3TCSH0TAP@rVWZQJIVm4dsMvm2Wb9/8PLVb@92jn861ZwwJPibEnYMEa@Pzp/i3dvkFea@tirLj56wvG/ymiSPWFPyVYawBVSYoGgsClvVFIpCiK8yiRidXq3mF35/Io0Q4Lcp5yrtxRJ6Szm3gRS82k3TWUsl82gE2eigkHUBEJmVAFHhhX6Dbsi8PdNJ9BzjY8xaZb6KWxAX1T6GCezPp5CveNDKVmnaqiFAP9F1WZsRjE8vF4sUDq5MAJ50tfbqW/50vt8h3cqrdSvxzspF9r/aCJFYLtLU1k11mOtA1f0XJmcbJmOzerP/9sTBliXiDJZHF57ruhPqbLBUqyL5I/5UMnwFzTpCNW8RAVg5@PDpuRd6qvNh0cHmhy96@uK1BwSHR8cHHTaHehU0qsiW@rAURtOlk8YZNUoNK1t2FYEZ5NxTYKwzYiPAPjJf5FAzqeVCfxsSFgEU9gQPq2IQ3S7XboBASiZ1XUCYkgmqKT4nZXRjd2jOYOagARgx@Rdhr7D2rQFDLYIgREBxUIHCyNvklBQv5yMjZHlALa@moAGszLF90Ax2MeFf6jCDOYPKrVB8BopN2fk0m9m87d7N4a8mfAuEIFRAdB2XKQxTdpuuso0XhF1qlmQ8SOa2TdeJzTe6ydEUB8KUc3HLoRtsNRVeaJfSdyD0UXeiWiDxCJS5iJGsm7WVL2t3BH118qo@QU4d4YrmN6DBYIDwC5eLZZzZmmKnlbeoW4NV4a3oXRCOoe/2X9C@7O@2GArmYPoMnYKpCCLWwZEJyKF90wp1gGoVXTZssm5IYwcmLFByCTfIIV0ENUrohMzXx4YaxtqTd@BJfAcjEyb7hp87xqXTvLyDhWyD8HgjOkBLauKikf9kDeRMtiWOq8In@0/rZHV7BfMIdiCuWhB@DNRD3EY1VKzn9H1k7xbIaObCJjPACcOIrhcKKW/VpOoAu0s8zaTYpxqY7Fj6DaiGLlA4rVHAxIArlKCJ@zSgY@02nl70ekg6EZPmJY22DWXW7g@dAuyxYcWZSrVcM39VFur2q5gQ05cwqFsZRGUSyiVWZAwt7XrEQNswb1t8qCE1zNhMxZIv7hxHUEoGcQFEhduY5aHy0ufbQzWaluol50CvW8PE1f8oi8N86NC7lDVC@tXbiE4t2nFaNu0VTJ36dragsN6dt@DQ2cBB3Os2FG63uNYhmlAXQgzQgmyqkKF1Cd9NSBT0eiRPAkUdc/2iBaKlkf3PvwnM8@3A7H6TaXc706@EpuGQGOZpz9e9DCTsAvWQ9bwKZaIF6D3Is54HOebpxP53Ug@hPBq0YYikpHegdlwFOQHtj1yJtc9pWumEhH9zPSHoUOtSQ/J/rZZiHhmpFpqJNmZ6PA11ZJF1IH7bAGZBMGbG6EGbDtMSDGW4glNVcV@UFqTdCaGAaSaP/rvJo//B5JEyeWeLzaG0WZo8ftpkoXWLyXg8ZgaBX1H4qvbubLOzXlTuqaDVBVTmtevMQV@2lZWxzimjsOJ/@Cf8Mnw1MRV/YA10amNCWqcN64Q1j797BFZjUT0DI13DmIOrLCIalDgJDW4tw5ADKbrdik2Y/BHcEz9h6DOK4R3T255kOzIHPiTV@Mf@YE@D5bWYNkOtOXf12rU5XWdyZnWqXNgzZqFzAfSa0GC9WvrbquUer1qIX3H3afNveikahm@8iqiaG6tOqrdVHzxErV0P@yv1FhH/4pBeRNGVmQDaZ/F8ukpL8EwNJ0kGh8mMfn2YRmWcQyOJLBxXcIezJ75/UBjNp/K3rEf6Ar2dJpnN8ScN@gjBn7xtlxSbw/7jV6//Fw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p>Pretty straightforward.</p>\n<pre class=\"lang-php prettyprint-override\"><code># init x with input converted to number,\n# and sum and y to 0\n; = x + (= sum = y 0) PROMPT\n# for 1..x\n; WHILE (&gt; x (= y + y 1))\n    # sum += x % y\n    : = sum + s (% x y)\n: OUTPUT sum\n</code></pre>\n"},{"answer_id":230063,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230063#230063","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a> + <code>math.unicode</code>, 33 bytes</h1>\n<pre><code>[ dup [1,b) [ mod ] with map Σ ]\n</code></pre>\n<p><a href=\"https://tio.run/##S0tMLskv@h8a7OnnbqWQnVqUl5qjkJtYkqFXlJiXnloMZisUpxaWpuYlQ7l6pXmZyfkpqQoFRaklJZUFRZl5JQrWXFyGJv@jFVJKCxSiDXWSNBWiFXLzUxRiFcozgSbkJhYonFusEPs/OTEnR0HvPwA\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<ul>\n<li><p><code>dup</code> Duplicate the input.</p>\n<p><strong>Stack:</strong> (e.g.) <code>14 14</code></p>\n</li>\n<li><p><code>[1,b)</code> Make a range from <code>1</code> inclusive to <code>14</code> exclusive.</p>\n<p><strong>Stack:</strong> <code>14 { 1 2 ... 13 }</code></p>\n</li>\n<li><p><code>[ mod ] with map</code> Do <code>14 1 mod</code>, <code>14 2 mod</code>, <code>14 3 mod</code>, etc. and collect the results in a sequence the same length as the range.</p>\n<p><strong>Stack:</strong> <code>{ 0 0 2 2 4 2 0 6 5 4 3 2 1 }</code></p>\n</li>\n<li><p><code>Σ</code> Sum.</p>\n<p><strong>Stack:</strong> <code>31</code></p>\n</li>\n</ul>\n"},{"answer_id":230058,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230058#230058","body":"<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>ɽ%∑\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=&amp;code=%C9%BD%25%E2%88%91&amp;inputs=14&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>s</code>, 2 bytes</h1>\n<pre><code>ɽ%\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=s&amp;code=%C9%BD%25&amp;inputs=14&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":230056,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/230056#230056","body":"<h1>MMIX, 32 bytes (8 instrs)</h1>\n<pre><code>00000000: c1020000 e3010000 1cff0002 25020201  Ḋ£¡¡ẉ¢¡¡÷”¡£%££¢\n00000010: feff0006 200101ff 5b02fffc f8020000  “”¡© ¢¢”[£”‘ẏ£¡¡\n</code></pre>\n<pre><code>modsum  SET  $2,$0              // i = n\n        SET  $1,0               // s = 0\n0H      DIV  $255,$0,$2\n        SUB  $2,$2,1\n        GET  $255,rR\n        ADD  $1,$1,$255         // loop: s += n % i--\n        PBNZ $2,0B              // if(i) goto loop\n        POP  2,0                // return [s,n]\n</code></pre>\n"},{"answer_id":229573,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/229573#229573","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 14 bytes</h1>\n<pre><code>file-extension\n</code></pre>\n<p><a href=\"https://tio.run/##PU5BCsIwELz3FfsBl4A3vQgeREQR1IulhzWsJtgmbbLSgvj2mkZwD7Mzywyzd9Liw3g5bQ@bBViPLYlx1HCErofI3YudTuLJwXENbeDITpIRlkXR9e8C0hiLMkimmkLwgg03nHXt67x7Q4JoI6KYCe@2/hnwRtEEnflZqf3KzXd0vKJR/bqsTL7TI3WiUqr4QDlO0RkPwi5a78YKyv9bbbAJK9C@aX1kYNJm/AI\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":229569,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/229569#229569","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"nofollow noreferrer\">sed</a>, 14 bytes</h1>\n<pre><code>:l\ns/.\\././\ntl\n</code></pre>\n<p><a href=\"https://tio.run/##K05N0U3PK/3/3yqHq1hfL0ZPX0@fqyTn///cxMw8PSAoqAQA\" rel=\"nofollow noreferrer\" title=\"sed – Try It Online\">Try it online!</a></p>\n<p>Just repeatedly removes the character before a <code>.</code> until there's none left.</p>\n"},{"answer_id":223094,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223094#223094","body":"<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 2 bytes</h1>\n<pre><code>ÞF\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=5&amp;code=%C3%9EF%2C&amp;inputs=&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Before you go saying that the online link doesn't match the submission here, that's because the extra <code>,</code> is needed to actually make the output appear online. If you use the offline version, then you will see that the above works just fine. Also, the <code>5</code> flag makes sure that the online interpreter times out after 5 seconds.</p>\n<h2>Explained</h2>\n<pre><code>ÞF  # Push every Fibonacci number\n</code></pre>\n<p>And now for the non-trivial version</p>\n<h2><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a> <code>5</code>, 6 bytes</h2>\n<pre><code>⁽+dk≈Ḟ\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=5&amp;code=%E2%81%BD%2Bdk%E2%89%88%E1%B8%9E&amp;inputs=&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Once again, discrepancies between online link and actual version are for the purposes of making it work online.</p>\n<h3>Explained</h3>\n<pre><code>⁽+dk≈Ḟ\n⁽+d     # lambda x, y: x + y\n   k≈   # the list [0, 1]\n     Ḟ  # Create an infinite sequence based on the function and the initial list.\n</code></pre>\n<p>Fun fact: the infinite sequence function you see was inspired by the sequence blocks of the golfing language Arn by ZippyMagician.</p>\n"},{"answer_id":229368,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/229368#229368","body":"<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 4 bytes</h1>\n<pre><code>\\.€t\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?flags=&amp;code=%5C.%E2%82%ACt&amp;inputs=agent.000&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a> (<a href=\"http://lyxal.pythonanywhere.com?flags=&amp;code=%5C.%E2%82%ACt&amp;inputs=hi.txt%0Alol%0Acarrot.meme%0Awhat..is..this..file%0A.bashrc%0AT00M%40n3KaPZ.h0wC%5B%5Dh%0Aagent.000&amp;header=%40f%3A1%7C&amp;footer=%2C%3B%0A%0A%E2%96%A1%28n%20%40f%3B%29\" rel=\"nofollow noreferrer\">Test cases!</a>)</p>\n<p>Splits on spaces and outputs the tail.</p>\n"},{"answer_id":229366,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/229366#229366","body":"<h1>Python 3, 29 bytes</h1>\n<pre><code>print(input().split(&quot;.&quot;)[-1])\n</code></pre>\n"},{"answer_id":120947,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120947#120947","body":"<h1><a href=\"http://groovy-lang.org/\" rel=\"nofollow noreferrer\">Groovy</a>, 37 bytes</h1>\n<pre><code>{it.substring(it.lastIndexOf(&quot;.&quot;)+1)}\n</code></pre>\n<p><a href=\"https://tio.run/##Sy/Kzy@r/J@SmqaQqGCr8L86s0SvuDSpuKQoMy9dA8jJSSwu8cxLSa3wT9NQ0lPS1DbUrP1fAJQtUUjUUMpIzcnJ1yvPL8pJ0SupKFHS/A8A\" rel=\"nofollow noreferrer\" title=\"Groovy – Try It Online\">Try it online!</a></p>\n"},{"answer_id":120954,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120954#120954","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 21 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;f{f.split('.')[-1]}\n</code></pre>\n<p><a href=\"https://tio.run/##KypNqvyfaPtf1y6tOk2vuCAns0RDXU9dM1rXMLb2f0FpSbFGol5yYk6OhlJGak5Ovl55flFOil5JRYmSpuZ/AA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n<h1><strong>12 bytes</strong></h1>\n<pre class=\"lang-ruby prettyprint-override\"><code>File.extname\n</code></pre>\n"},{"answer_id":226125,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/226125#226125","body":"<h1><a href=\"https://github.com/knight-lang/knight-lang\" rel=\"nofollow noreferrer\">Knight</a>, <s>20</s> 19 bytes</h1>\n<pre><code>;=x=y 1W!Ox=y+x=x y\n</code></pre>\n<p><a href=\"https://tio.run/##rVltc9pIEv4Mv2IgZZCESCTZV7UFCCrJ2inXOXbWTi4fbC6WhbBVK4ROEn7ZxPvXc909LxrxkrvcbaqM0MzTPd3P9HT3kLB/G4bfX8RpmKxm0agoZ/Hy5d24qY8k8U1tKCyfsmgNlMfpbW2ojBccM4vmcRqxJGHJMr2lj6Ya/Xj66T1zq9eLj@fMq17/8fqcHVSvR6dv2S/V6/kn5lbgo5MLDXv66USDfjp9//ri70ZhMgM/OuxP92@mmn19AcvyyfAuyJllVgI6CmxVKsZjdlDNnR5@xskUJsmjbwy/j0ZrGFyGMOgmYJLERGAN8@bs7IRA@DEhJwfom2bI@TsOAHnN1vsgWUWmeZlOzWaT/IBduZz65@3DsyPj@9B/9J@Y@7l1Bs/eo//Inr6bMNMecrAF6ChYMB/Fhs0m6M6CvIgMk31tNuK0ZPGw2YBRWsdm1nyVhjBCwiG8l4vMLrL00pv6Xx3beQYdjRjUER6eDg68eoXq44w93MVlVGRBGDUb8D2JDBgHcYObYbP2VXmVXs2vcvb1@XJqmIMXbZNMacRzZihrfdZ90TUZVyFHWzB6lcJwr8dHwM5GlBSRPvDMzQnvovB3Nl/mLF0tbqK8EPYwIy5m8W1cSq2wOrrj2soj/rSY67Aes4TlvZ7J@qzrdGEJtDQ2WR6VqzxlMjK4GAXHcN2G@yCPg5skklaAEcnyIcqNENaThrBv35g0LqS3kIj40jUFPfEW12PftWGPfDW8Zh2eNRGTAElnq8zALWWC0z6Dt02D@ckvuDZuxlW3W9nU7vJNA2HwQBnFQAlkCvgOlmVBUbLyLgJlQV4CWGyAJRnFDQ1N9EQaqx2gncbCp2vSRjcqMsh8DN0yXqZgNkasMwXTQslIscoyJNyUUSVHdPr1@APaNbJRhwzlLIU4hqyFkSss56x87KqjzQeOcAAz2AAzF5opg4ySHnfVQLvR1CBJlqFx4NiuiQ7isHKCHExXSRLkT7qj1f6ca9vzoassowWF/Cpdk6YlXFxCJIVtnh6@eXv9W@vk1zPNX13rTbxVrbeptlXT@@74YofGMspJZZDO2L9WgXxFtff6EvubS3D/33UVFcdbqCDhg7pwHfNMmTJfpbhBQ5F4rXJZGDJVUvxDZJdxyGj2ZjW/9A6mwg6@zx3KDsqAIoNTVc4NgIL/e0kya8u0Q4XHRiXrCuBMKAW8pPH1a7gRc/frfqLzGIoT1i7zVdSGEFTjGJEwPg8ggeBEGwOrXZGAfqLvovYQHV/eLJcJzNzUGdjpa@XWjxyyft4j3cybDTMTtDH9S22EoC2XSWLoptrMsaFA/A8mpxsmYxF@//rDqY2lmAcavB5fuo7jQDiBK/Aq34r4j@hLyfAx1GJU8xYZgDcbPzz63PddWdExwWFRxwd9evyxD4Cj45NDi80hNw4bKrTFepiFwyCzkyilBkDjSrZGnDM4d7vIWBfE0oSVDeuNEVMrAaV4RFwMoabEOKnyRrjI1naASIqnVQpBmuIpLlM8xGV4Z1jAzEYnhRyFWJ8gYw6kqOj0csg4htlxHuf4D3eXIz8AEmzgNt5GZQINm9EhLjvIEFaoWZyaQ00fNZ9ljjUMHibVWK7tkGvjbRmeNWz9MOdLadxTkZkqG95U1nK8mnlbzaAk/gmNFeYaMMg17K6fLbMoNbSF7XbepjoMVvkLXoZgt33POfiFxkXlNni5n4PpM3QK@iMICBubJ4BDYaY3XAOWlptnwCDr@dRn4HkApCnIBD20FhGJGiyfeXpDUNFYefIbeBI9Qo@EZ2nDz1ZtT6nrbmGe2ACebGw@rJLUedHgv3YHognjceTrLKu8IvJ7@5R6TgMzvClT/Hh8YFZd20aykaIX1HkZewUK6gG/TRjohL5CXxfylNmuoHICk3cUpELtrgIhKoK@A@LkChbOKhYw7PmtAknj@1mjjnU6dFXp9xE65T3kFfWyDWnW3kurAHsMeDOZPEi5Zv6qLOTuq5jgjRQ3qKcMoiwE2QgTHoaWtj28VW3Ud5vf@xANTTWTseTxPcfmkg4D3wBC4TCmSl966ZnbQzUMSvkQLZ3bq2gy5XfUZUKrZ9OzFDlC@NXfiE4t2rEPrtvLhaxqd7awsF78tvBgbfDA93UbC4strlmE8XUlJAAZ3qAy43ev4AaFoGG/T/oEUVSQ1jeaM1rWTv@rHxLzajsxez8U2tsu9E9is@YQ78tpzNO9HAraOes@67uKZcIC9S6cs74LZ8zVwd5PokeQHmtY30corTuQI46knIj2xo7g2jOpGbB84r@5fiBoklyBDpwSLJYY@I4N@V2UR92CpUvoUOOkjFP2EDwBb2y2hAtfGd1GOchkyzRKyzjAHh1O8pI9ROwuuI8AKBQhvGSLIF1B@Dy9xFH07gYZByqIiWKVlHgjp8VVwpOQvo6RS65RpsspyJp61Lcb6ew2RMFGNZRDl98gwdr4BF6nsySasevK7Gul5St@422PtkjlzBiV9fvy3SR4Q0AtzfRnlQdHFKxrhQ@TXi0v@vWsOGH64R/pxwBFB@IXrQ7jgAmrtWE0aDMtG6IOh0vKkuvxOoDYlg/VRuuCxnAoMbSWs@WALaJFmGGYpWx8Pfl/XRn/Ba6MpSutLb74whfhymQ3@3zVLSbj9ITVAJ5CeLKAtrbZWb0o92Tm0RUo8zpV@kNfttWGiS4pUomS//bfyIscpKlR8sPuQEfX2tx1rF9l3fr0T18TZG9b3RMQ16jdFVQqJAxqnPo1aS1NogQiej0lxk3@DO7xn5T0RrPmHdN7FyF2XO/aEarJT7zBvkbLO35l8LUOq6cXoM17RyouHrY6C/u1hvaCE72mdLhe8rxtJW/fVH2Ap6QPaPA/NERoGD5xK0LV/Kt2SO@NPPAQV@252CRRg8Djn0/SgxA9cRJg9Vk0DyBJgmeyw4xTmIxn9BNNEJZQprp7YRd7Thwx2Y47IipTNRC6QXFNXwRxis0qC/Lb0CallgXf7038MYhuj/gfJIZD1tSvcc/f/w0\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p>-1 byte: <code>W1;Ox</code> -&gt; <code>W!Ox</code></p>\n<p>The &quot;print infinitely&quot; variant. (It will eventually overflow).</p>\n<p>It is a simple add and swap loop.</p>\n<p>Ungolfed:</p>\n<pre class=\"lang-php prettyprint-override\"><code># init x and y to 1\n; = x (= y 1)\n# loop forever\n# since OUTPUT evaluates to NULL, we\n# can just invert the condition \n: WHILE !(OUTPUT x) {\n    # Add and swap\n    : = y + x (= x y)\n}\n</code></pre>\n"},{"answer_id":229091,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/229091#229091","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 36 bytes</h1>\n<p>Infinitely outputs the fibonacci sequence. Also see <a href=\"https://codegolf.stackexchange.com/a/229027/88546\">@Razetime's answer</a> for a recursive version which outputs the nth number.</p>\n\n<pre class=\"lang-red prettyprint-override\"><code>a: b: 1\nforever[print a b: a + a: b]\n</code></pre>\n<p><a href=\"https://tio.run/##K0pN@R@UmhId@z/RSiHJSsGQKy2/KLUstSi6oCgzr0QhESSYqKCtAJKO/f8fAA\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n<h3><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 36 bytes</h3>\n<p>An alternative 36.</p>\n\n<pre class=\"lang-red prettyprint-override\"><code>a: 1 b: 0\nforever[print b: a + a: b]\n</code></pre>\n<p><a href=\"https://tio.run/##K0pN@R@UmhId@z/RSsFQIclKwYArLb8otSy1KLqgKDOvBCSUqKCtAJROiv3/HwA\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n"},{"answer_id":226737,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/226737#226737","body":"<h1><a href=\"http://clang.llvm.org/\" rel=\"nofollow noreferrer\">C (clang)</a>, <s>79</s> <s>70</s> <s>47</s> 46 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>y;z;main(x){for(;printf(&quot;%i &quot;,z=x+y);y=z)x=y;}\n</code></pre>\n<p><a href=\"https://tio.run/##S9ZNzknMS///v9K6yjo3MTNPo0KzOi2/SMO6oCgzryRNQ0k1U0FJp8q2QrtS07rStkqzwrbSuvb/fwA\" rel=\"nofollow noreferrer\" title=\"C (clang) – Try It Online\">Try it online!</a></p>\n<p>Uses a for-loop instead of a while-loop just because I use it more and doing <code>while()</code> gives the same byte count.</p>\n<p>Thanks to ceilingcat for golfing 9 bytes. Thanks to Jo King for golfing 23 bytes. Thanks to ceilingcat for golfing another byte.</p>\n"},{"answer_id":229027,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/229027#229027","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 47 bytes</h1>\n<pre><code>F: func[N][either N &lt; 2[n][(F N - 2)+ F N - 1]]\n</code></pre>\n<p><a href=\"https://tio.run/##K0pN@R@UmqIQHavw381KIa00LznaLzY6NbMkI7VIwU/BRsEoOi82WsMNyNZVMNLUVoCwDGNj/xcUZeaVAPmGXDCWEZxlDGeZ/AcA\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n<p>First red answer. Modified from the solution on <a href=\"https://www.scriptol.com/programming/fibonacci.php#rebol\" rel=\"nofollow noreferrer\">this page.</a></p>\n"},{"answer_id":220081,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/220081#220081","body":"<h1><a href=\"https://www.gnu.org/software/gawk/manual/gawk.html\" rel=\"nofollow noreferrer\">AWK</a>, <strike>52</strike> 54 bytes</h1>\n<pre><code>{gsub(&quot;\\\\W|_&quot;,a);for(b=$0;c=substr(b,++d,2);)$d=c}--NF\n</code></pre>\n<p><a href=\"https://tio.run/##SyzP/v@/Or24NElDKSYmvCZeSSdR0zotv0gjyVbFwDrZFihTXALk6Whrp@gYaVprqqTYJtfq6vq5/f/vqZ6rkJinkFqRmFuQk6oIAA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n<p><em>Fixed underscore rule goof (+2 chars), thanks to Pedro Maimere</em></p>\n<p>Here's what's going on with this one...</p>\n<pre><code>gsub(&quot;\\\\W&quot;,a)\n</code></pre>\n<p>Removes all the non-alphabetic characters from the input string since <code>$0</code> is the default target for <code>gsub</code>.  Using an unitialized variable <code>a</code> instead of <code>&quot;&quot;</code> saves a byte.</p>\n<p>Next the code loops through the string taking 2 character slices and assigns them to positional variables.</p>\n<pre><code>for(b=$0;\n</code></pre>\n<p>The setup has to save <code>$0</code> to another variable, since changing the positional variables impacts the collected input in <code>$0</code> as well.</p>\n<pre><code>c=substr(b,++d,2);\n</code></pre>\n<p>The &quot;test&quot; at the top of the loop does a couple of things in one statement:</p>\n<ul>\n<li>increments <code>d</code>, the &quot;current character&quot; pointer</li>\n<li>sets variable <code>c</code> to the next 2 character slices of the input</li>\n<li>the true/false test simple has the code looping until we run off the string and get a null</li>\n</ul>\n<p>The body of the loop sets the next positional variable to the slice we just took.</p>\n<pre><code>$d=c\n</code></pre>\n<p>After all the positional variables have been set, there's one &quot;garbage&quot; entry on the end with one character.  So the test:</p>\n<pre><code>--NF\n</code></pre>\n<p>effectively drops that last positional variable and triggers the default action, which prints all the positional variables separated by a space.</p>\n"},{"answer_id":71400,"question_id":62713,"link":"https://codegolf.stackexchange.com/questions/62713/biplex-an-important-useless-operator/71400#71400","body":"<h1>Jelly</h1>\n<p><strong>14 bytes</strong></p>\n<pre><code>BUSµḟ0Ṣ.ịe€@UḄ\n</code></pre>\n<p><a href=\"http://jelly.tryitonline.net/#code=QlVTwrXhuJ8w4bmiLuG7i2XigqxAVeG4hA&amp;input=&amp;args=WzIzNDExMDM5NDUgLDI5NjkxMTI1MDYgLDE4NDkwNzg5NDkgLDE0MzA2MzkxODld\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h3>How it works</h3>\n<pre><code>BUSµḟ0Ṣ.ịe€@UḄ    Main link. Input: A (list)\n\nB                 Convert each item in A to binary.\n U                Reverse each array of binary digits.\n  S               Add them across columns.\n\n   µ              Monadic chain. Argument: S (list of column sums)\n    ḟ0            Remove all occurrences of 0.\n      Ṣ           Sort the remaining sums.\n       .ị         Take the elements with indices around 0.5.\n                  Indices are 1-bases, so this selects the last and the first one.\n             U    Yield S, reversed.\n            @     Reverse the arguments.\n         e€       Test each item in the left list for membership in the right one.\n              Ḅ   Convert from binary to integer.                \n            \n</code></pre>\n"},{"answer_id":226430,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/226430#226430","body":"<h1><a href=\"https://sourceforge.net/projects/open-cobol/\" rel=\"nofollow noreferrer\">COBOL (GNU)</a>, 170 bytes</h1>\n<p>I am surprised at the lack of COBOL answers on this site. Well, it is ancient after all.</p>\n<p>This outputs the fibonacci sequence correctly up to 38 digits.</p>\n<pre class=\"lang-cobol prettyprint-override\"><code>PROGRAM-ID.H.DATA DIVISION.LOCAL-STORAGE SECTION.\n1 a PIC 9(38).\n1 b PIC 9(38).\nPROCEDURE DIVISION.G.COMPUTE a=0**b+b -a\nADD a TO b\nDISPLAY b(38- FUNCTION LOG10(b):)GO G.\n</code></pre>\n<p><a href=\"https://tio.run/##Tc2xDsIgFIXhvU9xR1sDaeOiJg4EEEloIUBNHKFpuzQ20fj6Yuui43@G73RznCc03l8pGauFJTWSDF8wI54Ak1fppG6w0pQo5Ly2RHBwnPp1zSoIYCSFw2a3z9eM/7l4lLPW8p8jMNW1aT2HcCqLIm4joJARxhbIa4gZk84ocoO4EAjObfN9AqVFVW5ifsyFBoFTenfDFMZnQsOj7z8\" rel=\"nofollow noreferrer\" title=\"COBOL (GNU) – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<p>We just need two variables, <code>a</code> and <code>b</code> to compute the whole fibonacci sequence. Here is pseudocode of what this would look like:</p>\n<pre class=\"lang-py prettyprint-override\"><code>a = 0\nb = 1\nloop {\n  a = b - a\n  b += a\n  print(a)\n}\n</code></pre>\n<p>Translating the pseudocode above in COBOL is relatively short and simple. But we see that variables in COBOL are set to <code>0</code> by default, and having one of them set to a <code>1</code> is kind of <sup>(8 bytes)</sup> long, so we hack it out like so:</p>\n<pre class=\"lang-py prettyprint-override\"><code>a = 0\nb = 0\nloop {\n  a = b - a + 0 ** b\n  b += a\n  print(b)\n}\n</code></pre>\n<p>The <code>0 ** b</code> ensures that <code>a = 1</code> on the first iteration. From then on, the logic is the same as in our first pseudocode implementation (since <code>0 ** (any number greater than 0) = 0</code>). The change from <code>print(a)</code> to <code>print(b)</code> is just to ensure that the numbers are outputted in the correct order.</p>\n<h3>Ungolfed</h3>\n<pre class=\"lang-cobol prettyprint-override\"><code>PROGRAM-ID. H.\n\nDATA DIVISION.\nLOCAL-STORAGE SECTION.\n1 a PIC 9(38).                     // Declare a variable named `a` (a = 0)\n1 b PIC 9(38).                     // Declare a variable named `b` (b = 0)\n\nPROCEDURE DIVISION.\nG.                                 // Define a label named `G`\nCOMPUTE a=0**b+b -a                // a = b - a + 0 ** b\nADD a TO b                         // b += a\nDISPLAY b(38- FUNCTION LOG10(b):)  // Print `b` without trailing zeros\nGO G.                              // Jump to the label named `G` (4 lines above)\n</code></pre>\n"},{"answer_id":226342,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/226342#226342","body":"<h1><a href=\"https://web.archive.org/web/20150618184706/http://compsoc.dur.ac.uk/whitespace/tutorial.php\" rel=\"nofollow noreferrer\">Whitespace</a>, 66 bytes</h1>\n<pre><code>[S S S N\n_Push_0][S N\nS _Duplicate_0][T   N\nT   T   _Read_STDIN_as_integer][T   T   T   _Retrieve_input][N\nS S N\n_Label_LOOP][S N\nS _Duplicate_first_input][S N\nS _Duplicate][S N\nS _Duplicate][T N\nT   T   _Read_STDIN_as_integer][T   T   T   _Retrieve_input][S N\nS _Duplicate][N\nT   T   S N\n_If_neg_Jump_to_Label_DONE][T   S S T   _Subtract][N\nT   S N\n_If_0_Jump_to_Label_LOOP][T N\nS T _Print_as_integer][N\nN\nN\n_Exit_program][N\nS S S N\n_Create_Label_DONE][T   N\nS T _Print_as_integer]\n</code></pre>\n<p>Letters <code>S</code> (space), <code>T</code> (tab), and <code>N</code> (new-line) added as highlighting only.<br />\n<code>[..._some_action]</code> added as explanation only.</p>\n<p>Takes the input-list new-line separated with -1 to indicate we're done with the inputs. Outputs <code>-1</code> as truthy, and the first input as falsey (+4 bytes to output <code>0</code> instead if this is not allowed).</p>\n<p><a href=\"https://tio.run/##K8/ILEktLkhMTv3/X0FBgQsIObk4QYALwoMgqBhIBERyKoBEgDRIBghAOkHs//@NuEy4jKBQ1xAA\" rel=\"nofollow noreferrer\"><strong>Try it online</strong></a> (with raw spaces, tabs and new-lines only).</p>\n<p><strong>Explanation in pseudo-code:</strong></p>\n<pre><code>Integer firstInput = STDIN as integer\nStart LOOP:\n  Integer next = STDIN as integer\n  If (next == -1):\n    Print next as integer to STDOUT\n    (Stop program with error: no exit defined)\n  If (firstInput == next):\n    Go to next iteration of LOOP\n  Else:\n    Print firstInput as integer to STDOUT\n    Stop program\n</code></pre>\n"},{"answer_id":224072,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224072#224072","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a> <code>-o extendedglob</code>, 8 bytes</h1>\n\n<pre class=\"lang-sh prettyprint-override\"><code>&gt;$@\n&lt;^$1\n</code></pre>\n<p><a href=\"https://tio.run/##qyrO@F@cWqKgm6@QWlGSmpeSmpKek5/EBRIzBMH/dioOXDZxKob/bWxsVOz/AwA\" rel=\"nofollow noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n<p>Outputs via exit code; <code>1</code> for all the same, <code>0</code> for not all the same</p>\n<ul>\n<li><code>&gt;$@</code>: create files according to the input. This de-duplicates elements because a file can only be created once</li>\n<li><code>^$1</code>: find a file that doesn't match the first element of the input (<code>-o extendedglob</code> is necessary to enable the <code>^</code> feature)</li>\n<li><code>&lt;</code>: and try to read from it. If there is no matching file (because all elements are the same) this will fail and exit with <code>1</code></li>\n</ul>\n"},{"answer_id":224007,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224007#224007","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>17</s> 15 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>sd(scan()+!1:2)\n</code></pre>\n<p><a href=\"https://tio.run/##K/r/vzhFozg5MU9DU1vR0MpI87/pfwA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Outputs <code>0</code> for truthy and nonzero for falsey.</p>\n<p>Using <code>sd</code> is a classic R golfing trick: the standard deviation is <code>0</code> if and only if all elements are equal. Unfortunately, <code>sd</code> returns <code>NA</code> for length one input (since it divides by <code>n-1</code>). A neat workaround found by <a href=\"https://codegolf.stackexchange.com/users/55372/pajonk\">pajonk</a> uses R's recycling: <code>!1:2</code> is coerced to a vector <code>c(0,0)</code> and is added to the input vector. A length-one input is recycled to be length 2 (so the <code>sd</code> is guaranteed to be <code>0</code>), and for input of length more than <code>1</code>, the zeros are recycled to the length of the longer vector, which won't change the standard deviation.</p>\n\n<pre class=\"lang-r prettyprint-override\"><code>sd(rep(scan(),2))\n</code></pre>\n<p><a href=\"https://tio.run/##K/r/vzhFoyi1QKM4OTFPQ1PHSFPzv@l/AA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":225084,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/225084#225084","body":"<h1>MMIX, 36 bytes (9 instrs)</h1>\n<p>Takes array of bytes and length as two arguments, C conventions</p>\n<pre><code>00000000: 83020000 27010101 82ff0001 32ffff02  ³£¡¡'¢¢¢²”¡¢2””£\n00000010: 52ff0002 f8000000 5b01fffb e3000001  R”¡£ẏ¡¡¡[¢”»ẉ¡¡¢\n00000020: f8010000                             ẏ¢¡¡\n</code></pre>\n<p>Disassembly and explanation:</p>\n<pre><code>alleq   LDBU $2,$0,0        // x = *a\n0H      SUBU $1,$1,1\n        LDBU $255,$0,$1     // loop: t = a[--l]\n        CMPU $255,$255,$2\n        PBZ  $255,0F        // iflikely(t == x) goto skp\n        POP  0,0            // return 0 (abuses how POP works)\n0H      PBNZ $1,0B          // skp: iflikely(l) goto loop\n        SETL $0,1\n        POP  1,0            // return 1\n</code></pre>\n"},{"answer_id":225082,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/225082#225082","body":"<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 19 bytes</h1>\n<pre><code>v(s)=gcd(s)==lcm(s)\n</code></pre>\n<p><a href=\"https://tio.run/##K0gsytRNL/j/v0yjWNM2PTkFRNnmJOcCaZBgtKGOAjqK1eSCSBjpKBjrKJhA@GY6CpY6ClASKgShzHUUzCEsE7Aeg1hNAA\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224916,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/224916#224916","body":"<h1>MMIX, 28 bytes (7 instrs)</h1>\n<p>(jelly xxd)</p>\n<pre><code>00000000: e3020000 7aff0001 c60202ff 3f000001  ẉ£¡¡z”¡¢İ££”?¡¡¢\n00000010: 37010101 5b00fffc f8030000           7¢¢¢[¡”‘ẏ¤¡¡\n</code></pre>\n<p>Disassembly:</p>\n<pre><code>clmul   SETL $2,0       // r = 0\n0H      ZSOD $255,$0,$1 // loop: t = a odd? b : 0\n        XOR  $2,$2,$255 // r ^= t\n        SRU  $0,$0,1    // a &gt;&gt;= 1\n        SLU  $1,$1,1    // b &lt;&lt;= 1\n        PBNZ $0,0B      // iflikely(a) goto loop\n        POP  3,0        // return r\n</code></pre>\n<p>You could get a 128-bit answer out of this with about three more instructions, I think.</p>\n"},{"answer_id":224855,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/224855#224855","body":"<h1><a href=\"https://github.com/ZippyMagician/Arn\" rel=\"nofollow noreferrer\">Arn</a>, <a href=\"https://github.com/ZippyMagician/Arn/wiki/Carn\" rel=\"nofollow noreferrer\"><s>13</s> 12 bytes</a></h1>\n<p>Version: <strong>1.1.5</strong></p>\n<pre><code>Iõå)n├┼U■¨Mõ\n</code></pre>\n<h1>Explained</h1>\n<p>Unpacked: <code>z&amp;:}+\\$.:&lt;:_&amp;:-</code></p>\n<pre><code>z&amp;               Zip array with itself, bind to the following\n  :_             Flatten\n    :&lt;           Sort ascending\n      $.         Split in half\n        :}+\\     Fold with `:}+`.\n            &amp;:-  Bind the half symbol to the expression\n</code></pre>\n<p>How <code>:}+\\</code> works: Takes the last element of the first array and adds to the second array, which is casted to the first element of that array automatically (finally, that feature actually is useful!).</p>\n<p>Where a symbol needs to take a value but none is provided, <code>_</code> is inserted, the implied variable. Ungolfed this looks like</p>\n<pre><code>( _ z _ ) &amp; ( :}+\\ ( $. ( :&lt; ( _ :_ ) ) ) ) &amp; ( :- _ )\n</code></pre>\n<h1>Arn, the boring way, 3 bytes</h1>\n<pre><code>med\n</code></pre>\n<p>Built in function, can't be compressed.</p>\n"},{"answer_id":224788,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224788#224788","body":"<h1><a href=\"https://github.com/JohnEarnest/ok\" rel=\"nofollow noreferrer\">K (oK)</a>, 4 bytes</h1>\n<p><strong>Solution:</strong></p>\n<pre><code>1=#?\n</code></pre>\n<p><a href=\"https://tio.run/##y9bNz/7/P83K0FbZ/n@ag7qGoQIStDZUMFIwVjCxNlOwVABjax0za3MFc2sToISB5n8A\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n<p><strong>Explanation:</strong></p>\n<p>Is the count of the unique items equal to 1?</p>\n<pre><code>1=#? / the solution\n   ? / unique\n  #  / count\n1=   / equal to 1?\n</code></pre>\n"},{"answer_id":224462,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/224462#224462","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 20 bytes</h1>\n<pre><code>{2÷˜(≠𝕩)⊑»+˝˘2↕2/∧𝕩}\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=TWVkaWFu4oaQezLDt8ucKOKJoPCdlakp4oqRwrsry53LmDLihpUyL+KIp/Cdlal9Ck1lZGlhbsKo4p+oIOKfqDEsNCwzLDLin6kK4p+oMSwyLDMsNCw1LDYsNyw4LDnin6kK4p+oMS41LDEuNSwxLjUsMS41LDEuNSwxLjUsMS41LDEuNSwxLjUsLTUsMTAwMDAwLDEuMywxLjTin6kK4p+oMS41LDEuNSwxLjUsMS41LDEuNSwxLjUsMS41LDEuNSwxLjUsMS41LC01LDEwMDAwMCwxLjMsMS404p+pCuKfqQ==\" rel=\"nofollow noreferrer\">Try it!</a></p>\n"},{"answer_id":224432,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224432#224432","body":"<h1><a href=\"https://github.com/absoluteAquarian/CSASM/releases/tag/v2.4.0.2\" rel=\"nofollow noreferrer\">CSASM v2.4.0.2</a>, 57 bytes</h1>\n<p>Pops an <code>~arr:i32</code> from the stack, then pushes <code>true</code> (all elements are the same) or <code>false</code> (some elements are different).</p>\n<pre><code>func a:\ndup\nlen\nswap\nnewset\nconv ~arr\nlen\ncomp.gt\npush $f.o\nret\nend\n</code></pre>\n<p><strong>Explanation + Full Program:</strong></p>\n<pre><code>.asm_name AllSame\n\nfunc main:\n    .local i : ~arr:i32,5\n    .local j : ~arr:i32,5\n\n    ; Initialize the arrays\n    ; i = [ 1, 1, 1, 1, 1 ]\n    push i\n    push 1\n    stelem 0\n\n    push i\n    push 1\n    stelem 1\n\n    push i\n    push 1\n    stelem 2\n\n    push i\n    push 1\n    stelem 3\n\n    push i\n    push 1\n    stelem 4\n\n    ; j = [ 1, 2, 3, 4, 5 ]\n    push [1..5]\n    conv ~arr\n    pop j\n\n    clf.o\n\n    ; Get the first result\n    push i\n    call a\n\n    ; Print it\n    push &quot;Is 'i' all same? &quot;\n    swap\n    add\n    print.n\n\n    clf.o\n\n    ; Get the second result\n    push j\n    call a\n\n    ; Print it\n    push &quot;Is 'j' all same? &quot;\n    swap\n    add\n    print.n\n\n    ret\nend\n\nfunc a:\n    dup\n    ; [ array, array ]\n    len\n    ; [ array, length ]\n    swap\n    ; [ length, array ]\n    newset\n    ; [ length, set ]\n    conv ~arr\n    ; [ length, set elements ]\n    len\n    ; [ length, element count ]\n    comp.gt\n    ; If &quot;length&quot; is greater than &quot;element count&quot;, then the set had duplicate\n    ;   entries which were removed\n\n    ; Push the comparison flag\n    push $f.o\n    ret\nend\n<span class=\"math-container\">```</span>\n</code></pre>\n"},{"answer_id":224362,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224362#224362","body":"<h2>x86-16 machine code, 6 bytes</h2>\n<p>Hexdump:</p>\n<pre><code>0000:0000  89 F7 AC F3 AE C3                                ......\n</code></pre>\n<h2>Explanation</h2>\n<pre><code>                                   ; Routine A. [All The Same?]\n                                   ; Expects CX = Length of input,\n                                   ;         SI = Initial address of list.\n\n0000:0000  89F7        MOV DI, SI  ; A1 [Load]. Set DI to SI.\n0000:0002  AC          LODSB       ;            AL = [SI++].\n0000:0003  F3AE        REPZ SCASB  ; A2 [Compare].\n                                   ;       ZF = 1\n                                   ;       Loop CX times:\n                                   ;           If AX != [DI]:\n                                   ;               ZF = 0\n                                   ;               Proceed to A3\n                                   ;           DI ++\n0000:0105  C3          RET         ; A3 [End]. End of algorithm.\n                                   ;           ZF = 0 if not all same.\n                                   ;           ZF = 1 if all same. █\n</code></pre>\n"},{"answer_id":224348,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224348#224348","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 2 bytes</h1>\n<p><em>And thanks to Razetime for some other 2-byters</em></p>\n<p>(the 1-byte <a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a> built-in is <code>E</code> (<code>same</code>))</p>\n<pre><code>hg\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/PyP9////0cY6EGgAImMB\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<p>Returns truthy (nonempty list) if all elements are not the same, falsy (empty list) if they're all the same.  Collects <code>g</code>roups of equal values and returns the <code>h</code>ead by discarding the last group.</p>\n<p>(Other 2-byters with various truthy/falsy &amp; falsy/truthy return values: <a href=\"https://tio.run/##yygtzv7//3C35////6ONdSDQAETGAgA\" rel=\"nofollow noreferrer\">ËI</a>, <a href=\"https://tio.run/##yygtzv7//3C37f///6ONdSDQAETGAgA\" rel=\"nofollow noreferrer\">Ë=</a>, <a href=\"https://tio.run/##yygtzv7/X/lR54L///9HG@uAoAGYNI4FAA\" rel=\"nofollow noreferrer\">#≠</a>, and some 3-byters: <a href=\"https://tio.run/##yygtzv7//9yCh7u6bP///x9trAOBBiAyFgA\" rel=\"nofollow noreferrer\">ΠẊ=</a>, <a href=\"https://tio.run/##yygtzv7/PyPb9v///9HGOhBoACJjAQ\" rel=\"nofollow noreferrer\">hk=</a>, <a href=\"https://tio.run/##yygtzv7/P@PIQtv///9HG@uAoAGYNI4FAA\" rel=\"nofollow noreferrer\">hġ=</a>, <a href=\"https://tio.run/##yygtzv7/P@PwHtv///9HG@uAoAGYNI4FAA\" rel=\"nofollow noreferrer\">hü=</a>)</p>\n"},{"answer_id":224300,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224300#224300","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 5 bytes</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>×/⊢=⊃\n×/ ⍝ product reduce\n  ⊢=⊃ ⍝ three train, each element equal to first element\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24TD0/UfdS2yfdTVDOQrGCoYKRgrmHCBWGAIAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":93,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/93#93","body":"<h2>Brainfuck, 22 bytes</h2>\n<pre><code>+&gt;++[-&lt;&lt;[-&gt;+&gt;+&lt;&lt;]&gt;&gt;&gt;+]\n</code></pre>\n<p>Generates the Fibonacci sequence gradually moving across the memory tape.</p>\n"},{"answer_id":89,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/89#89","body":"<h2>Haskell, <s>17</s> <s>15</s> 14 bytes</h2>\n<pre><code>f=1:scanl(+)1f\n</code></pre>\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P83W0Ko4OTEvR0Nb0zDtf25iZp6CrUJBUWZeiYJGSWJ2qoKhgYGCikKa5n8A\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224051,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224051#224051","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>35</s> 32 bytes</h1>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(int*l){l=~l[1]&amp;&amp;*l-*++l+f(l);}\n</code></pre>\n<p><a href=\"https://tio.run/##ZU/NToQwGLz3KSY1u4FSDH/rRhG8@QTeWA4NP9qkggHWC8FXRwqakmzSNNOZ@eabFu57UcxzbclmYMoeVfKjMj8/HplymeMop7aUHU/znWwKdS0rPPdDKdv7j5QsExBeliejz3FzXH@KN4v/Zwk4Qo5opwRaeeB45Pi/jRhuoiEiTZw5zjvupLlozfY2mpDvVpYYqn5Y/4RSDMIeCb665VnDohmoHRPUbQftAJOJ9sRMpokXO460CYz7UIJyJvUEdiE53BSHHpfm0lBeW@uWF/rWXSv6RF@F6iu9ZVprfgrZWDaWEmst4em0DfoGBgaGBkYGnjQk0/wL\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<ul>\n<li>recursive function taking an array -1 ended</li>\n<li>return False if all elements are equal, True otherwise</li>\n</ul>\n<pre>\n{l=      - return using eax trick\n~l[1]&&  - return False if next item is end and skip next part ending recursion \n*l-*++l  - 0 if different \n+f(l);}  - plus check next item \n</pre>\n"},{"answer_id":224150,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224150#224150","body":"<h1>Ruby, 17 bytes</h1>\n<pre><code>f=-&gt;a{!a.uniq[1]}\n</code></pre>\n<p>Explanation: <code>a.uniq</code> is an array with unique elements of a. If all elements are the same, its second element <code>[1]</code> will be <code>nil</code>, and <code>!nil</code> is <code>true</code>.</p>\n<p>Older answer was more readable:</p>\n<pre><code>f=-&gt;a{a.uniq.size==1}\n</code></pre>\n"},{"answer_id":224124,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224124#224124","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"nofollow noreferrer\">brainfuck</a>, 40 bytes</h1>\n<p>Works for all characters, not just 0 to 9! (except NUL)</p>\n<p>Returns zero for true and non-zero for false.</p>\n<pre><code>,[&gt;,]&lt;[-&gt;+&lt;]&lt;[[-&gt;+&gt;-&lt;&lt;]&gt;&gt;[&lt;[-]&gt;&gt;&gt;]&lt;&lt;&lt;]&gt;.\n</code></pre>\n<p><a href=\"https://tio.run/##SypKzMxLK03O/v9fJ9pOJ9YmWtdO2wZIgWg7XRubWDu7aKAgkLKLtQFx9f7/NwYCQwA\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224098,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224098#224098","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 13 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>$_=/^(.)\\1*$/\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/18l3lY/TkNPM8ZQS0X//39DCOAyMTUzNDI2NDUz4TIyhEEuIzAwMzLiMgWBf/kFJZn5ecX/dQtyAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>Since the input is all single digit numbers, this wants the input without spaces.</p>\n"},{"answer_id":224095,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/224095#224095","body":"<h1><a href=\"https://github.com/wmww/Pinecone\" rel=\"nofollow noreferrer\">Pinecone</a>, 35 bytes</h1>\n<pre><code>b:0;a:1;tru@(print:a;t:a;a:a+b;b:t)\n</code></pre>\n<p>Competitive Pinecone answer!</p>\n"},{"answer_id":224083,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224083#224083","body":"<h1><a href=\"https://racket-lang.org/\" rel=\"nofollow noreferrer\">Racket</a>, <s>37</s> 18 bytes</h1>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>(λ(x)(apply = x))\n</code></pre>\n<p><a href=\"https://tio.run/##K0pMzk4t@a@ck5iXrlAE5nBppKSmZealKqT91zi3W6NCUyOxoCCnUsFWoUJT878ml0aagkZOZnGJgiEq1ESRMlIwVjBBFjJTsIRgZEFzBXNkrglQmwHQEgA\" rel=\"nofollow noreferrer\" title=\"Racket – Try It Online\">Try it online!</a></p>\n<p>-19 thanks to Wezl</p>\n<p>This takes advantages of the fact that <code>=</code> in Racket can take any number of arguments. Note that the tio seems to run an old version that requires at least 2 arguments to <code>=</code> and so fails on the singleton list, but this works on my local Racket 8 installation.</p>\n"},{"answer_id":224076,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224076#224076","body":"<h1><a href=\"http://www.scala-lang.org/\" rel=\"nofollow noreferrer\">Scala</a>, 14 bytes</h1>\n\n<pre class=\"lang-scala prettyprint-override\"><code>_.toSet.size&lt;2\n</code></pre>\n<p><a href=\"https://tio.run/##K05OzEn8n5@UlZpcouCbmJmnkFpRkpqXUqzgWFCgUM1VlpijkGal4JNZXBLtmVcSq2Brp@CUn5@TmpinYPs/Xq8kPzi1RK84syrVxuh/QVFmXklOnkaaBki9hqGOAghpampyYcoYYREGCdX@BwA\" rel=\"nofollow noreferrer\" title=\"Scala – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224075,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224075#224075","body":"<h1>Excel, 18 bytes</h1>\n<pre><code>=MAX(A:A)=MIN(A:A)\n</code></pre>\n<p>Input is in column A. The formula can be input anywhere not in column A.</p>\n"},{"answer_id":224016,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224016#224016","body":"<h1>JavaScript (non-trivial), <s>22</s> 21 bytes</h1>\n<p><em>Thanks to @l4m2 for -1</em></p>\n<pre class=\"lang-js prettyprint-override\"><code>d=&gt;!d.some(x=&gt;x-d[0])\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNEts/hfllikkG77P8XWTjFFrzg/N1WjwtauQtE2JdogVvN/QVFmXolGuka0oY4COorV1ORCljfSUTDWUTBBETbTUbDUUYCSqDIoPHMdBXMUAROweUAnaP4HAA\" rel=\"nofollow noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n<p>This one's different from the <code>new Set</code> approach because it returns an actual truthy/falsy value. Although it's not as short (by just 4B, surprisingly), it's what you'd probably use if you needed this in real life, so it's definitely worth having here.</p>\n<p>You could make it a byte shorter by removing the <code>!</code>, but then it returns <code>false</code> if all items are the same and <code>true</code> otherwise.</p>\n"},{"answer_id":224069,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224069#224069","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 7 bytes</h1>\n<pre><code>D`.\n^.$\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7w3yVBjytOT@X/f0MI4DI0MjbhMrMEQi4zLnNzLhMjAy4A\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Takes input as a string of digits. Explanation:</p>\n<pre><code>D`.\n</code></pre>\n<p>Remove duplicate digits.</p>\n<pre><code>^.$\n</code></pre>\n<p>Check that only one digit is left.</p>\n"},{"answer_id":224068,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224068#224068","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 5 bytes</h1>\n<pre><code>⁼⌊θ⌈θ\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMO1sDQxp1jDNzMvM7c0V6NQU0fBN7ECytbUtP7/3xAC/uuW5QAA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Takes input as a string of digits by default but you can feed it an array if you insist. Outputs a Charcoal boolean, i.e. <code>-</code> for equal, nothing if not. Explanation: Simply compares the minimum and maximum input element.</p>\n"},{"answer_id":224064,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224064#224064","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 3 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p>Returns <code>1</code> for true <code>&gt;1</code> for false.</p>\n<pre><code>â l\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=4iBs&amp;footer=tjE&amp;input=WwpbMSwgMSwgMSwgMSwgMSwgMSwgMV0gLT4gVHJ1ZQpbMSwgMiwgMywgNF0gLT4gRmFsc2UKWzYsIDksIDYsIDksIDZdIC0%2bIEZhbHNlCls2XSAtPiBUcnVlCls3LCA3XSAtPiBUcnVlCls0LCAyLCAwXSAtPiBGYWxzZQpdLW1S\" rel=\"nofollow noreferrer\">Try it</a> (includes all test cases)</p>\n"},{"answer_id":224054,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224054#224054","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 14 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{!(a|a)[1]}\n</code></pre>\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6xWlEjsSZRM9owtvZ/gUJadLShjgI6io3lgkkZ6SgY6yiYwETMdBQsdRSgJFwQxjDXUTCHsU3Aeg1iY/8DAA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224052,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224052#224052","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 25 bytes</h1>\n<pre><code>func[s][single? unique s]\n</code></pre>\n<p>Doesn't work in TIO - apparently <code>single?</code> has been added in the subsequent versions.</p>\n<p><a href=\"https://i.stack.imgur.com/0KSvf.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/0KSvf.png\" alt=\"enter image description here\" /></a></p>\n<h1>Using <code>parse</code>, 54 bytes</h1>\n<pre><code>func[s][parse s[set t skip(r: reduce['quote t])any r]]\n</code></pre>\n<p><a href=\"https://tio.run/##TU7LCsIwELz3K4Ze1IPgo1jswY/wuuyhbTZY1KbdpAe/PgZJwV2GebAwq2LiXQxxYZtol7EnzzS16gWevAQE@OcwbbWBill6oc28uCAIvGvHD5Q5WqfS9g90oAJp6Ii/5TU74Ywquwuu@GH1mWvUWVXp/sBFekaHMdDbvUwqKPe3EhZdav0C\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n<p>Much longer, but a bit more interesting.</p>\n<h2>Explanation:</h2>\n<p>Red's <code>parse</code> works not only on strings, but on all types of series (block! paren! string! file! url! path! lit-path! set-path! get-path! vector! hash! binary! tag! email! image!).</p>\n<pre><code>f: func[s][\n    parse s [                   ; parse the input\n        set t skip              ; sets `t` to the first item \n                                ; a literal integer can't be used as a parse rule \n        (r: reduce['quote t])   ; that's why set `r` to `t`'s quoted value \n        any r                   ; zero or more `r`  \n    ]\n]\n</code></pre>\n"},{"answer_id":224049,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224049#224049","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 16 bytes</h1>\n<p>-12 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/82619/delfad0r\">Delfad0r</a>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f(a:x)=all(==a)x\n</code></pre>\n<p><a href=\"https://tio.run/##XYvNCsIwEITvfYo5eGghij/FYiHePXssOSyapsE0ShOxbx@3pReFnZ2d5ZuOwkM7l1KbUz0WkpzLpaRiTAZ1jWscrDdYn5crM5AI3fODDVpWPmi6/4LNxUdVZD1Zz6z1UQ90i1jh7Z31OnCrpxcM@5xTsxP4H5VN373AQaDkcBQ4CSx7yqxKoGIrZ26rvg\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n<p>Another 16 byter:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f(a:x)=x==(a&lt;$x)\n</code></pre>\n<p><a href=\"https://tio.run/##XYvNDoIwEITvPMUcOEBSjT9EIrHePXskHDZaSiNUQ2vs29eFcNFkZ2dn801H7qH6PsY2oyrkMkiZ0SkNedSoKlz9aKzG6rxciYaE654frNGyslHR/ResL9Y3eTKQscwa69VIN48Ub9sbqxy3BnpBs8851luB/2mS6bsT2AsUHA4CR4FlT5lVCpRsxcxtmi8\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224041,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224041#224041","body":"<h1><a href=\"http://raku.org/\" rel=\"nofollow noreferrer\">Raku</a>, <s>7</s> 6 bytes</h1>\n<p><s>2&gt;*.Set</s></p>\n<pre><code>+*.Set\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/Wi0uXaPGIa7i0G49tbg0zdr/xYmVCmka1SrxhzbV6ihUq8RVKOgqqMRVAjk2ukYKRnaa1goINZt1QQqBhK4hRHXlo8YtukBNIJlKkEwFWKOhgq4hUOd/AA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n<p><code>*.Set</code> converts the input list into a set.  That set's size is then <s>compared with <code>2</code></s> returned.</p>\n<p><em>-1 byte thanks to Razetime</em></p>\n"},{"answer_id":224039,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224039#224039","body":"<h1><a href=\"https://www.vim.org\" rel=\"noreferrer\">Vim</a>, 8 bytes</h1>\n<pre><code>:g/&lt;C-r&gt;&lt;C-w&gt;/d\n\n</code></pre>\n<p><a href=\"https://tio.run/##K/v/3ypd38ZZt8gOSJTb6adw/f9vyGXKZfRftwwA\" rel=\"noreferrer\" title=\"V (vim) – Try It Online\">Try it online!</a></p>\n<p>This uses the assumption that list elements are one character. <kbd>Ctrl+R</kbd><kbd>Ctrl+W</kbd> inserts the word under the cursor, so this solution applies the <code>d</code>elete command to any line which contains the first element of the list. This results in an empty file if they're all the same, or some non-empty lines if they aren't.</p>\n<p>If we weren't allowed to assume that items are in the range <code>[0,9]</code> then we could give false positives on numbers which are supersets of each other. We could fix this by using a regex instead for one more byte:</p>\n<h3><a href=\"https://www.vim.org\" rel=\"noreferrer\">Vim</a>, 9 bytes</h3>\n<pre><code>:%s/&lt;C-r&gt;&lt;C-w&gt;\\n\n\n</code></pre>\n<p><a href=\"https://tio.run/##K/v/30q1WN/GWbfIDkiU28Xkcf3/b2jKBUaGpv91ywA\" rel=\"noreferrer\" title=\"V (vim) – Try It Online\">Try it online!</a></p>\n<p>Vim doesn't have a concept of truthy/falsey values but if one were to believe that a buffer containing only newlines was falsey, then we could drop the <code>\\n</code> from this regex to get a 7 byte solution.</p>\n"},{"answer_id":224036,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224036#224036","body":"<h1>JavaScript, 21 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>d=&gt;/^(.)\\1*$/.test(d)\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNEts/hfllikkG77P8XWTj9OQ08zxlBLRV@vJLW4RCNF839BUWZeiUa6hrohBKhranIhxIyMTVAEzCyBEFUEhWdujsI1MTIA8v8DAA\" rel=\"nofollow noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224013,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224013#224013","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 17 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>($args|gu).length\n</code></pre>\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNyfn/X0MlsSi9uCa9VFMvJzUvvSTj////hhAIAA\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n<p>Outputs 1 for truthy and anything else for falsy.</p>\n"},{"answer_id":224028,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224028#224028","body":"<h1><a href=\"https://github.com/DJMcMayhem/V\" rel=\"nofollow noreferrer\">V (vim)</a>, 10 bytes</h1>\n<pre><code>:sor u\nGd{\n</code></pre>\n<p><a href=\"https://tio.run/##K/v/36o4v0ihlMs9pfr/f0MuCDT5r1sGAA\" rel=\"nofollow noreferrer\" title=\"V (vim) – Try It Online\">Try it online!</a></p>\n<p>Input as a list of lines. Outputs a falsy value (Empty output) for all items equal, and outputs a number otherwise.</p>\n<p>Gets the unique lines, goes to the last line and deletes till the beginning.</p>\n"},{"answer_id":224022,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224022#224022","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 3 bytes</h1>\n<pre><code>$=g\n</code></pre>\n<p>Full program; takes the items from command-line arguments. <a href=\"https://tio.run/##K8gs@P9fxTb9////RmBoDAA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n<p>Alternately, a function solution that takes a list as its argument (also 3 bytes):</p>\n<pre><code>$=_\n</code></pre>\n<p><a href=\"https://tio.run/##K8gs@K/xX8U2/n@0kQIYxmr@BwA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>Not <em>quite</em> a builtin.</p>\n<p>Pip, like Python, has chaining comparison operators: <code>1&lt;5&gt;=3</code> means <code>1&lt;5 &amp; 5&gt;=3</code>, and <code>1=1=1=2</code> means <code>1=1 &amp; 1=1 &amp; 1=2</code>. Unlike Python, Pip also has the meta-operator <code>$</code>, which folds a list on a binary operator. For example, <code>$+</code> folds a list on addition, returning the sum; and <code>$=</code> folds a list on <code>=</code>. Because <code>=</code> chains, this returns the result we want: 1 if all elements are equal and 0 otherwise. The program <code>$=g</code> applies this compound operator to the full arglist <code>g</code>.</p>\n"},{"answer_id":224014,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224014#224014","body":"<h1><a href=\"https://github.com/hyper-neutrino/branch-lang/\" rel=\"nofollow noreferrer\">Branch</a>, 27 bytes</h1>\n<pre><code>1O,[^\\,N![o#)]n^=/;^\\o^*On]\n</code></pre>\n<p>Try it on the <a href=\"https://branch.hyper-neutrino.xyz/#WyIxTyxbXlxcLE4hW28jKV1uXj0vO15cXG9eKk9uXSIsIjExMTExMTExMTExMiIsIiJd\" rel=\"nofollow noreferrer\">online Branch interpreter</a>!</p>\n<p>There's got to be a much shorter way to do this...</p>\n"},{"answer_id":224012,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224012#224012","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 2 bytes</h1>\n<pre><code>l{\n</code></pre>\n<p><a href=\"http://pythtemp.herokuapp.com/?code=l%7B&amp;test_suite=1&amp;test_suite_input=%5B1%2C+1%2C+1%2C+1%2C+1%2C+1%2C+1%5D%0A%5B1%2C+2%2C+3%2C+4%5D%0A%5B6%2C+9%2C+6%2C+9%2C+6%5D%0A%5B6%5D%0A%5B7%2C+7%5D%0A%5B4%2C+2%2C+0%5D&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n<p>Outputs 1 if all elements are equal, and some integer* greater than 1 otherwise.<br>\n<sup>* Number of unique elements.</sup></p>\n"},{"answer_id":224011,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224011#224011","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 2 bytes</h1>\n<pre><code>IẸ\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9/z4a4d/49Ofrhz8aOGOQq6dgqPGuY@3LHo4Y75jxq3PdzR9XDntLDD7VwPd2853P6oac3//9GGOgroKBakMaSoNJULJGuko2Cso2ACFnRLzCkGiprpKFjqKEBJFAkkreY6CuZIXBOwSQYI1QA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Outputs reversed (<code>0</code> if all are equal, <code>1</code> if not)</p>\n<h2>How it works</h2>\n<pre><code>IẸ - Main link. Takes a list L on the left\nI  - Increments of L\n Ẹ - Are any non-zero?\n</code></pre>\n"},{"answer_id":224009,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224009#224009","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 18 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;new Set(a).size\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@z/R1i4vtVwhOLVEI1FTrzizKvV/cn5ecX5Oql5OfrpGmka0oQ4cxmpqcqHJmulY6oAxUO4/AA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Couldn't find the name of the <code>Set</code> builtint. Thanks dingledooper :P (outputs using the 1,&gt;1 method that pretty much everyone is using now)</p>\n<p>Previously...</p>\n<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 39 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;a.map(x=&gt;a[0]==x).reduce((x,y)=&gt;x&amp;y)\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@z/R1i5RLzexQKMCyIg2iLW1rdDUK0pNKU1O1dCo0KnUtLWrUKvU/J@cn1ecn5Oql5OfrpGmEW2oA4exmppcaLJmOpY6YAyU@w8A\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":224006,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224006#224006","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 18 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:len({*x})\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUaHCKic1T6Naq6JW839BUWZeiUaaRrShDhjGampyoYkZAcX@AwA\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>-5 bytes thanks to @hyper-neutrino</p>\n<p>I'm lucky.....</p>\n"},{"answer_id":224005,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224005#224005","body":"<h1><a href=\"https://github.com/ZippyMagician/Arn\" rel=\"nofollow noreferrer\">Arn 1.0</a> <code>-s</code>, 2 bytes</h1>\n<pre><code>:@\n</code></pre>\n<p>Outputs 1 if all the same, &gt;1 if they aren't all the same.\n<a href=\"https://zippymagician.github.io/Arn?code=OkA=&amp;input=MSAxIDEgMSAxIDEgMQoxIDIgMyA0CjYgOSA2IDkgNgo2&amp;flags=LXM=\" rel=\"nofollow noreferrer\">Try it online (works in older version)</a></p>\n<p><code>:@</code> groups identical values, <code>-s</code> takes size. This could be written as <code>(:@)#</code> as well, which would be 4 bytes (<code>«×+0</code>)</p>\n"},{"answer_id":224002,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224002#224002","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 2 bytes</h1>\n<pre><code>QL\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/z/Q5//RyQ93Ln7UMEdB107hUcPchzsWPdwx/1Hjtoc7uh7unBZ2uJ3r4e4th9sfNa35/z/aUEcBHcWCNIYUlaZygWSNdBSMdRRMwIJuiTnFQFEzHQVLHQUoiSKBpNVcR8EciWsCNskAoRoA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 2 bytes</h1>\n<pre><code>Lu\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/36f0////0YY6YBgLAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 2 bytes</h1>\n<pre><code>Ùg\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//8Mz0//@jDXXAMBYA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://dyalog.com\" rel=\"nofollow noreferrer\">APL(Dyalog Unicode)</a>, <sup><s></s></sup>2 bytes <sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre><code>≢∪\n</code></pre>\n<p><a href=\"https://razetime.github.io/APLgolf/?h=AwA&amp;c=e9S56FHHKgA&amp;f=S1MwhECuNAVjBRMFUwA&amp;i=SwMA&amp;r=tryAPL&amp;l=apl-dyalog&amp;m=train&amp;n=f\" rel=\"nofollow noreferrer\">Try it on APLgolf!</a></p>\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/users/78410/bubbler\">Bubbler</a> for pointing this out!</p>\n<hr />\n<p>Outputs <a href=\"https://chat.stackexchange.com/transcript/message/57714890#57714890\">1 for truthy, <span class=\"math-container\">\\$&gt;1\\$</span> for falsey</a>. These all use the same method: counting the number of unique elements.</p>\n<p>If the same approach is also this trivial/short in your language, feel free to edit it in if you don't want to post an answer</p>\n"},{"answer_id":224003,"question_id":224000,"link":"https://codegolf.stackexchange.com/questions/224000/are-all-the-items-the-same/224003#224003","body":"<h1><a href=\"https://github.com/alexander-liao/proton\" rel=\"nofollow noreferrer\">Proton</a>, 7 bytes</h1>\n<pre><code>set+len\n</code></pre>\n<p><a href=\"https://tio.run/##KyjKL8nP@5@mYPu/OLVEOyc1739BUWZeiUaaRrShjgI6itXU5EKWN9JRMNZRMEERNtNRsNRRgJKoMig8cx0FcxQBE7B5BkCx/wA\" rel=\"nofollow noreferrer\" title=\"Proton – Try It Online\">Try it online!</a></p>\n<p>Outputs <code>1</code> for truthy and anything else for falsy.</p>\n"},{"answer_id":223854,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/223854#223854","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 34 bytes</h1>\n<pre><code>[ dup &lt;evens&gt; swap &lt;odds&gt; append ]\n</code></pre>\n<p><a href=\"https://tio.run/##Rcm9CsIwFMXx3ac4T1CSpjqoiFtxcREncYjJFYoljfemfiB99hgn/9P5ca7WpYHz8bDbt0sI3UcKjgQ34kA9IlNK78hdSP@zoldiK1jNPlDQqGHQYCrSWqEuNEahKWH@CwtM@QQ/RqzpQUE2kKctGLwv28ZIweOcL90WlcD1ZDl/AQ\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>It's a quotation (anonymous function) that takes a sequence from the data stack as input and leaves a sequence on the data stack as output. It rips out the even indices into a sequence, rips out the odd indices into a sequence, and smushes them back together. <code>[ 2 group flip concat ]</code> works for sequences of even length, but <code>flip</code> can only transpose square matrices correctly.</p>\n"},{"answer_id":223751,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/223751#223751","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a>, 12 bytes</h1>\n\n<pre class=\"lang-sh prettyprint-override\"><code>&lt;&lt;&lt;${1//?/ }\n</code></pre>\n<p><a href=\"https://tio.run/##qyrO@P/fxsZGpdpQX99eX6H2////iVxJyQA\" rel=\"nofollow noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>&lt;&lt;&lt;</code>: print</li>\n<li><code>${1}</code>: the input,</li>\n<li><code>///</code>: replacing</li>\n<li><code>?</code>: any character</li>\n<li><code> </code>: with a space</li>\n</ul>\n"},{"answer_id":223716,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223716#223716","body":"<h1><a href=\"https://github.com/hyper-neutrino/branch-lang/\" rel=\"nofollow noreferrer\">Branch</a>, 18 bytes</h1>\n<pre><code>1XY[/x#^\\yX^+Y10.]\n</code></pre>\n<p>Try it on the <a href=\"https://branch.hyper-neutrino.xyz/#WyIxWFlbL3gjXlxceVheK1kxMC5dIiwiIiwiIl0=\" rel=\"nofollow noreferrer\">online Branch interpreter</a>!</p>\n<p>Outputs infinitely. Eventually starts producing garbage values because <code>long long int</code> overflows but that seems to be acceptable.</p>\n<h2>Explanation</h2>\n<pre><code>1                   Set the node's value to 1\n XY                 Set the X and Y registers to 1\n   [             ]  While value is not 0 (this will always be true in this program)\n    /x#             Move to the left child, set to the X register, and output as number\n       ^\\           Move to the parent and then right child (go to right sibling)\n         yX         Set to the Y register, then set the X register to that value\n           ^+Y      Move to root, sum the children (X + Y), and set the Y register\n              10.   Place 10 and output as character; this also keeps the loop going\n</code></pre>\n"},{"answer_id":223675,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223675#223675","body":"<h1><a href=\"https://esolangs.org/wiki/Duocentehexaquinquagesimal\" rel=\"nofollow noreferrer\">Duocentehexaquinquagesimal</a>, 5 bytes</h1>\n<pre><code>±∊YO$\n</code></pre>\n<p><a href=\"https://tio.run/##S0oszvifnFhiYxPzqGGRXbx1cWqKgm6mgrphsXWcNVDIWl0hXsHILq80x7qkqDQPqDRVQbdY11Ah3jo1OSNfQTdPQR2oLOnQMuPDW5yP7stQsrPR1tXTiY5VetSw0Evdzg6isEY/v6BEP784MSkzFUopxNslWYOFk4oSM/PSSpOzESyFpP@mjxrmORzaFR71H2jBfwA\" rel=\"nofollow noreferrer\">Try it online!</a> Link is to a version with output; this one just writes the sequence to memory. Outputs codepoints of the entire sequence. Stops eventually because of memory limitations.</p>\n"},{"answer_id":223584,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/223584#223584","body":"<h1><a href=\"https://esolangs.org/wiki/Duocentehexaquinquagesimal\" rel=\"nofollow noreferrer\">Duocentehexaquinquagesimal</a>, 7 bytes</h1>\n<pre><code>1Â×^c¤E\n</code></pre>\n<p><a href=\"https://tio.run/##S0oszvifnFhiYxPzqGGRXbx1cWqKgm6mgrphsXWcNVDIWl0hXsHILq80x7qkqDQPqDRVQbdY11Ah3jo1OSNfQTdPQR2oLOnQMuPDW5yP7stQsrPR1tXTiY5VetSw0Evdzg6isEY/v6BEP784MSkzFUopxNslWYOFk4oSM/PSSpOzESyFpP@Gh5sOT49LPrTE9T/Qhv8eqTk5@ToK4flFOSmKAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":223530,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/223530#223530","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 29 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=(x,y)=&gt;x&amp;&amp;f(x&gt;&gt;1,y)*2^x%2*y\n</code></pre>\n<p><a href=\"https://tio.run/##RczNCoJAEADg@zzFXBJXTHZ2c01ifZEyVkzDMJWU2J7eRgg6zN/HzDyqdzXXr25a9sN4a9a1taGPP8IWPgja0BcF8RSpq9@p6LOenERCCYQKFeQouTcsBjRqTEFhiiQhwxyNBtJIhKQyYM3wmAIdkDHjBzlfUQ5G8yKbSV0yT323uMvgkmc1hd4WHP6n6OJ6HOaxb5J@vIf@LMvYn6mMF9v@J8FZbWa3KoRYvw\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Similar to <a href=\"https://codegolf.stackexchange.com/a/50246/\">https://codegolf.stackexchange.com/a/50246/</a></p>\n"},{"answer_id":223430,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223430#223430","body":"<h1><a href=\"https://github.com/LorenDB/barrel\" rel=\"nofollow noreferrer\">Barrel</a>, 26 bytes</h1>\n<p>Disclaimer: The language is newer than the question, but I didn't even think of golfing this until after I'd created the language. I did update the language after I originally wrote the answer, and changed my answer, but that was because I was fixing the interpreter and made some changes to the spec to make the language work better. I wasn't cheating, I promise :)</p>\n<pre><code>+&amp;1:0¤n &amp;0:@1&amp;1:a#@0+←1\n</code></pre>\n<p>Explanation:</p>\n<pre><code>+                          // set the accumulator to one by incrementing (initialization)\n &amp;1:0                      // set register 1 to value 0 (initialization)\n     ¤               ←1   // define a target that can be jumped to; then, jump to the previously defined jump target\n      n                    // print the accumulator as a number and implicitly print the following space\n        &amp;0:@1              // set register 0 to register 1\n             &amp;1:a          // set register 1 to the value of the accumulator\n                 #         // for as many times...\n                  @0       //     ... as [value of register 0]...\n                    +      //         ... increment the accumulator\n</code></pre>\n<p>I find it a bit hard to explain this further, so here's a rough chart of the accumulator and the two registers used during execution which will hopefully remove any confusion:</p>\n<pre><code>acc   reg[0]    reg[1] |\n---------------------- |\n1     &lt;uninit&gt;  0      | initialize; print acc(&quot;1&quot;)\n1     0         1      | set reg[0] to reg[1]; set reg[1] to acc\n1     0         1      | add reg[0] to acc; jump back and print acc (&quot;1&quot;)\n1     1         1      | set reg[0] to reg[1]; set reg[1] to acc\n2     1         1      | add reg[0] to acc; jump back and print acc (&quot;2&quot;)\n2     1         2      | set reg[0] to reg[1]; set reg[1] to acc\n3     1         2      | add reg[0] to acc; jump back and print acc (&quot;3&quot;)\n3     2         3      | set reg[0] to reg[1]; set reg[1] to acc\n5     2         3      | add reg[0] to acc; jump back and print acc (&quot;5&quot;)\n5     3         5      | set reg[0] to reg[1]; set reg[1] to acc\n8     3         5      | add reg[0] to acc; jump back and print acc (&quot;8&quot;)\n</code></pre>\n<p>...and so forth and so on.</p>\n"},{"answer_id":168378,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/168378#168378","body":"<h1>Powershell, <s>18</s> 12 bytes</h1>\n<p>-6 bytes thanks @Julian</p>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$args|%{' '}\n</code></pre>\n<p><a href=\"https://tio.run/##TY/LDoIwEEX38xVDUwWSanxuTEhcqPEPXBrECiQN1bZEE@DbcSgunNXNmXvn8dRvaWwhler5AxNsep6a3LaTJsSw6zuAfQQiWq4FsjO5tMCLNuoesJjwaqCll5staUQ86Cp0cNImlw7Tm64dHD@ldWWVw6UonbTPNJMBOX1sQSkv/Ab8rxELBiRibHGCDQycK1kJbnVtMpnw68gM3T6lD/Yj/xkTbubkzl3hAeMRVzP5GibEO@oz6Pov\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n<p>Testscript (use <code>LF only</code> mode in your editor):</p>\n<pre class=\"lang-powershell prettyprint-override\"><code>$f = {\n$args|% t*y|%{' '}\n}\n\n@(\n,(13, &quot;Hello, World!&quot;)\n,(2, &quot;Hi&quot;)\n,(45, &quot;   Don't\nForget about\nExisting\nWhitespace!   &quot;)\n,(0, &quot;&quot;)\n,(13, &quot;             &quot;)\n,(1,&quot;\n&quot;)\n) | % {\n    $len,$source=$_\n    $r = &amp;$f $source\n    $l=$r.length\n    &quot;$($l-eq$len): $l&quot;\n}\n</code></pre>\n<p>Output:</p>\n<pre class=\"lang-powershell prettyprint-override\"><code>True: 13\nTrue: 2\nTrue: 45\nTrue: 0\nTrue: 13\nTrue: 1\n</code></pre>\n<h2>Powershell + Regex, 20 bytes</h2>\n<pre class=\"lang-powershell prettyprint-override\"><code>$args-replace'.',' '\n</code></pre>\n"},{"answer_id":223225,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223225#223225","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 7 bytes</h1>\n<p>This algorithm is based on Pascal's Triangle, and I take no credit for it. Simply submitting it for completeness.</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>+.!∘⌽⍨⍳\n</code></pre>\n<p><code>+.!</code> is the summation of binomial coefficients. In this context k!n can be thought of as the kth element in the nth row of Pascal's Triangle (zero indexed).\n<br>\n<code>∘</code> is the function composition operator called Beside.\n<br>\n<code>⌽</code> reverses the array.\n<br>\n<code>⍨</code> is the commute operator, known as Selfie, it's used to copy the array to the left side of the composed function.\n<br>\n<code>⍳</code> the index generator creates a range, from 0–(n-1) inclusive.</p>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qG@qp/@jtgkG/9OApLae4qOOGY969j7qXfGod/P//2kKBlxpCoZAbATExkBsAsSmQGwGxOZAbAHEliA1IIWmYNUGECaUDaZMzM0A\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":223196,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223196#223196","body":"<h1><a href=\"https://github.com/DJMcMayhem/V\" rel=\"nofollow noreferrer\">V (vim)</a>, 32 bytes</h1>\n<pre><code>i1\n1&lt;esc&gt;qqkyjGp:s:\\n:+\nC&lt;C-r&gt;=&lt;C-r&gt;&quot;\n&lt;esc&gt;@qq@q\n</code></pre>\n<p><a href=\"https://tio.run/##K/v/P9OQy9AmtTjZrrAwuzLLvcCq2Comz0qby9nGWbfIzhZMKnGBVTgUFjoU/v//X7cMAA\" rel=\"nofollow noreferrer\" title=\"V (vim) – Try It Online\">(don't)Try it online!</a></p>\n<p>Prints the sequence forever.</p>\n<p>Output is not visible on TIO, so here's the first 99 iterations: <a href=\"https://tio.run/##K/v/P9OQy9AmtTjZrrAwuzLLvcCq2Comz0qby9nGWbfIzhZMKnFBVFhaOhT@//9ftwwA\" rel=\"nofollow noreferrer\" title=\"V (vim) – Try It Online\">Try it online!</a></p>\n<p>Last accurate value is <span class=\"math-container\">\\$7540113804746346429\\$</span> after which it exceeds the integer limit.</p>\n"},{"answer_id":223194,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223194#223194","body":"<h1>VBScript, 41 bytes</h1>\n<pre><code>sub f(x,y):msgbox x:f y,x+y:end sub:f 1,1\n</code></pre>\n<p>Very simple self-explanatory recursive function.</p>\n<p>It outputs its first parameters and recursively called again with the second parameter and first+second parameter. And first it is called with 1,1.</p>\n<pre><code>1,1 -&gt; 1, f(1,2)\n1,2 -&gt; 1, f(2,3)\n2,3 -&gt; 2, f(3,5)\n</code></pre>\n<p>and so on</p>\n"},{"answer_id":223091,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/223091#223091","body":"<h1><a href=\"https://esolangs.org/wiki/Pxem\" rel=\"nofollow noreferrer\">Pxem</a>, Filename: 29 bytes + Content: 0 bytes = 29 bytes.</h1>\n<p>Outputs fibonacci sequence, separated with space.</p>\n<ul>\n<li>Filename (escaped): <code>\\001.rX\\001.w.c.n.c.t.v.m.v.+ .oX.a</code>\n<ul>\n<li>Actual: <code>.rX.w.c.n.c.t.v.m.v.+ .oX.a</code></li>\n</ul>\n</li>\n<li>Content: empty.</li>\n</ul>\n<p><a href=\"https://tio.run/##nRhrW9pI93t/xTAFMkMSkiBWZBhdRdulq9RVt2sF6pOSUKIhARIUCvSvd89MwkXb53nf3Q9kbmfO/TY4dtT/8RqZ5f3dcm@nW7GdSmXvjWPa@/t7lbKzX7a/OHt7FedNxTb3951Xr9Fw6g68Yqk48ILiMIy8qRcNXkVujHR3wiYDO3pAplkqMXc6DMcxOqvfHZ2d8Toj8Wzooq9u3A2DXj4vV91wMLADhx4YjvtoBBPfR6WDvJXPp5cvjq5/5zhLUjikD1cI5BHNzsWgVpfJRF/iFdm/mo2bu6vrE14yzZ3V5sWHq8bN2ae7@ofLy9P6NbdYC@kBwtn58dHV73cfTy@vGh@aVUCDOvn8HEmpQiSlZGKhHrPl@s7tr664g4lvxy6K@uJCOIxh9hSOnWjoezGzfc@OkP4VKdm5peLsb3ipcEWMCmv@dXZWPz/hVUkChBYEHRb1vV4siTtIAKYbbrcfouxrihFHFuosFiSD3EfbRziDerYfuZjm80RCRX0X9BqHIQp9Bx3kSyyDqjShIQGmi8h1kBIZU2NmsAg@3wxFYv4mMSdYACTFsUYB4vmPfH@fgX2Gnu8SSnrcZF07cgG5hZEXINIrUNQDVTM3srvMjiJ38MWfCauGYNCjAOmP8cRaxGOk1yNkWqWd8u6bvco@UlrtoNBRFl/H7hAVF/bTA1KOT981mnPQGBmOvSDuIWV4EX4Iml7jrluPrh4/9t66p@PLp7@nN7NP327to/h6cO6cqHomm8spi/9AMWtyXG9hlDUR7vA2xqAFP3xyxyRKWCA418Va1qQU4TZmmIHqFGlugrF2peEqpswHtTi8/IYt51ctX1U7PGsyr0f8A17K52FLL3U4d/J5IANKq9O5r/MSOyOUSSqo3sqaHbZcnjZP5mJ32ZsE3dgLAwSrucBE5wk/2MfsqS@s4dN0B2F01dJ1v5MiuwFEihRPf0QhmEIaEq/Um9yGQPO9wD0w6TxQudF6ms6@dQzdsA3BeFAzU4K4aKPjMiomAHiBu3aMLPAREYseTNlSwoFkJMFid4xDjH4DrgIV0FUxKAhQhlIOwzHy@UxA5V2pI9ih8wkPdCuVKziYSNCUwxrfsJIwgZ6MEBXtX/LyUpaEOWyn/ADEcink@xcoU1aXYHiWumUuardFkli5O16QFkrUjHQ/RiWRLQDTYmUFm5tiiMAYYC@Y9WFDiQqgsmEYdKPHcdwxCsSuWVQ1Wiq4s56sSxTs405jtjSGxhzQsAiCbRnVLAa/9KgPsz4IHhuFTMYGJ4x4xmj13NQazBZK8e46hmr4gLX5VgcyxAbbAwNdUFQrDCJgADb7YtMYGDocWzBb8cKWFnj@CzF3nompzC9anmpK3x9yMVd1C5x6mPkOTruSwjcEmIiHIXp7haLJlygek6yp7VB2AV7sdTj4r1UjTZ5E2VCztbdXFPIdsDoHeIKzGHaQ3Wp2tAQXZY7ru5CXEwxs2aztAHwkaKUo15OUjyjFhVqfUUcFjDdrXBs2mgcQvkQoAVQAqdJoZXMdcGBBugAfkA/sM@VizWY82RFOPa3N6FTlM53M@BSCnIuw7YVjcg9hf18DMEaHiQbs1j0kDLatFPAxYrRV43CqzqpgnsOpDmMGxgKMORhzsypk85/EFukjoWICFY8lGQKOJQnw4FUpgHAoFrKGsU6Gct/47CNQi2GIMiH0UjAuSJ4y4yuskQHDF6he0mW9O3DanjuOBx1QpZGHnGWwmK1iD7aSYIYDOpcntthcyqkjpiLLiyLVS2scdAWiECki3IhJlcUiWTuAeuzGk3EgMm9CRRUIbMdZUdXFOvoSr9YZsYZSvVq3s2LD8R5XGzkJEK4QREaxYPx9/ZbgPCQr0MoLztblKMmgV60HDn4OsbiqA/2kDihQHONVklCEvhfrq@uM7pJjOn9QVQZoOhw@wmeE1Y4B43FN7LJjVaUw0Y5TAJi8QC5YBwJU1jkHQT6iDKIw6o69YcxTRsETI9d1vuMiptEYWiy53C4vF@SECnm0Pwjt8BPJE7C2ATiF@pOoP/PHs8L0fn2A4ODA2jr6Y3MkpdmcXD87EURlilif35BLOr/kACY50fXU9OhyC2hC6mn6JrpVq@fz9Vpp9w09rEOp2QJ7J3CBBibBd6NoCLSTgE0CDkAbpOlsXQ0Ps2ZV35blL0EMbtW39o7I@ap@HFWxdr5dNZLtzKZ8rG8NQfYkKDKgVDohN/DdOg@TSv/rw4A0tJF2ovkbmPmIAxD0Hr4bfI37ZESlFzWgPjRq3GcN8KEJISc8zbEjraFZlH7HLVPf7@DDE7VcqZZ3gcqGjAc8XJB3z2nfkXOtrt1qn@j8nOPiXRU1w1gkKferO8aszgGe3QJZQZ4xyWF5LzHMboV@Gbv2g0iK9e/4c7m1s9vJYjq/5eWyXk8vJyCiMJNKcs8qQzGqc74jCmACBO@C2AsmLlsK/SfQ9Vq5IgAPdvcolduShw31hAD9xD8hUtcBmAmDsgtyW/i0LWN3S/kX5Pq5AqKtw5tnQfAIZrnXPlKZdUH1JkT8PZduDUa4B118FAGsNTpMDqI1FJP7ZH2v6x3@cdsA4y1SYjKG10kY@LN8HngSrdARwcVxFcEUCzFEEMjApgXhMc@M@bQJNkAHqQggMoBii/8p@VMbJRQhnmkKbbE/pWslDpZu/lkbbV2c/YuLB9sXv62ZIsnVFV8p@2vAeEsTfZEpn2t@kBw/iH66DyYTINvnjrDMNkhaKgUce4DE8sxiMk01RO5VIR8REToFci@/SUakNDEblyDCnhtSshAJSu@l8wCf6ovoFaWpsQaBCAPCAKILsJp5qDeqjWeWk6XrGcbCC4yilo3SbPA@9RUi1Q4s@3Lkqbdkq@jWHYeZtb@MDvzDkeFXfWNE6TZVqIf/J87cL3HmAGdO4hTF/cfb5tH5KVfapmkVxzdyeCp2iwH84uJjcQA/FRXDm6KtvKp/aF6fNq@5ovxIKxzOyvt4kb4@Ue/V@iSF3px1X7289dRFehcy8i8u/Xwk77SDNcj24Vo9PTDJ@mG6he6/vTqbl0g83KBXVhaR@PdCf0BWMNasVYv2WabpAmqTYqFNs9CJtS3Rm9AlhoeIqONcdlB6F8m/VyYiDYQD0a7A5vinzQ2bThnpzfIzANGnRHAeoqHnaG7sDVxt2B1OtMfoG3Ps2KXbYpb/t5ix7flID8qllTggBCm255X2UgjTtgxl8zbSS1Z5r1zZeVOuwCsCXiugFdnLJu2rnby9/r2exYsr0ZMYsHiwrTokvAIY8bYixg@XV@B8qw5PJAcP2jFPdBYMXjK024Inwfo/gXY7F2LNg4iEXlO2WWmrPUK4HYB54G7SCSRtQNIOwIPiMrdrcm6lkkUIr/wJjeBSenuZHneTfwWEJn4mAU/8qI/06Mc/\" rel=\"nofollow noreferrer\" title=\"Dash – Try It Online\">Try it online!</a></p>\n<h2>With comments</h2>\n<pre><code>XX.z\n# push 1; push $(($(pop)*$(rand)))\n# NOTE rand pushes 0&lt;=x&lt;1\n# NOTE null character cannot be used for filename\n.a\\001.rXX.z\n# push 1; push 88; while [ $(pop) -ne 0 ]; do\n.aX\\001.wXX.z\n  # Do I really need to explain more?\n  # Just read the specification; I am going to bed\n  # also a sequence .t.v.m.v is an idiom\n  # to move top item to bottom\n  .a.c.n.c.t.v.m.v.+ .oX.a\n</code></pre>\n"},{"answer_id":127258,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/127258#127258","body":"<h1>Common Lisp, 51 bytes</h1>\n<pre><code>(defun f(n)(or(= 1 n)(and(&lt; 1(abs n))(f(/ n -2)))))\n</code></pre>\n<p>Recursive version. <a href=\"https://tio.run/##FYwxCsMwFEOvIgIFeQglnULb9CKlg1PngyHxD7Y7dPHVHUeTnuDpu/q010q3yC9AGAw1csKA1mxwfGKgnVNDQ@EVAf3NnKlcVXeIRnhI1A39iKwY4RRs82YzMrpiMb1Q7u@g5fFfUvmUS9cUCvx5cwA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n"},{"answer_id":220769,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/220769#220769","body":"<h1>JavaScript, 49 bytes</h1>\n<pre class=\"lang-js prettyprint-override\"><code>n=&gt;[...(x=f=&gt;n.filter((a,b)=&gt;b%2==f))(0),...x(1)]\n</code></pre>\n<p>Explanation: Creates a list composed of the results of spreading arrays filtered by the index of each element modulo 2.</p>\n"},{"answer_id":220744,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/220744#220744","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 2 bytes</h1>\n<pre><code>ι˜\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//3M7Tc/7/jzY0NNBRMDLSUTA2NgayTIBAR8EUBHQUzGIB\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<h2>How it works</h2>\n<pre><code>ι˜ - Program. Push the input L to the start\nι  - Uninterleave L\n ˜ - Flatten\n</code></pre>\n"},{"answer_id":145396,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/145396#145396","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>4</s> 3 bytes</h1>\n<pre><code>ŒœF\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8///opKOT3f4fbn/UtObopIc7ZwDpyP//ow0NDXQUjIx0FIyNjYEsEyDQUTAFAR0Fs1gdhWigoCFQBVABUBYkEAsA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<h2>How it works</h2>\n<pre><code>ŒœF - Main link. Argument: L (a list) e.g.\nŒœ  - Odd-even; Group elements at even and odd indices\n  F - Flatten\n</code></pre>\n"},{"answer_id":220091,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/220091#220091","body":"<h1>APL (<a href=\"https://www.nars2000.org/\" rel=\"nofollow noreferrer\">NARS2000</a> dialect) 24 bytes</h1>\n<pre><code>{¯1↓1↓⍕2,/⍵/⍨⍵∊A←⎕a,⎕A,⎕D}\n</code></pre>\n"},{"answer_id":220086,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/220086#220086","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell Core</a>, <s>48</s> 47 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>''+($args-match'[a-z\\d]'|%{,&quot;$p$_&quot;*!!$p;$p=$_})\n</code></pre>\n<p><a href=\"https://tio.run/##RVJLT8JAEL73V3zgYgHbQw@cCAE1mnjSCIkHH81SxramL3e3WkB@O05ZwWYzmfkes9PdrcpvUjqhLPOjUtFevGOC7d51L/pCqlj7uTRR4j5Lf/OyenV/eluvKyoRdoedjqjGopqIcDfY7xxn1nccr@9eLl0PbRzYKrIlODkiqxMEzg/ozTSZtuhNYuurrFZqja9Up2XRElcZshq1guK1xvqLOaQammMJ1rS27hO5inAWdLpseSIQizkGlr1zc8gC1Mi8yuigucuRyxYsWNag4ZyRChVvR3aURcLb8AqL0oSMxumSKfYuEiSnGThyE57EwLReUIyYcf7L/1Z9OVwOo8HF6M1v2g7SnsEIo8YKplMZ9rygM9mczQ6CAMGGKWeAH/SwdcCf0EalRexBUFNRZGjFVyZCyynSdWYYOOebnFnlgXl@mF/X2pT5/fKDTa@zLeZ1FJHWrfvP5kf0@d92jMdjt6Ng5@x4kttS8bPwF5JPAv5lbcp5uqH9Lw\" rel=\"nofollow noreferrer\" title=\"PowerShell Core – Try It Online\">Try it online!</a></p>\n"},{"answer_id":220082,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/220082#220082","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell Core</a>, 56 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$n=$args|% t*y|%{$_+&quot; &quot;+$_}\n-join$n[0..($n.length-2)+-1]\n</code></pre>\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNydFNzi9K/f9fJc9WJbEovbhGVaFEq7JGtVolXltJQUlbJb6WSzcrPzNPJS/aQE9PQyVPLyc1L70kQ9dIU1vXMPb////qSTmlRUWVCiWpFSXqAA\" rel=\"nofollow noreferrer\" title=\"PowerShell Core – Try It Online\">Try it online!</a></p>\n<p>-20 bytes for @mazzy</p>\n"},{"answer_id":220084,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/220084#220084","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 98 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(x,y=grep(&quot;[a-z0-9]&quot;,el(strsplit(x,&quot;&quot;)),T,,T))for(i in seq(y)[-1])cat(y[i-1:0],' ',sep='')\n</code></pre>\n<p><a href=\"https://tio.run/##Hc2xCsMgEADQX7Eu3sEJydiCez8g0EEc0tQU4VCrBmp/3pbOb3hl3PkoZuxH3FpIEd7UzbP4DNKu@jPps5PkGWorNXNoP5cSkRaiBXFPBYIIUVT/go5Wzw63tUG3Qc@XyZESiqrPRin8RyCvnjmRuKXCj5PE8QU\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Unusually for <a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, a <code>for</code> loop is significantly shorter than a <a href=\"https://tio.run/##Hc1LCsIwEADQq2hWMzCBZimYvetQcFG6SJOpFoY25APWy1fpBd7LxyQt22Nua6jLtsKHnHUcW2B0kHypTD4l2eHNPkKYljXCftevzAnU4PW307dREQuUmkuSpf4JpRCpJ@qR9kGbEUkbJEOOZnuaHeIZg3qwyEaX55YlXhUePw\" rel=\"nofollow noreferrer\">matrix-based approach</a>, mainly because it allows us to just use <code>cat</code> instead of the much-more-verbose <code>Reduce(paste</code> vectorized way to build a text string from a list of characters.</p>\n"},{"answer_id":204003,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204003#204003","body":"<h1><a href=\"http://jdk.java.net/\" rel=\"nofollow noreferrer\">Java (JDK)</a>, 59 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;s.replaceAll(&quot;\\\\W|_&quot;,&quot;&quot;).replaceAll(&quot;.(?=(.).)&quot;,&quot;$0$1 &quot;)\n</code></pre>\n<p><a href=\"https://tio.run/##VU/BTgIxEL3zFUNhQ4tL4x68gLBiookHT5hwEN10ly4Uu92m7W5A5dtrAS8k8zJ582bey@xYy0a79ZcXla6Ng13gtHFC0rJRhRO1osNJp5DMWnhlQsFPB0A3uRQFWMdcaG0t1lAFDS@cEWrz/gHMbCw5rwI8//vcX9T40mZQTr0dzSw1XEtW8LmUGK1Wy98MxQiRqzHF6RRTQkmQ@rf9BBDxk7N5WRvALTPguHXjq1yAxcE6XtG6cVSHTFdiFNkxRDZSKD5fxFBSprU84BMj5GJ67Jxw9H6ehypOWPundJv6R9kYc4BW2PCQX/KB4dBLuv5lUAFTwPes0pJ3/dtWWAiVqdplIPlG5JJ7zIb5sCA3d5@jvU9TlkVx0p1@9x7@AA\" rel=\"nofollow noreferrer\" title=\"Java (JDK) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":219534,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/219534#219534","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 1 byte</h1>\n<pre><code>c\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/z/5////pv@NAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p><a href=\"https://tio.run/##y0rNyan8/z9Z/////6Y6RgA\" rel=\"nofollow noreferrer\">2 bytes</a> to take input as <code>n,k</code></p>\n"},{"answer_id":219533,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/219533#219533","body":"<h1><a href=\"https://docs.python.org/3.8/\" rel=\"nofollow noreferrer\">Python 3.8 (pre-release)</a>, 21 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>import math\nmath.comb\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM7YoKPr/PzO3IL@oRCE3sSSDC0ToJefnJv0vKMrMK9GA8zVMdRSMNDX/AwA\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":219400,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/219400#219400","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/Whispers\" rel=\"noreferrer\">Whispers v3</a>, 35 bytes</h1>\n<pre><code>&gt; Input\n&gt; fₙ\n&gt;&gt; 2ᶠ1\n&gt;&gt; Output 3\n</code></pre>\n<p><a href=\"https://tio.run/##K8/ILC5ILSo2@v/fTsEzr6C0hMtOIe1R00wuOzsFo4fbFhiCGP6lJUAZBeP//wE\" rel=\"noreferrer\" title=\"Whispers v2 – Try It Online\">Try it online!</a> (or don't, as this uses features exclusive to v3)</p>\n<p>Simply takes the first <span class=\"math-container\">\\$n\\$</span> elements of the infinite list of Fibonacci numbers.</p>\n"},{"answer_id":218245,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/218245#218245","body":"<h1>ARM Thumb-2 (NEON), 6 bytes</h1>\n<p>Eat my Thumb, <code>pclmullqlqdqdqdqdq</code>. ARM has boring builtins, too!</p>\n<pre><code>ef80 0e01 4770\n</code></pre>\n<p>Assembly code:</p>\n<pre class=\"lang-c prettyprint-override\"><code>        .syntax unified\n        .arch armv7-a\n        .fpu neon\n        .thumb\n        .globl xormul_boring_neon\n        .thumb_func\nxormul_boring_neon:\n        // q0[0-8] = d0[0-8] @ d1[0-8]\n        vmull.p8 q0, d0, d1\n        bx       lr\n</code></pre>\n<p>Input: two 8-bit values in <code>d0</code> and <code>d1</code>\nOutput: the 16-bit product in <code>q0</code></p>\n<p>This actually multiplies 8 packed bytes together.</p>\n<h1>ARM Thumb-2, manual, 14 bytes</h1>\n<p>Ok, to make up for it, here is a fully scalar version which does a 32x32 multiply with a 32-bit result.</p>\n<pre><code>2300 0849 bf28 4043 0040 d1fa 4770\n</code></pre>\n<p>Assembly code:</p>\n<pre class=\"lang-c prettyprint-override\"><code>        .syntax unified\n        .arch armv6t2\n        .thumb\n        .globl xormul_scalar\n        .thumb_func\n        // r3 &lt;- r0 @ r1\nxormul_scalar:\n        // acc &lt;- 0\n        movs    r3, #0\n.Lloop:\n        // test each bit in y by using lsrs carry-out\n        lsrs    r1, r1, #1\n        // was the bit set?\n        it      cs\n        // if so, acc ^= x\n        eorcs   r3, r0\n        // shift x left\n        lsls    r0, r0, #1\n        // loop while x is non zero\n        bne     .Lloop\n.Lend:\n        // return in r3\n        bx      lr\n</code></pre>\n<p>Equivalent C code:</p>\n<pre class=\"lang-c prettyprint-override\"><code>uint32_t xormul_scalar(uint32_t x, uint32_t y)\n{\n    uint32_t acc = 0;\n    do {\n        if (y &amp; 1)\n            acc ^= x;\n        y &gt;&gt;= 1;\n    } while ((x &lt;&lt;= 1));\n    return acc;\n}\n</code></pre>\n<p>The numbers to be multiplied are in <code>r0</code> and <code>r1</code>, and the result is in <code>r3</code>.</p>\n<p>It is a fairly basic shift and xor loop.</p>\n<p>Yet another case of <code>lsls</code> and <code>lsrs</code> being far too useful than they deserve to be.</p>\n<p><a href=\"https://travis-ci.com/github/easyaspi314/easyaspi-ppcg/jobs/478593577#L439\" rel=\"nofollow noreferrer\">Try it online! (sorta)</a>: demo in Travis</p>\n"},{"answer_id":218243,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/218243#218243","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 53 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>f=function(x,y)`if`(y,bitwXor(x*y%%2,2*f(x,y%/%2)),0)\n</code></pre>\n<p><a href=\"https://tio.run/##bY/LCsIwEEX38xVFKGTkgibRlgr9D0FEY2ghEB80EZuvr7YV3Lg6cOfMZaYbrOm65JsQTtenj@7hUz20dfu82ejuN9Ej8dm1Z5FwcfG1v3eiX6Y8V1DLdpzmq1wxY81/mkSFkomsiWJBxvssNiFm1oQm7IgWTME8Rs27EAVZsYZkfCihJlaf2pHFN9fQExW2E0tUs68hZ2MLWc7RBnKWZfXdLjQKzcT4Pcd/bu4P8oj@oI7MNLwB\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":218229,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/218229#218229","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 12 bytes</h1>\n<pre><code>BJ’2*U×B{×^/\n</code></pre>\n<p><a href=\"https://tio.run/##DcwxDsIwEATA/l6xLTTx@fAZFzQp00NJR4PyAUSD@ETEC5AiKgQSER1@ifMRc91qtLvHQ9@fam27@XLzy20e2nMe9k0t31f5POfrY/d7l2nc5HuzqNWB4Yjh4SnBWVYTJYEgkEcAO4pIUCEWMIN9JNOIdSBewTDaQbIVJ1KxopmGPw\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<h2>How it works</h2>\n<pre><code>BJ’2*U×B{×^/ - Main link. Takes a on the left, b on the right\nB            - Binary representation of a\n J           - Replace each element with its index\n  ’          - Decrement\n   2*        - Raise each to the power 2\n     U       - Reverse\n       B{    - Yield the binary representation of a\n      ×      - Multiply the bits by the powers\n         ×   - Multiply b by the results\n          ^/ - Reduce by XOR\n</code></pre>\n"},{"answer_id":1909,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/1909#1909","body":"<h2><a href=\"http://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a> - 15 characters</h2>\n<pre><code>0:nao1v\na+@:n:&lt;o\n</code></pre>\n"},{"answer_id":217873,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/217873#217873","body":"<h1>BRASCA, 13 bytes</h1>\n<p>After being inactive here for god knows how long, I built a little esolang and decided to put it to the test.</p>\n<p>Outputs each number seperated by newline.</p>\n<pre><code>nlo1[:n:R+lo]\n</code></pre>\n<h2>Explanation</h2>\n<pre><code>n                   - Output 0 as number (an empty stack always pops zero)\n lo                 - Push 10 (line feed) to the stack and print it\n   1                - Push 1 to the stack\n    [       ]       - While not zero:\n     :n             -   Output the number\n       :R+          -   Add it with the previous number\n          lo        -   And print another line feed\n</code></pre>\n<h2>Language Link</h2>\n<p><strong><a href=\"https://github.com/SjoerdPennings/BRASCA\" rel=\"nofollow noreferrer\">Github Repo</a></strong></p>\n"},{"answer_id":211759,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/211759#211759","body":"<h1><a href=\"https://github.com/Lyxal/Vyxal\" rel=\"nofollow noreferrer\">Vyxal</a>, 3 bytes</h1>\n<pre><code>Lð*\n</code></pre>\n<p><a href=\"http://lyxal.pythonanywhere.com?s=?flags=&amp;code=L%C3%B0*&amp;inputs=Hello%20World&amp;header=&amp;footer=\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p>Command-line usage:</p>\n<pre><code>python3 Vyxal.py file_name &quot;&quot; input_string\n</code></pre>\n<h2>Explained</h2>\n<pre><code>L    # Push the length of the implicit input\n  ð  # Push a space character\n   * # Multiply that space by the length and output.\n</code></pre>\n"},{"answer_id":216946,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/216946#216946","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C++20 (gcc)</a> <code>std::variant</code> array, <s>139</s> <s>129</s> <s>127</s> <s>126</s> <s>125</s> 124 bytes</h1>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#import&lt;variant&gt;\nint f(auto a,int n,int&amp;m,int&amp;M){for(m=~0u/2,M=0;n--;)if(int*p=std::get_if&lt;int&gt;(a++))*p&gt;m?:m=*p,*p&lt;M?:M=*p;}\n</code></pre>\n<p><a href=\"https://tio.run/##fVLbjpswEH33V4yotMLEURIS0jZc9rUvyQ9kI2QRk1riJjCrlSL66U3HBpTNBtUPYzw@Z47nDElVzS9Jcrt9k3lV1ip457XkhYqILBSkNm9VCZzpQ6HjS27inl7Tsrbz8M@yXbhsHy79Yj73qUxtvHaqsFHn3e4iVCzTADORzWczSp0qyl93eehUzKmC/etuj59@h@JFkrVnAXf5e0qWjaoFzyPSNrK4AEJiBSEYiQGvNRgkZdEoSH7zGpzIJ2SxgPdSnrGNnuPwumZgemnzWGQiF4Vq@oyT8484l0VctooiV4m8yrjS@nh7iEijuJJJX1CJRg017RcsSo@HEyVXArjMsxKsAkEA1hUs36TRLtDegMSnL33cAjjghrZAT9RLpj3IwRBXY5MPPtb1TNLPHHhSHdhan436enUgskb8l2q9WZbeR93gwVOtfpQnOiAfi5N71C2gnwzQ0KF923h/MCmmL6k/YVeHLaNl@htxYwfmyD/MEbr7@0RxznzSEdLrycIeh9DPRo8pXh1PpuiKgctgzWDDwGOwZfCdwQ/o/K8EdyB4Boqcn0yTV0vkTcDXA1xX61HWL5FlpWVkphibiRdZnjWB9EbkxN12uLNW2iJXh7UOG@uTqvlRexvo14z7lFk/ZTZPGe8ps6V6Bre/SZrxS3Ob42jCZDZz@T8\" rel=\"nofollow noreferrer\" title=\"C++ (gcc) – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<p>This uses C++20's <strong>abbreviated function templates</strong> <sub><a href=\"https://en.cppreference.com/w/cpp/language/function_template#Abbreviated_function_template\" rel=\"nofollow noreferrer\">(cppref)</a></sub> which allow me to just put <code>auto</code> as a parameter instead of using the full name or a <code>template&lt;class T&gt;</code> declaration. It is wonderful.</p>\n<p>The effective ungolfed signature is this if it wasn't a template:</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>void f(std::variant&lt;int, char *&gt; *array, int n_elements, int &amp;min, int &amp;max);\n</code></pre>\n<p>Note that the second type can be literally anything. In the test, I did <code>const char *</code> because C++ string literals are <code>const char *</code>.</p>\n<p>The input is an <code>array</code> of <code>std::variant&lt;int, char *&gt;</code> <sub><a href=\"https://en.cppreference.com/w/cpp/utility/variant\" rel=\"nofollow noreferrer\">(cppref)</a></sub> of <code>n_elements</code> elements, and the output is stored into <code>min</code> and <code>max</code> which are <code>int</code> references.</p>\n<p>It then uses <code>std::get_if&lt;int&gt;</code> <sub><a href=\"https://en.cppreference.com/w/cpp/utility/variant/get_if\" rel=\"nofollow noreferrer\">(cppref)</a></sub> to select only the <code>int</code>s in the array, and calculates the min and max as normal.</p>\n<p>It also uses the <a href=\"https://gcc.gnu.org/onlinedocs/gcc/Conditionals.html\" rel=\"nofollow noreferrer\"><code>x?:y</code> extension from GCC</a> which allows me to omit the middle of the ternary to calculate the min/max, as well as cheating a byte because GCC reluctantly allows <code>#import</code> in C++ as a deprecated extension from Objective-C, and trading a warning for a byte by using <code>int</code> as the return type without returning <code>int</code></p>\n<p>An equivalent C++17-compatible version would be this at <s>158</s> <s>153</s> <s>143</s> <s>141</s> <s>140</s> <s>139</s> 138\nbytes:</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#import&lt;variant&gt;\ntemplate&lt;class T&gt;int f(T a,int n,int&amp;m,int&amp;M){for(m=~0u/2,M=0;n--;)if(int*p=std::get_if&lt;int&gt;(a++))*p&gt;m?:m=*p,*p&lt;M?:M=*p;}\n</code></pre>\n<p>Ungolfed version:</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;variant&gt;\n\nvoid f(std::variant&lt;int, const char *&gt; *array, int n_elements, int &amp;min, int &amp;max)\n{\n    // Set min to INT_MAX and max to 0\n    // C++20 guarantees 2's complement, so this is guaranteed to work\n    min = ~0u/2;\n    max = 0;\n    // Loop through each element\n    while (n_elements--) {\n        // std::get_if returns a pointer to the element if it is an int, or nullptr.\n        if (int *p = std::get_if&lt;int&gt;(array++)) {\n             // if (*p &gt; min) {} else { min = *p; }\n             *p &gt; min ?: min = *p;\n             // if (*p &lt; max) {} else { max = *p; }\n             *p &lt; max ?: max = *p;\n        }\n    }\n}\n</code></pre>\n"},{"answer_id":217068,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/217068#217068","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 27 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{a.grep(Integer).minmax}\n</code></pre>\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6xOlEvvSi1QMMzryQ1PbVIUy83My83saL2f4FCWnS0oY6CkY6CsY6CiY6CqY6CmY6CuY6CRWwsF1jWFCwOVGCpowBUaWgAVASTA6mDCCl5pObk5CuBDYBLIxusZKoEF4YxlAyBGpSMQIQxiDBRAmv@DwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n<p><em>Slightly different from <a href=\"https://codegolf.stackexchange.com/a/71178/83605\">the previous</a> Ruby answer! The user seems to be inactive for a while, so I thought of posting it.</em></p>\n"},{"answer_id":216974,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/216974#216974","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 45 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(l)range(unlist(Filter(is.double,l)))\n</code></pre>\n<p><a href=\"https://tio.run/##K/qfpmCjq/A/rTQvuSQzP08jR7MoMS89VaM0LyezuETDLTOnJLVII7NYLyW/NCknVSdHU1Pzf5oGWNIQyAQA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Takes input as a <code>list</code>, as R vectors (<code>c()</code>) will coerce everything to the same type, in this case, <code>character</code> if they are there.</p>\n<p><code>Filter</code>s out non-numeric values, then uses <code>range</code> to find the max and min values.</p>\n"},{"answer_id":216925,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/216925#216925","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 6 bytes</h1>\n<pre><code>OƑƇṢ.ị\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9//2MRj7Q93LtJ7uLv7/@H2R01r/v@PNtRRMNJRMNZRMNFRMNVRMNNRMNdRsIjVUYg2BYsBJS11FICqDA2ACkDiIHkIV8kDaHC@ElgjWArZMCVTJbAQiFAyBCpSMgIRxiDCBKQnFgA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Yields <code>[max, min]</code></p>\n<h2>How it works</h2>\n<pre><code>OƑƇṢ.ị - Main link. Takes  a list L on the left\n  Ƈ    - Filter keep:\n Ƒ     -   Invariant under:\nO      -     Converting to ordinals\n         This filters non-integers from the list, as O has no effect on integers\n   Ṣ   - Sort\n    .ị - First and last elements\n</code></pre>\n"},{"answer_id":216780,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/216780#216780","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 11 bytes</h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>{⍵[⍒2|⍳≢⍵]}\n</code></pre>\n<p>Alternatively:</p>\n<pre class=\"lang-apl prettyprint-override\"><code>{⍵[⍒≠\\=⍨⍵]}\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24TqR71box/1TjKqedS7@VHnIiA3thYopWBoaKBgZKRgbGxsoGACBAqmIKBgBgA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n<p>Explanation:</p>\n<pre class=\"lang-apl prettyprint-override\"><code>{⍵[⍒2|⍳≢⍵]}\n      ⍳≢⍵       ⍝ indices from 1 to the length of the input vector.\n    2|          ⍝ their divisibility by two; essentially generate 1 0 1 0...\n   ⍒            ⍝ grade down: put odd indices first before even indexed indices.\n ⍵[      ]      ⍝ pick from the input\n</code></pre>\n"},{"answer_id":216719,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/216719#216719","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, 41 bytes</h1>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|x|(|mut e|{while e*e&lt;x*x{e*=-2}e==x})(1)\n</code></pre>\n<p><a href=\"https://tio.run/##dY1BDsIgFAX3nuLZFb@RxFJXKt5Fk08kodS0NJIAZ0fdy3bmZd6yraEaj@luvSCkHeA4wJxhvLCjIsgbHvPsoGuOWeRpC@Cc3k/rGNzzNfYxca@lKqx1LCQGqpdv5rVYH5zfiy6V7gAjpCL6L4aGODZ4a986GBv89OOlfgA\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":216672,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/216672#216672","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 7 bytes</h1>\n<p>-1 byte thanks to @rak1507.</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>f←×/∘∪⊢∨⍳\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24TD0/Ufdcx41LHqUdeiRx0rHvVu/v@obypQIk3B0OQ/AA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":216673,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/216673#216673","body":"<h1><a href=\"https://github.com/abrudz/dyalog-apl-extended\" rel=\"nofollow noreferrer\">APL (Dyalog Extended)</a>, 10 bytes</h1>\n<p>-3 thanks to @rak1507</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊢∊¯2*⍳∘|\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNrShJzUtJTfn/qG@qp/@jtgkG/9OA5KOuRY86ug6tN9J61Lv5UceMGpA8UDxNwZALxjKGs0zgLKCO/wA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Extended) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":216680,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/216680#216680","body":"<h1><a href=\"https://bitbucket.org/ngn/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 14 bytes</h1>\n<pre><code>{|/x=*\\1,x#-2}\n</code></pre>\n<p><a href=\"https://tio.run/##y9bNS8/7/z/NqrpGv8JWK8ZQp0JZ16j2f5q6rpGCrqGCgYKhgpGCsYLJfwA\" rel=\"nofollow noreferrer\" title=\"K (ngn/k) – Try It Online\">Try it online!</a></p>\n<ul>\n<li><code>*\\1,x#-2</code> return list of -2 raised from 0 to <code>x</code>, i.e. (<code>1 -2 4 -8</code>)</li>\n<li><code>|/x=</code> are any items in that list equal to <code>x</code>?</li>\n</ul>\n"},{"answer_id":216677,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/216677#216677","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 32 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>$.*=-2while(abs)&gt;abs$.;$_=$.==$_\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/19FT8tW16g8IzMnVSMxqVjTDkio6FmrxNuq6NnaqsT//69ramj0L7@gJDM/r/i/rq@pnoGhwX/dAgA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":216351,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/216351#216351","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 30 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/\\S+\\K( \\S+)( ?)/$\\.=$1;$2/ge\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/79YPyZYO8ZbQwFIaWoo2Gvqq8To2aoYWqsY6aen/v9voGCoYKRgrGCiYKpgpmCuYKFgqWBo8C@/oCQzP6/4v66vqZ6BocF/3QIA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n<p>Input and output are space separated.</p>\n"},{"answer_id":216349,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/216349#216349","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 4 bytes</h1>\n<pre><code>ΣTC2\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv6f@6ip8f@5xSHORv///4@ONtAx1DHSMdYxidWJNjQ00DECcoyNDXRMgEDHFAR0zGJjAQ\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<pre><code>  C2    # split list into 2-element sublists\n T      # transpose\nΣ       # flatten list of lists\n</code></pre>\n"},{"answer_id":216346,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/216346#216346","body":"<h1><a href=\"http://xn--wxa.land/convey/\" rel=\"nofollow noreferrer\">convey</a>, 16 bytes</h1>\n<pre><code>{\n&quot;\\`0\n|@&amp;;`}\n2}\n</code></pre>\n<p><a href=\"https://xn--wxa.land/convey/run.html#eyJjIjoie1xuXCJcXGAwXG58QCY7YH1cbjJ9IiwidiI6MSwiaSI6IjAgMSAyIDMgNCJ9\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><a href=\"https://i.stack.imgur.com/Ld8fv.gif\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Ld8fv.gif\" alt=\"test run\" /></a></p>\n<p>Get the input <code>{</code> at the top, copy <code>&quot;</code> down and left. The list mod <code>|</code> 2 chooses <code>@</code> if the elements go down straight into the output <code>}</code> or right into the queue <code>&amp;</code>. After the last element has passed through <code>\\</code>, the length <code>n</code> of the list gets pushed to <code>:</code>, where <code>n</code> elements from the queue then gets passed through.</p>\n"},{"answer_id":216093,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/216093#216093","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 24 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>names((t=table(v))[t&gt;1])\n</code></pre>\n<p><a href=\"https://tio.run/##Xc29CsIwEAfwvU9x4HIHERJDB4X6IuJwba9SaJOQHAWfPsbBRX7r/yPXY5jQG9u4xpreeKqBdymIOiiPm@BB9NC7e1I9QczABRiKcpjPvMUgkHJ8Zd5hDUWFZ4jLNxDWlEQBl1a5XGF8qxS6dX/bZeKA9DvoPNjGNRZ68PUD\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Completely different approach to the <a href=\"https://codegolf.stackexchange.com/a/60640/95126\">previous</a> <a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a> answer for the same number of bytes when written (as here) as a snippet with pre-defined variable <code>v</code>, but 4 bytes shorter as a full program (which, admittedly, isn't required by the challenge).<br />\nOutputs the non-unique elements as a vector of strings.</p>\n<hr />\n<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 25 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>(r=rle(sort(v)))$v[r$l&gt;1]\n</code></pre>\n<p><a href=\"https://tio.run/##Tc1LCsMgEAbgfU4x0CxGsKCVLFpIL1K6mCamBKzKjAg9vbW78G3/B7c6L@i06Wxn9KSdasgzB4@SuGBVSo31wWO422c7QWIgAQIpFNczhRQ9ZE5vpg/sUYqnFdL2D8Q9Z18At165XOH1LV7UbTiOy0IR1fFhcGA62xmYwLUf\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>One byte longer (and yet another approach) if you want to output as an integer vector.</p>\n"},{"answer_id":216089,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/216089#216089","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 4 bytes</h1>\n<pre><code>u-u¹\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv6f@6ip8X@pbumhnf///4@OjtWJ1jXUMdAxBDIMwaQxkAfk64BETXWMQQqMTcAiINpEx0LHJDYWAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<pre><code>u       # unique element of\n -      # set difference between\n  u¹    # unique elements of input  \n        # and input\n</code></pre>\n"},{"answer_id":216085,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/216085#216085","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 18 bytes</h1>\n<p>Since a snippet is allowed here, the input is assumed to be in <code>@F</code>.  The TIO link adds a little I/O around it.</p>\n\n<pre class=\"lang-perl prettyprint-override\"><code>grep++$k{$_}==2,@F\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9X5xYqZCWX/Q/vSi1QFtbJbtaJb7W1tZIx8Ht/39DBSMFYwUTBVMgaamgC@T@yy8oyczPK/6v62uqZ2Bo8F83EQA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":60632,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/60632#60632","body":"<h1>Ruby, <s>30</s> 28 bytes</h1>\n<p>In <a href=\"http://ruby-doc.com/docs/ProgrammingRuby/html/irb.html\" rel=\"nofollow noreferrer\">the Interactive Ruby Shell</a>:</p>\n<pre class=\"lang-rb prettyprint-override\"><code>d.select{|x|d.count(x)&gt;1}|[]\n</code></pre>\n<p><sup>Saved 2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/78274/kirill-l\">Kirill L.</a></sup></p>\n"},{"answer_id":216048,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/216048#216048","body":"<h1><a href=\"http://xn--wxa.land/convey/\" rel=\"nofollow noreferrer\">convey</a>, 8 bytes</h1>\n<p>Generates the sequence.</p>\n<pre><code>v+&quot;}\n1&quot;1\n</code></pre>\n<p><a href=\"https://xn--wxa.land/convey/run.html#eyJjIjoiditcIn1cbjFcIjEiLCJ2IjoxLCJpIjoiIn0=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><a href=\"https://i.stack.imgur.com/qWV5Z.gif\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/qWV5Z.gif\" alt=\"enter image description here\" /></a></p>\n<p>The values (initially <code>1</code> and <code>1</code>) follow the conveyor belts indicated by the arrow heads. <code>&quot;</code> duplicates the input into both outputs, <code>+</code> adds them, and <code>}</code> writes them to the output.</p>\n"},{"answer_id":215651,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215651#215651","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 2 bytes</h1>\n<pre><code>ΠḊ\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//9yChzu6/v8HAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<p>builtins.</p>\n"},{"answer_id":215647,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215647#215647","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-ap</code>, 31 bytes</h1>\n\n<pre class=\"lang-perl prettyprint-override\"><code>map$.*=&quot;@F&quot;%$_?1:$_,2..$_;$_=$.\n</code></pre>\n<p><a href=\"https://tio.run/##K0gtyjH9/z83sUBFT8tWycFNSVUl3t7QSiVex0hPTyXeWiXeVkXv/39Do3/5BSWZ@XnF/3UTCwA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":215608,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215608#215608","body":"<h1>x86-64 machine code, 23 bytes</h1>\n<p>Hexdump:</p>\n<pre><code>44 8b c1 6a 01 41 8b c0 99 f7 f9 85 d2 75 04 5a\nf7 ea 50 e2 f0 58 c3\n</code></pre>\n<p>Uses the Microsoft calling convention - input in <code>ecx</code>, output in <code>eax</code>. It only supports 32-bit intermediate and final results, to make the code shorter.</p>\n<p>Assembly code (can be assembled by <code>ml64</code>):</p>\n<pre><code>.CODE\nmy  PROC\n        mov r8d, ecx;   // r8 = input number\n        push 1;         // number on stack = product\n    myloop:\n        mov eax, r8d;   // prepare divisor\n        cdq;            // in edx:eax\n        idiv ecx;       // divide\n        test edx, edx;  // check remainder\n        jnz myskip;     // nonzero? - not a divisor\n        pop rdx;        // get product from stack\n        imul edx;       // multiply\n        push rax;       // save product on stack\n    myskip:\n        loop myloop;    // check next number, down to 0\n        pop rax;        // restore stack to proper position\n        ret;            // return\nmy    ENDP\nEND\n</code></pre>\n<p>I used x64 only for its calling convention - so I would not have to save and restore a general-purpose register - x64 calling conventions permit clobbering <code>r8</code> and <code>r9</code>.</p>\n<p>I used a variant of <code>imul</code> with implicit input and output in <code>eax</code> - it has a shorter encoding (2 bytes), and doesn't require <code>mov</code> to return the result from the function at the end. So it actually multiplies the quotients, not the divisors; the final result remains correct.</p>\n<p>Disassembly (to see instruction sizes):</p>\n<pre><code>00007FF7F91E1870 44 8B C1             mov         r8d,ecx  \n00007FF7F91E1873 6A 01                push        1  \n    myloop:\n00007FF7F91E1875 41 8B C0             mov         eax,r8d  \n00007FF7F91E1878 99                   cdq  \n00007FF7F91E1879 F7 F9                idiv        eax,ecx  \n00007FF7F91E187B 85 D2                test        edx,edx  \n00007FF7F91E187D 75 04                jne         myloop+0Eh (07FF7F91E1883h)  \n00007FF7F91E187F 5A                   pop         rdx  \n00007FF7F91E1880 F7 EA                imul        edx  \n00007FF7F91E1882 50                   push        rax  \n    myskip:\n00007FF7F91E1883 E2 F0                loop        myloop (07FF7F91E1875h)  \n00007FF7F91E1885 58                   pop         rax  \n00007FF7F91E1886 C3                   ret\n</code></pre>\n"},{"answer_id":215602,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215602#215602","body":"<h1><a href=\"https://www.sagemath.org/\" rel=\"nofollow noreferrer\">SageMath</a>, 24 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>f=compose(prod,divisors)\n</code></pre>\n<p>Straightforward and direct. Is there a shorter way to do it in Sage?</p>\n"},{"answer_id":215601,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215601#215601","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf/blob/master/math_golf.txt\" rel=\"nofollow noreferrer\">MathGolf</a>, 3 <a href=\"https://github.com/maxbergmark/mathgolf/blob/master/code_page.py\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>─ε*\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjPz0n7///RlIZzW7X@/zfkMuIy5jLhMuUy4zLnsuCy5DI04DI04jI04TICIlMuIwsuYwMA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>─    # Get a list of divisors of the (implicit) input-integer\n ε   # Reduce this list by:\n  *  #  Subtracting\n     # (after which the entire stack joined together is output implicitly as result)\n</code></pre>\n"},{"answer_id":215596,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215596#215596","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell Core</a>, <s>41</s> 40 bytes</h1>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)(1..$a|?{!($a%$_)})-join'*'|iex\n</code></pre>\n<p>-1 byte thanks to mazzy!</p>\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNydFNzi9K/f@/ILEoMVdDJVFTw1BPTyWxxr5aEchTVYnXrNXUzcrPzFPXUq/JTK34//@/sQEA\" rel=\"nofollow noreferrer\" title=\"PowerShell Core – Try It Online\">Try it online!</a></p>\n"},{"answer_id":215600,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215600#215600","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia</a>, 27 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>f(x,y=1:x)=prod(y[x.%y.&lt;1])\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/P02jQqfS1tCqQtO2oCg/RaMyukJPtVLPxjBW839BUWZeSU6enkaanoahlbGBpuZ/AA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":215593,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215593#215593","body":"<h1><a href=\"https://github.com/ZippyMagician/Arn\" rel=\"nofollow noreferrer\">Arn</a>, <a href=\"https://github.com/ZippyMagician/Arn/wiki/Carn\" rel=\"nofollow noreferrer\">3 bytes</a></h1>\n<pre><code>Þ┤â\n</code></pre>\n<p><a href=\"https://zippymagician.github.io/Arn?code=KlwqLg==&amp;input=MQoyCjMKNAo1CjYKNwo4Cjk=&amp;flags=\" rel=\"nofollow noreferrer\">Try it!</a></p>\n<h1>Explained</h1>\n<p>Unpacked: <code>*\\*.</code></p>\n<p><code>*\\</code> fold with multiplication</p>\n<p><code>*.</code> a list of factors of the input</p>\n"},{"answer_id":215592,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/215592#215592","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 43 bytes</h1>\n<pre><code>[ dup [1,b] [ dupd divisor? ] count 2 / ^ ]\n</code></pre>\n<p><a href=\"https://tio.run/##NY09C8IwGIT3/opzl2pi6@fgKC4u4lQqxDRqsE1i8kYQ8bfXUhWO4zk4eM5CkvXtYb/dbZa4KW9UjUbQta/UC3NR4cvnaCRpa36z1qcGziuip/PaEIK6R2Vkd18l290SQXpB8pokA5AKBG1cpJC8wMAxQYYcU8wwxwJsDMbBMvAuOfgckzHebYEqOhRseCrRc4VKP3Swfo0S0sbOyjHCEWXbCPcX2Ui9KYWslfDtBw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Uses the formula <code>n^((number of divisors of n)/2)</code>.</p>\n<p>Usually <code>mod 0 =</code> (7 bytes) is shorter than <code>divisor?</code> (8 bytes), but the latter is used here to auto-load <code>math.functions</code> to disambiguate <code>^</code> (which happens to appear in a regex lib). Auto-use is weird. The unambiguous alternative to <code>^</code> exists (<code>fpow</code>), but it's longer.</p>\n<pre><code>[                ! anonymous lambda\n  dup [1,b]      ! ( n {1..n} )\n  [ ... ] count  ! count the elements that satisfy the predicate...\n    dupd         !   ( n i -- n n i )\n    divisor?     !   ( n ? ) tests if i is a divisor of n\n  2 / ^          ! halve the divisor count and raise n to the power\n]\n</code></pre>\n<hr />\n<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, 45 bytes</h1>\n<pre><code>USE: math.primes.factors\n[ divisors product ]\n</code></pre>\n<p><a href=\"https://tio.run/##NY7LCsIwEEX3@YrrD5Q@rI@6FnHTjbgSFzFObbBNazIRRPz2GlqFy@UODJxTScWdHY6HfbkrcCdrqEEruR4rstLcyE278kax7szvbPSlRW@J@dVbbRiOHp6MCu8bsS8LOGUlq1qIGZgcQ5vesxNvJEiRYY4cCyyxwhpJjCRFMkcakiNdIYvxCVbbYoIFQksuqkZbJ0646qd2YQaD7uoV4zy0sv@jOs8jK4JqSNrhCw\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n<p>Uses <code>divisors</code> built-in, but obviously the library import is expensive.</p>\n"},{"answer_id":211895,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/211895#211895","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.x</a>, 38 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>2:1e6 .|&gt;i-&gt;0∉i.%(2:i-1)==println(i)\n</code></pre>\n<p><a href=\"https://tio.run/##yyrNyUw0rPj/38jKMNVMQa/GLlPXzuBRR2emnqqGkVWmrqGmrW1BUWZeSU6eRqbm//8A\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n<p>Since the <a href=\"https://codegolf.stackexchange.com/a/27021/48931\">other Julia answer</a> was posted, <code>primes</code> is no longer in the standard library. We use a couple of features:</p>\n<ul>\n<li><code>∉</code> costs 3 bytes but is shorter than <code>in(...)</code>.</li>\n<li>We use the map syntax <code>f.x</code> over <code>map(f,x)</code>.</li>\n<li>We can broadcast <code>%</code> using <code>.%</code>.</li>\n<li>Floating point can exactly represent everything up to <code>1e6</code>, no problems there.</li>\n<li>We use a <code>==</code> short circuiting trick.</li>\n</ul>\n"},{"answer_id":209237,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209237#209237","body":"<h1><a href=\"http://jdk.java.net/\" rel=\"nofollow noreferrer\">Java (JDK)</a>, <s>89</s> <s>87</s> 86 bytes</h1>\n<ul>\n<li>-2 bytes thanks to Calculuswhiz!</li>\n</ul>\n\n<pre class=\"lang-java prettyprint-override\"><code>m-&gt;{int i=0,j,r=1;for(;++i&lt;m.length;)for(j=0;++j&lt;i;)r=m[i][j]!=-m[j][i]?0:r;return r;}\n</code></pre>\n<p><a href=\"https://tio.run/##jZJBb4JAEIXv/oqpJ0hhgx5dsWnaNOmhJ4@Ew4qLXQoL2R1MreG301G2YhPTlJDM8ob35c1AIfYiLLYffVYKa@FNKA3HCYBFgSqDgtqsRVWyvNUZqlqzF3dYKo1JmqQBvGqUO2lWkEPcV@HqSB1QcRQUgYlnPK@Nx@/v1bJipdQ7fOf@SSriiNRiqbhv4ipRaVKkd3FYUaGHh2hhuJHYGg2Gdz2fUKim3ZQUymXb12oLFQX21miU3iUpZGqvSvUlt89yI1Ba/zwLgIsKJOGTsNLSOXY9uFQ4zgI43V3wD8UJl85IiQKIfnsGJbpSwpmT/sTMrx3za8Lg6/i50DrB@5mxErSNT1iMw/oX6PpgUVasbpE1tDIstTcNb1xTnzvHiAZhDFEHvH8LNf4sj8aIg2VYD1/GI6t/Qd5w5kw0TXnwHNy9epqxm3T9Nw\" rel=\"nofollow noreferrer\" title=\"Java (JDK) – Try It Online\">Try it online!</a></p>\n<p>Returns 0 for <code>false</code> and 1 for <code>true</code>.</p>\n"},{"answer_id":123568,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123568#123568","body":"<h2>Check, 6 bytes</h2>\n<pre><code>,&quot; &quot;*o\n</code></pre>\n<p>Pass the input by the command-line arguments as a list of code points, i.e. <code>[72,101,108,108,111,44,32,87,111,114,108,100,33]</code>.</p>\n<p>Explanation:</p>\n<ul>\n<li><code>,</code> gets the length of the input.</li>\n<li><code>&quot; &quot;</code> pushes an array containing <code>32</code> (for space).</li>\n<li><code>*</code> repeats that array as many times as the length of the input.</li>\n<li><code>o</code> displays the result as a list of characters.</li>\n</ul>\n"},{"answer_id":215322,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/215322#215322","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 3 bytes</h1>\n<pre><code>gð×\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f8//fCGw9P///dIzcnJ11EIzy/KSVEEAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<pre><code>gð×  # full program\n ð   # a space...\n  ×  # repeated...\ng    # length of input...\n  ×  # times\n</code></pre>\n"},{"answer_id":215317,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/215317#215317","body":"<h1><a href=\"http://nim-lang.org/\" rel=\"nofollow noreferrer\">Nim</a>, 38 bytes</h1>\n<pre><code>for _ in stdin.readAll:stdout.write&quot; &quot;\n</code></pre>\n<p><a href=\"https://tio.run/##y8vM/f8/Lb9IIV4hM0@huCQlM0@vKDUxxTEnxwrIyy8t0SsvyixJVVJQ@o/CV1YCasvnSkosAgA\" rel=\"nofollow noreferrer\" title=\"Nim – Try It Online\">Try it online!</a></p>\n<p>Since Nim is <em>style-insensitive</em>, something like this also works:</p>\n<pre><code>fOr _ iN sTdIn.rEaDaLl:sTdOuT.wRiTe&quot; &quot;\n</code></pre>\n<p><a href=\"https://tio.run/##y8vM/f8/zb9IIV4h00@hOCTFM0@vyDXRJdEnxwrI8y8N0SsPygxJVVJQ@o/CV1b6n5afz5WUWAQA\" rel=\"nofollow noreferrer\" title=\"Nim – Try It Online\">Try it online!</a></p>\n"},{"answer_id":215309,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/215309#215309","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 3 bytes</h1>\n<pre><code>,n*\n</code></pre>\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPn/XydP6/9/Q0NDAA\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n<p>pretty self explanatory, and I don't think there is a way to make it smaller unless there is some really weird thing with % or /.</p>\n"},{"answer_id":215302,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/215302#215302","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 21 bytes</h1>\n<pre><code>D,f,@@,bL*\n$f&gt;&quot; &quot;&gt;?\no\n</code></pre>\n<p><a href=\"https://tio.run/##S0xJKSj4/99FJ03HwUEnyUeLSyXNTklByc6eK/////8eqTk5@ToK4flFOSmKAA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n"},{"answer_id":215298,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/215298#215298","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 4 bytes</h1>\n<pre><code>R' L\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/P0i9wuf///9KHqk5Ofk6CuH5RTkpikoA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a> (Note: prints <code>x</code>s instead of spaces so that the output is visible; change the <code>x</code> to <code> </code> to [not] see the real version)</p>\n"},{"answer_id":214558,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/214558#214558","body":"<h1><a href=\"http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/\" rel=\"nofollow noreferrer\">Forth (gforth)</a>, 9 bytes</h1>\n\n<pre class=\"lang-forth prettyprint-override\"><code>typewhite\n</code></pre>\n<p><a href=\"https://tio.run/##S8svKsnQTU8DUf@tFNL@l1QWpJZnZJak/rfmKlZS8EjNycnXUQjPL8pJUVRSMEopLVAAKVFILlJIAxIgNViE/wMA\" rel=\"nofollow noreferrer\" title=\"Forth (gforth) – Try It Online\">Try it online!</a></p>\n<p>It is a <a href=\"https://www.complang.tuwien.ac.at/forth/gforth/Docs-html/Displaying-characters-and-strings.html#Displaying-characters-and-strings\" rel=\"nofollow noreferrer\">gforth built-in</a>. A string in gforth is commonly represented as <code>addr length</code>, and <code>typewhite</code> consumes <code>addr length</code> and prints <code>length</code> spaces.</p>\n"},{"answer_id":214311,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/214311#214311","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 22 bytes</h1>\n<pre><code>qS/{_);1&gt;W%+T_):T@*=}%\n</code></pre>\n<p><a href=\"https://tio.run/##FcqxCsIwEIDhVzmHDtWCuCqKo7uFjiVNr3j1cqdJahDx2aNZ/@@3s3E5P6/bT18fdqeu2rR9vW/P6@O3yvmiqQGPhvndQCJmUB4hoJB6mJTvoeR4Ax1mtJFUzMAIViV6faEPhP9jWpBBTOFEIwK5R1GHElc/\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\">Try it online!</a></p>\n"},{"answer_id":213795,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/213795#213795","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, <s>14</s> 11 bytes</h1>\n<pre><code>SzS!ö!…¢ŀŀw\n</code></pre>\n<p><a href=\"https://tio.run/##RYyxDcIwFER7T/E9ChNQJIj6i3xiy4m/ZTuyoAqMQsEIGSAoi2QRY9MgnXQ63btTUzB53J@PdcnNvZGfRe7ze31t8zannHOrdIAihOtkIWIwUhztheDk2MIBWj2SaBV5goQVG9GKs@LiHZVYF6XH@KstYZTi/zmw7SFEr4tFhk4HN@ANFCeIiqAnSx4j@0qHyTkO1FUwsTdf\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a> Inspiration was taken from <a href=\"https://codegolf.stackexchange.com/a/174140\">this program</a> by Zgarb for the forward-and-reverse stepping.</p>\n"},{"answer_id":67102,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/67102#67102","body":"<h1><a href=\"https://github.com/cyoce/PlatyPar\" rel=\"nofollow noreferrer\">PlatyPar</a>, 21 bytes</h1>\n<pre><code>X,u#^2%?&quot;dark&quot;\\&quot;light\n</code></pre>\n<p>Explanation</p>\n<pre><code>X,u#^                  ## charcode of the letter XOR the number\n     2%?      \\        ## if it is odd\n        &quot;dark&quot;         ## output &quot;dark&quot;\n               &quot;light  ## else output &quot;light\n</code></pre>\n<p><a href=\"https://rawgit.com/cyoce/PlatyPar/master/page.html?code=X%2Cu%23%5E2%25%3F%22dark%22%5C%22light\" rel=\"nofollow noreferrer\">Try it online</a>!</p>\n"},{"answer_id":148016,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/148016#148016","body":"<h1><a href=\"https://github.com/JohnEarnest/ok\" rel=\"nofollow noreferrer\">K (oK)</a>, 16 bytes</h1>\n<pre><code>`dark`light 2!+/\n</code></pre>\n<p><a href=\"https://tio.run/##y9bNz/7/P80qISWxKDshJzM9o0TBSFFb/3@auoZSkqGStVK6GZBIMVHS/A8A\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n<p><code>+/</code> sum the (code points of the) argument</p>\n<p><code>2!</code> mod-2</p>\n<p><code>`dark`light </code> select that from this list of symbols</p>\n"},{"answer_id":205211,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/205211#205211","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 40 bytes</h1>\n<pre class=\"lang-python prettyprint-override\"><code>print('ldiagrhkt'[int(input(),35)%2::2])\n</code></pre>\n"},{"answer_id":213921,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/213921#213921","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 3 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ø(Q\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//8A6NwP//o6MNdIx0dA1jdaJ1jXQMdAyADEMwHQsA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V@m5JlXUFpipaCkU3loudG5LVmHdutwKfmXlkBE7Std/h/eoRH4X@fQNvv/0dHRBjpGOrqGsTrRukY6BjoGQIYhmAYygCwgBIsg0yAZoAqwiAFUjy5Ck4GOrhGQNgJxYwE\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>ø    # Zip/transpose the (implicit) input-matrix; swapping rows/columns\n (   # Negate each value in this transposed matrix\n  Q  # And check if it's equal to the (implicit) input-matrix\n     # (after which the result is output implicitly)\n</code></pre>\n"},{"answer_id":213919,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/213919#213919","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 3 bytes</h1>\n<pre><code>N⁼Z\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/9/vUeOeqP///0dHG@gY6BjG6oBpAyCtawhmxAIA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<p>Posting before caird coinheringaahing finds this question.</p>\n"},{"answer_id":213918,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/213918#213918","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 5 bytes</h1>\n<pre><code>§=T†_\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//9By25BHDQvi////Hx1toGOgYxirA6YNgLSuIZgRCwA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n"},{"answer_id":188502,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/188502#188502","body":"<h1><a href=\"https://github.com/TheOnlyMrCat/33\" rel=\"nofollow noreferrer\">33 v1.0</a>, 13 bytes</h1>\n<p><em>The behaviour of the <code>y</code> operator was changed in v1.1, so this program no longer works</em></p>\n<p>Gets the file name passed as an argument and prints the extension (without leading '.') to standard output.</p>\n<pre><code>1bt'.'ywmcbtp\n</code></pre>\n<p>Explanation:</p>\n<pre><code>1b            (Gets the second item in argv, the filename input)\n  t'.'y       (Splits that by '.')\n       wmcb   (Gets the last element in the list)\n           tp (Prints to standard output)\n</code></pre>\n"},{"answer_id":211903,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/211903#211903","body":"<h1><a href=\"https://codewithrockstar.com/\" rel=\"nofollow noreferrer\">Rockstar</a>, 128 bytes</h1>\n<pre><code>X's1\nwhile X-999999\nlet X be+1\nlet D be X\nP's1\nwhile P and D-2\nlet D be-1\nlet M be X/D\nturn up M\nlet P be X/D aint M\n\nif P say X\n</code></pre>\n<p><a href=\"https://codewithrockstar.com/online\" rel=\"nofollow noreferrer\">Try it here</a> (Code will need to be pasted in) - <em>Extremely</em> inefficient; knock a few <code>9</code>s off the second line to have it complete in a sane amount of time.</p>\n"},{"answer_id":211901,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/211901#211901","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-R</code></a>, 6 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>L³õ fj\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LVI&amp;code=TLP1IGZq\" rel=\"nofollow noreferrer\">Test it</a></p>\n"},{"answer_id":27022,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/27022#27022","body":"<h2><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 45 bytes</h2>\n\n<pre class=\"lang-python prettyprint-override\"><code>k=P=1\nwhile k&lt;1e6:P%k&gt;0==print(k);P*=k*k;k+=1\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P9s2wNaQqzwjMydVIdvGMNXMKkA1287A1ragKDOvRCNb0zpAyzZbK9s6W9vW8P9/AA\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n<p>By the time the loop reaches testing <code>k</code>, it has iteratively computed the squared-factorial <code>P=(k-1)!^2</code>. If <code>k</code> is prime, then it doesn't appear in the product <code>1 * 2 * ... * (k-1)</code>, so it's not a factor of <code>P</code>. But, if it's composite, all its prime factors are smaller and so in the product. The squaring is only actually needed to stop <code>k=4</code> from falsely being called prime.</p>\n<p>More strongly, it follows from <a href=\"https://en.wikipedia.org/wiki/Wilson%27s_theorem\" rel=\"noreferrer\">Wilson's Theorem</a> that when <code>k</code> is prime, <code>P%k</code> equals <code>1</code>. Though we only need that it's nonzero here, it's useful in general that <code>P%k</code> is an indicator variable for whether <code>k</code> is prime.</p>\n<p>Thanks to @Sisyphus for 1 byte with <code>P%k&gt;0==print(k)</code> using chained operator short-circuiting in place of <code>P%k and print(k)</code>.</p>\n"},{"answer_id":10934,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/10934#10934","body":"<h2>Javascript, <s>27</s> <s>26</s> <s>25</s> 23 characters</h2>\n<pre><code>for(a=b=1;n--;)a+=b=a-b\n</code></pre>\n<p>In an interactive javascript command line (Like google chrome console) it'll print out the nth fibonacci term for n &gt; 1. undefined for n=1, runs forever for n &lt; 1.</p>\n<p>Credit to Bojidar Marinov</p>\n<h3>41 characters</h3>\n<pre><code>for(x=[1,1],y=1;n-++y;)x[y]=x[y-1]+x[y-2]\n</code></pre>\n<p>Saving the n (&gt;=2) first terms in an array.</p>\n"},{"answer_id":211754,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/211754#211754","body":"<h1><a href=\"https://github.com/m-ender/labyrinth\" rel=\"nofollow noreferrer\">Labyrinth</a>, 6 bytes</h1>\n<pre><code> ,\n\\&quot;@\n</code></pre>\n<p><a href=\"https://tio.run/##y0lMqizKzCvJ@P9fQYcrRsnh/3@P1JycfB2F8vyinBRFAA\" rel=\"nofollow noreferrer\" title=\"Labyrinth – Try It Online\">Try it online!</a></p>\n<p>A character input command, a newline-printing command, a halt command, and a three-way junction for branching. I don't think we can do better than that. (A conditional halt without a three-way junction should involve division by zero, which gets unnecessarily verbose)</p>\n<pre><code>    Start at the first valid command\n,   Take a character input (-1 on EOF)\n&quot;   A no-op at 3-way junction: turn left if negative, turn right if positive\n    (we can assume the input string consists of printable ASCII, which is &gt; 0)\n\n\\   If positive: print a newline, turn backwards\n&quot;   3-way junction: top &gt; 0, so turn right (which is reflected to left by a wall)\n,   Repeat from the start of the program until it hits EOF\n\n@   If EOF, halt\n</code></pre>\n"},{"answer_id":211572,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/211572#211572","body":"<h1><a href=\"https://github.com/m-ender/labyrinth\" rel=\"nofollow noreferrer\">Labyrinth</a>, 38 bytes</h1>\n<pre><code>?_&quot;):}}:{%={\n@ ;        {\n!{{=-{:}}:}+\n</code></pre>\n<p><a href=\"https://tio.run/##y0lMqizKzCvJ@P/fPl5J06q21qpa1baay0HBWgEKqrkUq6ttdatBcrXa//8bmgAA\" rel=\"nofollow noreferrer\" title=\"Labyrinth – Try It Online\">Try it online!</a></p>\n<p>Slight improvement to <a href=\"https://codegolf.stackexchange.com/a/150760/78410\">existing answer</a>.</p>\n<h3>How it works</h3>\n<p>Stack notation is <code>a b ... c | d e ... f</code> where <code>a b ... c</code> part is the main stack, <code>d e ... f</code> is auxiliary, and <code>c</code> and <code>d</code> are the top of two stacks. I found this notation useful in developing and explaining the answer.</p>\n<pre><code>        Start at the top left\n?_&quot;     Push input and a 0, going straight through the junction\n        n i=0 | sum=0\n)       Increment i\n:}}     n | i i sum\n:{%=    n i | n%i sum\n{{+}    n i | sum'=sum+n%i\n:}}:{-  n n-i | i sum'\n={      n i n-i | sum'\n;       If n-i is nonzero, turn right and discard n-i, continuing the loop\n{!@     Otherwise go straight, print sum and terminate\n</code></pre>\n"},{"answer_id":211549,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/211549#211549","body":"<h1><a href=\"https://codewithrockstar.com/\" rel=\"nofollow noreferrer\">Rockstar</a>, 27 bytes</h1>\n<pre><code>listen to S\ncut S\nsay &quot; &quot;*S\n</code></pre>\n<p><a href=\"https://codewithrockstar.com/online\" rel=\"nofollow noreferrer\">Try it here</a> (Code will need to be pasted in)</p>\n<p>Replace the last line with the below to wrap the output in single quotes.</p>\n<pre><code>say &quot;'&quot;+&quot; &quot;*S+&quot;'&quot;\n</code></pre>\n"},{"answer_id":210017,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/210017#210017","body":"<h1><a href=\"https://github.com/Reconcyl/flurry\" rel=\"nofollow noreferrer\">Flurry</a> <code>-bnb</code>, 42 bytes</h1>\n<pre><code>[]{(){}{}}[]{({})}&lt;((({&lt;({}){}&gt;})){}){}{}&gt;\n</code></pre>\n<p><a href=\"https://bubbler-4.github.io/Flurry/#!WwBdAHsAKAApAHsAfQB7AH0AfQBbAF0AewAoAHsAfQApAH0APAAoACgAKAB7ADwAKAB7AH0AKQB7AH0APgB9ACkAKQB7AH0AKQB7AH0AewB9AD4A#SABlAGwAbABvACwAIABXAG8AcgBsAGQAIQA=##YgBuAGIA#MQAwADAAMAAwAA==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h3>Run example (using Haskell interpreter)</h3>\n<pre><code>$ printf &quot;Hello World!&quot; | ./flurry -bnb a.flr\n          \n$ printf &quot;Hello World!&quot; | ./flurry -bnb a.flr | wc -c\n12\n</code></pre>\n<p>It takes 24 bytes just to construct a single space (32): <code>&lt;((({&lt;({}){}&gt;})){}){}{}&gt;</code>. Even worse is that it takes 2 more byets to construct a single newline (10): <code>(&lt;&gt;&lt;&lt;&gt;()&gt;)&lt;(&lt;({}){}&gt;{}){}&gt;</code>...</p>\n<p>The algorithm is: empty the stack, preserving the value of stack height, and then push space that many times.</p>\n<pre class=\"lang-haskell prettyprint-override\"><code>main = height pop-I height push-I 32\n\n// Return self, popping and discarding one item from stack\npop-I = \\x. K x pop\n// (height pop-I height) returns original stack height with\n// the stack emptied as a side effect\n\n// Return self, pushing itself to the stack once\npush-I = \\x. push x\n\n32 = 2**2 * 2**2 * 2\n= &lt;(2 2)(2 2)2&gt;\n= &lt;(push ((push (push 2)) pop)) pop pop&gt;\n</code></pre>\n"},{"answer_id":211435,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/211435#211435","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 42 bytes</h1>\n<p>Port of the <a href=\"https://codegolf.stackexchange.com/a/50241/95792\">Java answer</a>. Go upvote that!</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;y=&gt;(g=i=&gt;i&amp;&amp;g(--i)^x*((y&gt;&gt;i)%2)&lt;&lt;i)(32)\n</code></pre>\n<p><a href=\"https://tio.run/##BcFRCoAgDADQ0xRbYGD12XaUQKxkIS4yok6/3jvCE2q85Lxd0XWznewl/oghkRBL2yZwTnB5O4CPWbAZcJ4FYRzQopaqeeuzJtjBTwh@RLQf\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":211207,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/211207#211207","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 30 bytes</h1>\n<pre><code>StringReplace[a_~~b_:&gt;a&lt;&gt;b&lt;&gt;b]\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b7P7ikKDMvPSi1ICcxOTU6Mb6uLineyi7Rxi4JiGL/F9uG5EOURCvreOYVlJa45RflxqpxBQDFSqKLHZR17Yod0hyUY9XqgpMT8@qquZQSk5JTlHQgdCqIAeYocdX@BwA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>For every non-overlapping pair of characters, appends the second character.</p>\n<p><code>&quot;&quot;&lt;&gt;MapAt[#&lt;&gt;#&amp;,#,;;;;2]&amp;</code> doesn't work on an empty input.</p>\n"},{"answer_id":211176,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/211176#211176","body":"<h1><a href=\"https://codewithrockstar.com/\" rel=\"nofollow noreferrer\">Rockstar</a>, 95 bytes</h1>\n<pre><code>listen to S\ncut S\nX's0\nY's0\nwhile S-X\nlet S at X be*1+Y\nlet Y be not Y\nlet X be+1\n\njoin S\nsay S\n</code></pre>\n<p><a href=\"https://codewithrockstar.com/online\" rel=\"nofollow noreferrer\">Try it here</a> (Code will need to be pasted in)</p>\n"},{"answer_id":211115,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/211115#211115","body":"<h1>x86-16 machine code, 18 bytes</h1>\n<pre><code>00000000: 89c1 9988 0e09 0150 d40a 7502 02d4 58e2  .......P..u...X.\n00000010: f2c3                                     ..\n</code></pre>\n<p>Listing:</p>\n<pre><code>89 C1           MOV  CX, AX                 ; input number as loop counter \n99              CWD                         ; zero DX as running sum \n            DIVLOOP:\n88 0E 0109      MOV  BYTE PTR[AAM1+1], CL   ; move loop counter to divisor \n50              PUSH AX                     ; save input number \n            AAM1:\nD4 0A           AAM                         ; ZF if (AL % CL == 0), AH = quotient\n75 02           JNZ  END_LOOP               ; if not ZF, continue loop \n02 D4           ADD  DL, AH                 ; otherwise add to running sum \n            END_LOOP:\n58              POP  AX                     ; restore input number \nE2 F2           LOOP DIVLOOP                ; loop until CL == 0 \nC3              RET                         ; return to caller\n</code></pre>\n<p>Callable function, input <code>N</code> in <code>AX</code>, result in <code>DX</code>.</p>\n<p>Inspired by <a href=\"https://codegolf.stackexchange.com/a/142105/84624\">@CodyGray's excellent answer</a>, and the comment <code>&quot;It sure seems like there should be a way to make this shorter&quot;</code> I just had to try!</p>\n<p>As Cody mentioned, Using <code>DIV</code>/<code>IDIV</code> is inconvenient because it clobbers two registers including the dividend. Another is that the <code>ZF</code> flag is set when the quotient is <code>0</code>, however in this case we're only interested in when the remainder is <code>0</code>.  Enter <code>AAM</code>, a trusty and underrated byte-sized division/modulo instruction that can be golfy.  Even though it does clobber the dividend just like <code>DIV</code>, it will set <code>ZF</code> when the remainder is <code>0</code> which is what we want here.  It's downside is that the divisor is encoded in the instruction opcode, which can be modified at runtime at a cost of 4 bytes (in real mode at least).</p>\n"},{"answer_id":211111,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/211111#211111","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 15 bytes</h1>\n<pre><code>~.,{.3$\\%!*+}*+\n</code></pre>\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPn/v05Pp1rPWCVGVVFLu1ZL@/9/E0szAA\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n<pre><code>~                # Parses the input to integer\n .,              # Makes an array with numbers from 0 to (N-1)\n   {.3$\\%!*+}    # This block goes to the top of the stack without being executed\n             *   # Folds\n              +  # Adds the input and the result\n</code></pre>\n<p>What the block does:</p>\n<pre><code>    .            # Duplicates the number of the array\n     3$          # Makes a copy of N\n       \\%!       # Tests if the number of the array is a divisor of N\n          *      # Multiplies, resulting in the divisor if it was divisible or 0 if it wasn't\n           +     # Adds to the acumulator\n</code></pre>\n"},{"answer_id":211078,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/211078#211078","body":"<h1><a href=\"https://codewithrockstar.com/\" rel=\"nofollow noreferrer\">Rockstar</a>, 96 bytes</h1>\n<pre><code>listen to N\nX's0\nT's0\nwhile N-X\nlet X be+1\nlet D be N/X\nturn up D\nlet T be+D is N/X and X\n\nsay T\n</code></pre>\n<p><a href=\"https://codewithrockstar.com/online\" rel=\"nofollow noreferrer\">Try it here</a> (Code will need to be pasted in)</p>\n"},{"answer_id":210966,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/210966#210966","body":"<h3><b>x86 machine code - 15 bytes</b></h3>\n<p>This is the easiest way my answer to generate fibonacci numbers. I don't believe using <a href=\"https://www.felixcloutier.com/x86/xadd\" rel=\"nofollow noreferrer\">XADD</a> instruction, I can generate fibonacci numbers. Well, output store in <code>eax</code>, debug it using GDB with <a href=\"https://github.com/longld/peda\" rel=\"nofollow noreferrer\">peda</a> (GDB plugin) to make debugging easier. Just make a breakpoint at <code>fib_seq</code> label then <code>s</code> (mean single-step).</p>\n<p>So this is example :</p>\n<pre>\n     1                                  global fib_seq\n     2                                  section .text\n     3                                  \n     4                                  fib_seq:\n     5 00000000 31C0                        xor eax, eax ; eax = 0\n     6 00000002 6A01                        push 1\n     7 00000004 5A                          pop edx      ; edx = 1\n     8 00000005 6A0A                        push 10\n     9 00000007 59                          pop ecx  ; loop counter\n    10                                  .loop:\n    11 00000008 E305                        jecxz .exit_loop\n    12 0000000A 0FC1D0                      xadd eax, edx\n    13 0000000D E2F9                        loop .loop\n    14                                  .exit_loop:\n</pre>\n"},{"answer_id":210881,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/210881#210881","body":"<h1><a href=\"https://codewithrockstar.com/\" rel=\"nofollow noreferrer\">Rockstar</a>, <s>121</s> <s>110</s> <s>86</s> 82 bytes</h1>\n<p>1-indexed</p>\n<pre><code>listen to N\nX's1\nY's1\nwhile N\nlet Z be X+Y\nlet X be Y\nlet Y be Z\nlet N be-1\n\nsay X\n</code></pre>\n<p><a href=\"https://codewithrockstar.com/online\" rel=\"nofollow noreferrer\">Try it here</a> (Code will need to be pasted in)</p>\n"},{"answer_id":210489,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210489#210489","body":"<h2>Python 3, 95 bytes</h2>\n<pre><code>s,z=eval(input());p=0\nwhile p&lt;len(s):a=s[p:p+z].ljust(z);print(a[::-1] if p%(2*z) else a);p+=z\n</code></pre>\n<p>Try it here online:\n<a href=\"https://ideone.com/F4aY4d\" rel=\"nofollow noreferrer\">https://ideone.com/F4aY4d</a></p>\n"},{"answer_id":210476,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210476#210476","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 20 bytes</h1>\n<pre><code>⟨{ġ|,Ṣ↰}lᵛ⟩{i↔ⁱ⁾}ᶠ~ṇ\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/pfXa6kUFCUn1KanFpsxaX0cFen/aO2DY@amoCshzu2Acnah1snPOpYrqSnVP7/0fwV1UcW1ug83LkIqKo25@HW2Y/mr6zOfNQ25VHjxkeN@2ofbltQ93Bn@///0dFKAUX56UWJubmZeekKAaVVVTmpxQpqCs75KakK7vk5aUo6JrE60UoeqTk5@ToK4flFOSmKSjqmIDG4Goh6kAHOGYk5Oal56anFSjrmRKgxBqkpSC1KS00uScssARkcCwA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<p>Takes input as a list <code>[string, slice length]</code>.</p>\n<pre><code>⟨{     }                To the string, apply the following predicate:\n  ġ                     split it into slices of roughly equal length,\n   |                    or\n    ,Ṣ                  append a space\n      ↰                 and recur.\n        lᵛ⟩             ...such that each slice has the prescribed length.\n                  ~ṇ    The output, split on newlines, is\n           {    }ᶠ      every possible result from\n            i           taking a slice with its 0-index\n             ↔          and reversing\n               ⁾        the slice\n              ⁱ⁾        a number of times equal to the index.\n</code></pre>\n<p>I'm a bit ashamed to have only come up with this the moment I had finished explaining my previous solution:</p>\n<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 22 bytes</h1>\n<pre><code>{|,Ṣ↰}ʰġ₎z₂z{i↔ⁱ⁾c}ᶠ~ṇ\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/pfXa6kUFCUn1KanFpsxaX0cFen/aO2DY@amoCshzu2Acnah1snPOpYrqSnVP6/ukbn4c5FQAW1pzYcWfioqa8KqLKqOvNR25RHjRsfNe5Lrn24bUHdw53t//9HRysFFOWnFyXm5mbmpSsElFZV5aQWK6gpOOenpCq45@ekKemYxOpEK3mk5uTk6yiE5xflpCgq6ZiCxOBqIOpBBjhnJObkpOalpxYr6ZgTocYYpKYgtSgtNbkkLbMEZHAsAA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<pre><code>      ʰ                   Apply the following predicate to the input string:\n{|                        leave it unchanged, or\n  ,Ṣ                      append a space\n    ↰}                    and recur.\n       ġ                  Split the string into slices\n        ₎                 of the given length (except maybe the last one).\n         z₂z              Each slice has the same length.\n                    ~ṇ    The output, split on newlines, is\n            {     }ᶠ      every possible result from\n             i            taking a slice with its 0-index\n              ↔           and reversing\n                ⁾         the slice\n               ⁱ⁾         a number of times equal to the index\n                 c        (then concatenating it, as the zipping exploded it).\n</code></pre>\n"},{"answer_id":210402,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210402#210402","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-R</code></a>, 9 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>òV ËzEÑÃù\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LVI&amp;code=8lYgy3pF0cP5&amp;input=IlByb2dyYW1taW5nIFB1enpsZXMgJiBDb2RlIEdvbGYiCjQ\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":210474,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210474#210474","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 8 bytes</h1>\n<pre><code>sz⁶ZUÐeY\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/7@46lHjtqjQwxNSI////68UUJSfXpSYm5uZl64QUFpVlZNarKCm4Jyfkqrgnp@TpvTfBAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<pre><code>s           Slice the left argument into pieces (right argument) long.\n z          Zip it with filler\n  ⁶         &quot; &quot;,\n   Z        zip it back,\n    U       reverse the slices\n     Ðe     at even 1-indices,\n       Y    and join on newlines.\n</code></pre>\n"},{"answer_id":210457,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210457#210457","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 22 bytes</h1>\n<pre><code>ô0UεRDg²s-úXÈiR}X&gt;U}}»\n</code></pre>\n<p><a href=\"https://tio.run/##AUcAuP9vc2FiaWX//8O0MFXOtVJEZ8Kycy3DuljDiGlSfVg@VX19wrv//1Byb2dyYW1taW5nIFB1enpsZXMgJiBDb2RlIEdvbGYKNA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<p>Bring on the golfing suggestions!</p>\n"},{"answer_id":210419,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210419#210419","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 34 bytes</h1>\n<pre><code>Fla.sXb-#(@RVa&lt;&gt;b)&lt;&gt;b{Po?lRVlo!:o}\n</code></pre>\n<p>Similar approach as to my <a href=\"https://codegolf.stackexchange.com/questions/150117/boustrophedonise/210418#210418\">Boustrophedonise answer</a>, but with padding and splitting the string.</p>\n<p><a href=\"https://tio.run/##K8gs@P/fLSdRrzgiSVdZwyEoLNHGLkkTiKsD8u1zgsJy8hWt8mv////vkZqTk6@jEJ5flJOi@N8UAA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n"},{"answer_id":210414,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210414#210414","body":"<h1>Python 3, 64 bytes</h1>\n<p><a href=\"https://tio.run/##BcGxCsMgEADQvV9xZCgKtlCyXXDqkDW7OAgxicWcwTPU5ufte8evbIn61ma/gBOsSFX9kniD7xaiB8YjByqCDZJ95s/JRZA0iNXKgTUbQjtU/ajNiW7Kac1u3wOtMJ3XFT3DHd5p9jCmuHQKetnaHw\" rel=\"nofollow noreferrer\">Try Online</a></p>\n<pre><code>def a(s,n,x=1):\n while s:print(s[:n].rjust(n)[::x]);s=s[n:];x=-x\n\na('Programming Puzzles &amp; Code Golf',4)\n</code></pre>\n<p>Step 1: Print the first n bytes of the string (flag = 1 so normal order)\nStep 2: Trim the string by n bytes\nStep 3: Flip the flag to -1\nRepeat the process until string is empty</p>\n<p>Note that flag flips to +1 and -1. When it goes to -1, it prints in reverse order</p>\n"},{"answer_id":210403,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/210403#210403","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, <sup>22</sup> <sup>15</sup> 13 bytes</h1>\n<pre><code>]`|.&quot;1@(]\\)~-\n</code></pre>\n<p><em>-2 bytes thanks to xash</em></p>\n<p>Note the above solution requires J901, which allows you to apply cyclic gerunds using the rank <code>&quot;</code> conjuntion.  TIO uses an older version, so to run this one you have to download J.</p>\n<p>However, my previous solution of 15 bytes will work on TIO:</p>\n<h2>15 bytes</h2>\n<pre><code>([]`|.\\[:,]\\)~-\n</code></pre>\n<p><a href=\"https://tio.run/##VcxBC4IwGIDhu7/iQ8lt4b4SOo2SkVCXCOk6F0apGdrA6GKyv76CunR4Tw@8N@cjqWAlgEAEcxCfOEJ62G0cVboYMVci0jmz3DFvv0agSugwKeiIYcJmuPRjJqnOLf9xgzIYUeqjUP4cYv2nXH6f@oVWTWmCcmID5nnl@WqAZL2p@1PXNfcasucwtOUDQkjNpYStaSsCFSzcGw\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<p>Finally, another 15 byte alternative, thanks to @Marshall and based on a trick from @ngn, is:</p>\n<pre><code>([:|.@]/\\]\\)~-\n</code></pre>\n"},{"answer_id":210384,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/210384#210384","body":"<h1><a href=\"https://github.com/JonoCode9374/Keg\" rel=\"nofollow noreferrer\">Keg</a>, <code>-hd</code>, 4 bytes</h1>\n<pre><code>\\./÷\n</code></pre>\n<p><a href=\"https://tio.run/##y05N//8/Rk//8Pb//8szEkv09DKL9fRKMkBkWmZO6n/djBQA\" rel=\"nofollow noreferrer\" title=\"Keg – Try It Online\">Try it online!</a></p>\n<p>Splits on dots, and prints the last element.</p>\n"},{"answer_id":210355,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/210355#210355","body":"<h1>8086 Assembly (NASM) + DOS, 262 bytes source, 50 bytes assembled</h1>\n<p>I'm pretty new to assembly, but I thought I'd give this a try.\nThis is a full DOS program, not just a snippet.</p>\n<pre><code>section .bss\nb resb 256\norg 256\nsection .text\nmov byte[b],254\nmov ah,10\nmov dx,b\nint 33\nmov bh,0\nmov bl,[b+1]\nadd bx,b+2\nmov bp,bx\nl:sub bx,1\ncmp byte[bx],46\njne l\nmov byte[bx],10\np:mov ah,2\nmov dl,[bx]\nint 33\nadd bx,1\ncmp bx,bp\njb p\nint 32\n</code></pre>\n<p>Essentially, it reads a line of text into a buffer, seeks the end,\nthen seeks backwards until it reaches a <code>.</code>. Then it just prints\nthe rest of the string from that point on. I wasn't able to use\nDOS's built-in print function, though, since that uses <code>$</code> as\nthe end-of-string character, which the prompt says is a valid\ncharacter for the extension itself.</p>\n<p>Here is the hexdump of the assembled binary:</p>\n<pre><code>00000000  c6 06 34 01 fe 88 e4 ba  34 01 cd 21 b7 00 8a 1e\n00000010  35 01 81 c3 36 01 89 dd  83 eb 01 80 3f 2e 75 f8\n00000020  c6 07 0a b4 02 8a 17 cd  21 83 c3 01 39 eb 72 f3\n00000030  cd 20\n</code></pre>\n"},{"answer_id":210303,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/210303#210303","body":"<p><strong>Python3 (32 bytes)</strong></p>\n<pre><code>f=input()\nprint(f[f.rfind('.'):])\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P802M6@gtERDk6ugKDOvRCMtOk2vKC0zL0VDXU9d0ypW8///jEy9kooSAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":210258,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/210258#210258","body":"<h2><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 10 bytes (SBCS)</h2>\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊃∘⌽'.'∘≠⊆⊢\n</code></pre>\n<p>-7 bytes after Bubbler's suggestion.</p>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT////1FX86OOGY969qrrqYMYnQsedbU96lr0P@1R24RHvX1A@UPrjR@1TXzUNzU4yBlIhnh4BgNle@dxZWTqlVSUcIHZyYlFRfklermpuakQgZz8HAijPCOxRE8vs1hPryQDRKZl5kCVhBgY@DrkGXsnBkTpZRiUO0fHZkAkEtNT80r0DAwMAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n<h2><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 17 bytes (SBCS)</h2>\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊃⌽'.'(1↓¨,⊂⍨⊣=,)⍞\n</code></pre>\n<h3>Explanation</h3>\n<pre class=\"lang-apl prettyprint-override\"><code>⊃⌽'.'(1↓¨,⊂⍨⊣=,)⍞\n                ⍞ string input\n            ⊣=,)  get characters, evaluate if they are equal to the left arg '.'\n         ,⊂⍨      enclose each part after a dot\n  '.'(1↓¨         drop each dot in the strings\n ⌽                reverse the split string array\n⊃                 take the first value\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qKNdIe3/o67mRz171fXUNQwftU0@tELnUVfTo94Vj7oW2@poPuqdB1L2P40rI1OvpKKEK40rObGoKL9ELzc1NxXIy8nPAZLlGYklenqZxXp6JRkgMi0zByQZYmDg65Bn7J0YEKWXYVDuHB2bARRNTE/NK9EzMDAAAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":210212,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/210212#210212","body":"<h1><a href=\"https://github.com/ZippyMagician/Arn\" rel=\"nofollow noreferrer\">Arn</a>, <a href=\"https://github.com/ZippyMagician/Arn/wiki/Carn\" rel=\"nofollow noreferrer\">6 bytes</a></h1>\n<pre><code>Ê^!⁺╔d\n</code></pre>\n<p><a href=\"https://zippymagician.github.io/Arn?code=OiEiLiI6fQ==&amp;input=aGkudHh0CndoYXQuLmlzLi50aGlzLi5maWxlClQwME1AbjNLYVBaLmgwd0NbXWg=\" rel=\"nofollow noreferrer\">Try it!</a></p>\n<h1>Explained</h1>\n<p>Unpacked: <code>:!&quot;.&quot;:}</code></p>\n<pre><code>    _ Variable initialized to STDIN; implied\n  :! Split on\n    &quot;.&quot; String containing a period\n:} Tail\n</code></pre>\n"},{"answer_id":210208,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/210208#210208","body":"<h2><a href=\"https://try-setanta.ie/\" rel=\"nofollow noreferrer\">Setanta</a>, <s>66</s> 34 bytes</h2>\n<pre><code>gniomh(s){toradh roinn@s(&quot;.&quot;)[-1]}\n</code></pre>\n<p><a href=\"https://try-setanta.ie/editor/EhEKBlNjcmlwdBCAgICgpZKTCg\" rel=\"nofollow noreferrer\">Try it here!</a></p>\n"},{"answer_id":208986,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208986#208986","body":"<h1><a href=\"http://iolanguage.org/\" rel=\"nofollow noreferrer\">Io</a>, 67 bytes</h1>\n<pre><code>method(~,~map(i,\\,\\map(I,V,V+x at(I)at(i)))flatten unique==list(0))\n</code></pre>\n<p><a href=\"https://tio.run/##fY8/C8IwEMX3forbzOEVU62LUHDtIDpIpy5BUwy2aTUJOPWrx1gQ/xRK4HI/uPfunmp9BZsMSt9Ie2nPrKe@ER1TVFL5anIqqJg/QFiWYygKEataWCs1OK1uTmZZrYxlHNEvFnCUxsJJGGmgurcN7A9RVLFhIgIY/oTCQ5rEQIjQ3ZW2tR45ACf@rRmYfzhOBp424RQvP5IlwUgQ4mx37ur0WehVks4M2He6kVuc/p7Aaf2LYd1fLP8E\" rel=\"nofollow noreferrer\" title=\"Io – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<p>For all <code>a[x][y]</code>, it checks whether all <code>a[x][y]+a[y][x]==0</code>.</p>\n<pre><code>method(~,                                 // Input x.\n    ~ map(i,\\,                            // Map all x's rows (index i):\n        \\ map(I,V,                        //     Foreach the rows (index I):\n            V+x at(I)at(i)                //         x[i][I] + x[I][i]\n        )\n    ) flatten                             // Flatten the resulting list\n    unique                                // Uniquify the list\n    ==list(0)                             // Does this resulting list *only* contain the item 0?\n)\n</code></pre>\n"},{"answer_id":209583,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/209583#209583","body":"<h1><a href=\"https://github.com/ZippyMagician/Arn\" rel=\"nofollow noreferrer\">Arn</a>, <a href=\"https://github.com/ZippyMagician/Arn/wiki/Carn\" rel=\"nofollow noreferrer\">5 bytes</a></h1>\n<p>Since I finally implemented sequences in my interpreter this is now a valid submission :)</p>\n<pre><code>╔Tò”7\n</code></pre>\n<h1>Explained</h1>\n<p>Unpacked: <code>[1 1{+</code></p>\n<pre><code>[ Sequence...\n  1 1 ...with 2 values initialized at 1...\n  { ...the rest of which are determined by the block...\n    + ...that adds the top two values\n  } Implied, can be removed\n] Implied, can be removed\n</code></pre>\n<p>Since Arn supports infinite sequences and BigNums, this will continuously output fibonacci numbers infinitely (hypothetically)</p>\n"},{"answer_id":209407,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/209407#209407","body":"<h1><a href=\"https://github.com/Reconcyl/flurry\" rel=\"nofollow noreferrer\">Flurry</a>, 46 bytes</h1>\n<pre><code>{}{&lt;{}{&lt;[&lt;&gt;{}]{{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}&gt;}&gt;}{{}{{}}{{}}}()\n</code></pre>\n<p>How to run:</p>\n<pre><code>$ target/Flurry -nin -c &quot;{}{&lt;{}{&lt;[&lt;&gt;{}]{{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}&gt;}&gt;}{{}{{}}{{}}}()&quot; 8\n34\n</code></pre>\n<p>It doesn't use the stack at all (except for fetching the input number from the pre-populated stack). Instead, it uses pure functional construction developed <a href=\"https://codegolf.stackexchange.com/a/198842/78410\">by Anders Kaseorg in my SKI golf challenge</a>.</p>\n<pre><code>one = \\f. \\x. f x\n    = I\n    = {{}}\n\none-pair = \\f.f one one\n         = {{}{{}}{{}}}\n\nsucc = \\n. \\f. \\x. f (n f x)\n     = \\n. \\f. S (\\x. f) (n f)\n     = \\n. S (\\f. S (K f)) n\n     = S (S . K)\n     = &lt;&gt;&lt;&lt;&gt;()&gt;\n\nnext-pair-helper = \\f. \\m. \\n. f n (m succ n)\n                 = \\f. \\m. S f (m succ)\n                 = \\f. S f ∘ (\\m. m succ)\n                 = {&lt;[&lt;&gt;{}]{{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}&gt;}\n\nnext-pair = \\p. \\f. p (next-pair-helper f)\n          = \\p. p ∘ next-pair-helper\n          = {&lt;{}{&lt;[&lt;&gt;{}]{{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}&gt;}&gt;}\n\nfib = {} next-pair one-pair K\n    = {}{&lt;{}{&lt;[&lt;&gt;{}]{{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}&gt;}&gt;}{{}{{}}{{}}}()\n</code></pre>\n"},{"answer_id":209394,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/209394#209394","body":"<h1><a href=\"https://github.com/Reconcyl/flurry\" rel=\"nofollow noreferrer\">Flurry</a>, 54 bytes</h1>\n<pre><code>&lt;&gt;{&lt;&gt;(){}(&lt;&gt;())}{{}[&lt;&gt;{&lt;&gt;(){}{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}{({})}]{{}}}\n</code></pre>\n<p>This is an anonymous function that takes a number <span class=\"math-container\">\\$n\\$</span> as a Church numeral and pushes <span class=\"math-container\">\\$F_n\\$</span> to the stack as a Church numeral.</p>\n<p>It can be tested by invoking the interpreter as follows:</p>\n<pre><code>$ ./Flurry -inn -c '&lt;&gt;{&lt;&gt;(){}(&lt;&gt;())}{{}[&lt;&gt;{&lt;&gt;(){}{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}{({})}]{{}}}{}' 10\n55\n</code></pre>\n<p>Note that this is very slow for large inputs (&gt;30 or so) because Church numeral addition is <span class=\"math-container\">\\$O(n)\\$</span>.</p>\n<h2>Explanation</h2>\n<p>The basic idea is to loop <span class=\"math-container\">\\$n\\$</span> times and keep track of the smaller number using the stack and the larger number using function parameters, so the function to iterate looks like this:</p>\n<pre><code>next = λb. pop() + push(b)\n</code></pre>\n<p>Flurry is mostly combinator-based, and so doesn't really have lambdas. The closest approximation is to write a function that pushes its argument onto the stack (using the <code>{...}</code> monad) and then pops from the stack to read the argument back (using the <code>{}</code> nilad). So the function <code>λx. f x</code> gets represented as:</p>\n<pre><code>{ f {} }\n</code></pre>\n<p>However, this translation doesn't work if <code>f</code> depends on the stack, which is true in this case, so we need to use a combinator-based approach instead. Rather than popping using <code>{}</code> directly, we can write an anonymous function that ignores its argument and returns a value popped from the stack:</p>\n<pre><code>  λa. pop()\n{ &lt;&gt; () {} {} }\n</code></pre>\n<p>Here, <code>&lt;&gt;</code> and <code>()</code> represent the S and K combinators respectively.</p>\n<p>Of course, the next thing we do with the popped value is apply it to the successor function <code>&lt;&gt;&lt;&lt;&gt;()&gt;</code> to compute addition:</p>\n<pre><code>  λa. pop()(suc)\n{ &lt;&gt; () {} {} [&lt;&gt;&lt;&lt;&gt;()&gt;] }\n</code></pre>\n<p>Now all we need is to write a function that pushes its argument to the stack and returns it unchanged:</p>\n<pre><code>  λa. push(a)\n{ ({}) }\n</code></pre>\n<p>We can then put these functions together using the S combinator:</p>\n<pre><code>  λb. pop() + push(b)\n  λb. S (λb. pop()(suc)) (λb. push(b)) b\n&lt;&gt; {&lt;&gt;(){}{}[&lt;&gt;&lt;&lt;&gt;()&gt;]} {({})}\n</code></pre>\n<p>The main function is responsible for setting up the initial values and calling <code>next</code> the appropriate number of times. In other words, it looks like this:</p>\n<pre><code>main = λn. push(0); n (next) (1)\n</code></pre>\n<p>Since we don't care about the return value, we can just use function application to sequence the two actions:</p>\n<pre><code>main = λn. push(0) (n (next) (1))\n</code></pre>\n<p>Again, we can't keep lambda variables on the stack because we're already doing stack manipulation, so we'll have to create intermediate functions. First, one that ignores its argument and pushes <code>0</code> to the stack:</p>\n<pre><code>  λa. push(0)\n{ &lt;&gt; () {} (0) }\n</code></pre>\n<p>Second, one that applies its argument to <code>next</code> and <code>1</code> (which we can finally use stack lambdas for):</p>\n<pre><code>  λa. a next 1\n{ {} next 1 }\n</code></pre>\n<p>Again, we can put these together with <code>S</code>:</p>\n<pre><code>&lt;&gt; {&lt;&gt;(){}(0)} {{}[next]1}\n</code></pre>\n<p>Substituting the definitions of <code>0</code>, <code>next</code>, and <code>1</code> gives us the final result:</p>\n<pre><code>&lt;&gt;{&lt;&gt;(){}(&lt;&gt;())}{{}[&lt;&gt;{&lt;&gt;(){}{}[&lt;&gt;&lt;&lt;&gt;()&gt;]}{({})}]{{}}}\n</code></pre>\n"},{"answer_id":208998,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208998#208998","body":"<h1><a href=\"https://www.ruby-lang.org/en/\" rel=\"nofollow noreferrer\">Ruby</a>, 40 bytes</h1>\n<pre><code>-&gt;a{a==a.transpose.map{|r|r.map{|c|-c}}}\n</code></pre>\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6xOtHWNlGvpCgxr7ggvzhVLzexoLqmqKYIwkiu0U2ura39X6CQFh0dbagDhLE6aHRsLBdE2kDHACwMog2AtK4hmIEkr2sEFDYCi/0HAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":209050,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209050#209050","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 9 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>A-&gt;A==-A'\n</code></pre>\n<p>A straightforward anonymous function checking the equality.</p>\n<p><a href=\"https://tio.run/##yyrNyUw0rPifWZyYV5JZXJmbm1pSlJls@99R187R1lbXUf2/Q3FGfrkCmgKNaEMFILRWQKZiNblwKDZQMACpAlEG1gq6hiAan2pdI2sFI5CS/wA\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":209002,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209002#209002","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"noreferrer\">C (gcc)</a>, <s>67</s> 64 bytes</h1>\n<p>-3 thanks to <a href=\"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209002?noredirect=1#comment493066_209002\">AZTECCO</a></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>i,j;f(m,s)int**m;{for(i=j=0;i=i?:s--;)j|=m[s][--i]+m[i][s];m=j;}\n</code></pre>\n<p><a href=\"https://tio.run/##bVHRasMgFH2OXyGBgkZlaftWJ/sQ50NIm3FDbUrNIFmWb8@upi0bDMTc6zmec7yp1UddLwvIVjfMy8Dh0heF11PT3RiY1pQaDLwdglKat9/G2@CsUuCEt@Cw0d60el58BRfGJ4LXaX8KfbCOGjqRvaTb@yKU/l8jp0xrPS/vLdZq@6h3cVe7RIg1mTVJEdEPYsjXAF@nrmHJnL/87mzpuOYYJovsiGC0FQEhnF7P8dVVj4CvzueuZpFWPDeUSoPhHNnoS5NxnA5tkzN@hUgeGcrY1plkIAD5GQiTOCSbSXa94dWG5eGwOUrqD@@XXEb0j/KAysMqPAghr599YHnOOX0yRmSMK2NEZ3R5CG/2x1zGEIOzo4uyT@QYzfA/V71Mc4jPmcm8/AA\" rel=\"noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n<p>Returns <code>0</code> if the matrix is antisymmetric, and a nonzero value otherewise.</p>\n"},{"answer_id":209034,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209034#209034","body":"<h1><a href=\"https://www.wolfram.com/mathematica\" rel=\"nofollow noreferrer\">Wolfram Mathematica</a>, <s>20</s>, 7 bytes</h1>\n<p>There is a <a href=\"https://reference.wolfram.com/language/ref/AntisymmetricMatrixQ.html\" rel=\"nofollow noreferrer\">built-in function</a> for this task:</p>\n<p><code>AntisymmetricMatrixQ</code></p>\n<p>But one can simply write a script with less byte counts:</p>\n<p><code>#==-#ᵀ&amp;</code></p>\n<p>The <code>ᵀ</code> character, as it is displayed in notebooks, stands for transpose. But if you copy this into <a href=\"https://tio.run/\" rel=\"nofollow noreferrer\">tio</a>, it won't be recognized because these characters are only supported by Mathematica notebooks.</p>\n"},{"answer_id":209016,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209016#209016","body":"<h1><a href=\"https://esolangs.org/wiki/GORBITSA\" rel=\"nofollow noreferrer\">gorbitsa</a>-ROM, 8 bytes</h1>\n<pre><code>r1 R A1 B0 T\n</code></pre>\n<p>This is an awful abuse of rule</p>\n<blockquote>\n<p>Input and output can assume whatever forms are most convenient.</p>\n</blockquote>\n<p>If input takes form of &quot;arr[i][j] arr[j][i]&quot;, the problem becomes &quot;is sum = 0?&quot;.<br />\nThis code takes pairs of values and outputs their sum if it's not 0</p>\n<p>Thus if you provide matrix as previously mentioned pairs, code will return some value for not-anti-symmetric ones and will not return anything for anti-symmetric ones.</p>\n<pre><code>r1 R A1 B0 T\nr1           #store first number\n   R         #read second number\n     A1      #add first number\n        B0   #if sum==0, jump to the beginning\n           T #else output the sum\n</code></pre>\n"},{"answer_id":209014,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209014#209014","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 10 bytes</h1>\n<pre><code>⁼θＥθＥθ±§λκ\n</code></pre>\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMO1sDQxp1ijUEfBN7EAifJLTU8sSdVwLPHMS0mt0MjRUcjWBAPr//@jo6MNdBR0jWJ1uBQUoo10FAxiY2P/65blAAA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Outputs a Charcoal boolean, i.e. <code>-</code> if the matrix is antisymmetric, nothing if not. Explanation:</p>\n<pre><code>  Ｅθ        Map over input matrix rows (should be columns, but it's square)\n    Ｅθ      Map over input matrix rows\n       §λκ  Cell of transpose\n      ±     Negated\n⁼θ          Does matrix equal its negated transpose?\n</code></pre>\n"},{"answer_id":208988,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208988#208988","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 5 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>eUy®n\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=ZVV5rm4&amp;input=W1sxLDAsMV0sClswLDAsMF0sClstMSwwLDFdXQ\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>e       compare input with :\n Uy       columns of input\n   ®n     with each element negated\n</code></pre>\n<p>Previous version <code>ÕeËËn</code> didn't work, corrected using the ® symbol</p>\n"},{"answer_id":209009,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209009#209009","body":"<h1>JavaScript (ES6), 42 bytes</h1>\n<p>Returns <em>false</em> for antisymmetric or <em>true</em> for non-antisymmetric.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>m=&gt;m.some((r,y)=&gt;r.some((v,x)=&gt;m[x][y]+v))\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@z/X1i5Xrzg/N1VDo0inUtPWrgjKK9OpAPJyoytioytjtcs0Nf8n5@cV5@ek6uXkp2ukaURzKShEKxjqgJFCrA5eLlespiYXNv0KBjogBNcB5RvA@LqGMD5OI4DSukYw9UY6CjDF/wE\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":209008,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/209008#209008","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a>, 23 bytes</h1>\n\n<pre class=\"lang-r prettyprint-override\"><code>function(m)!any(m+t(m))\n</code></pre>\n<p><a href=\"https://tio.run/##K/qfpmD7P600L7kkMz9PI1dTMTGvUiNXuwTI1PyfppGbWFKUWaFhqKNgDESamlxwoWQNAx0FINI1BFMQZKiJQ6ERUKGRJpg2AhoMAA\" rel=\"noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n<p>Checks whether there are any non-zero elements in <span class=\"math-container\">\\$M+M^T\\$</span>.</p>\n"},{"answer_id":208997,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208997#208997","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"noreferrer\">Brachylog</a>, 5 bytes</h1>\n<p>5 bytes seems to be the right length for this (unless you're Jelly). Actually, this would be three bytes if Brachylog implicitly vectorized predicates like negation.</p>\n<pre><code>\\ṅᵐ²?\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r/P@bhztaHWycc2mT//390tIGOkY5hrE50vJGOgY4BiGEIZsQCAA\" rel=\"noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>\\      Transpose\n ṅᵐ²   Map negation at depth 2\n    ?  Assert that the result is the same as the input\n</code></pre>\n"},{"answer_id":208996,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208996#208996","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 5 bytes</h1>\n<pre><code>Z_=-_\n</code></pre>\n<p>A function submission; pass a nested list as its argument. <a href=\"https://tio.run/##K8gs@K/xPyreVjf@f3S0gbWCkbVhLJdCtK6RtYG1AZhlCGbFcmn@BwA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>Z_     The argument, zipped together\n  =    Equals\n   -_  The argument, negated\n</code></pre>\n"},{"answer_id":208995,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208995#208995","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 5 bytes</h1>\n<pre><code>qC_MM\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsyfj/v9A53tf3///oaAMdBaNYHYVoXSMdBYPY2H/5BSWZ@XnF/3VTAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<pre><code>qC_MM\nq      : Check if input equals\n C     : Transpose of\n  _MM  : Negated input\n</code></pre>\n"},{"answer_id":208993,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208993#208993","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"noreferrer\">Octave</a>, 19 bytes</h1>\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(a)isequal(a',-a);\n</code></pre>\n<p><a href=\"https://tio.run/##y08uSSxL/Z9mG/PfQSNRM7M4tbA0MUcjUV1HN1HT@n9KZnGBRppGtKEOEFojkbGamlwwSQMdA6AwiDSw1jUEUaiyukbWRmCx/wA\" rel=\"noreferrer\" title=\"Octave – Try It Online\">Try it online!</a></p>\n<p>The semicolon doesn't <em>need</em> to be there, but it outputs the function otherwise, so I'll take the one-byte hit to my score for now.</p>\n<h1>Explanation</h1>\n<p>It's pretty straightforward - it checks to see if the matrix of the transpose is equal to the negative matrix</p>\n"},{"answer_id":208992,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208992#208992","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 5 bytes</h1>\n<pre><code>!_GX=\n</code></pre>\n<p><a href=\"https://tio.run/##y00syfn/XzHePcL2//9oQwUgtFZApmIB\" rel=\"nofollow noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<pre><code>!_GX=\n        // Implicit input on top of stack\n!       // Replace top stack element with its transpose\n _      // Replace top stack element with its negative\n  G     // Push input onto stack\n   X=   // Check for equality\n</code></pre>\n"},{"answer_id":208987,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208987#208987","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, 45 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda A:A==[[-x for x in R]for R in zip(*A)]\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUcHRytHWNjpat0IhLb9IoUIhM08hKBbEDAIxqzILNLQcNWP/FxRl5pUouCXmFKfqKKRpREcb6iiAUKwOlwIaIEYqVpOLC2JkSFEp0ESwkQoGOiCEVSNUzgCbnK4hVA5oKrKhIDOB4rpGmJqijYB2gjX8BwA\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":208985,"question_id":208982,"link":"https://codegolf.stackexchange.com/questions/208982/antisymmetry-of-a-matrix/208985#208985","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"noreferrer\">APL (Dyalog Unicode)</a>, 3 <a href=\"https://github.com/abrudz/SBCS\" rel=\"noreferrer\">bytes</a></h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>-≡⍉\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///X/dR58JHvZ3/0x61TXjU2/eoq/nQeuNHbRMf9U0NDnIGkiEensH/0xSALKAKYwXjR71bDLlQ@QYKBgqGCgZgeGg9mAVXYaRgBFZxaD2QpWAAAA\" rel=\"noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n<p>This is exactly an <a href=\"https://aplcart.info/?q=antisym#\" rel=\"noreferrer\">APLcart entry</a> on &quot;antisymmetric&quot;. Basically it checks if the input's negative <code>-</code> matches <code>≡</code> the input's transpose <code>⍉</code>.</p>\n"},{"answer_id":198729,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198729#198729","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <sup><s>66</s> <span class=\"math-container\">\\$\\cdots\\$</span> <s>59</s></sup> 57 bytes</h1>\n<p>Saved <s>a</s> 3 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">ceilingcat</a>!!!<br />\nSaved a byte thanks to <a href=\"https://codegolf.stackexchange.com/users/89298/s-s-anne\">S.S. Anne</a>!!!</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>i;f(c){for(i=0;~(c=getchar());printf(&amp;c))c*=i++%2?257:1;}\n</code></pre>\n<p><a href=\"https://tio.run/##Dcs7CoAwEAXA0yi7iqABEVyCZ4lPo1v4IaQTvXpMOcWg2YCUVDyBH38FUtvKR7DbGrG7QMxyBz2jpxLMqKzWdWEm0w9jJ286nJ6UJ3GGm7GsPw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":207118,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/207118#207118","body":"<h1>Javascript, 24 bytes - recursive version, 33 bytes - usage of Binet's formula, 46 bytes - continuous approximation with the &quot;phi&quot; itself</h1>\n<p>Usage of <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression\" rel=\"nofollow noreferrer\">&quot;Binet's formula&quot;</a> and a bitwise &quot;OR&quot; operator to round the result. Originally in the <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression\" rel=\"nofollow noreferrer\">&quot;Binet's formula&quot;</a> you have to subtract the so-called &quot;smaller phi to the n-th power&quot;. &quot;Smaller phi&quot; (-0.618...) is inside the (-1;1) interval, so it gets closer to 0 with each positive power - that's why we can leave it, and just round the meaningful part. Function itself is an anonymous one, declared with the arrow function declaration.</p>\n<pre><code>n=&gt;(((5**.5/2+.5)**n)/5**.5)+.5|0\n</code></pre>\n<p><a href=\"https://tio.run/##HcdLCoAgEADQdZ7C5YySReCq7C5RGoY4UdKmOrt9Vo@3DMewj5tfUxlpsjk7E00PAFoIpatGKo1CRKz@49urZo42CDZxzw2v25eON59S4smKkeJOwapAMzjwiOzO@QE\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Recursive version - arrow function declaration. Check whether n is less than 3, if so return 1, else do it again (at least) 2 more  times, but with an argument of value n-1 and n-2:</p>\n<pre><code>f=n=&gt;n&lt;3?1:f(n-1)+f(n-2)\n</code></pre>\n<p><a href=\"https://tio.run/##FcVLCoAgEADQdZ7CpYMUfXaldRYxDUNmIqVNdHart3m7uUyyZzhyjbS6UrxGPaMalm70AusO5F8PzNMposs8cM3b6Uvx/l9KuFllCRNF10TahBcBgD2lvA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<p>Continuous approximation. Ni * phi = Ni+1.</p>\n<p><strong>WARNING - RUNNING THIS CODE WILL END UP AS AN INFINITE AMOUNT OF ALERTS (next after clicking &quot;ok&quot;)</strong></p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=n=&gt;{l=n/2+5**.5/2*n+.5|0;alert(l);f(l)};f(1)</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":206974,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/206974#206974","body":"<h1>GAS x86-64 for Linux (Machine code), <s>76</s> 68 bytes</h1>\n<h3>Loop-free, because I thought it would be a fun idea. GCC 10.1.</h3>\n<p>Note/warning: for this to work, you have to turn off DEP and PIE (ASLR). See compilation instructions below.</p>\n<p>Look, ma! No loops! Byte count is for the assembled opcodes of <code>func</code> + <code>e</code> + <code>f</code>. Works on 32 bit input. Sure, you'll eventually run out of stack space, but the number will overflow before then. Obviously, a loop would have been much smaller (and easier) to write.</p>\n<p>How it works:</p>\n<ol>\n<li>Copy payload code to stack-relative space (No modification of <code>%rsp</code>)</li>\n<li>Jump to copy destination's start.</li>\n<li>Payload calculates the Fibonacci number in <code>%rax</code> and self-unwinds without ever looping</li>\n<li>When it's done, return to caller of func</li>\n</ol>\n<h3>Full testing program:</h3>\n<pre><code>// 1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n.global main\n\nmessage: .asciz &quot;%d&quot;\nmain:\n    mov $N, %rdi\n    call func\n    mov %eax, %esi\n    mov $message, %rdi\n    xor %eax, %eax\n    call printf\n    xor %eax, %eax\n    ret\n\nfunc:\n    // We'll take %rdi, but we'll slice it to 32 bits\n    // %edi is arg, r8d is our counter.\n    mov %edi, %r8d\n    // Make 2 copies for arithmetic\n    mov %r8d, %eax\n    // Set up stack offset\n    // N * 32, need 64 bits to work with %rsp\n    imul $(eof - e), %eax\n    neg %rax\n    mov %rsp, %r9\n    lea (%rax, %r9), %r9\n    // Initialize for Fibonacci\n    xor %ebx, %ebx\n    xor %eax, %eax\n    inc %eax\n\n    // Copy initial payload:\n    // Because PIE is turned off, we can use 32-bit addressing for local\n    // Stack still seems to be in 64-land, however\n    mov $e, %esi\n    mov %r9, %rdi\n    mov $(eof - e), %ecx\n    rep movsb\n\n    // Go to stack offset\n    jmp *%r9\n\ne:\n    // The payload:\n    dec %r8d\n    jg f\n    ret\nf:\n    // Do actual Fibonacci stuff\n    lea (%ebx, %eax), %edx\n    mov %eax, %ebx\n    mov %edx, %eax\n    // Self-replicate\n    mov %r9, %rsi\n    mov $(eof - e), %cl\n    rep movsb\neof:\n</code></pre>\n<p>I decided on 32-bit input because the stack is not all valid for 64 bits, so we'd run out anyway. It overflows after a we get high enough input, but that's expected.</p>\n<h3>Compilation:</h3>\n<pre><code># Prints 55\n# Replace 10 with the input number (1-indexed):\ngcc -no-pie -z execstack execstack_fibonacci.sx -DN=10 -g\n</code></pre>\n<ul>\n<li>The <code>-z execstack</code> tells the linker to turn off DEP for this program. (Allow the stack to be executable)</li>\n<li>The <code>-no-pie</code> turns off ASLR.</li>\n<li>The <code>-DN10</code> is just easy input control.</li>\n<li>The <code>-g</code> is for debugging control. Turn it off if you want.</li>\n</ul>\n<p>Note: this will <em>NOT</em> work in MinGW because the DEP policy is managed by the OS on Windows. In fact, <code>-z</code> isn't even recognized by MinGW's <code>ld</code>.</p>\n<h3>Hex dump:</h3>\n<pre><code>funcs='func e f'\nfor el in $funcs; do\n    echo 'Dump $el'\n    gdb -batch -ex &quot;disas/r $el&quot; ./a.out | sed '/^$/d'\ndone\necho -n &quot;payload size:&quot;\ngdb -batch -ex &quot;print eof - e&quot; ./a.out\n</code></pre>\n"},{"answer_id":178631,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/178631#178631","body":"<h1>Intel 8087 FPU, 13 bytes</h1>\n<p><strong>Binary:</strong></p>\n<pre><code>00000000: d9e8 d9ee dcc1 d9c9 e2fa df35 c3         ...........5.\n</code></pre>\n<p><strong>Listing:</strong></p>\n<pre><code>D9 E8       FLD1                ; push initial 1 into ST(1)\nD9 EE       FLDZ                ; push initial 0 into ST\n        FIB_LOOP:\nDC C1       FADD ST(1), ST      ; ST(1) = ST(1) + ST \nD9 C9       FXCH                ; Exchange ST and ST(1)\nE2 FA       LOOP FIB_LOOP       ; loop until n = 0\nDF 35       FBSTP [DI]          ; store result as BCD to [DI]\nC3          RET                 ; return to caller\n</code></pre>\n<p>As a callable function, input <code>n</code> in <code>CX</code>, output to a 10 byte little-endian packed BCD representation at <code>[DI]</code>. This will compute up to Fibonacci <code>n</code>=<code>87</code> using the Intel x87 math-coprocessor using 80-bit extended-precision floating point arithmetic.</p>\n<p>Run using DOS DEBUG with <code>n</code> = <code>9</code>, result <code>34</code>:</p>\n<p><a href=\"https://i.stack.imgur.com/HO8xM.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/HO8xM.png\" alt=\"enter image description here\" /></a></p>\n<p><code>n</code> = <code>87</code> (<code>0x57</code>), result <code>679891637638612258</code>:</p>\n<p><a href=\"https://i.stack.imgur.com/RWaEz.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/RWaEz.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":89653,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/89653#89653","body":"<h1>R, <s>33</s> 32 bytes</h1>\n<p>CAUTION: This attempts to print the whole Fibonacci sequence. It does not stop.</p>\n<pre><code>a=b=1;repeat print(a&lt;-(b=b+a)-a)\n</code></pre>\n<p>Pretty simple. Initialize <code>a</code> and <code>b</code>. Then a repeat loop which adds them to find the next number and print it. This loop will not stop, though eventually the overflow means it just prints <code>NaN</code> repeatedly.</p>\n<p>Edit: saved 1 byte by switching to <code>a=b=1</code> which required a different loop control mechanism to print the first few values, and then a different assignment location, etc.</p>\n"},{"answer_id":206942,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/206942#206942","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <del>59</del> <del>51</del> <del>55</del> 33 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>a=0\nb=1\nwhile 1:a,b=b,a+b;print a\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P9HWgCvJ1pCrPCMzJ1XB0CpRJ8k2SSdRO8m6oCgzr0Qh8f9/AA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n<p><br>Thanks for @<a href=\"https://codegolf.stackexchange.com/users/46076/pppery\">pppery</a> for saving a whole 22 bytes!</p>\n"},{"answer_id":206943,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/206943#206943","body":"<h1><a href=\"https://github.com/Mego/Seriously\" rel=\"nofollow noreferrer\">Actually</a>, 16 bytes</h1>\n<pre><code>&quot;1,&quot;◙01W;a+;◙',◙\n</code></pre>\n<p><a href=\"https://tio.run/##S0wuKU3Myan8/1/JUEfp0fSZBobh1ona1kCWug6Q@P8fAA\" rel=\"nofollow noreferrer\" title=\"Actually – Try It Online\">Try it online!</a></p>\n"},{"answer_id":206509,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/206509#206509","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 19 bytes</h1>\n<pre><code>l~\\_m!@@\\_m!@@-m!*/\n</code></pre>\n<p><a href=\"https://tio.run/##S85KzP3/P6cuJj5X0cEBQurmKmrp//9vqmAEAA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\">Try it online!</a></p>\n"},{"answer_id":206496,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/206496#206496","body":"<h1>Excel, 13 chars</h1>\n<pre><code>=COMBIN(A1,B1\n</code></pre>\n<p><code>A1</code> is n, <code>B1</code> is r. Surprised this wasn't restricted, honestly.</p>\n"},{"answer_id":206489,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/206489#206489","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 1 (or 5?) <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>c\n</code></pre>\n<p>Builtins ftw ¯\\_(ツ)_/¯</p>\n<p>Takes two loose inputs, <span class=\"math-container\">\\$k\\$</span> as first and <span class=\"math-container\">\\$n\\$</span> as second.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f8/@f9/Iy5TAA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p>If the <code>&quot;n,k&quot;</code> format is mandatory, it would be <strong>5 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></strong> instead:</p>\n<pre><code>',¡`c\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f9fXefQwoTk//9NdYwA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p>This will split the (implicit) input on the &quot;,&quot;; pop and push both values separated to the stack; and than uses the <code>a choose b</code> builtin.</p>\n"},{"answer_id":205854,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/205854#205854","body":"<h1><a href=\"https://github.com/bigyihsuan/International-Phonetic-Esoteric-Language\" rel=\"nofollow noreferrer\">International Phonetic Esoteric Language</a>, 28 bytes</h1>\n\n<pre><code>&lt;f&gt;/b1ɨʌʟ|e|1zb1z&lt;f&gt;d&lt;fib&gt;s|e|\\\n</code></pre>\n\n<p>A function that expects a number <span class=\"math-container\">\\$n \\ge 0\\$</span> to be on the stack, and leaves the <span class=\"math-container\">\\$n\\$</span>-th Fibonacci number.</p>\n\n<p>Explanation:</p>\n\n<pre><code>&lt;f&gt;/ (n1 -- n2) (where n2 is the n1-th fibonacci number)\n         (check for case n=1)\nb        (dup)\n 1       (push 1)\n  ɨ      (n&gt;1?)\n   ʌ     (skip if n&gt;1)\n    ʟ⟨e⟩ (if n&lt;=1, jump to end label)\n1                (push 1)\n z               (subtract)\n  b              (dup)\n   1             (push 1)\n    z            (subtract)\n     &lt;f&gt;         (recurse)\n        d        (swap)\n         &lt;f&gt;     (recurse)\n            s    (add)\n             ⟨e⟩ (end label)\n\\\n</code></pre>\n"},{"answer_id":205726,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/205726#205726","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 11 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>ÄºÉ╨φr°mißâ\n</code></pre>\n\n<p><a href=\"https://staxlang.xyz/#p=8ea790d0ed72f86d69e183&amp;i=%22d4%22\" rel=\"nofollow noreferrer\">Run and debug it</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>|+            Sum the codepoints of the input string\n  `ASbEx!\"`   Compressed string \"dark light\"\n           j  Split on spaces. [\"dark\",\"light\"]\n            @ Fetch at the corresponding index (modular)\n</code></pre>\n"},{"answer_id":205724,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/205724#205724","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 11 bytes</h1>\n\n<p>Port of Dennis's GS2 answer.</p>\n\n<pre><code>“–°‡Ž“#IÇOè\n</code></pre>\n\n<p><a href=\"https://tio.run/##yy9OTMpM/f//UcOcRw2TD2141LDw6F4gR9nzcLv/4RX//6eYAAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>“–°‡Ž“      Compressed string \"dark light\"\n      #     Split on spaces\n       I    Take an input\n        Ç   Codepoints\n         O  Sum\n          è Modular index into the original list\n</code></pre>\n"},{"answer_id":177999,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/177999#177999","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, <s>25</s> 24 <a href=\"https://codegolf.meta.stackexchange.com/a/9429/43319\" title=\"When can APL characters be counted as 1 byte each?\">bytes</a><sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\" title=\".dyalog files using a single byte character set\">SBCS</a></sup></h1>\n\n\n\n<p>-1 thanks to Bubbler.</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊃'dark' 'light'⌽⍨+/⎕UCS⍞\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qKO94P@jrmb1lMSibHUF9ZzM9IwS9Uc9ex/1rtDWf9Q3NdQ5@FHvPJC6/wpgUMCVZMgFY6abwZkpJgA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>⍞</code> get text from stdin</p>\n\n<p><code>⎕UCS</code> convert to Universal Character Set code points</p>\n\n<p><code>+/</code> sum</p>\n\n<p><code>'dark' 'light'⌽⍨</code> use that to cyclically rotate the list of strings</p>\n\n<p><code>⊃</code> pick the first</p>\n"},{"answer_id":205200,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/205200#205200","body":"<h1><a href=\"https://github.com/JonoCode9374/Keg\" rel=\"nofollow noreferrer\">Keg</a>, 12 bytes</h1>\n\n<pre><code>+2%[‘15‘|‘1⑻\n</code></pre>\n\n<p><a href=\"https://tio.run/##y05N//9f20g1@lHDDENTIFEDYjyauPv//3Sz/7qZRQA\" rel=\"nofollow noreferrer\" title=\"Keg – Try It Online\">Try it online!</a></p>\n\n<p>A Keg port of Dennis' answer.</p>\n"},{"answer_id":204598,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204598#204598","body":"<h1>F#, 130 bytes</h1>\n\n<pre><code>let f s=s|&gt;Seq.filter Char.IsLetterOrDigit|&gt;fun x-&gt;Seq.tail x|&gt;Seq.zip x|&gt;Seq.map(fun(a,b)-&gt;string a+string b)|&gt;String.concat&quot; &quot;\n</code></pre>\n"},{"answer_id":203918,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203918#203918","body":"<h1>[sed] -E (C locale), <sup><s>46</s> <s>33</s></sup> 23 bytes</h1>\n\n\n\n<pre class=\"lang-bash prettyprint-override\"><code>s/\\W|_//g;s/\\B.\\B/&amp; &amp;/g\n</code></pre>\n\n<p><a href=\"https://tio.run/##RY7BSsNAFEX37ytuU221GkMXrmwSkxJBKLgRuikOk@SZDKRJmBk1Sv89HQoSeFwe98Dl5NLUYyEtoshwKUyhVW@x2XjZ24s3muCwP4kgqJ7clz4c0mCBRVCNDhLx0HfaYrcVyW4Xbol@atUwNMsSlo1tVMsElJ0LgIu6g9/Cu/pnCCN4E5uAhxOcDPwM/icmrcuY2xyTHJTkxSVKUBbXMShtvrT@xbcyqmtBe15qxnw9A70uj5AteJDHvmFXvNfKwJ1oOyvQcKVyJ043cpWvitu7xw9/AMWxFNf361n4N3@mMw\" rel=\"nofollow noreferrer\" title=\"Bash – Try It Online\">Try it online!</a></p>\n\n<p><em>Thanks to pizzapants184 for a 13-byte improvement.</em></p>\n\n<p><em>10 more bytes off thanks to Dom Hastings.</em></p>\n\n<hr>\n\n<p>Input on stdin, and output on stdout.</p>\n\n<p>If your locale isn't set to C, you can set it with: <code>export LC_ALL=C</code></p>\n"},{"answer_id":204364,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204364#204364","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 32 bytes</h1>\n\n<pre><code>[:}:[:,/2,&amp;' '\\]-.-.&amp;AlphaNum_j_\n</code></pre>\n\n<p><a href=\"https://tio.run/##LYlNa8JAGITv/orRYN7EJqsWvKykMZYWBOlBCj2kumziaiKbD2ItKvjbo1sKM/MwM4e2x2iHgIPgYQT@sM/wulq@tzG/8Zh7w2fPJtD32mc@syNdZ/LjVIiDaN0OOirNKjge37mw2QsoSmhqMv3H1vAtzELDuT41zQW/@TGvSjN8KaJGwRp3TVsQFZAl1FkWtVZ/22eWH/GQKKsfAa32eaKVORw5SAap@zTZ@GfTw1CK/rgbXK0ZtXc\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<pre><code>               -.-.&amp;AlphaNum_j_   remove non-alphanumeric\n       2,&amp;' '\\                    append space to each pair of adjacent chars \n     ,/                           join \n }:                               remove trailing space\n</code></pre>\n"},{"answer_id":203911,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203911#203911","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 6 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>fØB;ƝK\n</code></pre>\n\n<p>A monadic Link accepting a list of characters which yields a list of characters.</p>\n\n<p><strong><a href=\"https://tio.run/##y0rNyan8/z/t8Awn62Nzvf///6@kkaiVpJWsqW0ap1uhBAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n\n<h3>How?</h3>\n\n<pre><code>fØB;ƝK - Link: list of characters, S\n ØB    - base-62 characters = \"01...89AB...YZab...yz\"\nf      - (S) filter keep if in (that)\n    Ɲ  - for neighbours:\n   ;   -   concatenate\n     K - join with spaces\n</code></pre>\n"},{"answer_id":204077,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204077#204077","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, <s>77</s> 76 bytes</h1>\n<pre><code>{it.filter{it.isLetterOrDigit()}.zipWithNext{a,b-&gt;&quot;$a$b&quot;}.joinToString(&quot; &quot;)}\n</code></pre>\n<p>Old solution</p>\n<pre><code>{it.replace(&quot;\\\\W|_&quot;.toRegex(),&quot;&quot;).zipWithNext{a,b-&gt;&quot;$a$b&quot;}.joinToString(&quot; &quot;)}\n</code></pre>\n"},{"answer_id":204036,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204036#204036","body":"<h1>Javascript ES6, <s>55</s> 54 chars</h1>\n\n<pre><code>s=&gt;s.replace(/\\W|_/g,\"\").replace(/.(?=(.).)/g,\"$&amp;$1 \")\n</code></pre>\n\n<p>Test:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=s=&gt;s.replace(/\\W|_/g,\"\").replace(/.(?=(.).)/g,\"$&amp;$1 \")\n\nconsole.log(`Ab -&gt; Ab\nAbc -&gt; Ab bc\nAbcd -&gt; Ab bc cd\nE?h? -&gt; Eh\nBlurry vision -&gt; Bl lu ur rr ry yv vi is si io on\nWe're #1! -&gt; We er re e1\nI'm an example! -&gt; Im ma an ne ex xa am mp pl le\nThis is _not_ legible -&gt; Th hi is si is sn no ot tl le eg gi ib bl le\n(a*b*c)+5^-x -&gt; ab bc c5 5x\n??a_%,1!=z#@ -&gt; a1 1z`.split`\n`.map(s=&gt;s.split` -&gt; `).map(([s,k])=&gt;f(s)==k).every(x=&gt;x))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":204062,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204062#204062","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Raku</a>, 31 bytes</h1>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{@$_ Z~.skip}o{S:g/\\W|_//.comb}\n</code></pre>\n\n<p><a href=\"https://tio.run/##PU9da8JAEHy/XzFi26it2jzYh4JGBR98riD0K9zFMwm95MJdlESrfz3uKQjLsDuzs8MW0qi3JqvxtMUYzXH6EOLzPLB/aXHSx4/3ePi9/g@Hw0GkM3FqLK9x3mJgC5WWHa8/8bpfrz/YagOV5tI2M4H@BDPBZiK6dRCRGzb3CdGGLYIkcMQiYXO1M6bGPrWpzh03V1A77AwMVY16TxpSC0uooXO2lp6RaPstt72WkLRH6LOll4HnkBXPCiWv8jJDxh2Z00aFinpiChQUItkqobtUYa7LkIg4FUo62ypBcg8lJD9FlyidDTJGTDw9c73S4T3Ri7rPo99@5cz89uUIo4oFAQ8fX/zW@NCeXjUf/uEC\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>The extra requirement for stripping non-alphanumeric characters takes up more than half of the bytes.</p>\n"},{"answer_id":204055,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204055#204055","body":"<h1><a href=\"https://elixir-lang.org/\" rel=\"nofollow noreferrer\">Elixir</a>, 120 bytes</h1>\n\n<pre class=\"lang-js prettyprint-override\"><code>b=fn w-&gt;import String;l=replace(w,~r/[\\W_]/,\"\");for(i&lt;-0..String.length(l)-2,do: at(l,i)&lt;&gt;at(l,i+1))|&gt;Enum.join(\" \") end\n</code></pre>\n\n<p><a href=\"https://tio.run/##bZBPa8JAEMXvfooxUtzVJDYFL1WTKnjw1EMFD/0TNsmabNlswibRKKVf3Y5ILE2FYRjmvfnxGC5FLfSpcwpmWwV7yxVpnukSXkotVDyRM81zyUJO9ua3Hr2@bfz3kWkYdLLNNBFT6962L1ZbchWXCZHUejCj7BFYSaQp6NS9DEOH0i93qarU/syEIgYYFLiKTqtnW6gi52FJApsY88CgFHqWC/Og808Lf0UIwht69McAYdT2LL3EazzLpK0uZKX1AXaiEJlqbAsJsoJKg8Y6wGGHOogCCuwZZKoN2fC@5tBzug1gw4HjKXan7V31U2AKeM3SXPLrxSqFlJ0FhUc11DjjJocco/A2Y51gGCxfZaWPeiwCyRvSOoHkmhY7IjFzCeWZBDyGGPf4q1tgwgbBIKTD8YdVNzx2@esYxnXb7nnMvzOd7uzYe7raHXCOpx8\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":204045,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204045#204045","body":"<h1>T<sub>E</sub>X (INIT<sub>E</sub>X), 372 bytes</h1>\n\n<pre class=\"lang-tex prettyprint-override\"><code>\\catcode`~13\\let~\\catcode~`{1~`}2~`#6~`\\ 12~`|13\\let|\\expandafter\\def\\z{}\\def\\f#1{#1}\\def\\i#1{}\\def\\b#1#2{\\ifx#2\\e|||\\i|\\i\\else|\\f\\fi{\\ifcat#1a|\\f\\else|||\\b|||#2|\\i\\fi}{\\ifcat#2a #1#2|\\b|#2\\else|\\b|#1\\fi}}\\def\\t{~`011~`111~`211~`311~`411~`511~`611~`711~`811~`911~`\\|12~`\\~12~`\\#12~`\\{12~`\\}12~127=12~`\\%12~`\\\\12\\read16to\\x\\edef\\r{|\\b\\x\\e}\\immediate\\write16{|\\i\\r\\z}\\end}\\t\n</code></pre>\n\n<p>For example, the program being saved in a file named \"codegolf.tex\", provided with input <code>??a_%,1!=\\z#@</code>, <code>initex codegolf.tex</code> outputs:</p>\n\n<pre><code>This is TeX, Version 3.14159265 (TeX Live 2019/dev/Debian) (INITEX)\n(./codegolf.tex\n\\x=??a_%,1!=\\z#@\na1 1z\n )\nNo pages of output.\nTranscript written on codegolf.log.\n</code></pre>\n\n<p>In the case of a degraded input, for example the strings <code>??</code>, <code>?a</code>, or <code>a?</code>, this implementation does not print any pair.</p>\n\n<h1>Explanation</h1>\n\n<h2>Basis for a T<sub>E</sub>X program</h2>\n\n<pre><code>\\read16\n</code></pre>\n\n<p>Per <a href=\"https://codegolf.meta.stackexchange.com/a/13652/94729\">this Meta answer</a>, the input of a program written in T<sub>E</sub>X should come from standard input, which is the <em>in register</em> number 16.</p>\n\n<pre><code>\\immediate\\write16\n</code></pre>\n\n<p>The T<sub>E</sub>X Codegolf community prefers to output to DVI or PDF, because it is simpler than writing to the terminal.  However, this requires a valid <code>\\output</code> routine, which either requires a format (with more category codes to alter<sup>1</sup>) or is longer to define.  So I write to the terminal. (<code>\\message</code> could also have been used, but I don't like how the output is surrounded by T<sub>E</sub>X chat on the same line).</p>\n\n<p>Because I output to the terminal, I also feel that no DVI file should get produced, so <code>\\immediate</code> is required<sup>2</sup>.</p>\n\n<pre><code>\\end\n</code></pre>\n\n<p>This is a complete program, so it must end with <code>\\end</code> to run cleanly.</p>\n\n<h2>Category codes</h2>\n\n<p>Running on alphanumerics and ignoring punctuation is a trivial matter for T<sub>E</sub>X.  All I have to do is to customize the category codes of those characters.</p>\n\n<p>For this subject, I will use category code 11 (\"letter\") for characters that need to be blurred, and category code 12 (\"other\") for characters that are to be dropped. That choice comes from the defaults of (ini)T<sub>E</sub>X, where letters are already set to 11 and most of the other characters to 12.</p>\n\n<pre><code>\\catcode`~13\\let~\\catcode\n</code></pre>\n\n<p>To save bytes, I make <kbd>~</kbd> an active character and set its meaning to <code>\\catcode</code>.  In the rest of the explanation, that alias will be ungolfed.</p>\n\n<pre><code>\\catcode`{=1 \\catcode`}=2 \\catcode`#=6 \\catcode`\\ =12\n</code></pre>\n\n<p>These are required for INIT<sub>E</sub>X to interpret my program correctly: <kbd>{</kbd> is now the begin-group character, <kbd>}</kbd> the end-group, <kbd>#</kbd> the macro argument, and <kbd>␣</kbd> is considered a normal character (so that the first spurious space of output can be removed).  These choices are widely used in the T<sub>E</sub>X world and do not cost bytes<sup>3</sup>.</p>\n\n<pre><code>\\catcode`|=13 \\let|=\\expandafter\n</code></pre>\n\n<p>This is an useful alias for later.</p>\n\n<pre><code>\\def\\t{\\catcode`0=11 ... \\end}\n\\t\n</code></pre>\n\n<p>This is a T<sub>E</sub>X design pattern that fools T<sub>E</sub>X's eyes.  Everything that is written in the <code>\\todo</code> macro definition will get a category code assigned, and this category code will not be reconsidered when TeX expands the macro.  Most notably:</p>\n\n<pre><code>\\catcode`\\\\=12\n</code></pre>\n\n<p>This makes the escape character <kbd>\\</kbd> a normal character when read from the user input.</p>\n\n<pre><code>\\read16to\\x \\edef\\r{|\\b\\x\\e} \\immediate\\write16{|\\i\\r\\z} \\end\n</code></pre>\n\n<p>When reading the macro definition, T<sub>E</sub>X has decided that these were control words, and T<sub>E</sub>X will not reconsider this choice after the macro has been expanded, even if <kbd>\\</kbd> has lost its special meaning in the meantime.</p>\n\n<pre><code>\\catcode127=12\n</code></pre>\n\n<p>The <kbd>DEL</kbd> character is contained in ASCII, so it should be valid input per the subject's rules.  But in order to change its category code to 12, the DEL character has to be written, and the most efficient<sup>4</sup> way to input it in T<sub>E</sub>X is to name it by its code point.</p>\n\n<pre><code>\\catcode`0=11 ... \\catcode`\\\\=12\n</code></pre>\n\n<p>Here are three groups of category code assignments: make the digits like letters, revert the changes made at the beginning of the program, and cancel other INIT<sub>E</sub>X defaults (<kbd>DEL</kbd>, <kbd>%</kbd>, <kbd>\\</kbd>, but not the new line because the subject emits the hypothesis:)</p>\n\n<blockquote>\n  <p>Your input will be a single-line string</p>\n</blockquote>\n\n<h2>The blurring command</h2>\n\n<p>Because I opted for terminal output, and because <code>\\write</code> does not executes its argument (only expands it), I am forced to write the <code>\\blur</code> macro as fully expandable.</p>\n\n<pre><code>\\def\\z{} \\def\\firstofone#1{#1} \\def\\ignore#1{}\n</code></pre>\n\n<p>As a prolog, I define three macros, which are commonly used in various fully-expandable design patterns.  The first one is the empty macro, the second one is the identity macro, and the third one is the zero macro.</p>\n\n<pre><code>\\def\\blur#1#2{ ... }\n</code></pre>\n\n<p>The <code>\\blur</code> macro is recursive<sup>5</sup>.  It takes two characters at a time (because the rules say that the input is longer than two).  Its definition is made of three parts.</p>\n\n<pre><code>\\ifx#2\\e \\expandafter\\expandafter \\expandafter\\ignore \\expandafter\\ignore\n\\else    \\expandafter\\firstofone\n\\fi\n</code></pre>\n\n<p>is the recursion condition: if the end-of-string marker (the undefined command <code>\\e</code><sup>6</sup>) is found, ignore the two other parts. (More precisely, drop the unused portion of the conditional <code>\\else...\\fi</code> at <code>\\expandafter</code> level 0, then ignore the second part at <code>\\expandafter</code> level 1, then ignore the third part at <code>\\expandafter</code> level 2.)  Otherwise, close the conditional and interpret the second part.</p>\n\n<pre><code>\\ifcat#1a \\expandafter\\firstofone\n\\else \\expandafter\\expandafter \\expandafter\\blur\n      \\expandafter\\expandafter \\expandafter#2\n      \\expandafter             \\ignore\n\\fi\n</code></pre>\n\n<p>handles the first character.  If it is a letter or digit, go analysing a second character.  Otherwise, skip the remaining of the conditional, ignore the third part, and call <code>\\blur</code> recursively with #1 being dropped and #2 as the first character<sup>7</sup> (an other one will get extracted from input).</p>\n\n<pre><code>\\ifcat#2a ␣#1#2 \\expandafter\\blur \\expandafter#2\n\\else \\expandafter\\blur \\expandafter#1\n\\fi\n</code></pre>\n\n<p>handles the second character.  If it is a letter or digit, output a space then the first part of the blur, then forget about #1 and call <code>\\blur</code> recursively on #2<sup>7</sup>.  Otherwise, forget about it and call <code>\\blur</code> recursively on #1<sup>7</sup>.</p>\n\n<h2>Calling the blurring command on real input</h2>\n\n<pre><code>\\read16 to \\x\n</code></pre>\n\n<p>will store the input into an (expandable) macro <code>\\x</code>.</p>\n\n<pre><code>\\expandafter\\blur \\x \\e\n</code></pre>\n\n<p>This is how the <code>\\blur</code> macro is called. Because <code>\\blur</code> acts on tokens, the input contained in <code>\\x</code> must be expanded first.  The end-of-string marker follows.</p>\n\n<pre><code>\\edef\\result{\\expandafter\\blur \\x \\e}\n</code></pre>\n\n<p>The result of the expansion, including the whitespace at front, is stored into the <code>\\result</code> macro.</p>\n\n<pre><code>\\expandafter\\ignore \\result \\z\n</code></pre>\n\n<p>Inside the <code>\\write16</code> command, the <code>\\result</code> macro is first expanded.  Then, <code>\\ignore</code> eliminates the first token of output: the first space if the output is non-empty, or the <code>\\z</code> macro call if the output is empty.  In the first case, the <code>\\z</code> macro will survive; but <code>\\write16</code> will finally expand it, and its expansion is a no-op.  This is the most efficient way of handling the “no trailing space” requirement, even if it requires 24 bytes (the definition and call of <code>\\z</code> and <code>\\return</code>); suppressing a space at the end of the output would have been nearly impossible.</p>\n\n<h2>☡ Footnotes</h2>\n\n<ol>\n<li><p><kbd>$</kbd>, <kbd>&amp;</kbd>, <kbd>^</kbd>, <kbd>_</kbd>, <kbd>NUL</kbd>, <kbd>SPC</kbd>, <kbd>TAB</kbd>, <kbd>~</kbd> for plain T<sub>E</sub>X; 5 bytes each = 40 bytes.</p></li>\n<li><p>Without <code>\\immediate</code>, <code>\\write</code> adds its content to a whatsit box, thus generating a page of output.</p></li>\n<li><p>Because there are only three category code changes, it is not worth putting them in a group to save the reverting.</p></li>\n<li><p>Decimal: <code>127=</code> (4); Hexadecimal: <code>\"7F=</code> (4, harder to read); Octal: <code>'199=</code> (5); Escape sequence: <code>``\\^^?</code> (5, plus <code>\\catcode`^7</code> and revert)</p></li>\n<li><p>It is even <em>tail-recursive</em>, which in T<sub>E</sub>X has the meaning of \"it does not add tokens after the recursive call\", and by doing so is more memory-friendly.</p></li>\n<li><p>Because all input other than my program does not get interpreted, the <code>\\e</code> command cannot be defined later.</p></li>\n<li><p>This would fail if #2 was a simple group of arguments, but fortunately the input cannot contain simple groups, because no character has category code 1 nor 2.</p></li>\n</ol>\n"},{"answer_id":204037,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204037#204037","body":"<h1>Python 3, 82 chars</h1>\n\n<pre><code>a=[c for c in input() if c.isalnum()]\nprint(' '.join(a+b for a,b in zip(a,a[1:])))\n</code></pre>\n\n<p>Try it: <a href=\"https://ideone.com/dxJU8e\" rel=\"nofollow noreferrer\">https://ideone.com/dxJU8e</a></p>\n"},{"answer_id":204027,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/204027#204027","body":"<h1>Swift, 141 bytes</h1>\n\n<pre><code>{let a=$0.unicodeScalars.filter{CharacterSet.alphanumerics.contains($0)};return zip(a,a.dropFirst()).map{\"\\($0)\\($1)\"}.joined(separator:\" \")}\n</code></pre>\n\n<p>Ungolfed:</p>\n\n<pre><code>let ungolfed: (String) -&gt; String = { input in\n    let unicodeScalars = input.unicodeScalars.filter { char in CharacterSet.alphanumerics.contains(char) }\n    return zip(unicodeScalars, unicodeScalars.dropFirst())\n        .map { \"\\($0)\\($1)\" }\n        .joined(separator: \" \")\n}\n</code></pre>\n\n<p>Test case runner:</p>\n\n<pre><code>import Foundation\n\nlet testCases: [(input: String, expectedOutput: String)] = [\n    (input: \"Ab\", expectedOutput: \"Ab\"),\n    (input: \"Abc\", expectedOutput: \"Ab bc\"),\n    (input: \"Abcd\", expectedOutput: \"Ab bc cd\"),\n    (input: \"E?h?\", expectedOutput: \"Eh\"),\n    (input: \"Blurry vision\", expectedOutput: \"Bl lu ur rr ry yv vi is si io on\"),\n    (input: \"We're #1!\", expectedOutput: \"We er re e1\"),\n    (input: \"I'm an example!\", expectedOutput: \"Im ma an ne ex xa am mp pl le\"),\n    (input: \"This is _not_ legible\", expectedOutput: \"Th hi is si is sn no ot tl le eg gi ib bl le\"),\n    (input: \"(a*b*c)+5^-x\", expectedOutput: \"ab bc c5 5x\"),\n    (input: \"??a_%,1!=z#@\", expectedOutput: \"a1 1z\"),\n]\n\nfor (input, expectedOutput) in testCases {\n    let actualOutput = f(input)\n    assert(actualOutput == expectedOutput, \"\"\"\n    Wrong answer.\n        input: '\\(input)'\n        actualOutput: '\\(actualOutput)'\n        expectedOutput: '\\(expectedOutput)'\n\n    \"\"\")\n}\n<span class=\"math-container\">```</span>\n</code></pre>\n"},{"answer_id":203936,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203936#203936","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 159 bytes (-2 more bytes thanks to S.S. Anne and JustinCB)</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>main(a,b)char**b;{b++;for(a=0;a&lt;strlen(*b);a++){if(isalnum((*b)[a])){a?putchar((*b)[a]):0;a&amp;&amp;a&lt;strlen(*b)-1?putchar(32):0;a&lt;strlen(*b)-1?putchar((*b)[a]):0;}}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##bYzLCsIwEEV/xVWZSSz42BnFDxEXk2A1kKYyaQQJ@fbRuihduD3nnuvau3MiPfkItLboHsRKWVOs1qYbGOi0MXRMI4dbBGXRkNZYfAc@UYi5hwle6IpY6PzM43Qws8O3bZpl3m7n0X738//l4qHWKiI2ZOb36uWTH@IH\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203945,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203945#203945","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 42 bytes</h1>\n\n<pre><code>1}.[:,/2' '&amp;,\\]#~'/9@Z`z'(2|I.\"#.)&amp;(3&amp;u:)]\n</code></pre>\n\n<p><a href=\"https://tio.run/##LYnbasJAGITvfYrRYP5sjGujeOGKJlYUhF6VQsFTmsS1ieRQoika2r566pbCzHzMzKlucTpiIkCw8ABxd5dj/vy0rO1vvhFWr08g3drutB/qjdz1W0VG/2vFWxpnujHQS8F2NWugIcMoh2GJI4POp6BZQGOV4T8OigsnchQfk7IobviMz3GeqeFVEhUSmt1UbUWUws8gr376kci/7SWKz7jLy/KLh0S@x0Ei1WH4ZmCGrDPcd6@qO47vte3mpNJcqn8B\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<p>Inspired by <a href=\"https://codegolf.stackexchange.com/a/203899/75681\">ngn's ngn/k solution</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>                                   (3&amp;u:)     convert to integer both\n                                         ]    the input\n                 '/9@Z`z'                     and the symbols surrounding the digits, \n                                              uppercas and lowercase letters\n                         (2|I.\"#.)&amp;           and find in which interval lies each char\n                                              then check if it's an odd one\n              ]#~                             use the above to filter the input\n       2' '&amp;,\\                                prepend each pair of adjacent chars\n                                              with a space\n   [:,/                                       flatten the result \n1}.                                           and drop the leading space \n</code></pre>\n"},{"answer_id":203903,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203903#203903","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>23</s> <s>19</s> 18 bytes</h1>\n\n<pre><code>žKÃ©g&lt;F®Nè?®N&gt;è?ð?\n</code></pre>\n\n<p><a href=\"https://tio.run/##yy9OTMpM/f//6L6sQysONx9amW7jdmid3@EV9kDSDkgd3mD//7@9fWK8qo6hom2VsgMA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>This probably could be really shorter, but I just wasn't able to find the right tools for the job. -4 bytes thanks to petStorm and a further byte thanks to Command Master.</p>\n\n<h2>Old Answer Explained</h2>\n\n<pre><code>žj'_ммм©g&lt;F®Nè?®N&gt;è?' ?\nžj                      # Push [a-zA-Z0-9_]\n  '_м                   # Remove the \"_\" from the above string\n     м                  # Remove all alphanum characters from the input, leaving non-alphanum chars\n      м                 # Remove those non-alphanum chars from the input, leaving alphanum chars\n       ©                # Put this string into the register\n        g&lt;F             # For N in range(0, len(input) - 1):\n           ®Nè?         #   Index the string at position N and print\n               ®N&gt;è?    #   Index the string at position N + 1 and print\n                    ' ? #   Print a space\n</code></pre>\n"},{"answer_id":203964,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203964#203964","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 80 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>p,b;f(char*s){for(p=b=0;*s;s++)isalnum(*s)?p&amp;&amp;printf(\" %c%c\"+!b--,p,*s),p=*s:0;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HUzNaoQwGLznKT5ddBN/QA@9NIjdQg@9F3oorSRp1ECMIdF228Vnt7Ewwwwzw4hyEGLfbcFpj8XIXObJrZ8dtg1vKpp56vOcKM@0WSccytamqXXKLD2OIRGJiPOIl2Vhi1AWtsn8fUW3/bgC/1ZX1TtFYQ0TUwYTuCH4HpWWgAe5eJx68p9Bjz2hQe0a0jg@/IbAyWV1BiqKNtgvHF24OPiJntqxRY96de4HvpRXs0Gv8uwknOoIPZ8nYAbklU1Wywi9jMpDQGfmpQMtB8W1RJhlPBMkv/sor6htWZcUddT8nh7@AA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203923,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203923#203923","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <strike>86</strike> 74 bytes</h1>\n\n<p><sup>-12 bytes thanks to Khuldraeseth na'Barya</sup></p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.Char\nunwords.map(\\(x,y)-&gt;[x,y]).(zip&lt;*&gt;tail).filter isAlphaNum\n</code></pre>\n\n<p><a href=\"https://tio.run/##Dcq7CgIxEEDR3q@YMhHNF7gLorXVdirLqIkZnDxIZvHx8zHVhcP1WF@WuTUKORWBIwqag8eycsMS36k8qgmY1UV9Nl@9Hc89V23Uj/JuPQoSa@OIxRaguufs8bSEFpAiDECxO94FXJs81X7AHJPMwPZJN7Z/\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203956,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203956#203956","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <sup><s>123</s> <span class=\"math-container\">\\$\\cdots\\$</span> <s>117</s></sup> 116 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>i;f(char*s){char*t=s;for(i=0;t[i+=!!isalnum(*s++)]=*s;);for(putchar(*t++);t[1];)printf(\"%c %1$c\",*t++);putchar(*t);}\n</code></pre>\n\n<p><a href=\"https://tio.run/##dcxNa8MgGMDxez6FSReqeYHaJCfJuh13H@zQdUWdaYXElJiObqWfPat1uB0cCA88/n8Pz3ecT5MkDeR7OiQanW9zrDVp@gHKekHGtUzrMJSaturYwUSnKdrUiSbolhyOoyEwGa/7a4w3BB0GqcYGRjEHMb7jUWY/f1NELlNHpYLoHJgV0Iv1po4eWUQChzXI70GU6QUiQQNvw7bUtvxP/KpcTm1OXc5@8nd/z2zPXG9y1h6H4RN8SC175XeWOYUNexHzQYAZDv0EW4MdWhr0NO8AVUCcaHdoxT90aenS0cLQ573U4Pq2qh@3oBU7yVrhP1DYA4U7UJoDkCYs4Sit3vKT35XWlc5Vxq1WdBtnOKy/Zg9@V1lnxmX6Bg\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203910,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203910#203910","body":"<h1>[C#], <s>163</s> <s>155</s> <s>133</s> <s>128</s> <s>127</s> <s>128</s> <s>114</s> <s>112</s> <s>133</s> 98 bytes</h1>\n\n<pre><code>i=&gt;{var b=i.Where(char.IsLetterOrDigit);return b.Select((n,i)=&gt;i==0|i==b.Count()-1?n+\"\":n+\" \"+n);}\n</code></pre>\n\n<p><a href=\"https://tio.run/##XVHva9swEP1s/xVXd6NynZjmw77MdbKta6GQsbEW8qF0QVYutkCWE/3IkmX@27NTksEYiHvcuyfd052wQ2HFwVupa3jaWYdtEf@b5VOp1/9Rz7h1@XesveLmfrsyaK3stC3ieOUrJQUIxa2Fb6arDW/jfRydeeu4I9h0cgFfuNQsjSOqRhtuQOqVd1CCxp@kM9Tu5RX2kHyskkGI4gyLgPfNJMAn5Y3ZwUaG/oGY4ZVBuBxdhOTxqgWuAbe8XSk8Us@NtEBnrjs3B4W1rBSGAuPX1bVIs3c/htuQTyZ8/nYwuih/XX5IoKevnW0uzxYfvBa3J58DWOw0b6UYMzjIcrwPuqqU@axBg0w03OSPdorOoflqPstaurQw6LzRUOVPqFA4xvRApuVYluXNbwpVftd57Vg6HE10liTvKUCS6bToD1GUFsHOsjPAQi9Pnm4KgtvTFPMp6to1xGQZTfg4YoCgXJNyyY6iF/9Kz4TCHe2uU5jPjHRI60b2Jtn/1fQwHNMaTj8lU1pwx9Yp9Mnxdh/T6Q9/AA\" rel=\"nofollow noreferrer\">Run it</a></p>\n\n<p><s>Have not used a Regex yet in a Codegolf, so very excite.</s> Regex uses way too many characters. No longer excite. </p>\n\n<ul>\n<li>127 bytes: removed a \".\" in the regex string</li>\n<li>126 bytes: replaced String.Join(\"\" with String.Concat</li>\n<li>114 bytes: changed || to |, removed the ( ) { return; } from inside the Select</li>\n<li>112 bytes: Removed + from regex</li>\n<li>128 bytes: Reverting back to older solution. Entry now legal (thanks to @Neil and @my pronoun is monicareinstate)</li>\n<li>98 bytes:  Realization that char is way more powerful than I thought (thanks to @my pronoun is monicareinstate's C# solution), removed the string -> char -> string conversions</li>\n</ul>\n"},{"answer_id":203957,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203957#203957","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 6 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>£Q·H°·\n</code></pre>\n\n<p><a href=\"https://staxlang.xyz/#p=9c51fa48f8fa&amp;i=Ab%0AAbc%0AAbcd%0AE%3Fh%3F%0ABlurry+vision%0AWe%27re+%231%21%0AI%27m+an+example%21%0AThis+is+_not_+legible%0A%28a*b*c%29%2B5%5E-x%0A%3F%3Fa_%25,1%21%3Dz%23%40&amp;a=1&amp;m=2\" rel=\"nofollow noreferrer\">Run and debug it at staxlang.xyz!</a></p>\n\n<h3>Unpacked (7 bytes) and explanation:</h3>\n\n<pre><code>VL|&amp;2BJ\nVL         Push string of all alphanumeric characters.\n  |&amp;       Remove from the input all letters not in this string.\n    2B     All length-2 substrings\n      J    Join with spaces\n</code></pre>\n"},{"answer_id":203955,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203955#203955","body":"<h1><a href=\"https://github.com/abrudz/QuadRS\" rel=\"nofollow noreferrer\">QuadR</a>, 18 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>1↓∊' ',¨2,/⍵\n\\W|_\n\n</code></pre>\n\n<p><a href=\"https://tio.run/##KyxNTCn6/9/wUdvkRx1d6grqOodWGOnoP@rdyhUTXhPP9f9/SEZmsQIQxefll8Qr5KSmZyblpAIA\" rel=\"nofollow noreferrer\" title=\"QuadR – Try It Online\">Try it online!</a></p>\n\n<p>Replaces all non-word characters and underscores (<code>\\W|_</code>) with nothing <code></code>, and then:</p>\n\n<p><code>2,/⍵</code> adjacent pairs</p>\n\n<p><code>' ',¨</code> prepend a space to each pair</p>\n\n<p><code>∊</code> <strong>ϵ</strong>nlist (flatten)</p>\n\n<p><code>1↓</code> drop the first space</p>\n"},{"answer_id":203951,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203951#203951","body":"<h1>JavaScript (ES6), <s>54</s> 76 bytes</h1>\n\n\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;[...a.replace(/[\\W_-]/g,'')].map((a,b,c)=&gt;a+c[b+1]).slice(0,-1).join(' ')\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcpBDoMgEADArxgv7EZY6wPwGz1Q0qwUDQaBiG36e9o5z84fru4M5VIpv3xbdWM9GyJiOn2J7DyM5nF/KjtuUgi0dHABYLlIh3rmwZllmCxSjeF/b1JNSHsOCUQnsLmcao6eYt5ghd5/@SjRdyGV99Ujth8\" rel=\"nofollow noreferrer\" title=\"JavaScript (ES6) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203941,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203941#203941","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 130 bytes</h1>\n\n<pre><code>func[s][a: charset[#\"0\"-#\"9\"#\"A\"-#\"Z\"#\"a\"-#\"z\"]parse s[any[p: change\na(rejoin[p/1\" \"p/1])| remove skip]]take/part/last s 2 at s 3]\n</code></pre>\n\n<p><a href=\"https://tio.run/##RY5vS8NADMbf91NkKbI/UuYUXzjQOsEXvhVB2HGWtE3Xc@31uOvGNvzu9To7DCH55XkSiOW8e@dcyKBYQlfsdCacFLSErCTruBUh3mAU4gOGuOph7YF6OKE0/Qo4QfoozPlEbzigieXvRmlh5gsE9FVOf8By3ez98lYZKVva8txft/OKXAsOboH6die7orFMWQkte0ME4ANXKV4g@6d8wNe4jAd8qXbWHmGvnGr0oH3y2DKEi9Ewv41rIA18oNpUfFE/SuXAZ6KbNoGKNyqtePAmNEtn2fT6/is6DFIcU3K1GD2ewmcMpABjlfbvZo05/n2O0RNCcWYpu18\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203933,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203933#203933","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 32 bytes (<a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\">SBCS</a>)</h1>\n\n<p>Port of Surculose Sputum's Python answer.</p>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>{¯2↓2↓⊃,/{⍵' '⍵}¨⍵∩⎕A,819⌶⎕A,⎕D}\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24TqQ@uNHrVNBuFHXc06@tWPereqK6gDydpDK4Dko46Vj/qmOupYGFo@6tkGZgIJl1qgbgV1xcSkZEV7dS4gUyNRK0krWVPbNE63Qh0A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":203930,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203930#203930","body":"<h1><a href=\"http://erlang.org/doc/man/escript.html\" rel=\"nofollow noreferrer\">Erlang (escript)</a>, 110 bytes</h1>\n\n<p>Port of the Python answer.</p>\n\n\n\n<pre class=\"lang-erlang prettyprint-override\"><code>f(X)-&gt;R=lists:flatten([[I]++\" \"++[I]||I&lt;-X,re:run([I],\"[A-Za-z0-9]\")/=nomatch]),string:slice(R,2,length(R)-4).\n</code></pre>\n\n<p><a href=\"https://tio.run/##ZYzLCsIwFAX3fkWNCLlNri90YbE@lt12JZYosaQ1EKMkEUX895ql4FkNzHCUM9K2qHzt9D10va6he8B1mRvtg88aI0NQllZVIRgjCWEs0udTrHDPncrcI7pCcFLt8CDxPcGlIDDO7e0qQ30RwH1w2raZN7pWtOQzbpRtw4WWgHMYdVep44OABNe9JE7fsubpdFC0oYTK9JzWwBZHfBEAHqU1FPh/udnI05BP@/l7sP0pR90X\" rel=\"nofollow noreferrer\" title=\"Erlang (escript) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203929,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203929#203929","body":"<h1>Q/KDB+, 38 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>{\" \"sv -2_2#'next\\[x inter .Q.an _52]}\n</code></pre>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>q){\" \"sv -2_2#'next\\[x inter .Q.an _52]}\"Ab\"\n\"Ab\"\nq){\" \"sv -2_2#'next\\[x inter .Q.an _52]}\"Abc\"\n\"Ab bc\"\nq){\" \"sv -2_2#'next\\[x inter .Q.an _52]}\"E?h?\"\n\"Eh\"\nq){\" \"sv -2_2#'next\\[x inter .Q.an _52]}\"This is _not_ legible\"\n\"Th hi is si is sn no ot tl le eg gi ib bl le\"\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<pre><code>{\" \"sv -2_2#'next\\[x inter .Q.an _52]} / solution\n{                                    } / lambda taking implicit x\n                           .Q.an       / \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789\"\n                                 _52   / drop element at index 52\n                   x inter             / intersection of x and alphanumerics\n             next\\[                 ]  / scan along input\n          2#'                          / take first 2 characters of each\n       -2_                             / drop final two items\n \" \"sv                                 / join (sv) with \" \"\n</code></pre>\n"},{"answer_id":203894,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203894#203894","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, <s>17</s> 16 bytes</h1>\n<pre><code>t8Y2m)2YC!Z{0&amp;Zc\n</code></pre>\n<p><a href=\"https://tio.run/##y00syfn/v8Qi0ihX0yjSWTGq2kAtKvn/f3WnnNKiokqFsszizPw8dQA\" rel=\"nofollow noreferrer\">Try it online!</a> Or <a href=\"https://tio.run/##y00syfmf8L/EItIoV9Mo0lkxqtpALSr5v0vIf3XHJHUuIJEMIVOAlKt9hj2QcsopLSqqVCjLLM7MzwPyw1PV1YtSFZQNFYEcT3X1XIXEPIXUisTcgpxUkFBIRmaxAhDF5@WXxCvkpKZnJuWkAsU1ErWStJI1tU3jdCuAXHv7xHhVHUNF2yplB3UA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<h3>Explanation</h3>\n<p>Consider input <code>'Blurry vision'</code>.</p>\n<pre><code>t      % Implicit input. Duplicate\n       % STACK: 'Blurry vision', 'Blurry vision'\n8Y2    % Push '012...9ABC...Zabc...z' (predefined literal)\n       % STACK: 'Blurry vision', 'Blurry vision', '012...9ABC...Zabc...z'\nm      % Ismember: true for chars of the first string that are in the second\n       % STACK: 'Blurry vision', [1 1 1 1 1 1 0 1 1 1 1 1 1]\n)      % Use as logical index. This keeps only letters and numbers in the input\n       % STACK: 'Blurryvision'\n2YC    % Character matrix with sliding blocks of length 2 as columns\n       % STACK: ['Blurryvisio';\n                 'lurryvision']\n!      % Transpose\n       % STACK: ['Bl';\n                 'lu';\n                 ...\n                 'on']\nZ{     % Cell array of matrix rows\n       % STACK: {'Bl' 'lu ... 'on'}\n0&amp;Zc   % Join with character 0 (which will be displayed as space)\n       % STACK: 'Bl lu ur rr ry yv vi is si io on'\n       % Implicit display\n</code></pre>\n"},{"answer_id":203924,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203924#203924","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C# (Visual C# Interactive Compiler)</a>, 74 bytes</h1>\n\n<p>This ended up very similar to the Python answer. I was trying something noticeably more interesting with Aggregate, but the terrible no trailing whitespace requirement made it too long.\n</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>s=&gt;s.SelectMany(c=&gt;char.IsLetterOrDigit(c)?c+\" \"+c:\"\").Skip(2).SkipLast(2)\n</code></pre>\n\n<p><a href=\"https://tio.run/##JY3LCsIwEEX3/YqQ1aSvheBG24ighUJFoa6FdBhqsEZJUrRfHytdnQuHy0GXodOhGg0Wzltt@pTVRzM@yapuoALvykrJKlay4Erp8pYGQn9SZgIs5V/ntWvIe7Jne9C99oBihwlnPMEN5yJvH/oNq4WNcn7eYRtFlznmwdCHLV2ogIOKuxhFsr5l3/l5fe2tVRMIIcIP\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Interactive Compiler) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203921,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203921#203921","body":"<h1><a href=\"https://github.com/gtownsend/icon\" rel=\"nofollow noreferrer\">Icon</a>, 92 bytes</h1>\n\n<pre><code>procedure f(s)\nt:=\"\"\nfind(k:=!s,&amp;letters++&amp;digits--'_')&amp;t||:=k||' '||k&amp;\\z\nreturn t[3:-2]\nend\n</code></pre>\n\n<p><a href=\"https://tio.run/##TU9Na4NAEL37K0ZD3d2oh7T0IohNoIfeCz2kifgxJou6ht2xTcP@99SVHjoM83hv4PGerEd1v1/0WGMzaYSWG@FRmgWB10rV8C7NfBOHPRKhNlEUNvIkySQJK5gIydo066xlwKztws@bp5EmrYD2T2nyePBQNf/Mh1IqLjyYh9CQgTSDfbCtghjmW/9B4/A1P@cOd/2k9Q98SSNH5YQPZLPTauM78sYGKBXgtRwuPS7S@1kamLdQIxXQ40lWPboHL9fVuhbR8zG5Op7nZfEQb/zstnqZ@WGJ9a0lIW@5v@QTwlVyHX4B\" rel=\"nofollow noreferrer\" title=\"Icon – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203919,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203919#203919","body":"<h1>JavaScript (ES6), 57 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;s.replace(/\\W|_|(.)/g,(_,c)=&gt;c?c+' '+c:'').slice(2,-2)\n</code></pre>\n<p><a href=\"https://tio.run/##dZHRboIwFIbv9xRHzQIVhGDizRJkmnjhvYk3y0ipFVhKS1owaHx3dtyyxVVGmpOm/b@vp@WDnqhhuqybmVQH3h/j3sRLE2heC8q4G77tr@nVDUiY@27qMxIvWcI8BxyPvTgOCYwoMTb3Z3PSMyWNEjwQKneP7niVjQmBgS8MYZU9PaTZcPwrDRkbAA6DxA8A7GAzm6RI/mM2hZ1ei1brM5xKUyp5j2F6LUC00GrQOM5wPmEMSgMGqwIlbdeeO5rDJBrZx6Nrz4GjBWtkY1unAiqBd7SqBb@DEdtWUNHbrkSygw7nuFJDja1xW7QrsDkcqVRNivt5mQl@06FoV0Dx2zxWNOIVGmhuIuA55LiOLzrkdek0mzLiLd5n3Z@roZd@/4UFLDobSxKaPvvRKL5MXh@wCKJL/wk\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":203895,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203895#203895","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, <s>57</s> 55 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:\"\".join((c+\" \"+c)*c.isalnum()for c in s)[2:-2]\n</code></pre>\n\n<p><a href=\"https://tio.run/##PVBda8IwFH3PrzirjLV@FLrhi1A7Bz74PtjD5iSt0WakaUiitIq/3d10MAiXe8/HvZyY3tetfrkf8q@74k2553CLKEp/WqnjuJpEiCZVMq5S6bjSpyZODq1FBanhks/nxex5e5eNaa2H6x1jgVVSi0HQu9T5vdQLBrgpuHbI0XATO2@JsdJMB3HqjJI@jmbLKElIa0l2iF1ojZXax4fo6m6YLXG1N3xebZ7Trts2Su6rMsCrkq3K6q9DWYVh/z@h2rN1URcBWNfsTZ2s7XGWTrY6YG8K6oSThaXXoz8TB@ngqLZoNfsQT1ZglD0E9YeAIB3VjG2eGgoF0fHGKDHQm4YCBpC@QHToqCfEwNARwd5r2ktvp1u/I@AoSyWC7b1G/X@UKvnptIcPNogjjoRTmGFLzMfluEom8@9ZF8z8L@Uc844VBd89TrOH/DJ6HbgM2eUX\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n\n<p><strong>How</strong>:</p>\n\n<ul>\n<li><p>For each alpha-numeric character <code>c</code> in the string, replace it with <code>c+\" \"+c</code>.<br>\nE.g: <code>\"abcd\" -&gt; \"a ab bc cd d\"</code></p></li>\n<li><p>Remove the redundant first and last 2 characters:<br>\nE.g: <code>\"a ab bc cd d\" -&gt; \"ab bc cd\"</code></p></li>\n</ul>\n"},{"answer_id":203917,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203917#203917","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"noreferrer\">Husk</a>, 5 bytes</h1>\n\n<pre><code>wX2f□\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv7/vzzCKO3RtIX///9X0kjUStJK1tQ2jdOtUAIA\" rel=\"noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n\n<h1>Explanation</h1>\n\n<pre><code>   f   Keep all items that\n    □  Is an alphanumeric character.\n X     Pick all sublists\n  2    With a length of 2.\nw      Join the output list by spaces.\n</code></pre>\n"},{"answer_id":203900,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203900#203900","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"nofollow noreferrer\">Retina</a>, 13 bytes</h1>\n<pre><code>\\W|_\n\nLw| `..\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxLNPz/Pya8Jp6Ly6e8RiFBT@//f6ec0iLFokqFsszizPw8AA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<p><code>\\W|_</code> Replace each character NOT in the regex group \\W (which is <code>A-Z,a-z,0-9,_</code>) or a <code>_</code> with nothing</p>\n<p><code>Lw| `..</code> Compute lists (<code>L</code>) for each set of two characters (<code>..</code>) starting at all positions in the string (<code>w</code>) and separate the lists with a space (<code>| </code>)</p>\n"},{"answer_id":203904,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203904#203904","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, <s>17</s> 16 bytes</h1>\n\n<pre><code>\\W|_\n\nM&amp;!`..\n¶\n&#32;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wPya8Jp6Ly1dNMUFPj@vQNi6F//8dk7gck5JBOIXL1T7Dnsspp7SoqFKhLLM4Mz@PKzxVvShVQdlQkctTPVchMU8htSIxtyAnVZErJCOzWAGI4vPyS@IVclLTM5NyUrk0ErWStJI1tU3jdCu47O0T41V1DBVtq5QdAA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation: Now basically a port of @Jarmex's Retina 1 solution, except that <code>M!</code> always joins with newlines, so I have explicitly change them to spaces. Previous 17-byte approach:</p>\n\n<pre><code>\\W|_\n\n\\B.\\B\n$&amp; $&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/##FcPdCoIwFADg@/MUR/zNfsCLLmM5iOg@8EZamx5yMGdMC4vefRV8n6NJW@nj7Hj1dfURADXf1ByiBKPE@1JBqZr/Fg6sY8DNw7kXPvWoBwsVpY4wLAI4pT1KizTL/m4ogHOnR/wRdpgEGrppZQgymau8WSy3l/UMjEkRr4pg9w73Xw\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Link includes test cases. Explanation:</p>\n\n<pre><code>\\W|_\n</code></pre>\n\n<p>Delete any non-word character and any underscore (which is the only non-alphanumeric character that counts as a word character).</p>\n\n<pre><code>\\B.\\B\n$&amp; $&amp;\n</code></pre>\n\n<p>Duplicate each inner character and space separate the results.</p>\n"},{"answer_id":203902,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203902#203902","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 26 bytes</h1>\n\n<pre><code>≔ΦＳ№⁺α⁺β⭆χλιθ⪫Ｅ⊖Ｌθ✂θι⁺²ι¹ \n</code></pre>\n\n<p><a href=\"https://tio.run/##LYzBCsIwEETv/Yq1HtxABOu1J6kIikKhB88xLm0gbtt06@/HRr3MHN6bsZ0Jtjc@xsM0uZbx5LxQwDMPszQSHLeoNFT9zIK1nyc0Gr790PDjNzNgsdPglVpMl2JUZVYvTPDSO8ZkHMkGehELPfFK3EqHY1Ib7yzhuAz/v/v0oaFIMIdcqTLGO20CwbpYZXH79h8\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n\n<pre><code>≔ΦＳ№⁺α⁺β⭆χλιθ\n</code></pre>\n\n<p>Filter out any character that can't be found in the upper or lower case alphabet and isn't a digit.</p>\n\n<pre><code>⪫Ｅ⊖Ｌθ✂θι⁺²ι¹ \n</code></pre>\n\n<p>Extract all substrings of length 2 and join them together on spaces.</p>\n"},{"answer_id":203896,"question_id":203893,"link":"https://codegolf.stackexchange.com/questions/203893/bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text/203896#203896","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"noreferrer\">Pyth</a>, 14 bytes</h1>\n\n<pre><code>jd.::Q\"\\W|_\"k2\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsyfj/PytFz8oqUCkmvCZeKdvo/3@lkIzMYgUgis/LL4lXyElNz0zKSVUCAA\" rel=\"noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n\n<ul>\n<li><p><code>:Q\"\\W|_\"k</code> replaces each non-alphanumeric character of the input with the empty string by matching each character against the regex <code>\\W|_</code></p></li>\n<li><p><code>.: --- 2</code> finds all substrings of length 2</p></li>\n<li><p><code>jd</code> joins the substrings using spaces</p></li>\n</ul>\n"},{"answer_id":201109,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/201109#201109","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, <s>21</s> 17 bytes</h1>\n\n<pre><code>0z[dp_3R+lmx]dsmx\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0n@/9@gKjqlIN44SDsntyI2pTi34v9/AA\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p>This prints the Fibonacci sequence endlessly.</p>\n\n<hr>\n\n<hr>\n\n<p>My previous (21-byte) version accepted an input <span class=\"math-container\">\\$n\\$</span> on stdin, outputting the <span class=\"math-container\">\\$n^\\text{th}\\$</span> Fibonacci number on stdout (1-indexed):</p>\n\n<p><code>9k5v1+2/?^5v/.5+0k1/p</code></p>\n"},{"answer_id":203717,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/203717#203717","body":"<h2>Go <s>114</s> <s>113</s> 106 chars</h2>\n\n<p>I'm sure this can be improved but I'd like to share my approach using the <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression\" rel=\"nofollow noreferrer\">closed-form expression</a> to calculate Fibonacci numbers.</p>\n\n<pre><code>package main\nimport(.\"fmt\"\n.\"math\")\nfunc main(){for i:=0.0;i&lt;31;i++{Printf(\"%.0f\\n\",Pow(Phi,i)/Sqrt(5));}}\n</code></pre>\n"},{"answer_id":203635,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/203635#203635","body":"<h1><a href=\"https://esolangs.org/wiki/Ral\" rel=\"nofollow noreferrer\">Ral</a>, 27 bytes</h1>\n\n<pre><code>11=,1*:0*+1=0=1/-:1:+:+?0*.\n</code></pre>\n\n<p><a href=\"https://tio.run/##VVFBbsMgELz7Fav0ABjsgCr1QEujHnNKVPVmWRWxsYJkO8hO0lZV3@5C4sjOZbXMzA7D4n6O@0P7ODzAG7zrGmx7NJ3rjK9QHTr4WG@itap1syu19CS2rTsdMSHRZkThLF0XmDOJSlNBd2pxQWQEBbOsZ43KiotT4b1DqS4d4oImchkrlq4@Uc44y3L2@xeBm2z7VDtn2jI4w/YWok/dwWHifXowdW@AR/C1t7UB@1Kb8W6wrFSWClZkNg/HCsrrrUg6HNKW/glXXClEA7rFhG7xHE5GOLmHJZJaeejZYX0tE7f0HNsFls0Uu5kinqabTOce1WEzzfiYmVLdlEEXmoliIdn6LlWK5AbfB12hsArQ42yAfffKpVWN/sac@eRR@K/FYjEIoZiIJY@pUFyJZSKFpJKueJwOnifD0z8\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":202953,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/202953#202953","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 13 bytes</h1>\n\n<pre><code>A(Z1)#HA(H+HG\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsyfj/31EjylBT2cNRw0Pbw/3/fwA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>A(Z1)#HA(H+HG\n\n (Z1)           : The tuple (0, 1)\nA               : Assign the first value of the tuple to G and the second to H\n     #          : Loop until error statement\n      H         : Print H\n        (H+HG   : The tuple (H, H + G)\n       A        : Assign the first value of the tuple to G and the second to H\n</code></pre>\n"},{"answer_id":202816,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/202816#202816","body":"<h1>Java, 24 bytes</h1>\n\n<pre><code>s-&gt;s.replaceAll(\".\",\" \")\n</code></pre>\n\n<p><a href=\"https://tio.run/##ZY7BTsMwDIbvfQoTCZFIXR6AaUxcpu0wceBIOYQ26TKypIrdTqjqs5ewRlzmHGzZ///9OatBrc7N91w7hQhHZf1YWE86GlVr2I3vFK1vwfA8oFhPRdd/OVsDkqLUhmAbuCRn1nx8qtiiGIsdGNjMuHpBGXXnEvDVOc4kKxkwMa@LzLS@6wk2wPbauVDCNUTXVH55D5BrH65PCJag8m34s4VBR6CTjrryW/ZPCz0tOCMNv6FFuv0g6YtMN9klFRnODrdUp31Lp2d4TIFvi/N@lWasPCuXn8pFwEWZs@4WKXCa5l8\" rel=\"nofollow noreferrer\">TIO</a></p>\n"},{"answer_id":202811,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/202811#202811","body":"<h1><a href=\"https://github.com/Sp3000/Golfish\" rel=\"nofollow noreferrer\">Gol>&lt;></a>, 5 bytes</h1>\n\n<pre><code>iEH~a\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PScsszvj/P9PVoy7x/3@P1JycfB2F8PyinBRFAA\" rel=\"nofollow noreferrer\" title=\"Gol&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>i      Push 1 char from the input to the stack\n E     If EOF was reached execute next, else skip 1\n  H    Output the entire stack as chars and halt\n   ~a  Discard the last read char and push 0x0a to the stack\n</code></pre>\n\n<p>Since Gol>&lt;> is actually a 2D language the programm counter loops back to the other side when it hits a border.\nThis is used to loop back to the beginning after the discard &amp; 0x0a push step.</p>\n"},{"answer_id":201811,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/201811#201811","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 23 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>print(' '*len(input()))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/7/v6AoM69EQ11BXSsnNU8jM6@gtERDU1Pz/3@P1JycfB2F8PyinBRFAA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":201806,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/201806#201806","body":"<h1><a href=\"https://github.com/ajc2/ahead\" rel=\"nofollow noreferrer\">Ahead</a>, 12 bytes</h1>\n\n<pre><code>S0d3-' \\k:W@\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8xITUz5/z/YIMVYV10hJtsq3OH/f4/UnJx8hfD8opwUAA\" rel=\"nofollow noreferrer\" title=\"Ahead – Try It Online\">Try it online!</a></p>\n"},{"answer_id":201805,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/201805#201805","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, 20 bytes</h1>\n\n<pre><code>{\" \".repeat(length)}\n\n{\" \".repeat           // repeat space\n           (length)}  // length of input\n</code></pre>\n\n<p><a href=\"https://tio.run/##fY2xCsJAEET7fMVw1V1hPiAQbS3s/IIT17i4bsK5CULIt58XCZZON7zHzKM3Yc1TFLBO/OKLUIOzJdau9gG7/VbQ5tnB1YkGiuaFtLN7WPJtVDwja3HnCiXrlNHb0CJRvJ5YqbBDA@e@fChrJup/d361Q/gH6@2uWvKRRPoP\" rel=\"nofollow noreferrer\" title=\"Kotlin – Try It Online\">Try it online!</a></p>\n"},{"answer_id":201105,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/201105#201105","body":"<h1><a href=\"http://erlang.org/doc/man/escript.html\" rel=\"nofollow noreferrer\">Erlang (escript)</a>, 36 bytes</h1>\n\n<p>I'm a total idiot. I didn't even think of this formula!\n</p>\n\n<pre class=\"lang-erlang prettyprint-override\"><code>f(X)when X&lt;2-&gt;1;f(X)-&gt;f(X-1)+f(X-2).\n</code></pre>\n\n<p><a href=\"https://tio.run/##Sy3KScxL100tTi7KLCj5z/U/TSNCszwjNU8hwsZI187QGsTXtQOSuoaa2iDKSFPvf25iZp5GdCxQIjPfqrwosyRVI03DTBMoAwA\" rel=\"nofollow noreferrer\" title=\"Erlang (escript) – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"http://erlang.org/doc/man/escript.html\" rel=\"nofollow noreferrer\">Erlang (escript)</a>, 50 bytes</h1>\n\n\n\n<pre class=\"lang-erlang prettyprint-override\"><code>f(X,Y)-&gt;io:write(X),io:nl(),f(Y,X+Y).\nf()-&gt;f(1,1).\n</code></pre>\n\n<p><a href=\"https://tio.run/##Sy3KScxL100tTi7KLCj5z/U/TSNCJ1JT1y4z36q8KLMkVSNCUwfIzsvR0NRJ04jUidCO1NTjStMAKknTMNQx1NT7n5uYmacRHQsWAXIB\" rel=\"nofollow noreferrer\" title=\"Erlang (escript) – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"http://erlang.org/doc/man/escript.html\" rel=\"nofollow noreferrer\">Erlang (escript)</a>, 51 bytes</h1>\n\n<p>Tail-recursion optimized.\n</p>\n\n<pre class=\"lang-erlang prettyprint-override\"><code>f(0,X,_)-&gt;X;f(I,X,Y)-&gt;f(I-1,Y,X+Y).\nf(X)-&gt;f(X,1,1).\n</code></pre>\n\n<p><a href=\"https://tio.run/##Sy3KScxL100tTi7KLCj5z/U/TcNAJ0InXlPXLsI6TcMTyI4EsoEsXUOdSJ0I7UhNPa40jQiwWISOoY6hpt7/3MTMPI3oWKBYZr5VeVFmSapGmoaZJlAGAA\" rel=\"nofollow noreferrer\" title=\"Erlang (escript) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":172670,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/172670#172670","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, <s> 43 </s> 41 bytes</h1>\n\n<pre><code>{(1..it).mapIndexed{i,v-&gt;\"$i$v\".toInt()}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##NY3BCoMwEETvfsUSPOxCDS29iab0KHjrFwRMZamuElNpEb89DQXnNsxj3msKA0t8vgVGy4LW90sJd@/tt3oEz9Ibgi2DlNUOkDZsJBAUBlpeQpWKgTpueNGaA@nRzo107uO6jU9rYVTO@ap0mBKItO/xeBKoAb2zXcvikOBWgjorOsi/cU7@gAsKUbbH6w8\" rel=\"nofollow noreferrer\" title=\"Kotlin – Try It Online\">Try it online!</a></p>\n"},{"answer_id":200547,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/200547#200547","body":"<h1><a href=\"https://github.com/Ghilt/Rabbit\" rel=\"nofollow noreferrer\">Rabbit~</a>, 13</h1>\n\n<pre><code>_[.0:.&gt;:.:.&gt;]\n</code></pre>\n\n<p>Explanation: </p>\n\n<pre><code>_ - Move to input\n [.0 - start loop with input 0, and loop until you hit 0\n    :. - print\n      &gt; - move along input\n       :.:. - print twice\n           &gt; - move along input\n            ] - end loop if we have reached past input\n</code></pre>\n"},{"answer_id":199600,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199600#199600","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, <s>9</s> 8 bytes</h1>\n\n<pre><code>q3e*1&gt;2%\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85KzP3/v9A4TavY0M5I9f//xKTklFQA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>  abcde             q     read input\n→ aaabbbcccdddeee   3e*   repeat characters x3\n→  aabbbcccdddeee   1&gt;    drop first \n→  a b b c d d e    2%    every other char\n</code></pre>\n\n<p>Esolanging Fruit saved 1 byte: <code>3f*s</code> → <code>3e*</code>.</p>\n"},{"answer_id":198728,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198728#198728","body":"<h1>x86-16 machine code, IBM PC DOS, <del>14</del> 12 bytes</h1>\n<p><strong>Binary:</strong></p>\n<pre><code>00000000: b401 cd21 f7d9 78f8 cd29 ebf4            ...!..x..)..\n</code></pre>\n<p><strong>Unassembled:</strong></p>\n<pre><code>    START: \nB4 01   MOV  AH, 1      ; DOS read char from STDIN \nCD 21   INT  21H        ; put char in AL \nF7 D9   NEG  CX         ; toggle CX sign\n78 F8   JS   START      ; if negative, loop to next char \nCD 29   INT  29H        ; DOS write char to screen again \nEB F1   JMP  START      ; loop until break/^C\n</code></pre>\n<p>A standalone executable DOS program.  Input via <code>STDIN</code> (pipe or keyboard interactive), output to <code>STDOUT</code>.</p>\n<p>Output:</p>\n<p><a href=\"https://i.stack.imgur.com/377EG.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/377EG.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":200159,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/200159#200159","body":"<h1><a href=\"https://github.com/FMNSSun/Burlesque\" rel=\"nofollow noreferrer\">Burlesque</a>, 9 bytes</h1>\n\n<pre><code>peJNB\\\\NB\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyotykktLixN/Z@Tl1v9vyDVy88pJsbP6X/t/@parmpdQwUDBUMgwxBMGgN5QL4CSNRUwRikwNgELAKiTRQsFExqAQ\" rel=\"nofollow noreferrer\" title=\"Burlesque – Try It Online\">Try it online!</a></p>\n\n<pre><code>pe # Parse and push\nJ  # Duplicate\nNB # Remove duplicate elements\n\\\\ # Difference between nubbed and original lists\nNB # Nub the difference\n</code></pre>\n"},{"answer_id":200057,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/200057#200057","body":"<h1><a href=\"https://github.com/dzaima/APL\" rel=\"nofollow noreferrer\">APL (dzaima/APL)</a>, <s>10</s> 9 bytes</h1>\n\n\n\n<p>-1 thanks to Bubbler</p>\n\n<p>Anonymous tacit prefix function. Requires 0-based indexing (<code>⎕IO←0</code>)</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊢⌿⍨1 2⍴⍨≢\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pSszMTfyf9qhtgsb/R12LHvXsf9S7wlDB6FHvFiDjUeei/5pcj/qmAuXTFNQTk5JTUtVR@er/AQ\" rel=\"nofollow noreferrer\" title=\"APL (dzaima/APL) – Try It Online\">Try it online!</a></p>\n\n<p><code>≢</code> the length</p>\n\n<p><code>2⍴⍨</code> use that to cyclically <strong>r</strong>eshape <code>[1,2]</code></p>\n\n<p><code>⊢⌿⍨</code> use that to replicate the letters</p>\n"},{"answer_id":200026,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/200026#200026","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 25 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{s.scan(/(.(.?))/)*''}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1664ulivODkxT0NfQ09Dz15TU19TS1299n9BaUmxQlq0emJSckqqeux/AA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<p>Same byte count as the other answer, different approach.</p>\n"},{"answer_id":200025,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/200025#200025","body":"<h1>Clojure, 91 bytes</h1>\n<pre><code>(defn d[s](apply str(map #(str(first %)(second %)(second %))(partition-all 2 2(into[]s)))))\n</code></pre>\n<p>Ungolfed version:</p>\n<pre><code>(defn dup-alternate-chars[s]\n  (apply str (map #(str (first %) (second %) (second %)) (partition-all 2 2 (into [] s)))))\n</code></pre>\n<p>Test harness:</p>\n<pre><code>(println (d &quot;abcde&quot;))\n</code></pre>\n<p>which prints &quot;abbcdde&quot;.</p>\n<p><a href=\"https://tio.run/##VcgxCsMwDEDRPacQKQF56JLrhAyq5YCLIhtJHXp6Nxn7p8fP0t4fK2Mgl0OBN9@RepcveBie1OGBt45qHrAk9JKb8p8SdrKoUZs@SQRWWLFqtG33dDdN2O0aooAMM70ylzmlMX4\" rel=\"nofollow noreferrer\" title=\"Clojure – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199784,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199784#199784","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, 34 bytes (xnor's improvement)</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:`[c*11for c in s]`[7::10]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUaHYKiE6WcvQMC2/SCFZITNPoTg2IdrcysrQIPZ/QVFmXolGmoZ6YlJySqq6puZ/AA\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, 36 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:`sum(zip(s,s,s),())`[7::10]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUaHYKqG4NFejKrNAo1gHCDV1NDQ1E6LNrawMDWL/FxRl5pVopGmoJyYlp6Sqa2r@BwA\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>Slices characters 7, 17, 27… out of a string like this:</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>('a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'c', 'd', 'd', 'd', 'e', 'e', 'e')\n012345678901234567890123456789012345678901234567890123456789012345678901234\n       ^         ^         ^         ^         ^         ^         ^\n→ abbcdde\n</code></pre>\n\n<p>xnor's <code>c*11</code> trick achieves the same thing, but with a string like:</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>['aaaaaaaaaaa', 'bbbbbbbbbbb', 'ccccccccccc', 'ddddddddddd', 'eeeeeeeeeee']\n012345678901234567890123456789012345678901234567890123456789012345678901234\n       ^         ^         ^         ^         ^         ^         ^\n→ abbcdde\n</code></pre>\n\n<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:''.join(c*3for c in s)[1::2]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUaHYSl1dLys/M08jWcs4Lb9IIVkhM0@hWDPa0MrKKPZ/QVFmXolGmoZ6YlJySqq6puZ/AA\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n\n<p>If returning a tuple of characters is OK (which it isn't), <code>lambda s:sum(zip(s,s,s),())[1::2]</code> is a 33-byte solution.</p>\n"},{"answer_id":199830,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199830#199830","body":"<h1>Java 8, 30 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>s-&gt;s.replaceAll(&quot;.(.)&quot;,&quot;$0$1&quot;)\n</code></pre>\n<p>Same approach as <a href=\"https://codegolf.stackexchange.com/a/199829/52210\">my Retina answer</a>, which was a port of <a href=\"https://codegolf.stackexchange.com/a/198722/52210\"><em>@DigitalTrauma</em>'s sed's answer</a>.</p>\n<p><a href=\"https://tio.run/##hY7LDoIwEEX3fMWkcdEm0ujaaOIHyMalcVFLwWIpyAz4Ct@O1XRr3Ezmcc@9U6lBpVV@mbRTiLBT1r8SAOvJdIXSBrLPCLCnzvoSNI8NilXYj0koSIqshgw8rGHCdIOyM60L8NY5ziSXgs3ZbDFbMjGtPkTbn1wgIjg0Noc6BEfvwxGUiKkPJFPLpifZhhM5z73UnKmTzg0T3x9@q8gg/RV9rYrybKuLq33TXjukfrjdH8@Ijsk4vQE\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n"},{"answer_id":199829,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199829#199829","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"nofollow noreferrer\">Retina</a>, 9 bytes</h1>\n<pre><code>.(.)\n$0$1\n</code></pre>\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/198722/52210\"><em>@DigitalTrauma</em>'s sed's answer</a>, so make sure to upvote him as well!</p>\n<p><a href=\"https://tio.run/##K0otycxLNPyvquGe8F9PQ0@TS8VAxfD//8Sk5JRUrpLU4hIuMDMtPSMzKzsnNy@/oLCouKS0rLyisgoA\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>.(.)  # MATCH:\n.(.)  #  Every pair of characters,\n      #  where the second character is saved in capture group 1\n\n$0$1  # And replace it with:\n$0    #  The entire match, so both characters\n  $1  #  Followed by the character from capture group 1\n</code></pre>\n"},{"answer_id":199828,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199828#199828","body":"<h1><a href=\"https://github.com/EdgyNerd/DotPlusQuestion/blob/master/README.md\" rel=\"nofollow noreferrer\">.+?</a>, 11 bytes</h1>\n\n<pre><code>(.(.))\n\\1\\2\n</code></pre>\n\n<p>The first answer in my new language. It's a simple language based around python regex substitution</p>\n\n<h1>Explanation</h1>\n\n<pre><code>(.(.)) Replace each pair of characters with\n\\1\\2   matching group 1 (both characters) followed by matching group 2 (the second character)\n</code></pre>\n\n<p><a href=\"https://tio.run/##TY7RbsIwDEXf/RWWECIZXUTK20S@pO1DC4FGlNRKsk18fRaPquLNvj73yPRM4@yPObsHzSFhfMYKgwUK8w0Nr6oPt59GdyrS5JLYtX4nAdwVJ@sFY3JbG6O/AJ0nw4GimYQEO0X7St9FdVfKnBzgd3STRUcf9Wl1ceFaHlCPPp3H/6xhoqtYxOdFWJD4PbwD67jXC80w4d6gBly@YbsjYw484xBsf39Rn0xtkILzSZRyMRTBukrIOQsllJTQ6rbO/XC@2D8\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a> (The second command line argument is input)</p>\n"},{"answer_id":199825,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199825#199825","body":"<h1>T-SQL, 88 bytes</h1>\n<pre class=\"lang-sql prettyprint-override\"><code>DECLARE @x INT=len(@)/2*2WHILE @x&gt;0SELECT\n@=stuff(@,@x,0,substring(@,@x,1)),@x-=2PRINT @\n</code></pre>\n<p><strong><a href=\"https://data.stackexchange.com/stackoverflow/query/1199237/repeat-every-other-character-in-string-starting-with-second-character\" rel=\"nofollow noreferrer\">Try it online</a></strong></p>\n"},{"answer_id":199787,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199787#199787","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, <strike>9</strike> <strike>8</strike> 7 bytes</h1>\n\n<p>And of course, the simple solution always prevails, and comes to me after I thought I'd done something clever :/</p>\n\n<p>-1 byte because I literally put my laptop away and then remembered that <code>s</code> was a thing</p>\n\n<pre><code>%2ts*L3\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>%2tjk*L3  \n          # Implicit Q = eval(input())\n%2        # Every second character of:\n  t       #   All but the first character of:\n   jk     #     Joined on the empty string:\n     *L3  #       Each character of Q * 3    \n</code></pre>\n\n<h2>Previous version (9 bytes)</h2>\n\n<pre><code>r9m,h=!Td\n</code></pre>\n\n<p>Falling behind a lot of other golfing languages unfortunately </p>\n\n<p>Explanation:</p>\n\n<pre><code>           # Implicit T=10, Q=eval(input())\nr9         # Run length decode\n  m        # map over (implicit) Q\n   ,h=!Td  # create a pair of:\n    h=!T   # 1 + (T = not T) and\n        d  # the character\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsyfj/v8gyVyfDVjEk5f9/pcSk5JRUpX/5BSWZ@XnF/3VTAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199792,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199792#199792","body":"<h1><a href=\"https://ch.superloach.xyz/?inp=YWJjZGU%3D&amp;src=Pl5fXz5eYQpeYX5zPj5ecwpeX18-Xm4KMD4-XmkKXmkrMT4-XmkKLT4rNj9eaT5ecwpeYSxeaX5jPj5ebApebl5sPl5uCi0-LTQ_Xml-bwpebl5sPl5uCi0-LTYKPl5u\" rel=\"nofollow noreferrer\">Chevron</a> - 96 bytes</h1>\n\n<p>(link goes to interpreter)</p>\n\n<pre><code>&gt;^__&gt;^a\n^a~s&gt;&gt;^s\n^__&gt;^n\n0&gt;&gt;^i\n^i+1&gt;&gt;^i\n-&gt;+6?^i&gt;^s\n^a,^i~c&gt;&gt;^l\n^n^l&gt;^n\n-&gt;-4?^i~o\n^n^l&gt;^n\n-&gt;-6\n&gt;^n\n</code></pre>\n"},{"answer_id":199785,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199785#199785","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 9 bytes</h1>\n\n<pre><code>2/{1/~.}%\n</code></pre>\n\n<pre><code>2/{1/~.}% #Repeat every other character\n2/        #Split string into bits of size 2\n  {    }% #For every of those elements, do block\n  {1/  }  #Divide into elements of size 1\n  {  ~ }  #Pop from their array\n  {   .}  #Duplicate the last element\n</code></pre>\n\n<p>Probably possible to shave a byte or two by refining the block. Unfortunately ) doesn't decouple properly.</p>\n\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPmvlJiUkpaapvTfSL/aUL9Or1b1/38A\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199646,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199646#199646","body":"<h1><a href=\"http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/\" rel=\"nofollow noreferrer\">Forth (gforth)</a>, 46 bytes</h1>\n\n<pre class=\"lang-forth prettyprint-override\"><code>: f 0 do dup dup 1 type i 2 mod type 1+ loop ;\n</code></pre>\n<p><a href=\"https://tio.run/##LYy7DsIwFEN3vuIoKyoi4TFQiZk/6AxNAkhB9yqUga9Pk8Jg2ceyHCVPj@4em5VyIrLFC/6jiyzTVwNPHC/xP7BrkojS17ni2mzpNwa6M6Z@jJl@9TZcb6MPBm35ElISBsnJ/xvrdvvDsUKZAQ\" rel=\"nofollow noreferrer\" title=\"Forth (gforth) – Try It Online\">Try it online!</a></p>\n<h3>Code Explanation</h3>\n<pre class=\"lang-forth prettyprint-override\"><code>: f              \\ start a new word definition\n  0 do           \\ loop from 0 to string-len - 1\n    dup dup      \\ duplicate the current character address twice\n    1 type       \\ output the current letter\n    i 2 mod type \\ if odd, output again, if even do nothing (0 type = output nothing)\n    1+           \\ increment current character address\n  loop           \\ end loop\n;                \\ end word definition\n</code></pre>\n"},{"answer_id":199601,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199601#199601","body":"<h1><a href=\"https://github.com/lynn/z80golf\" rel=\"nofollow noreferrer\">Z80Golf</a>, 12 bytes</h1>\n\n<pre><code>00000000: d52e 76e5 2e07 e5cd 0380 38f6            ..v.......8.\n</code></pre>\n\n<p><a href=\"https://tio.run/##q7IwSM/PSfv/3wAKrBRSTI1SFczNUk0VjFINzBVSTZNTFAyMLQwUjC3SzBSQgJ5emR4EWOj9/5@YlJySCgA\" rel=\"nofollow noreferrer\" title=\"Z80Golf – Try It Online\">Try it online!</a></p>\n\n<pre><code>  push de\nZ:ld l, $76\n  push hl\n  ld l, G\n  push hl\nG:call $8003\n  jr c, Z+1   ; halt on EOF, else fallthrough\n</code></pre>\n\n<h1>Explanation</h1>\n\n<p>Z80golf is a small Z80 computer hooked up to <code>$8000=putchar, $8003=getchar</code>. (<code>putchar</code> prints byte A; <code>getchar</code> reads a byte into A or sets the carry flag on EOF.) Our code is placed at <code>$0000</code> and all registers start at 0, including PC. The rest of memory is filled with zeroes.</p>\n\n<p>Let's run through some sample input: <code>uvwxyz</code>.</p>\n\n<p>We push three addresses to the stack: <code>$0000</code>, then <code>$0076</code>, then <code>G</code>.</p>\n\n<p>Then (here's label <code>G</code>), we call <code>getchar()</code>, and on EOF jump to the HALT instruction (<code>$76</code>) hidden in the argument to <code>ld l, $76</code>.</p>\n\n<p>Otherwise, control flow falls through a sea of NOPs into <code>$8000</code>. This is hardcoded to perform <code>putchar(A); ret</code>, so we print <code>u</code> and return back to <code>G</code>.</p>\n\n<p>The next time we get here, we print <code>v</code> and return to <code>$0076</code>, amid the NOP sea: control flow runs back to <code>$8000</code>, we print <code>v</code> again, then return to <code>$0000</code>, where the code starts over.</p>\n\n<p>Repeating this process, the output is <code>uvvwxxyzz</code> → HALT. </p>\n"},{"answer_id":199450,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/199450#199450","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 36 bytes</h1>\n\n<pre><code>,{['aeiou'.123,97&gt;^]\\2%=.,rand=}%''+\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPlv/l@nOlo9MTUzv1Rdz9DIWMfS3C4uNsZI1VZPpygxL8W2VlVdXfv/fwA\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199492,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/199492#199492","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 76 bytes</h1>\n\n<p>Basic recursive function that adds a consonant and a vowel each time until there's only one character left, at which point it adds just the consonant.</p>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>f=-&gt;n{[*?b..?z].grep(/[^eiou]/).sample+(n&lt;2?'':'aeiou'.chars.sample+f[n-2])}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvz/P81W1y6vOlrLPklPz74qVi@9KLVAQz86LjUzvzRWX1OvODG3ICdVWyPPxsheXd1KPREkoa6XnJFYVAyTTIvO0zWK1az9b6xXXALUbmioY6SpkJKvUJNZw6WgUFBaUqyQFp0Zq4NEcqXmpfwHAA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199490,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/199490#199490","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 12 bytes</h1>\n\n<pre><code>q2/{_La+1=}%\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85KzP1f6KevVP2/0Ei/Ot4nUdvQtlb1f62SElehkm6dqp/W/8Sk5JRUrrT0jMysbC4uAxAAAA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>q2/{_La+1=}%\nq2/           Read the input and split it into groups of 2 characters.\n   {      }%  For each group:\n    _           Copy it.\n     La+        Append an empty string.\n        1=      Get its second element.\n              Join the results.\n</code></pre>\n"},{"answer_id":199448,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/199448#199448","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 10 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>ÇÅφ⌠↑Ñ°↕Yx\n</code></pre>\n\n<p><a href=\"https://staxlang.xyz/#p=808fedf418a5f8125978&amp;i=7\" rel=\"nofollow noreferrer\">Run and debug it</a></p>\n\n<h1>Explanation</h1>\n\n<pre><code>FVcVv2l@_@L\n\nF           In range 1 to the input, do this ...\n Vv         Vowels\n   Vc       Consonants\n     2l     Wrap the two inside a list\n       @    Index the constructed list into the counter\n            Note that the counter starts at 1,\n            so this picks the constants list\n            before the vowels list.\n        _@  Index by the current counter\n            (Stax doesn't have random number support)\n          L Wrap the whole stack into a list\n</code></pre>\n"},{"answer_id":199488,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/199488#199488","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 69 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>say map{([a,e,i,o,u],[grep!/[eiou]/,b..z])[$_%2][rand$_%2*16+5]}1..&lt;&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/784sVIhN7GgWiM6USdVJ1MnX6c0Vic6vSi1QFE/OjUzvzRWXydJT68qVjNaJV7VKDa6KDEvBcTSMjTTNo2tNdTTs7H7/9/QwPBffkFJZn5e8X9dX1M9A0MDAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199143,"question_id":199139,"link":"https://codegolf.stackexchange.com/questions/199139/write-some-random-english/199143#199143","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, <strike>14</strike> 11 bytes</h1>\n\n<p>-3 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/52210/kevin-cruijssen\">Kevin Cruijssen</a></p>\n\n<pre><code>EžN¸žMšNèΩJ\n</code></pre>\n\n<p><a href=\"https://tio.run/##ARwA4/9vc2FiaWX//0XFvk7CuMW@TcWhTsOozqlK//83\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199081,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/199081#199081","body":"<h1><a href=\"http://jdk.java.net/\" rel=\"nofollow noreferrer\">Java (JDK)</a>, <s>116</s> 115 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>v-&gt;{float m=0,p=0;for(int i=0;i&lt;a.length;i++){m+=a[i];p+=a[i];p=i!=0?p/2:p;}m/=a.length;return m+\"\\n\"+p+\"\\n\"+(p-m);\n</code></pre>\n\n<p><a href=\"https://tio.run/##TU67boNAEOz9FRtXIOBMnC7nc7p0qVw6Li4YyJJ76ViQLMS3k3MAK9PM7sxodxrZy6y5/kyonfUETdhZR6hY1ZmC0Br2vgx847ovhQUUSrYtfEg0MGwgYNFbkhSot3gFHdzoRB5Nfb6A9HUbL@E7KmUl3XUQMDyn@zx9yUf@sNePhyWXzoeOUIGY@uw4/OmgRZ46kfPK@ggNAYYZD5Kp0tT0zTFJ4kEnQp7xwt3KAp9E/uZ2@1fHR70Tj7gvqfMGdLL9NNvEzRS5TMd8Wov963i6tVRqZjtiLpQjZaKKSefULZJxPOfGzTj9Ag\" rel=\"nofollow noreferrer\" title=\"Java (JDK) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198994,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198994#198994","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, <strike>144</strike> 122 bytes</h1>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>let f=|y:&amp;[f64]|{let m=y.iter().sum::&lt;f64&gt;()/y.len()as f64;let pm=y[1..].iter().fold(y[0],|acc,x|(acc+x)/2.);(m,pm,pm-m)};\n</code></pre>\n\n<p>Straightforward approach. Shaved 22 bytes thanks SirBogman, and thanks Mabel for showing TIO's Rust support.</p>\n\n<p><a href=\"https://tio.run/##jY1fa4MwFMXf9yliH8oNS28b@2etrtsHkTDEJiAY50xaKupnd9E1bA@jFHK4l3PP76Q@Gzuokug0L4GSdiikJerYNdE8UbuN6NrR0McGcytroGjOOope3ekN6LLBQjosNcQZ8ZisXDThiMLn1WdxgiZZCdalWcauHbjxfKXLEGkMmlXjW2jax0NqjKzth/wKQMH8IrMgWSMLkXEUlBFwG@H4smVkscJwS2n89A/CJ2T9i4Quy4gnqjovbVEGMGuj937GiOc2Ljrq4LSffvqZu5vHJ4m7HYc/vGd9L3@w43bvh28\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":199075,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/199075#199075","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Raku</a><sub>(Perl 6)</sub>, <strike>41</strike> 40 bytes</h1>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{|($/=(.reduce((*+*)/2),.sum/$_)),$0-$1}\n</code></pre>\n\n<p>My original solution had <code>my \\a=</code>and used <code>[-]|@a</code> at the end, but abusing <code>$/</code> is always fun, especially with also abusing assignments.  Pretty straightforward calculation wise.</p>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYKvwv1pF31ZDryg1pTQ5VUNDS1tLU99IU0evuDRXXyVe07pGRV9HxUBXxbD2vzVXcWKlQppGtLGOkY5hrOZ/AA\" rel=\"nofollow noreferrer\" title=\"Raku – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198837,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198837#198837","body":"<h2><a href=\"https://github.com/amakukha/tmg\" rel=\"nofollow noreferrer\">Unix TMG</a>, 59 bytes</h2>\n\n<pre><code>p:parse((c={1}))parse((c={1 1}))\\p;c:smark any(!&lt;&lt;&gt;&gt;)scopy;\n</code></pre>\n"},{"answer_id":198930,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198930#198930","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, <s>12</s> 11 bytes</h1>\n\n<p><em>-1 byte thanks to Bubbler</em></p>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>∊⊢⍴⍨¨1 2⍴⍨≢\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNzkksLs5M/v@od27ao7YJ@o96VzzqmKFhqGD0qHcLiNO5SBNI/QdJPuroetS1CCJ@aAWykv//0xTUE5OSU1LVAQ\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Classic) – Try It Online\">Try it online!</a></p>\n\n<p>A train that takes a string and returns a string (or any list technically).</p>\n\n<h3>Explanation:</h3>\n\n<pre class=\"lang-apl prettyprint-override\"><code>  ⍴⍨         ⍝ Reshape\n    ¨        ⍝ Each of\n ⊢           ⍝ The input\n     1 2     ⍝ To the array 1 2\n        ⍴⍨   ⍝ Reshaped to\n          ≢  ⍝ The length of the input\n∊            ⍝ And flatten the result\n</code></pre>\n"},{"answer_id":198902,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198902#198902","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 57 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>function(v,`!`=sum,N=!1^v)c(A&lt;-!v/N,P&lt;-!v/2^c(N:1,N),P-A)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/qfZvs/rTQvuSQzP0@jTCdBMcG2uDRXx89W0TCuTDNZw9FGV7FM308nAEwbxSVr@FkZ6vhp6gToOmr@T9MwtDLW5ErTSNYw0VEAIksdBQsdBUMwaQbmAtmGmiAlhpr/AQ\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<p>A clever collaboration with digEmAll and RobinRyder; uses the observation by <a href=\"https://codegolf.stackexchange.com/a/198894/67312\">Grimmy</a> and Kevin's explanation from the comments, which I replicate below:</p>\n\n<blockquote>\n  <p>For anyone else wondering why the example <code>[a,b,c,d] -&gt; [a,b,c,c,d,d,d,d]</code> doesn't match the explanation of the code, it actually transforms <code>[a,b,c,d]</code> to <code>[a,b,b,c,c,c,c,d,d,d,d,d,d,d,d,a]</code> (so two of each value in comparison to the example). The example confused me for a moment. But nice answer, +1 from me! I also like that it has all these different types of the letter 'A' in the code: <code>āÅÅAÂÆª</code>. xD</p>\n</blockquote>\n\n<p>This uses R's recycling rules to use two copies of <code>l[1]/2^N</code> in the sumby just sticking an extra <code>N</code> at the end of the decay rate.</p>\n\n<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 62 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>function(l)c(p&lt;-Reduce(function(x,y)(x+y)/2,l),a&lt;-mean(l),p-a)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/qfpmCjq/A/rTQvuSQzP08jRzNZo8BGNyg1pTQ5VQMuXKFTqalRoV2pqW@kk6Opk2ijm5uaCFKtU6CbqPk/TcPQyliT6z8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<p>Straightforward implementation.</p>\n"},{"answer_id":198911,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198911#198911","body":"<h1><a href=\"https://docs.python.org/3.8/\" rel=\"nofollow noreferrer\">Python 3.8 (pre-release)</a>, <strike>70</strike> 69 bytes</h1>\n\n<p>-1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/32604/kyle-gullion\">Kyle Gullion</a></p>\n\n\n\n<p>returns <code>(mean, p_mean, trend)</code></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:(m:=sum(x)/len(x),[p:=x[0],*[p:=(p+n)/2for n in x]][-1],p-m)\n</code></pre>\n\n<p><a href=\"https://tio.run/##VcrBCsMgDAbg@54ix7hZqvUyBJ/EeejYZIWaBteBe3pnexj0kPzh@8Pf9bWQuXKuERzc6jym@2OEYjFZ9/4kLKKfn9RCeraueBXkebuQLyT6IS4ZCCaCEoLvdJDcJVE5T7RiRK8lDBJMEOL0N7ObPphWDdsYdXxVu7el1dbUHw\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n\n<p>Alternate version with more of a reducer implementation (89 bytes):</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:(m:=sum(x)/(l:=len(x)),[x:=[sum(x[0:2])/2]+x[2:]for n in range(l-1)][-1],x[0]-m)\n</code></pre>\n\n<p>Although this is longer, I suspect this reducer implementation may be useful for future python 3.8 code golfing.</p>\n\n<p><a href=\"https://tio.run/##VcpNCsMgEAXgfU8xS4ca4s@mCJ7EziKlsQ2oEZuCPb21WRSyeMPjm5c/23NN@pJL82Dh2sIUb/cJqmHR2Nc7soojC8aGOfWK3FVj3e5OGEU4KjpXpwz5tUCCJUGZ0mNmYZBIbpDE@5CGiC2XJW3MMyc5KA6aEE9/07vJg0nRsUeL41Ts3o8Uv0/7Ag\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n\n<p>I know there has to be some more clever tricks to golf this further...</p>\n"},{"answer_id":198948,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198948#198948","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 58 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>s!p=(s,p,p-s)\nf x=(sum x/sum[1|_&lt;-x])!foldl1(((/2).).(+))x\n</code></pre>\n\n<p><a href=\"https://tio.run/##bY7BCoMwEETvfsUKPSQ0xkSlKNQvESmClUqjhqaFHPrv6Zq0l2pYBnZn3pBbZ@5XpZwzsa6JYZrpxNBoAIvbawKbojbyfTkntqXxsKheSUJImlFOOTlSat3UjTPU0C8R4NOPcX7CAQZoJBcMslVyLtp/N0ePgdzc5QqtzA4ivIcihdgFZTA3XsEAp2JQou315Fe5@4Nw90jhk6UfzFebcPWrDZ0B@Ta07gM\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198892,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198892#198892","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, <s>40</s> <s>38</s> 37 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>-join($args|% t*y|%{\"$_\"*(1+$i++%2)})\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNyfn/XzcrPzNPQyWxKL24RlWhRKuyRrVaSSVeSUvDUFslU1tb1UizVvP////qJanFJZl56eoA\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n\n<p>Takes input <code>$args</code>, transforms it <code>t</code>oCharArra<code>y</code>, pipes that into a loop. Each iteration, we repeat the character <code>\"$_\"</code> either 1 or 2 times based on a modulo-index. Those characters/strings are left on the pipeline, gathered up with a <code>-join</code> to turn it back into a single string, and output is implicit.</p>\n\n<p><em>-2 bytes thanks to Veskah.</em><br>\n<em>-1 byte thanks to mazzy.</em></p>\n"},{"answer_id":198943,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198943#198943","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 54 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;x{a=x.sum/x.size;b=x.inject{|a,b|a/2+b/2};[a,b,b-a]}\n</code></pre>\n\n<p><a href=\"https://tio.run/##dZBNTsMwEEb3OUUkNiDiif8dqyoXqbpwqlYqKgi1VCq0PXuw44ljg/BinHH05vnz8dx/Dbt6OZCXy9UtL3A6v7W@7r@3i963@/fX7ebzenNNf3Mtf@5bfl@sfNf0xK3vw0e9g407HB5XDGhT81AE0PVT9RCaeMZV2Knfq2oGRAJYCTAwI0B@EyzOG6ugE0RRw0HFiaWFIhRH0xlDjgXZqAvX/KtjE4mgRE6gj5hSKMPhWGwoHQbEL51@sDy5Anw@zTtLdXwwwkEaRq0w0sali@vlU1Apk6NLxWLJRR0okTwCZGwoLplrbBllTjEL2X95mA/AtZryCB/PCJnlGX4A\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<p>Takes a list of numbers in the format <code>[1.0, 2.0, 3.0]</code>\nand returns an array containing the mean, progressive-mean, and trend, respectively.</p>\n"},{"answer_id":198942,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198942#198942","body":"<h1><a href=\"https://docs.python.org/3/index.html\" rel=\"nofollow noreferrer\">Python 3.8</a>, 91 bytes</h1>\n\n<p>I wanted to flatten the recursive relation, and I got this:</p>\n\n<pre><code>lambda l:(m:=sum(l)/(n:=len(l)),(p:=sum(l[-i]/2**i for i in range(1,n))+l[0]/2**(n-1)),p-m)\n</code></pre>\n\n<p><a href=\"https://tio.run/##VcvBCsIwDAbgu0@RYzI71q4XGfRJ5g4TVy20WenmwaevtYiwQ37C9yfxvT9X1peYsgUD1@zncLvP4AcMg9leAT11yIPxC5eVBMYfj62bur5pHNg1gQPHkGZ@LKgEE539KGuN3KryFttAOSbHO1oclYBegJ6ITn/T1dTBlCxYRsvjqaxeQslvkz8\" rel=\"nofollow noreferrer\" title=\"Python 3.8 (pre-release) – Try It Online\">Try it online!</a></p>\n\n<p>The use of <code>range</code> instead of the list itself makes it much longer.</p>\n"},{"answer_id":198938,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198938#198938","body":"<h1><a href=\"https://github.com/FMNSSun/Burlesque\" rel=\"nofollow noreferrer\">Burlesque</a>, 11 bytes</h1>\n\n<pre><code>2co{J[-j}\\m\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyotykktLixN/f/fKDm/2itaN6s2Jvf//8Sk5JTUNAA\" rel=\"nofollow noreferrer\" title=\"Burlesque – Try It Online\">Try it online!</a></p>\n\n<pre><code>2co # Split into chunks of 2 {\"ab\" \"cd\" \"e\"}\n{\n J  # Duplicate pair of chars\n [- # Take the tail (returns empty for length 1 strings)\n j  # Swap to correct order for concat\n}\\m # For each pair, and then concatenate\n</code></pre>\n\n<h1>Burlesque, 8 bytes</h1>\n\n<pre><code>2co)+.\\[\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyotykktLixN/f/fKDlfU1svJvr//8Sk5JTUNAA\" rel=\"nofollow noreferrer\" title=\"Burlesque – Try It Online\">Try it online!</a></p>\n\n<p>Works for even length strings only</p>\n\n<pre><code>2co # Same as above\n)+. # For each group append the last char again\n\\[  # Concatenate\n</code></pre>\n"},{"answer_id":198936,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198936#198936","body":"<h1><a href=\"https://github.com/FMNSSun/Burlesque\" rel=\"nofollow noreferrer\">Burlesque</a>, 19 bytes</h1>\n\n<pre><code>psJr{.+2./}javq.-c!\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyotykktLixN/f@/oNirqFpP20hPvzYrsaxQTzdZ8f9/YwMDPQMFIzBpCCIB\" rel=\"nofollow noreferrer\" title=\"Burlesque – Try It Online\">Try it online!</a></p>\n\n<p>Takes input of the form <code>300.0 200.0 100.0</code>. If we didn't have to print the other values would be 3 bytes shorter (i.e. Without the continuation).\nReturns progressive mean™, arithmetic mean, trend</p>\n\n<pre><code>ps    # Parse list to array\nJ     # Duplicate\nr{    # Reduce by (Progressive Mean)\n  .+  # Adding\n  2./ # Dividing by 2\n}\njav   # Calulcate regular mean\nq.-   # Quoted (boxed) subtract {.-}\nc!    # On a non-destructive stack\n</code></pre>\n"},{"answer_id":198882,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198882#198882","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 102 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>function b($i){$c=0;$o;$i.ToCharArray().ForEach{if($c%2-eq1){$o+=\"$_$_\"}else{$o+=\"$_\"}$c++;};write $o}\n</code></pre>\n\n<p><a href=\"https://tio.run/##NcrBCsIwDADQXxklQkdxqNeyg4h@gffRxZQGyqLZZMjot1cvHh@8p6ykc6Kca43vCReWqRktcLsB9gcP4oG7u1xS0LNq@Ni2u4leA6aNowXcnfb0Ov62uN7AAIMplGf62xRA53zxq/JCDUipNYz4oPgF\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198933,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198933#198933","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 26 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$args-replace'.(.)','$0$1'\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNyfn/XyWxKL1Ytyi1ICcxOVVdT0NPU11HXcVAxVD9////6iWpxSWZeenqAA\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198928,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198928#198928","body":"<p>Assuming your string are all alphabetically sorted, you can use:</p>\n\n<h1>Python 3, 42 bytes:</h1>\n\n<pre><code>lambda x:''.join(sorted(x[1::2]*2+x[::2]))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUaHCSl1dLys/M0@jOL@oJDVFoyLa0MrKKFbLSLsiGsTQ1Pyfll@kkKmQmacQrZSopKOUmAQmkiFkCpRKVYq14lIAgoKizLwSjTSNTKBOAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":198927,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198927#198927","body":"<h1>Scratch 2.0/3.0, 35 blocks/263 bytes</h1>\n\n<p><a href=\"https://i.stack.imgur.com/xBbNb.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/xBbNb.png\" alt=\"Blocks\"></a></p>\n\n<p>SB Syntax:</p>\n\n<pre><code>when gf clicked\nset[i v]to(2\nset[L v]to(length of[I v\nset[T v]to(item(1)of[I v\nset[P v]to(T\nrepeat((L)-(1\nchange[T v]by(item(i)of[I v\nchange[P v]by(item(i)of[I v\nset[P v]to((P)/(2\nchange[i v]by(1\nend\nset[T v]to((T)/(L\nsay(join(join(join(join(P)[,])(T))[,])((P)-(T\n</code></pre>\n\n<p>It's accidentally a polyglot. I accidentally forgot my password and email for my other scratch account so I had to make a new one so y'all can <a href=\"https://scratch.mit.edu/projects/364915100/\" rel=\"noreferrer\">Try it on Scratch!</a></p>\n\n<p>Y'all need to change the input list shown in the top left corner on the project for this to work properly.</p>\n"},{"answer_id":198921,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198921#198921","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 31 bytes</h1>\n\n<pre><code>{a=Mean@#,b=+##/2&amp;~Fold~#,b-a}&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n6Zg@7860dY3NTHPQVknyVZbWVnfSK3OLT8npQ7I102sVfsfUJSZVxKdFl1tqKNgpKNgXBsba80FFzQGCxqiChoaAEWB2NgATbEBWAJIGBoYYGoxhMigSpjoKACRpY6CBVAOTJqBuYaYtkIEwepNwMoswAio2BJVpSXMQIhpEPWGCDP/AwA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a> Pure function. Takes a list of numbers as input and returns a list of rational numbers as output. I'm pretty sure that improper fractions count as human-readable, but if they aren't, adding <code>N@</code> (+2 bytes) to the start causes the function to output approximate numbers.</p>\n"},{"answer_id":198915,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198915#198915","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"nofollow noreferrer\">brainfuck</a>, 13 bytes</h1>\n\n<pre><code>,[.&lt;[&gt;.&gt;]&gt;&gt;,]\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMxLK03O/v9fJ1rPJtpOzy7Wzk4n9v//xKTklFQA\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n\n<p>Handles odd and even length strings correctly. This takes an input and prints it once before checking if the previous cell contains the previous character. If so, it prints again and moves three spaces ahead, otherwise it just moves one cell ahead, and then it gets the next character.</p>\n"},{"answer_id":198905,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198905#198905","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"nofollow noreferrer\">brainfuck</a>, 18 bytes</h1>\n\n<pre><code>&gt;,[&gt;,]&lt;[&lt;]&gt;[.&gt;..&gt;]\n</code></pre>\n\n<p>Requires 0-termination for EOF. Prints two trailing null bytes for odd-length strings.</p>\n\n<p><a href=\"https://tio.run/##SypKzMxLK03O/v/fTifaTifWJtom1i5az05Pzy72///EpOSUVAA\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198912,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198912#198912","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 25 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{s.gsub /.(.)/,'\\0\\1'}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1664ulgvvbg0SUFfT0NPU19HPcYgxlC99n9BaUmxQlq0UmJSckqqUux/AA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198909,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198909#198909","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 54 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$args|%{$y+=$_;$z=($_+$z)/(2-!$i++)}\n($y/=$i)\n$z\n$z-$y\n</code></pre>\n\n<p><a href=\"https://tio.run/##TY/RCoIwGIXv9xQL/nJjv7iphCKD3kS6yDIkRS9CzWdfc7ZqHMbO2fcftq59XvrhdmkaA5WeDZz76/DazzAKDWUBk2ZQCph4xOJwB7UQfCEMxkhDzQlMViGMZiGEQEc1ZUxhjAlHQu1iiTXKGyUxlpjI76VcA4lKyj9EucQHKVKrHGmGVLn96Kw9/3o368jUAZmTxXLP5L5ka9jIzyDn6@PXT5fhva0fAQbFASp6KosgWMwb\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n\n<p>Takes input by splatting. The only neat trick is the <code>!$i++</code> bit which negates the first iteration where <code>$i</code> is 0 to 1, and all subsequent numbers to 0.</p>\n"},{"answer_id":198907,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198907#198907","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-MList::Util=sum,reduce -pa</code>, <s>51</s> 50 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>say+($\\=reduce{$a=$a/2+$b/2}@F)-($_=(sum@F)/@F.$/)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/784sVJbQyXGtig1pTQ5tVol0VYlUd9IWyVJ36jWwU1TV0Ml3lajuDQXyNZ3cNNT0df8/99QRwGCTMDITEfBAowsgehffkFJZn5e8X9dX1M9A0MDIO2TWVxiZRVakpljCzRIB2LTf92CRAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n\n<p>Output format is</p>\n\n<pre class=\"lang-perl prettyprint-override\"><code>trend\ntraditional\nprogressive\n</code></pre>\n"},{"answer_id":198904,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198904#198904","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, <del>90</del> 88 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>function($i){for($j=$i[0];$x=$i[$c++|0];$s+=$x,$j+=$x,$j/=2);return[$s/=$c-1,$j,$j-$s];}\n</code></pre>\n\n<p><a href=\"https://tio.run/##VZDRaoMwFIavm6cIci4sptTUMto52RNs7GJ3VorYOC1bIokdha7P7o4ntWxwjP9//u8cQrqmG56eu6ZjDHrlescznrNZLgVfCZ4UAnVCWpKWMRr8kthHMXk8ZBzfAekb5NeCY20F32CLzgey8r7Ra8LWlG6okNkSsJ3G/azHblMFK1K8eZ0N9UlXfWt0CO38UhsbwjGDNo@LFM6jgCqKfkbnogzOAo633zJbzVOr@pPVObhlBtVCYhtrAa5Ir0PKcJsqq4aH/PZEpUPF5/zCZmDxwaAOqZGymaoaw4/O6L3SlTkoH4hgp4MpDV6N/So/@Ysq9eOu3/UXsHjP61/kzZoPq5xrv9XEjZT8T71bpQ@0wserMSbgOvwC\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198720,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198720#198720","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>&nbsp;43 41&nbsp;</s> 39 bytes</h1>\n\n<p>-2 thanks to mypetition (<code>s[:1]*i</code> can be <code>s[:i]</code> if we swap our order of <code>i</code>s)</p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda s,i=2:s and s[:i]+f(s[1:],i^3)\n</code></pre>\n\n<p>A recursive function which accepts a string and returns a string.<br>\nWorks in Python 2 too.</p>\n\n<p><strong><a href=\"https://tio.run/##K6gsycjPM/7/P802JzE3KSVRoVgn09bIqlghMS9FoTjaKjNWO02jONrQKlYnM85Y839BUWZeiUaahnpiUnJKalp6RmZWtrqm5n8A\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></strong></p>\n\n<p>At each call we return <code>s</code> if it is empty or take the first <em>up-to-i-characters</em> of the given string (<code>s[:i]</code>) where <code>i</code> starts out as <code>2</code> and append (<code>+</code>) the result of another call to the function this time using a new <code>s</code> of all but the first character (<code>s[1:]</code>) and a new <code>i</code> found by XOR-ing with three (<code>i^3</code>) - i.e. <code>2, 1, 2, 1, ...</code></p>\n"},{"answer_id":198899,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198899#198899","body":"<h1><a href=\"https://v8.dev/\" rel=\"nofollow noreferrer\">JavaScript (V8)</a>, <s>76</s> <s>68</s> <s>56</s> <s>48</s> 44 bytes</h1>\n\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character?page=2&amp;tab=votes#comment472740_198899\">Malivil</a> for 12 bytes !</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;s.split``.map((v,i)=&gt;i%2==1?v+v:v).join``\n</code></pre>\n\n<p><a href=\"https://tio.run/##BcFRCoAgDADQ04RKJdRXFKuruCxhUiYqu/56LyJj9YVyG3mRAFJhr7bmh5pz9sWsNQ9kYKduBpgO7nllY@NHyTnJhVLTQSs8/XUrYzb5AQ\" rel=\"nofollow noreferrer\" title=\"JavaScript (V8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198897,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198897#198897","body":"<h1><a href=\"https://factorcode.org/\" rel=\"nofollow noreferrer\">Factor</a>, <s>80</s> 79 bytes</h1>\n\n<pre><code>: f ( s -- s ) [ mean ] [ dup first [ + 2. / ] reduce ] bi 2dup swap - 3array ;\n</code></pre>\n\n<p><a href=\"https://tio.run/##TZBBS8NAEIXv/RXvqMjGTSIlSY8epAeLIJ5KD2s6aRfTNO5MlFL62@MkJVIGljfvezPLbuVKOYb@4325einwRaGhGgcn@4jFiWfxJYPpu6OmJB4JXAjuxGgDiZza4BvBYrZcFXh2ddnVTsjInsxbOO4CMfsfMq/kmr5AhTswjNHjHmsc1MVGxbZrUfnAovoBSYRHtQNtu5JUfHokQ4J/XQuDdLwfi/6MGYAzYiRIcbk2qTbx1MQWiUVq/6EdDKu@vYnEozMZT1o5Ml2SYa4qvlk31hCYK8wU5hPKx5lhYsDX4AUzpWt99UY/rkXU/wE\" rel=\"nofollow noreferrer\" title=\"Factor – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198908,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198908#198908","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 13 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/.\\K./$&amp;$&amp;/g\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/79YXy/GW09fRU1FTT/9///EpOSU1H/5BSWZ@XnF/3V9TfUMDA3@6xYAAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198903,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198903#198903","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 59 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>i=1;f(c){for(;-~(c=getchar());i^=1)printf(\"%c%1$c\"+i*2,c);}\n</code></pre>\n\n<p>Using original input rules.</p>\n\n<p><a href=\"https://tio.run/##Dcg7CoAwEAXAPqcQUdj1U8R2yVWE@DS6hR@C2IhePTrloJ2BlNRZCQS@wx5J2pfg5unE4iMxi/bO8hF1OwPlJUpbIK@16hqwPOnvbPW60bXryOY22S8Qi3mSHzBOHw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 54 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>i=1;f(char*s){for(;*s;i^=1)printf(\"%c%1$c\"+i*2,*s++);}\n</code></pre>\n\n<p>Using acceptable input.</p>\n\n<p><a href=\"https://tio.run/##HYpBCsMgEADvvkKkAVdbqL0u@UrAbmKyh5qyJrmEvN1K5zbM0GMmqpX7gMnSEsUVONMqFl1BHvoAX@G8JWs66sKNjGf3urviPeBVW9GfyNkeK4@gTqUb7Y1vGicD@HeZtl2yfqK66g8\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198898,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198898#198898","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <sup><s>81</s> <span class=\"math-container\">\\$\\cdots\\$</span> <s>75</s></sup> 71 bytes</h1>\n\n<p>Saved <s>1</s>5 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/85755/reinstate-monica\">Reinstate Monica</a>!!! </p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>def f(l):\n m=sum(l)/len(l);p=l[0]\n for n in l:p=(p+n)/2\n return m,p,p-m\n</code></pre>\n\n<p><a href=\"https://tio.run/##ZY1BCsMgEEX3nmKWSi3RGEpMyUlCdo00oEZssujp7aA0IIFx1DfPb/ju782rlF6LAUMtGwi48XM4PDZ28bg9w2gnMRMwWwQPqwc7hJGGm2dNSyAu@xE9OB54uLsU4up3augkObQc1MwYOZnKTFZMCoS4lKhVkTk2KcTlgSyDinccsDSHHke5P/JVXn4sLOtdtvpc6OpK1P@4klV0eSamHw\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198895,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198895#198895","body":"<h1>Haskell, 84 bytes</h1>\n\n<p>I thought Haskell could do decently here because this challenge works on lists and I tend to think Haskell and lists go well together... But I couldn't come up with anything very clever. Let's see if @xnor drops by and has anything nice :P</p>\n\n<pre><code>f(h:l)=g$foldl(\\(p,s,w)n-&gt;((p+n)/2,s+n,w+1))(h,h,1)l\nf[]=f[0]\ng(p,s,l)=(s/l,p,p-s/l)\n</code></pre>\n\n<p>I am defining an anonymous function <code>\\(p,s,w) n -&gt; ((p+n)/2, s+n, w+1)</code> that receives a triplet and the next list element, and does three things: updates the progressive mean, sums the whole list and computes its length. In the end, function <code>g</code> does some last-minute calculations.</p>\n\n<p>You can <a href=\"https://tio.run/##fY5BDoIwEEX3nGIWLtowQgvEiAmewJ1LZGGipcZaGovh@DgpuizJdKbN/@9P9dU/78bMs2L6YHjTb9RgboZdmEOPE7fbI2MutTwv0KcWp1RyzjRqlNwkqu0a1You6YOdeOZzgw7dliafX9eHhQZuQwLgPuN5fJ8sbMDrYaKhoO1igsyyMiqWWKCMowKhoFOKeIAIHmpSiNUguZiingqBqkbYky30XXjSfeWHix7QKhD7UMTVUaj@r1l2LOgvqZu/\" rel=\"nofollow noreferrer\" title=\"TIO link with the test cases\">try it online</a></p>\n"},{"answer_id":198896,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198896#198896","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 27 bytes</h1>\n\n<pre><code>≔∕ΣθＬθη≔§θ⁰ζＦθ≔⊘⁺ιζζＩ⟦ηζ⁻ζη\n</code></pre>\n\n<p><a href=\"https://tio.run/##LYzBCsIwEETvfsUeNxBBQUTpqehBQaHgseQQmtgEYkqTtEh/Pm5r4R2Gmcc0Roamky7nMkbberza0SqNr@GDPePw0L5NhiJlw4rNapXp7pX@Ys9hR8tEy7sLQB6sxk26USus3BDRzsaqVcH6hBcZE9aGKg5P68mZ5n/BWJFzXe85/DksHDmcFs6EEHk7uh8\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n\n<pre><code>≔∕ΣθＬθη\n</code></pre>\n\n<p>Calculate the arithmetic mean.</p>\n\n<pre><code>≔§θ⁰ζ\n</code></pre>\n\n<p>Start with the first element. We therefore end up averaging this element with itself, but that doesn't affect the final result of course.</p>\n\n<pre><code>Ｆθ≔⊘⁺ιζζ\n</code></pre>\n\n<p>Loop over each element an average it with the progressive mean so far.</p>\n\n<pre><code>Ｉ⟦ηζ⁻ζη\n</code></pre>\n\n<p>Print the arithmetic and progressive means and their difference.</p>\n\n<p>If we had only needed the result once then <code>ΣＥθ∕ιＸ²⁻Ｌθ∨κ¹</code> could have been used to calculate the progressive mean directly, saving 3 bytes over the naïve method.</p>\n"},{"answer_id":198894,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198894#198894","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 12 bytes</h1>\n\n<pre><code>āÍoîÅΓ‚ÅAÂÆª\n</code></pre>\n\n<p><a href=\"https://tio.run/##yy9OTMpM/f//SOPh3vzD6w63npv8qGHW4VbHw02H2w6t@v8/2kRHAYgsdRQsdBQMwaQZmAtkG8YCAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>The progressive mean is equivalent to a weighted arithmetic mean, with exponentially increasing weights. For example, the progressive mean of a 4 element list <code>[a, b, c, d]</code> is the arithmetic mean of <code>[a, b, c, c, d, d, d, d]</code>.</p>\n\n<pre><code>ā              # range [1..length of input]\n Í             # subtract 2 from each\n  o            # 2**each: [0.5, 1, 2, ...]\n   î           # round up: [1, 1, 2, ...]\n    ÅΓ         # run-length decode\n      ‚        # pair with the input\n       ÅA      # arithmetic mean of each list\n         Â     # push a reversed copy\n          Æ    # reduce by subtraction\n           ª   # append\n</code></pre>\n"},{"answer_id":198805,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198805#198805","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>49</s> 48 bytes</h1>\n\n<p>-1 thanks to ceilingcat</p>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>M;f(c){++M%3?c=getchar():0;M=~c&amp;&amp;f(putchar(c));}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S9ZNT07@/9/XOk0jWbNaW9tX1dg@2TY9tSQ5I7FIQ9PKwNrXti5ZTS1No6AUIpasqWld@z83MTNPQ7M6TQPESUxKTkkFAA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198891,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198891#198891","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 9 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>Æm;+H¥/ṄI\n</code></pre>\n\n<p>A full program which accepts a list of decimals which prints:</p>\n\n<pre><code>[mean, progressive-mean]\ntrend\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/##y0rNyan8//9wW661tsehpfoPd7Z4/v//P9pERwGILHUULHQUDMGkGZgLZBvGAgA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n\n<h3>How?</h3>\n\n<pre><code>Æm;+H¥/ṄI - Link: list of numbers, A\nÆm        - arithmetic mean       sum(A)/length(A)            = mean\n      /   - reduce (A) by:\n     ¥    -   the dyad f(leftEntry, rightEntry):\n   +      -     addition          leftEntry + rightEntry\n    H     -     halve            (leftEntry + rightEntry) / 2 = progressiveMean\n  ;       - concatenate           [mean, progressiveMean]\n       Ṅ  - print this list and yield it\n        I - deltas                [progressiveMean - mean]\n          - implicit print (Jelly represents with a single item as the item)\n</code></pre>\n"},{"answer_id":198893,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198893#198893","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"noreferrer\">05AB1E</a>, 13 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"noreferrer\">bytes</a></h1>\n<pre><code>ÅAIÅ»+;}θ‚ÂÆª\n</code></pre>\n<p>Outputs as a triplet <code>[mean, progressive-mean, trend]</code>.</p>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//cKuj5@HWQ7u1rWvP7XjUMOtw0@G2Q6v@/4820VEAIksdBQsdBUMwaQbmAtmGsQA\" rel=\"noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeX/w62OlYdbD@3Wtq49t@NRw6zDTYfbDq36r/M/OtpQx0jHOFYn2hhIGwJpQwMdIwMdYwOQkAGIbaBjaGAAkTAEc4BsEx0THUsdCx1DIDYDsgwhWkG0DkjODChuARS3BIpaglWC1IFkwGpiYwE\" rel=\"noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>ÅA     # Calculate the arithmetic mean of the (implicit) input-list\nI      # Push the input-list again\n Å»    # Left-reduce it by:\n   +   #  Add the two values together\n    ;  #  And halve it\n }θ    # After the reduction, leave only the last value\n‚      # Pair it with the earlier calculated arithmetic mean\n Â     # Bifurcate this pair; short for Duplicate &amp; Reverse copy\n  Æ    # Reduce it by subtraction\n   ª   # And append this trend to the pair\n       # (after which the result is output implicitly)\n</code></pre>\n"},{"answer_id":198890,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198890#198890","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"noreferrer\">J</a>, 17 bytes</h1>\n\n<p>Translation of <a href=\"https://codegolf.stackexchange.com/a/198889/43319\">this</a>.</p>\n\n<pre><code>-:@+/@|.(,,-)+/%#\n</code></pre>\n\n<p>Anonymous tacit prefix function. Returns list of Progressive Mean™, Standard Mean, Trend.</p>\n\n<p><a href=\"https://tio.run/##JYtRCoAwDEP/PUVABMWp7SZjE4SdZh@ewbtrupGPpC/p8331vrBdZT3Ku8/Obct6TCMxFB5hqAh0pavAC4IYEstCJL3QdjCfVEbic0Jk0v7aZF0kT@SZNLel7axpmx8\" rel=\"noreferrer\" title=\"J – Try It Online\">Try it online!</a>\nThis consists of three parts: <code>(2÷⍨+)⌿∘⌽</code> <code>(,,-)</code> <code>+⌿÷≢</code></p>\n\n<p><code>+/ % #</code> is the sum divided by the number of elements</p>\n\n<p>…<code>⌿@|.</code> reverses the list and then reduces from right to left using the function:<br>\n <code>-:@+</code> add next value to previous value and halve that</p>\n\n<p><code>(,,-)</code> is the concatenation of the PM and the SM, concatenated to their difference</p>\n"},{"answer_id":198885,"question_id":198884,"link":"https://codegolf.stackexchange.com/questions/198884/calculate-the-progressive-mean/198885#198885","body":"<h1>JavaScript (ES6), 55 bytes</h1>\n<p>Returns <code>[mean, p_mean, trend]</code>.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;a.map(v=&gt;t=(s+=v,n++)?(t+v)/2:v,n=s=0)&amp;&amp;[s/=n,t,t-s]\n</code></pre>\n<p><a href=\"https://tio.run/##dY7RCoMgFIbv9xRehaKVVowanPYg0YW0GhvNYoqv70TZLobB8cDh@78fn9JKPb0fu8nVdpvdAk5CL4uX3LGF3gDWFCxTlJIrNtSSsrr4EzRwkmWDLkExw0yuRzdtSm/rXKzbHS94EAxVDNUjIac/UgciEkRwj/yreUrjgfolOD@QRcQJ2jDkp2Oo9YGwz@EUBz@JJEhNyLZhvNEl4t23OvZGSfza3Qc\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198876,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198876#198876","body":"<h1>SimpleTemplate, 44 bytes</h1>\n<p>This was easy, but also fun!</p>\n<pre><code>{@eachargv.0}{@echo_}{@if__ is mod2}{@echo_}\n</code></pre>\n<p>Loops through all the characters, and checks if the index of the character (<code>__</code>) is not a multiple of 2 (odd). If it isn't a multiple of 2, outputs it again.</p>\n<hr>\n<p><strong>Ungolfed:</strong></p>\n<p>Just in case you are curious.</p>\n<pre><code>{@each argv.0 as char key key}\n    {@echo char}\n    {@if key is not multiple of 2}\n        {@echo char}\n    {@/}\n{@/}\n</code></pre>\n<ul>\n<li>The <code>as char</code> is optional, using the variable <code>_</code> by default, to hold the array item/character from the string.</li>\n<li>The <code>key key</code> is optional, using the variable <code>__</code> by default, to hold the index.</li>\n<li>All the <code>{@/}</code> ae optional and safe to remove.</li>\n</ul>\n<hr>\n<p>You can try it on <a href=\"http://sandbox.onlinephpfunctions.com/code/5fc880374f58b72c4dc3ee2c573349e7a218aed8\" rel=\"nofollow noreferrer\">http://sandbox.onlinephpfunctions.com/code/5fc880374f58b72c4dc3ee2c573349e7a218aed8</a>\nYou can check and try both golfed and ungolfed versions.</p>\n"},{"answer_id":198873,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198873#198873","body":"<h1><a href=\"https://web.archive.org/web/20150618184706/http://compsoc.dur.ac.uk/whitespace/tutorial.php\" rel=\"nofollow noreferrer\">Whitespace</a>, 66 bytes</h1>\n<pre><code>[S S S T    N\n_Push_1][N\nS S N\n_Create_Label_LOOP][S S S T N\n_Push_1][T  S S S _Add][S S S T S N\n_Push_2][T  S T T   _Modulo][S N\nS _Dupe][S N\nS _Dupe][S N\nS _Dupe][S N\nS _Dupe][T  N\nT   S _Read_STDIN_as_character][T   T   T   _Retrieve_input][T  N\nS S _Print_as_character][N\nT   S N\n_If_0_Jump_to_Label_LOOP][T T   T   _Retrieve_input][T  N\nS S _Print_as_character][N\nS N\nN\n_Jump_to_label_LOOP]\n</code></pre>\n<p>Letters <code>S</code> (space), <code>T</code> (tab), and <code>N</code> (new-line) added as highlighting only.<br />\n<code>[..._some_action]</code> added as explanation only.</p>\n<p><a href=\"https://tio.run/##LYlBCoAwEAPPySvma21d0FtBweevdjXkMJnc@3HFOduITEA2uEBUxEsSn6@qjLTGun/Ezmx9bPEA\" rel=\"nofollow noreferrer\">Try it online</a> (with raw spaces, tabs and new-lines only).</p>\n<p><strong>Explanation in pseudo-code:</strong></p>\n<pre><code>Integer n = 1\nStart LOOP:\n  n = (n+1) modulo-2\n  Integer c = STDIN as character\n  Print c as character to STDOUT\n  If(n == 0):\n    Go to the next iteration of LOOP\n  Print c as character to STDOUT\n  Go to the next iteration of LOOP\n</code></pre>\n"},{"answer_id":198850,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198850#198850","body":"<h1><a href=\"https://github.com/sporeball/naz\" rel=\"nofollow noreferrer\">naz</a>, 44 bytes</h1>\n\n<pre><code>2a2x1v1x1f1r3x1v2e1o1r3x1v2e2o1f0x1x2f0a0x1f\n</code></pre>\n\n<p>Works for any input string terminated with the control character STX (U+0002).</p>\n\n<p><strong>Explanation</strong> (with <code>0x</code> commands removed)</p>\n\n<pre><code>2a2x1v                     # Set variable 1 equal to 2\n1x1f1r3x1v2e               # Function 1\n                           # Read a byte of input\n                           # Jump to function 2 if it equals variable 1\n            1o             # Otherwise, output it once\n              1r3x1v2e     # Read another byte of input\n                           # Jump to function 2 if it equals variable 1\n                      2o   # Otherwise, output it twice\n                        1f # Jump back to the start of function 1\n1x2f0a                     # Function 2\n                           # Add 0 to the register\n1f                         # Call function 1\n</code></pre>\n"},{"answer_id":198835,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198835#198835","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>while($c=$argn[$i++])echo$c,$c[$i%2];\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@G9jXwAkyzMyc1I1VJJtVRKL0vOiVTK1tWM1U5Mz8lWSdVSSgXxVo1jr//8Tk5JTUv/lF5Rk5ucV/9d1AwA\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198776,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198776#198776","body":"<h1><a href=\"https://www.lua.org/\" rel=\"nofollow noreferrer\">Lua</a>, 34 bytes</h1>\n\n\n\n<pre class=\"lang-lua prettyprint-override\"><code>print(((...):gsub('.(.)','%0%1')))\n</code></pre>\n\n<p><a href=\"https://tio.run/##yylN/P@/oCgzr0RDQ0NPT0/TKr24NElDXU9DT1NdR13VQNVQXVNT8////4lJySmpAA\" rel=\"nofollow noreferrer\" title=\"Lua – Try It Online\">Try it online!</a></p>\n\n<p>Takes input as an argument, prints result to stdout. Every two characters are replaced with themselves and second one appended.</p>\n"},{"answer_id":198773,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198773#198773","body":"<h1>APL+WIN, 13 bytes</h1>\n<p>Prompts for string:</p>\n<pre><code>((⍴s)⍴⍳2)/s←⎕\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNzkksLs5M/v@ob6qvz6O2CcZcjzra0/5raDzq3VKsCSQe9W420tQvBkoBlfwHSv5P41JPTEpOSVUHAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Classic) – Try It Online\">Try it online! Courtesy of Dyalog Classic.</a></p>\n"},{"answer_id":198767,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198767#198767","body":"<h1>JavaScript (ES6), 28 bytes</h1>\n<p>Uses the same regex as <a href=\"https://codegolf.stackexchange.com/a/198722/58563\">@DigitalTrauma</a>.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;s.replace(/.(.)/g,&quot;$&amp;$1&quot;)\n</code></pre>\n<p><a href=\"https://tio.run/##BcEBCoAgDADAv4jEBqX0APvL0imFOGnR99fdTR9pfq75bkMKW02m6dDw8OyUGWKAgLGtzi9@d2hZhkrn0KVBBUdnLuwQ7Qc\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n<hr />\n<h1>JavaScript (ES6), 32 bytes</h1>\n<p>A recursive version.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=([a,b,...c])=&gt;b?a+b+b+f(c):[a]\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/f8/zVYjOlEnSUdPTy85VtPWLsk@UTsJCNM0kjWtohNj/yfn5xXn56Tq5eSna6RpKCUmJaekKmlqcmERBwr/BwA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198759,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198759#198759","body":"<h1><a href=\"https://esolangs.org/wiki/Unreadable\" rel=\"noreferrer\">Unreadable</a>, 43 bytes</h1>\n\n<blockquote>\n  <p>'\"\"\"\"\"'\"\"\"'\"\"\"\"'\"'\"\"\"\"\"\"\"\"\"\"'\"'\"'\"\"\"\"\"\"\"\"\"\"</p>\n</blockquote>\n\n<p><a href=\"https://tio.run/##K80rSk1MSUzKSf3/X10JBNShGEhABJRgHCTu//@JSckpqQA\" rel=\"noreferrer\" title=\"Unreadable – Try It Online\">Try it online!</a></p>\n\n<p>Displayed here in variable-width font, per the traditional tribute to the language name.</p>\n\n<p>Exits with error after printing the correct output.</p>\n\n<p>Explanation:</p>\n\n<pre><code>'\"\"\"\"\"'\"\"\"      while(1)\n'\"\"\"\"           do 2 things:\n'\"'\"\"\"\"\"\"\"\"\"\"   print(read stdin)\n'\"'\"'\"\"\"\"\"\"\"\"\"\" print(print(read stdin))\n</code></pre>\n\n<p>Uses the fact that <code>'\"</code> both prints and returns its argument, which can thus be directly fed to a 2nd print command.</p>\n"},{"answer_id":198764,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198764#198764","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 16 bytes</h1>\n\n<p>GolfScript doesn't have item count so you will need to do it yourself.</p>\n\n<pre><code>1:&amp;;{]&amp;):&amp;2%)*}%\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPn/39BKzbo6Vk3TSs1IVVOrVvX//8Sk5JRUAA\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code># Implicitly pushed input\n1:&amp;;             # set count to 1\n    {         }% # foreach item of input\n     ]&amp;):&amp;       #     add count by one\n          2%)*   #     repeat item by cnt % 2 + 1\n</code></pre>\n"},{"answer_id":198762,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198762#198762","body":"<h2><a href=\"https://github.com/A-ee/w\" rel=\"nofollow noreferrer\">W</a> <code>d</code>, 6 bytes</h2>\n\n<pre><code>♀J,⌡I►\n</code></pre>\n\n<p>Uncompressed:</p>\n\n<pre><code>2V2m-*M\n</code></pre>\n\n<h2>Explanation</h2>\n\n<p>Not a really good target for this challenge, I just feel that this is pretty fun to do.</p>\n\n<p>Also the 1-indexed advantage seems to be a disadvantage here. If only W has a 0-index ...</p>\n\n<pre><code>% Note that W is one-indexed. (For the ease of the iterator protocols\n% which have a 1-range as a built-in.)\n V2m    % Index of current item modulo 2\n2   -   % Subtract 2 by the number (effectively yields\n        % 1-&gt;1, 0-&gt;2 )\n     *  % Repeat the character that many times\n      M % Do this for every item in the input\n</code></pre>\n"},{"answer_id":198760,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198760#198760","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 8 bytes</h1>\n\n<pre><code>⭆Ｓ×ι⊕﹪κ²\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRCO4BEil@yYWaHjmFZSWQLgamjoKIZm5qcUamToKnnnJRam5qXklqSkavvkppTn5Gtk6CkaaIGD9/39iUnJK6n/dshwA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n\n<pre><code> Ｓ          Input string\n⭆           Map over characters and join\n       ²    Literal 2\n      κ     Current index\n     ﹪      Modulo\n    ⊕       Incremented\n   ι        Current character\n  ×         Repeated\n            Implicitly print\n</code></pre>\n"},{"answer_id":198758,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198758#198758","body":"<h1><a href=\"https://github.com/TryItOnline/spl\" rel=\"nofollow noreferrer\">Shakespeare Programming Language</a>, 126 bytes</h1>\n\n<pre><code>,.Ajax,.Page,.Act I:.Scene I:.[Exeunt][Enter Page and Ajax]Ajax:Open mind.Speak thy.Open mind.Speak thy.Speak thy.Let usAct I.\n</code></pre>\n\n<p><a href=\"https://tio.run/##Ky7I@f9fR88xK7FCRy8gMT0VyE4uUfC00gtOTs1LBTGiXStSS/NKYqNd80pSixRAihQS81IUQHpiQYSVf0FqnkJuZl6KXnBBamK2QklGpR42MQTLJ7VEobQYbJPe//@JSckpqQA\" rel=\"nofollow noreferrer\" title=\"Shakespeare Programming Language – Try It Online\">Try it online!</a></p>\n\n<p>Page reads the input one character at a time, and alternately prints it once or twice. Exits with error after printing the correct output.</p>\n"},{"answer_id":198755,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198755#198755","body":"<h1><a href=\"https://github.com/TehFlaminTaco/Funky\" rel=\"nofollow noreferrer\">Funky</a>, 34 bytes</h1>\n\n<pre><code>s=&gt;fori=0i&lt;#s i++write(s[i]*1+i%2)\n</code></pre>\n\n<p>A pretty simple solution to the problem.</p>\n\n<p><a href=\"https://tio.run/##SyvNy678n2b7v9jWLi2/KNPWINNGuVghU1u7vCizJFWjODozVstQO1PVSPN/moZSYlJySqqS5n8A\" rel=\"nofollow noreferrer\" title=\"Funky – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198754,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198754#198754","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 51 bytes</h1>\n\n<pre><code>func[s][foreach[a b]s[prin rejoin[a t: any[b\"\"]t]]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##Nco7DoAgDADQnVM0PQbHcG068GkjDmAKDp6@6uD68kyqb1KJg0ZwvXqhyaTDJJWdEmSedFrrYHKM1l9ZEVK/KSPyYmZXwJRLFQzfW4AYflL0Bw\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198751,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198751#198751","body":"<h2><a href=\"https://esolangs.org/wiki/@\" rel=\"nofollow noreferrer\">@</a>, 13 bytes</h2>\n\n<pre><code>¤+ōČōōČ\n</code></pre>\n\n<h2>Explanation</h2>\n\n<pre><code>  ōČ    Take a character and print it.\n    ōōČ Take a character and print it twice.\n¤+      Repeat this forever.\n</code></pre>\n"},{"answer_id":198748,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198748#198748","body":"<h1><a href=\"https://github.com/m-ender/hexagony\" rel=\"nofollow noreferrer\">Hexagony</a>, <del>13</del> 12 bytes</h1>\n\n<pre><code>,.&lt;&gt;,;/@/$;*\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0itSEzPz6v8/19Hz8ZOx1rfQV/FWuv//8Sk5JTUtPSMzKzsnNy8/ILCouKS0rLyisoqAA\" rel=\"nofollow noreferrer\" title=\"Hexagony – Try It Online\">Try it online!</a></p>\n\n<h3>Expanded</h3>\n\n<pre><code>  , . &lt;\n &gt; , ; /\n@ / $ ; *\n . . . .\n  . . .\n</code></pre>\n\n<p>Uses the very naive read-print, read-print twice approach.</p>\n"},{"answer_id":198740,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198740#198740","body":"<h1><a href=\"https://github.com/JonoCode9374/Keg\" rel=\"nofollow noreferrer\">Keg</a> <code>-ir</code> <code>-lp</code>, 4 bytes</h1>\n\n<pre><code>(,⑩,\n</code></pre>\n\n<p><a href=\"https://tio.run/##y05N//9fQ@fRxJU6//8nJiWnpP7XzSz6r5tTAAA\" rel=\"nofollow noreferrer\" title=\"Keg – Try It Online\">Try it online!</a></p>\n\n<h1>Explanation</h1>\n\n<pre><code>     # (Implicitly) take an input from the console\n(    # For every item in the input:\n ,   # Print the first character, popping the stack\n  ⑩  # Print the top of the stack w/o poping\n   , # Print with popping, effectively doubling the second character\n</code></pre>\n"},{"answer_id":198734,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198734#198734","body":"<h1>brainfuck, 13 or 11 bytes</h1>\n\n<pre><code>&gt;,[.,[..,&gt;]&lt;]\n</code></pre>\n\n<p>Assumes EOF->0. :(</p>\n\n<p>You can <a href=\"https://tio.run/##SypKzMxLK03O/v/fTidaD4j0dOxibWL//09MSk5JTQMA\" rel=\"noreferrer\">try it online!</a></p>\n\n<p>(Assuming input also continues to give zeroes indefinitely after the first EOF, we can do it in 11 bytes:</p>\n\n<pre><code>,[.,[..&gt;],]\n</code></pre>\n\n<p>though this eats memory.)</p>\n"},{"answer_id":198743,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198743#198743","body":"<h1>Scratch 3.0, 25 blocks/179 bytes</h1>\n\n<p><a href=\"https://i.stack.imgur.com/dimH8.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/dimH8.png\" alt=\"Blocks\"></a></p>\n\n<p>As SB Syntax:</p>\n\n<pre><code>define f(n\nset[i v]to(1\nset[o v]to(\nrepeat((length of(n))/(2\nset[o v]to(join(o)(letter(i)of(n\nchange[i v]by(1\nset[x v]to(letter(i)of(n\nset[o v]to(join(o)(join(x)(x\nchange[i v]by(1\n</code></pre>\n\n<p>Oh boy, here I go Scratching again! This was quite an interesting one to solve, and I quite enjoyed it. Thanks for the challenge.</p>\n\n<p>The output of the function is shown in the top left corner.</p>\n\n<p>Finally, <a href=\"https://scratch.mit.edu/projects/364315112/\" rel=\"noreferrer\">Try it on<s>line</s> Scratch!</a></p>\n"},{"answer_id":198736,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198736#198736","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, 84 bytes</h1>\n\n<pre><code>&#9;S =INPUT\nS&#9;S LEN(1) . L LEN(1) . R REM . S&#9;:F(O)\n&#9;O =O L R R :(S)\nO&#9;OUTPUT =O S\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87LT8rPMfn/nzNYwdbTLyA0hCsYyPRx9dMw1FTQU/BBMIMUglx9gXQwp5Wbhr8mF6e/gq0/UAFQXMFKI1iTy5/TPzQEaAJIOJjL1c/l///EpOSUVAA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198732,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198732#198732","body":"<h1>Brainfuck, <s>52</s> 31 bytes</h1>\n\n<pre><code>,[&gt;&gt;+&lt;[&lt;..&gt;-&gt;-]&gt;[&lt;&lt;.&gt;+&gt;-&gt;]&lt;&lt;&lt;,]\n</code></pre>\n\n<p>You can <a href=\"https://tio.run/##SypKzMxLK03O/l@jkJlXoFCjkFuaUwKkEksrgGRqXsp/nWg7O22baBs9PTtdO91Yu2gbGz07bSA71sbGRif2///EpOSU1DQA\" rel=\"nofollow noreferrer\">try it online</a> or you can check my first submission, that I think is also simpler to understand:</p>\n\n<pre><code>+&gt;+&gt;&gt;,[&lt;&lt;[-&lt;-&gt;]&lt;[-&gt;&gt;+&gt;&gt;+&lt;&lt;&lt;&lt;]+&gt;&gt;&gt;.&gt;[-&lt;.&gt;]&lt;,&lt;[-&lt;+&gt;]&gt;\n</code></pre>\n\n<p>Cell layout is</p>\n\n<pre><code>| 1 | aux | mult | inp | mult |\n</code></pre>\n\n<p>where mult is the number of extra times we have to print the current character. Feel free to drop me a line in the comments with feedback.</p>\n\n<p><a href=\"https://tio.run/##LUpLCoAgFLyK@6dCe5mLiAu1BKkkIqGFd389oVnMP92xttLzzkMtaqjYX@GzH49IbdcfmECA9s554wyCCGZDThDEwEIWK4ueF0JAYI4pr1v5AA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":198733,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198733#198733","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"noreferrer\">Octave</a> / MATLAB, 16 bytes</h1>\n\n\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(s)s(1:2/3:end)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y08uSSxL/Z9mq6en999Bo1izWMPQykjf2Co1L0Xzf5qGemJSckqquuZ/AA\" rel=\"noreferrer\" title=\"Octave – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>Non-integer values are <a href=\"https://stackoverflow.com/questions/40455299/does-matlab-accept-non-integer-indices\">automatically rounded</a> (with a warning) in colon index expressions.</p>\n"},{"answer_id":198725,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198725#198725","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-m</code></a>, 4 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>+pVu\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LW0&amp;code=K3BWdQ&amp;input=ImFiY2RlZmdoaWpsa2xtbm9wcXJzdHV2d3h5eiI\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>+pVu     :Implicitly map each character U at 0-based index V in the implicit input string\n+        :Append to U\n p       :U repeated\n  Vu     :  V mod 2 times\n         :Implicit output of resulting string\n</code></pre>\n"},{"answer_id":198723,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198723#198723","body":"<h1>Haskell, <s>33</s> 24 bytes</h1>\n\n<p>By noticing that obviously <code>f [] = []</code> also fits the pattern <code>f s = s</code> and removing one extra space, we get to</p>\n\n<pre><code>f(a:b:s)=a:b:b:f s\nf s=s\n</code></pre>\n\n<p>from my starting point of</p>\n\n<pre><code>f []=[]\nf (a:b:s)=a:b:b:f s\nf s=s\n</code></pre>\n\n<p>Now my answer matches xnor's Haskell answer.</p>\n\n<p>You can <a href=\"https://tio.run/##y0gszk7Nyfn/P00j0SrJqljTFkQlWaUpFHMBsW3x/9zEzDwFW4WC0pLgkiKfPAUVheKM/HIglaaglJiUnKL0HwA\" rel=\"noreferrer\">try it online!</a>.</p>\n"},{"answer_id":198721,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198721#198721","body":"<h1>Python 3, <s>54</s> <s>50</s> 49 bytes</h1>\n\n<p>This looks incredibly long, I have no idea if something obvious is slipping under my nose... And already saved 5 bytes thanks to @Jonathan Allan! Check <a href=\"https://codegolf.stackexchange.com/a/198720/75323\">his 43 byte Python 3 answer</a>! but here it is:</p>\n\n<pre><code>lambda s:''.join(c+i%2*c for i,c in enumerate(s))\n</code></pre>\n\n<p>You can <a href=\"https://tio.run/##DchLCoAgEADQqwxCqBUtahNBN2njlyZyFLVFp7fe8qW3npGWNeXmYYej3Spoq6BsnE9XRBJmwG7uDfiYAUcDSODoCS6r6kSRsqWMVIUXTGljHfvnAw\" rel=\"nofollow noreferrer\">try it online!</a></p>\n"},{"answer_id":198726,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198726#198726","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 24 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f(a:b:t)=a:b:b:f t\nf s=s\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00j0SrJqkTTFkQlWaUplHClKRTbFv/PTczMU7BVyE0s8FUoKC0JLinyyVNQAfEV0hSilRKVdJQSk8BEMoRMgVKpSrH//yWn5SSmF//XTS4oAAA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198724,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198724#198724","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python</a>, 38 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda s:s and s[:2]+s[1:2]+f(s[2:])\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P802JzE3KSVRodiqWCExL0WhONrKKFa7ONoQRKVpFEcbWcVq/k/LL1IoVsjMU4hWSlTSUUpMAhPJEDIFSqUqxVpxKRQUZeaVKAB1av4HAA\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>Takes the first two characters, then the second character, then removes the first two characters and recurses.</p>\n\n<hr>\n\n<p><strong>39 bytes</strong></p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda s,c=2:s and s[:c]+f(s[1:],3-c)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P802JzE3KSVRoVgn2dbIqlghMS9FoTjaKjlWO02jONrQKlbHWDdZ839afpFCsUJmnkK0UqKSjlJiEphIhpApUCpVKdaKS6GgKDOvRAGoW/M/AA\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>Flips between taking the first two or first one character.</p>\n"},{"answer_id":198722,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198722#198722","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"noreferrer\">sed</a>, 12</h1>\n\n<pre><code>s/.(.)/&amp;\\1/g\n</code></pre>\n\n<p><a href=\"https://tio.run/##K05N0U3PK/3/v1hfT0NPU18txlA//f//xKTklNR/@QUlmfl5xf91iwA\" rel=\"noreferrer\" title=\"sed – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198719,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198719#198719","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"noreferrer\">J</a>, 8 bytes</h1>\n\n<pre><code>#~1 2$~#\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuoKNgoGAFxLp6Cs5BPm7/lesMFYxU6pT/a3KlJmfkK6gnJiUlp6SkqivoWimkgbjJQM5/AA\" rel=\"noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<ul>\n<li><code>1 2$~#</code> Shape <code>$~</code> the list <code>1 2</code> (repeating it cyclically as needed) until it matches the length <code>#</code> of the input.</li>\n<li><code>#~</code> Use this <code>1 2 1 2...</code> \"mask\" to Copy <code>#~</code> the implicit input elementwise.  That is, make 1 copy of the first char, 2 copies of the 2nd char, 1 copy of the third char, etc.</li>\n</ul>\n"},{"answer_id":198718,"question_id":198717,"link":"https://codegolf.stackexchange.com/questions/198717/repeat-every-other-character-in-string-starting-with-second-character/198718#198718","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 3 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"noreferrer\">bytes</a></h1>\n<pre><code>ḤÐe\n</code></pre>\n<p>A full program accepting a string which prints the result</p>\n<p><strong><a href=\"https://tio.run/##y0rNyan8///hjiWHJ6T@//9fPTEpOSVVHQA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n<h3>How?</h3>\n<p>Utilises the fact that the implementation of the double atom, <code>Ḥ</code>, is multiplication by two, and that strings are lists of Python characters. In Python when a character is multiplied by two it becomes a Python string of length two (e.g. <code>'x'*2=='xx'</code>). Lastly the implicit output of a list composed entirely of characters and strings (or lists thereof) is its content all smashed together.</p>\n<pre><code>ḤÐe - Main Link: list of characters  e.g. input abcd -&gt; ['a','b','c','d']\n Ðe - apply to even indices (1-indexed):\nḤ   -   multiply by 2                     -&gt; ['a', 'bb', 'c', 'dd']\n    - implicit, smashing print            -&gt; abbcdd\n</code></pre>\n"},{"answer_id":198424,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/198424#198424","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 5 bytes</h1>\n\n<p>Port of CJam answer.</p>\n\n<pre><code>,\" \"*\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPn/X0dJQUnr/3@P1JycfB2F8PyinBRFAA\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198409,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/198409#198409","body":"<h1><a href=\"https://github.com/sporeball/naz/\" rel=\"nofollow noreferrer\">naz</a>, 40 bytes</h1>\n\n<pre><code>2a2x1v1x1f1r3x1v2e0m4a8m1o1f0x1x2f0a0x1f\n</code></pre>\n\n<p>Works for any input string terminated with the control character STX (U+0002).</p>\n\n<p><strong>Explanation</strong> (with <code>0x</code> commands removed)</p>\n\n<pre><code>2a2x1v                 # Set variable 1 equal to 2\n1x1f1r3x1v2e           # Function 1\n                       # Read a byte of input\n                       # Jump to function 2 if it equals variable 1\n            0m4a8m1o1f # Otherwise, output a space and jump back to the start of function 1\n1x2f0a                 # Function 2\n                       # Add 0 to the register\n1f                     # Call function 1\n</code></pre>\n"},{"answer_id":168016,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168016#168016","body":"<h1><a href=\"https://github.com/IMP1/blossom\" rel=\"nofollow noreferrer\">Blossom</a>, 88 bytes</h1>\n\n<pre><code>rule e&lt;int x&gt;[1(x)]=&gt;[1(x-1),2(str(x)+str(x+1))];rule c[1(0)]=&gt;[];e!c\n</code></pre>\n\n<p>Blossom is a graph programming language I'm working on. It can only take graphs as inputs, so this programme expects a graph comprising a single node with its label an integer. It returns a graph of connected edges to form the closest to an array I can get, and the resultant graph is printed to output.</p>\n\n<p>An unminified version of the code is this:</p>\n\n<pre><code>rule expand &lt;int x&gt;\n    [ 1 (x) ]\n =&gt; [ 1 (x-1), 2(str(x)+str(x+1)) ]\nwhere x &gt; 0;\n\nrule clean\n    [ 1 (0) ]\n =&gt; [];\n\nexpand! clean\n</code></pre>\n\n<p>It defines two rules: one called <code>expand</code>, which (while there is a node with an integer-valued label in the current graph) creates another node with its increment concatenated, and lowers the value.\nThis rule also has the condition that x is greater than 0.</p>\n\n<p>The <code>!</code> executes this rule for as long as it can be applied on the graph, so in this case it will execute until x is 0. And then the <code>clean</code> rule removes this 0 node.</p>\n\n<p>Blossom was not made for golfing, but it doesn't do too badly, I don't think., considering what it is.\nThere currently isn't really an easy way for people to test blossom code (and the interpreter I'm working on at the moment is not quite finished and a little buggy), but this isn't exactly a competing entry!</p>\n"},{"answer_id":185775,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185775#185775","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, 110 bytes</h1>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>|a:&amp;str|{for b in a.split(' '){let l=b.len()-1;if l&gt;0{print!(\"{}{}\",&amp;b[l..],&amp;b[1..l])}print!(\"{} \",&amp;b[0..1])}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##RU@9DoMgEN59iiuDQtISXWvsM3RvHLCiITnBAKaJyLNbdGhv@ZL7/u7s4vw@aJiE0pRByCANSg8Omn0T99x5u4XBWOhAaRDczag8LaBg4ZBh03GUyXqrajUAPsowW6X9hZIQQyTXvHsh5@2BFefYsvjn4aRLzqu0jnt9ljtKntaMVkyT0iPMy7qidCB0D2/TSxgNDoTVZwrqC2U/23EfjFbK9I4UvfkkWRb3Lw\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n\n<h3>A surprisingly long, but nicer solution that returns instead of printing (126 bytes):</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>|a:&amp;str|-&gt;String{a.split(' ').flat_map(|b|{let mut q:Vec&lt;_&gt;=b.chars().collect();q.swap(0,b.len()-1);q.push(' ');q}).collect()}\n</code></pre>\n\n<p><a href=\"https://tio.run/##dY@9jsIwEIT7e4q9FGBLYB0tOXiGk5Bo0cZxQqT1T@yNkEjy7MGkuoYpR9/szMYh8dI4sNg5IWH8giwyDAlOy4THTeI47c8Xjp1rR1QpUMdiC1upGkK@WQxiqqbxHbEDQ3@8Gv17O58qpe8Yk5BKeyKjWciyV@mR@Z9dpcjkuv3h7YUh3deLZT//o@elXMeE3MzkvkUxzsUOkij@om8jWpsXQRieTzIJ0NWgfW2g9dQUUn7Kdg4Q2mhMftlg7R8rOy8v\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":198035,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/198035#198035","body":"<h1>JVM Byte Code, 79 bytes</h1>\n\n<p>The byte count given is for a complete class file that defines a class <code>Code</code> containing single static method <code>Code</code> which implement Fibonacci. A hex dump of the file is given below. </p>\n\n<pre><code>0000000: cafe babe 0003 002d 0004 0100 0428 4929  .......-.....(I)\n0000010: 4901 0004 436f 6465 0700 0200 2000 0300  I...Code.... ...\n0000020: 0000 0000 0000 0100 0800 0200 0100 0100  ................\n0000030: 0200 0000 1800 0400 0100 0000 0c03 045a  ...............Z\n0000040: 6084 00ff 1a9d fffa ac00 0000 0000 00    `..............\n</code></pre>\n\n<p>A helper class is required to invoke the function. </p>\n\n<pre><code>class Test {\n    public static void main(String[] args){\n        for(int i = 0; i &lt; 20; i++){\n            System.out.println(Code.Code(i));\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://tio.run/##ZZBfT8IwFMXf9ynOG1sIS7eVyQR9MZrw5AM@SUzs/hRrYCNbIRDDZ5@3bUDUm@y0ze759fTmovvo@8OhxKjFbDZ4fH4a4B4PTVmFxVp0HTzm6haFkBVykVegY0ISl2bHwSLGwHg8Ac/iDAhdjaz688AhIkLwjEXOw5NUIuXpGOzGuGMS@miXkGBOThuCyvAcIiYEs00/Yu@enBHuaOSc4lIOkRhEfHZH1sgvRksszOP4WPxDvDoEJ0TKJvRuJiUikZWQUgqI4ncyygC8/wlBA/a8QuirYb9UnQ4/xV54buLmjC/PuLe7fK0KdFpoWvaNKrERqvYXulX1avkG0a66wPWakk3rq1pD4Q5sSsuMhkrrcHjVZGpx7HS1CZudDreE0uvat@M24qsgmF66T57Tk41uYhZXiY1gVDf7qlXyaH/0/Tc\" rel=\"nofollow noreferrer\" title=\"Bash – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<p>The disassembly of the class file with <code>javap -c</code> shows actual byte code implementation of Fibonacci. This requires only 11 bytes, the rest of the 79 bytes in the class file are various header tables that can't be omitted. </p>\n\n<pre><code>class Code {\n  static int Code(int);\n    Code:\n       0: iconst_0\n       1: iconst_1\n       2: dup_x1\n       3: iadd\n       4: iinc          0, -1\n       7: iload_0\n       8: ifgt          2\n      11: ireturn\n}\n</code></pre>\n"},{"answer_id":197604,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/197604#197604","body":"<h1><a href=\"https://taktentus.herokuapp.com/\" rel=\"nofollow noreferrer\">Taktentus</a>, 87 bytes</h1>\n\n<pre><code>a:=1\n@wy_n:=a\n@wy:=32\nb:=1\nn:=44\n@&gt;=n\n_:=@stop\n@wy_n:=a\n@wy:=32\nc:=a\na+=b\nb:=c\nn--\n_-=8\n</code></pre>\n\n<p>n are variable how many times we count (n-1 because first are writing directly)</p>\n"},{"answer_id":197601,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/197601#197601","body":"<h2><a href=\"https://github.com/A-ee/tq\" rel=\"nofollow noreferrer\">tq</a>, 6 bytes</h2>\n\n<p>Currently this has no separator...</p>\n\n<pre><code>01p+r)\n</code></pre>\n\n<h2>Explanation</h2>\n\n<pre><code>0,        # Initialize the number 0\n  1,      # (Since a preceding 0 in decimal is disallowed)\n    p+r,  # Initialize the third item in the list as the \n          # previous item + the previous-previous item\n        ) # Extend this forever\n</code></pre>\n"},{"answer_id":197500,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/197500#197500","body":"<h1><a href=\"https://github.com/munificent/wren\" rel=\"nofollow noreferrer\">Wren</a>, 30 bytes</h1>\n\n<pre><code>Fn.new{|a,b|a==6&amp;&amp;b==9?42:a*b}\n</code></pre>\n\n<p><a href=\"https://tio.run/##Ky9KzftfllikkFaal6xgq/DfLU8vL7W8uiZRJ6km0dbWTE0tydbW0t7EyCpRK6n2f3BlcUlqrl55UWZJqgZIj15yYk6OhrmOpabmfwA\" rel=\"nofollow noreferrer\" title=\"Wren – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<p>Performs an extra check on 6 &amp; 9. In other cases return the product.</p>\n\n<pre><code>Fn.new{|a,b|a==6&amp;&amp;b==9?42:a*b}\n</code></pre>\n"},{"answer_id":197497,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/197497#197497","body":"\n\n<h1>Python 3, 33 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x,y:42*(x==6)*(y==9)or x*y\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUaFCp9LKxEhLo8LW1kxTS6PS1tZSM79IoUKr8n9BUWZeiUaahpmOpaYmF4xnqWOmqfkfAA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":196116,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/196116#196116","body":"<h1><a href=\"https://visualstudio.microsoft.com/\" rel=\"nofollow noreferrer\">C# .NET</a>, 84 bytes</h1>\n<pre><code>class P{static void Main(string[]a){System.Console.Write(&quot;&quot;.PadLeft(a[0].Length));}}\n</code></pre>\n<p><a href=\"https://tio.run/##JcyxCsIwFEbhV7l0SgaD4CSOrhUKDh1Kh0sakwsxgd4fQUqfPSrCmb7heD149a35zKo0bAqGeHpVWejGUoxilRKnme12fyvC011r0ZqDG1dBMF3nBl768IDh6Ti7PpSIZO1l31trSKL0jen/ISTGD05nWiQKlHIt8QM\" rel=\"nofollow noreferrer\">Try Online</a></p>\n"},{"answer_id":196064,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/196064#196064","body":"<h1>x86-16 ASM, IBM PC DOS, 11 bytes</h1>\n<p><strong>Binary:</strong></p>\n<pre><code>00000000: 8a0e 8000 49b8 200a cd10 c3              ....I. ....\n</code></pre>\n<p><strong>Unassembled:</strong></p>\n<pre><code>D1 EE       SHR  SI, 1          ; SI to 80H (SI intialized at 100H) \nAC          LODSB               ; load string length into AL\n91          XCHG AX, CX         ; put input string length into CX\n49          DEC  CX             ; remove leading whitespace from length\nAC          LODSB               ; load whitespace delimiter into AL\nB4 0A       MOV  AH, 0AH        ; BIOS &quot;write character CX number of times&quot; function\nCD 10       INT  10H            ; call BIOS, display to console\nC3          RET                 ; return to DOS\n</code></pre>\n<p><strong>Explanation:</strong></p>\n<p>Input is via command line, though all that's important is the length.  Command line input length is always stored at memory address <code>DS:0080H</code> in DOS, so put that into <code>CX</code>.  DOS includes the space between the executable name and the command line args string in this number.</p>\n<p>For example: in <code>FOO.COM Hello</code>, length is 6 and command line string is <code>&quot; Hello&quot;</code>, or calling as <code>FOO.COM/Hello</code>, command line string is <code>&quot;/Hello&quot;</code> (Note: those are the the only valid characters for the character immediately after the executable name).  This first character (will be a space when called normally) is what is displayed as the &quot;invisible text&quot; for output.  This builds in a handy little &quot;debug mode&quot; where you can use a slash instead of a space to actually be able to test your output is the right length.</p>\n<p>Then, use the IBM PC BIOS's <a href=\"https://i.stack.imgur.com/tChZv.png\" rel=\"nofollow noreferrer\">INT 10H</a> &quot;Write character only at cursor position&quot; (<code>0AH</code>) function that writes the same character <code>CX</code> number of times.</p>\n<p><strong>Example Output:</strong></p>\n<p>Admittedly, displaying 13 chars of whitespace is not very interesting in a screenshot.  However, by using a slash instead of a space (&quot;debug mode&quot;) you can actually see that you are displaying the right number of chars.</p>\n<p><a href=\"https://i.stack.imgur.com/tChZv.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/tChZv.png\" alt=\"enter image description here\" /></a></p>\n"},{"answer_id":195948,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/195948#195948","body":"<h1><a href=\"https://github.com/GuyJoKing/Cascade\" rel=\"nofollow noreferrer\">Cascade</a>, <s>14</s> <s>11</s> <s>9</s> 8 bytes</h1>\n\n<pre><code>? .'\n,^\\\n</code></pre>\n\n<p><a href=\"https://tio.run/##S04sTk5MSf3/315BT51LJy7m/3@P1JycfB2F8PyinBRFAA\" rel=\"nofollow noreferrer\" title=\"Cascade – Try It Online\">Try it online!</a></p>\n\n<p>-1 byte thanks to Jo King realizing it's shorter to just turn into two lines</p>\n\n<p>Since the program never uses the return values of anything other than <code>,</code> and <code>'</code>, and the order spaces are printed in doesn't matter (since they're indistinguishable), <code>^</code> can be used backwards: instead of printing a space then recurring, this recurs then prints a space.</p>\n\n<p>Ungolfed, this looks something like:</p>\n\n<pre><code> @\n ?\n |\\\n , \\\n    ^\n   / \\\n  /   .\n |    \\\n |     '\n |\n</code></pre>\n\n<p>If tabs are legal whitespace alongside spaces and newlines:</p>\n\n<h1><a href=\"https://github.com/GuyJoKing/Cascade\" rel=\"nofollow noreferrer\">Cascade</a>, 7 bytes</h1>\n\n<pre><code>? .\n,^9\n</code></pre>\n\n<p><a href=\"https://tio.run/##S04sTk5MSf3/315Bj0snzvL/f4/UnJx8HYXw/KKcFEUA\" rel=\"nofollow noreferrer\" title=\"Cascade – Try It Online\">Try it online!</a></p>\n\n<p>thanks to Jo King.</p>\n"},{"answer_id":195896,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/195896#195896","body":"<h1><a href=\"https://github.com/JonoCode9374/Keg\" rel=\"nofollow noreferrer\">Keg</a>,<code>-lp</code> <code>-ir</code>, 3 bytes</h1>\n\n<pre><code>( ,\n</code></pre>\n\n<p><a href=\"https://tio.run/##y05N///fXkNB5///vMzkVAA\" rel=\"nofollow noreferrer\" title=\"Keg – Try It Online\">Try it online!</a></p>\n\n<p>This takes input as characters and prints a space for each character\nThe <code>-lp</code> flag makes the <code>length()</code> function take input if the stack is empty and the <code>-ir</code>  flag ensures that the implicit input is as characters.</p>\n"},{"answer_id":195937,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/195937#195937","body":"<h1><a href=\"https://github.com/Draco18s/RunicEnchantments/tree/Console\" rel=\"nofollow noreferrer\">Runic Enchantments</a>, 9 bytes</h1>\n\n<pre><code>\" \"il͍*@\n</code></pre>\n\n<p><a href=\"https://tio.run/##KyrNy0z@/19JQSkz52yvlsP//x6pOTn5OjEK4flFOSmKAA\" rel=\"nofollow noreferrer\" title=\"Runic Enchantments – Try It Online\">Try it online!</a></p>\n\n<p>Note that spaces and newlines need to be escaped in the input, as input is automatically split otherwise.</p>\n"},{"answer_id":195932,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/195932#195932","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a> -p, 10 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>$_=$/*~/$/\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyvrFgEpBR0C/6rxNuq6GvV6avo//@fkZqTk69Qnl@UkwIA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>$_=          Output equals\n   $/        the output separator (defaults to newline)\n     *       repeated a number of times equal to\n      ~      the index in the input of the first match of\n        /$/  the regular expression for \"end of line\"\n</code></pre>\n"},{"answer_id":122720,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122720#122720","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 3 bytes</h1>\n\n<pre><code>vð?\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@192eIP9//8eqTk5@ToK4flFOSmKAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – TIO Nexus\">Try it online!</a></p>\n\n<pre><code>v   # For each character...\n ð? #    Output a space without a newline\n</code></pre>\n\n<h3>Other 3 byte solutions (Thanks <a href=\"https://codegolf.stackexchange.com/users/59376/magic-octopus-urn\">Magic Octopus Urn</a> and <a href=\"https://codegolf.stackexchange.com/users/52210/kevin-cruijssen\">Kevin Cruijssen</a> for most of these)</h3>\n\n<pre><code>v¶? # For each character print a newline (without adding a newline)\nvõ, # For each character print the empty string with a newline\ngð× # Get the length, concatenate that many copies of space\ng¶× # Get the length, concatenate that many copies of newline\nSð: # Split, push a space, replace each char in input with a space\nðs∍ # Push ' ', swap, make the string of spaces as long as the input was\nvõJ # For each char, push a space and ''.join(stack)\nv¶J # For each char, push a newline and ''.join(stack)\n€ðJ # For each char, push a space. Then ''.join(stack)\n€¶J # For each char, push a newline. Then ''.join(stack)\n</code></pre>\n"},{"answer_id":195920,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/195920#195920","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, 28 bytes</h1>\n\n<pre><code>{}{{}&lt;&gt;((()()()()()){})&lt;&gt;}&lt;&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/v7q2urrWxk5DQ0MTBjWrazVt7ICC//97pObk5CuE5xflpPzXTQYA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<pre><code>{}                  pop one input character (because Brain-Flak always outputs a trailing newline\n{                   for each input character\n  {}                pop that character\n  &lt;&gt;                switch to other stack\n  ((()()()()()){})  push 10 (newline)\n  &lt;&gt;                back to input stack\n}\n&lt;&gt;                  switch to other stack. This is printed implicitly when the program ends\n</code></pre>\n"},{"answer_id":195919,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/195919#195919","body":"<h1><a href=\"https://mcaweb.matc.edu/winslojr/vicom128/final/index.html\" rel=\"nofollow noreferrer\">Poetic</a>, 81 bytes</h1>\n<pre><code>the berenstein bears\ni remember a series i spelled wrong\no m gee,i do remember it\n</code></pre>\n<p><a href=\"https://mcaweb.matc.edu/winslojr/vicom128/final/tio/index.html?RcoxCsAgEETR3lNMeg@SG6RWHMyCumFXyPGNXbrP582byDQOn0nGzmQeBMbOvj8SnCZ0CPxhayx4TUcNio5KRkHRn8tc51Yacam1cqycygc\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>The misspelling is intentional. (...or <em>is</em> it?)</p>\n"},{"answer_id":195898,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/195898#195898","body":"<h1><a href=\"https://github.com/munificent/wren\" rel=\"nofollow noreferrer\">Wren</a>, 22 bytes</h1>\n\n<p>Multiply the space by the length of the string.</p>\n\n<pre><code>Fn.new{|a|\" \"*a.count}\n</code></pre>\n\n<p><a href=\"https://tio.run/##FcoxEoMgEADAnlecNNEU/MAu@oEU1hfmNMyYIwNHiKO@HXXrzYG4/DDAmNhCW3o2THndcNOg72isTyx7eS5R6GNycEL1VY3Fea41ADw830T1PkwkgC@fRHV/F8XxpIb3@eMXLVXn1E1TDg\" rel=\"nofollow noreferrer\" title=\"Wren – Try It Online\">Try it online!</a></p>\n"},{"answer_id":194595,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/194595#194595","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 57 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>x=0,y=1,s;main(){for(;;){s=x+y;printf(\"%d,\",s);x=y;y=s;}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S9ZNT07@/7/C1kCn0tZQp9g6NzEzT0OzOi2/SMPaWrO62LZCu9K6oCgzryRNQ0k1RUdJp1jTusK20rrStti6tvb/fwA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":193582,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/193582#193582","body":"<h1><a href=\"https://github.com/Sp3000/Golfish\" rel=\"nofollow noreferrer\">Gol>&lt;></a>, 7 bytes</h1>\n\n<pre><code>12K+:N!\n</code></pre>\n\n<p>Byte knocked off courtesy of JoKing</p>\n\n<p><a href=\"https://tio.run/##S8/PScsszvj/39DIW9vKT/H/fwA\" rel=\"nofollow noreferrer\" title=\"Gol&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n\n<p><strong>9 bytes</strong></p>\n\n<pre><code>01T2K+:Nt\n</code></pre>\n\n<p>Outputs forever with newlines</p>\n\n<p><a href=\"https://tio.run/##S8/PScsszvj/38AwxMhb28qv5P9/AA\" rel=\"nofollow noreferrer\" title=\"Gol&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n"},{"answer_id":95455,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/95455#95455","body":"<h1>Java, 90 characters and just two variables</h1>\n<p>There was one before with 55 characters, but it used a variable without declaring it and had no output. This one has both and (the actual logic) is shorter. And as a little bonus it looks absolutely horrific code-style-wise and depends on compiler quirks, yay!</p>\n<pre><code>interface A{static void main(String[]x){for(int a,b=a=1;;System.out.println(b=a+(a=b)));}}\n</code></pre>\n<p>The special features I used are:</p>\n<ul>\n<li>Using an interface instead of a class. The program can still be run as normal, but I don't need to write &quot;<code>public</code>&quot; twice. This saves 10 characters</li>\n<li>Declaring multiple variables at once: <code>int a,b</code>;</li>\n<li>Initializing multiple variables at once and in the declaration, needs a second <code>a</code>: <code>b=a=1;</code></li>\n<li>Everything is done in the <code>for</code> head, the body is empty: <code>for(...);</code><br>\nThe first and third block of <code>for</code> are intended for variable initialization and variable incrementation, but they can hold any commands.</li>\n<li>The whole logic is inside the output: <code>System.out.println(b=a+(a=b))</code></li>\n<li>Just two variables without recursion! This is done by using the way the compiler works: The assignment to <code>b</code> first reads the value of <code>a</code>, then it evaluates the right side of the <code>+</code>, where it reads the value of <code>b</code> and writes it into <code>a</code>, but the left side of the <code>+</code> still has the old value of <code>a</code> that gets added to the value of <code>b</code> after assigning the value of <code>b</code> to <code>a</code>. Then that sum gets written to <code>b</code> while <code>a</code> already holds the old value of <code>b</code>.<br />\nI was lucky that the compiler works this way, because it could also have first evaluated the expression in the brackets, like for example C does, then it just lists all powers of 2 instead of the Fibonacci numbers.</li>\n</ul>\n<p>In a dream programming language this would just be: <code>b=a+(a=b</code></p>\n"},{"answer_id":193519,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/193519#193519","body":"<h1><a href=\"https://github.com/GuyJoKing/Cascade\" rel=\"nofollow noreferrer\">Cascade</a>, <s>28</s> 25 bytes</h1>\n\n<pre><code>?01\n^/ \n|.#\n!9]\n-0\n!0]\n+1\n</code></pre>\n\n<p><a href=\"https://tio.run/##S04sTk5MSf3/397AkCtOX4GrRk@ZS9EylkvXgEvRIJZL2/D/fwA\" rel=\"nofollow noreferrer\" title=\"Cascade – Try It Online\">Try it online!</a></p>\n\n<p>Outputs the Fibonacci numbers separated by tabs starting from 1. This shows off the behaviour of variables in Cascade, in that the variables <code>1</code> and <code>0</code> aren't static in this program.</p>\n\n<p>Unfolded, this looks something like:</p>\n\n<pre><code>     @\n     ^\n    ^ \\\n   / . |\n  #  9 |\n  ]    |\n 0 -   |\n  ] 0  |\n 1 +   /\n  1 0 /\n     |\n</code></pre>\n\n<p><a href=\"https://tio.run/##S04sTk5MSf3/XwEEHLjAVByYilOIAdH6CnoKNUCGsoKCJZgRC5IEMgwUdCEMoIgBmGGooA3SABQxBIroQwyr@f8fAA\" rel=\"nofollow noreferrer\" title=\"Cascade – Try It Online\">Try it online!</a></p>\n\n<p>This initially branches twice, with the leftmost going down the tree until it sets (<code>[</code>) the variable <code>1</code> to the sum (<code>+</code>) of <code>1</code> and <code>0</code>. Then it sets <code>0</code> to that value to the result of that minus <code>0</code>. This has the effect of advancing one element in the Fibonacci sequence.For example, the values of repeated executions are:</p>\n\n<pre><code>0 1\n1 1\n1 2\n2 3\n3 5\n5 8\n8 13\n...\n</code></pre>\n\n<p>Finally it prints the total result of that, which is the new value of <code>0</code>. The next branch prints the tab separator (<code>.9</code>), and the final branch loops back around to the top of the program.</p>\n"},{"answer_id":191443,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/191443#191443","body":"<h2><a href=\"https://github.com/Adriandmen/Oasis\" rel=\"nofollow noreferrer\">Oasis</a>, 2 bytes</h2>\n\n<p>Answer to the open exercise on the Oasis repo.</p>\n\n<pre><code>+T\n</code></pre>\n\n<h2>Explanation</h2>\n\n<p>Expanded program:</p>\n\n<pre><code>bc+10\n</code></pre>\n\n<p>When + requires 1 parameter, it tries to calculate a(n-1). For the other parameter, it tries to calculate a(n-2). (Hence the expansion.)</p>\n\n<p>In addition, the T instruction expands to 10 in the program, which are the base test cases (a(0) is 0. a(1) is 1. Since base test cases are popped from the end before the Oasis program is executed in reverse.)</p>\n\n<p><a href=\"https://tio.run/##y08sziz@/1875P///2YA\" rel=\"nofollow noreferrer\">TIO</a></p>\n"},{"answer_id":146362,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/146362#146362","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, <s>36</s> <s>34</s> 32 bytes</h1>\n\n<pre><code>({}(())){({}[()]&lt;(({})&lt;&gt;{})&gt;)}&lt;&gt;\n</code></pre>\n\n<p>Outputs the <code>n</code>th number of the zero indexed Fibonacci sequence (<code>F(0) = 1, F(1) = 1, etc.</code>)</p>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X6O6VkNDU1OzGsiI1tCMtdEAMjRt7ICEnWatjd3//wYA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation coming soon...</h2>\n"},{"answer_id":190972,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/190972#190972","body":"<h1>Zsh, 31 bytes</h1>\n\n<p><a href=\"https://tio.run/##qyrO@P8/Lb9IQUMj0dbQOknbNtE6Uds2SVMzNTkjX0ElUUEl6f9/AA\" rel=\"nofollow noreferrer\">try it online</a></p>\n\n<pre class=\"lang-zsh prettyprint-override\"><code>for ((a=1;b+=a;a+=b))echo $a $b\n</code></pre>\n\n<p><sub>32 bytes, based on <a href=\"https://codegolf.stackexchange.com/a/180451/15940\">James Brown's awk solution</a>:</sub>\n<br><code>for ((y=1;z=x+y;y=z))echo $[x=y]</code></p>\n\n<p><sub>42 bytes, to halt before int overflow:</sub>\n<br><code>(for ((a=1;b+=a;a+=b))echo $a $b)|head -46</code></p>\n\n<p><sub>NB: For a properly \"endless\" solution I need logic for long long (..) long integers, per <a href=\"https://stackoverflow.com/q/3072444\">this post</a></sub></p>\n"},{"answer_id":191082,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/191082#191082","body":"<h2>8086/8088 machine code, 8 bytes</h2>\n\n<p>The machine code is on the left; the middle column is disassembly and the rightmost column is an explanation.</p>\n\n<pre><code>40      ; inc ax          set ax to 1\n41      ; inc cx          set cx to 1\nef      ; out [dx], ax    output ax to port [dx] (that is, port 0)\n03 c1   ; add ax, cx      set ax to ax + cx\n91      ; xchg ax, cx     exchange ax with cx\neb fa   ; jmp -4          jump to \"out [dx], ax\"\n</code></pre>\n\n<p>Assumptions:</p>\n\n<ul>\n<li>The registers AX, CX and DX are initially 0.</li>\n<li>A number may be output by writing it as a word to port 0.</li>\n</ul>\n\n<p>This runs forever, outputting the Fibonacci numbers modulo <span class=\"math-container\">\\$2^{16}\\$</span> = 65,536, starting with 1, 1.</p>\n"},{"answer_id":191048,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/191048#191048","body":"<h1>pure bash, 43 chars</h1>\n\n<p>Inspired from <a href=\"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/1954?noredirect=1#comment456857_1954\">user unknown's answer</a>:</p>\n\n<pre><code>for((r=l=i=1;i++&lt;40;l+=r+=l)){ echo $r $l;}\n</code></pre>\n\n<p>Not really golfed, but I like it anyway.</p>\n\n<p>Or</p>\n\n<pre><code>r=1 l=0;echo {,,}{,,}{,,}\\ $[r+=l]\\ $[l+=r]\n</code></pre>\n"},{"answer_id":170601,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170601#170601","body":"<h1><a href=\"https://github.com/Reconcyl/flobnar\" rel=\"nofollow noreferrer\">Flobnar</a>, 19 bytes</h1>\n<pre><code>@\\\n#_+_1\n!_:.\n9&gt;$!,\n</code></pre>\n<p><a href=\"https://tio.run/##S8vJT8pLLPr/3yGGSzleO96QSzHeSo/L0k5FUef///@6KQA\" rel=\"nofollow noreferrer\" title=\"Flobnar – Try It Online\">Try it online!</a></p>\n<p>Generates the sequence with no end, separating each number with a tab.</p>\n<hr>\n<p><em>One year later...</em></p>\n<p>I should probably check if I've already answered a question before I start coding...</p>\n<p>Anyway, here's an alternative 19 byter that outputs in the same way, only 1-indexed this time and without the leading tab.</p>\n<h1><a href=\"https://github.com/Reconcyl/flobnar\" rel=\"nofollow noreferrer\">Flobnar</a>, 19 bytes</h1>\n<pre><code>!\\$\\@\n:&gt;+_,9\n+ &lt;&gt;$.\n</code></pre>\n<p><a href=\"https://tio.run/##S8vJT8pLLPr/XzFGJcaBy8pOO17HkktbwcZORe////@6KQA\" rel=\"nofollow noreferrer\" title=\"Flobnar – Try It Online\">Try it online!</a></p>\n"},{"answer_id":191002,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/191002#191002","body":"<p>Golfscript 42 bytes</p>\n\n<pre><code>~:n;2 -1?:h;5h?:f;1f+2/:p;p n?-1p*n~)?-f/\n</code></pre>\n\n<p>I origionally solved this in python with 64chars because i didn't think golfscript supported floats. I did some more digging and it actually does if you raise a number to -1. </p>\n\n<p>Back in my graph theory/combinitorics class we went over creating an O(1) form of recurance eqautions, the fibonacci sequence is one example we used. I don't remeber the method for converting a recurance equation to constant time because the class was a few years ago, but I found the solution for the fibonacci equation online</p>\n\n<p><a href=\"https://i.stack.imgur.com/8yHyI.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/8yHyI.png\" alt=\"constant time fibonacci sequence\"></a></p>\n\n<p><a href=\"https://i.stack.imgur.com/IbKOn.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/IbKOn.png\" alt=\"phi\"></a></p>\n\n<p>This allows you to compute the nth fibbonacci number without computing the previous terms</p>\n"},{"answer_id":190928,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/190928#190928","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 10 bytes</h1>\n\n<pre><code>0;1⟨t≡+⟩ⁱh\n</code></pre>\n\n<p><a href=\"https://tio.run/##ASwA0/9icmFjaHlsb2cy/@KGsOKCgeG6ieKKpf8wOzHin6h04omhK@KfqeKBsWj//w\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n\n<p><a href=\"https://codegolf.meta.stackexchange.com/a/10753/85334\">Generates</a> an infinite list of Fibonacci numbers through the output variable.</p>\n\n<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, <s>14</s> 12 bytes</h1>\n\n<pre><code>0;1⟨{tẉ₂}↰+⟩\n</code></pre>\n\n<p><a href=\"https://tio.run/##ASQA2/9icmFjaHlsb2cy//8wOzHin6h7dOG6ieKCgn3ihrAr4p@p//8\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n\n<p>Prints terms infinitely, separated by newlines.</p>\n\n<pre><code>0;1             Starting with [0,1],\n    {tẉ₂}       get and print the second element,\n          +     sum the two elements,\n   ⟨     ↰ ⟩    and recur on the pair of those two values.\n</code></pre>\n\n<p>A variant to find the nth term of the sequence, 0-indexed:</p>\n\n<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 13 bytes</h1>\n\n<pre><code>∧0;1⟨t≡+⟩ⁱ↖?t\n</code></pre>\n\n<p><a href=\"https://tio.run/##AU4Asf9icmFjaHlsb2cy/3t3IiAtPiAidz/ihrDigoLhuol94bWQ/@KIpzA7MeKfqHTiiaEr4p@p4oGx4oaWP3T//1swLDEsMiwzLDQsNSwxMF0\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n"},{"answer_id":190940,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/190940#190940","body":"<h1><a href=\"http://jasmin.sourceforge.net\" rel=\"nofollow noreferrer\">Jasmin</a>, 120 bytes</h1>\n\n<p>Defines a class <code>F</code> with a static method <code>f</code> that calculates the nth Fibonacci number. My implementation is essentially an iterative solution that stores partially computed Fibonacci numbers on the stack. </p>\n\n<pre><code>.class F\n.super java/io/File\n.method static f(I)I\nldc 0\nldc 1\ndup_x1\niadd\niinc 0 -1\niload_0\nifgt $-9\nireturn\n.end method\n</code></pre>\n\n<h1>Some interesting golfing tricks used</h1>\n\n<ol>\n<li>Extending <code>java/io/File</code> is shorter than extending <code>java/lang/Object</code> (The super line cannot be omitted).  I've check and <code>File</code> is tied for the shortest fully qualified class name. </li>\n<li>Making this an instance method would let me remove <code>static</code> from the method header but, then I would have to explicitly implement an empty constructor to make the function callable (costing quite a few bytes). </li>\n<li>Juggling the Fibonacci values on the stack turned out to be shorter than storing them in local variables.</li>\n<li>On the other hand it's worth storing the index in a local variable. This makes stack management easier (i.e. shorter) without too much extra length since there is an instruction for adding or subtracting from locals variables.</li>\n<li>Although the JVM technically requires that you declare the maximum stack size before hand with <code>.limit stack 5</code>, this can be omitted if the class file is executed with the <code>-noverify</code> flag. I'm pretty sure this is some sort of undefined behavior but, it works in this this case.  </li>\n</ol>\n\n<h1>Test setup</h1>\n\n<p>To test the code you, need a main method to invoke the static method. </p>\n\n<pre><code>class FibTest {\n    public static void main(String[] args){\n        for(int i = 0; i &lt; 20; i++){\n            System.out.println(F.f(i));\n        }\n    }\n}\n</code></pre>\n\n<p>You then need to use <code>jasmin.jar</code> (obtained from the source forge linked in the title) to build <code>F.class</code> before building and executing the test file. Since the stack size was omitted, you need to execute the class with <code>-noverify</code>. The makefile below handles this.</p>\n\n<pre><code>test: FibTest.class\n    java -noverify FibTest\n\nFibTest.class: FibTest.java F.class\n    javac FibTest.java    \n\nF.class: F.j\n    java -jar jasmin.jar F.j\n</code></pre>\n"},{"answer_id":1954,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/1954#1954","body":"<h1>bash pur, 49 chars, third solution</h1>\n\n<pre><code>r=0;l=1;echo -e {1..45}\" $((r+=l)) $((l+=r))\\n\";\n</code></pre>\n\n<p>bash pur, 52 chars, second solution</p>\n\n<pre><code>r=0;l=1;echo -e {1..40}\" \"$((r+=l))\" \"$((l+=r))\\\\n;\n</code></pre>\n\n<p>former solution (60 chars): </p>\n\n<pre><code>r=0;l=1;for i in {1..40};do((r+=l));((l+=r));echo $r $l;done\n</code></pre>\n"},{"answer_id":190983,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/190983#190983","body":"<h1><a href=\"https://github.com/TheOnlyMrCat/33\" rel=\"nofollow noreferrer\">33</a>, 7 bytes</h1>\n\n<pre><code>1c[oca]\n</code></pre>\n\n<p>Not a Fibonacci number, I'm afraid.</p>\n"},{"answer_id":190929,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/190929#190929","body":"<h1>x86 Machine Code (ELF format) - 484 bytes</h1>\n\n<p>This program will calculate fibonacci digits until there is no memory left, so you might want to process the output to get Nth one you are looking for.</p>\n\n<pre><code>Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\n00000000  7F 45 4C 46 01 01 01 00 00 00 00 00 00 00 00 00  .ELF............\n00000010  02 00 03 00 01 00 00 00 C0 80 04 08 34 00 00 00  ........Ŕ€..4...\n00000020  00 00 00 00 00 00 00 00 34 00 20 00 02 00 28 00  ........4. ...(.\n00000030  00 00 00 00 01 00 00 00 00 00 00 00 00 80 04 08  .............€..\n00000040  00 00 00 00 E4 01 00 00 00 10 00 00 05 00 00 00  ....ä...........\n00000050  00 10 00 00 01 00 00 00 00 00 00 00 00 90 04 08  ................\n00000060  00 00 00 00 00 00 00 00 00 00 10 00 06 00 00 00  ................\n00000070  00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n00000080  51 B9 00 90 04 08 88 01 31 C0 BA 01 00 00 00 EB  Qą......1Ŕş....ë\n00000090  03 51 89 C1 31 C0 89 C3 43 B0 04 CD 80 31 C0 99  .Q‰Á1Ŕ‰ĂC°.Í€1Ŕ™\n000000A0  42 59 C3 00 00 00 00 00 00 00 00 00 00 00 00 00  BYĂ.............\n000000B0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n000000C0  31 C0 99 42 B9 03 90 04 08 C6 41 01 0A C6 41 02  1Ŕ™Bą....ĆA..ĆA.\n000000D0  01 C6 41 03 01 3A 71 03 0F 84 FF 00 00 00 3A 71  .ĆA..:q..„˙...:q\n000000E0  03 74 26 80 41 03 05 0F B6 41 03 6B C0 08 00 41  .t&amp;€A...¶A.kŔ..A\n000000F0  04 8A 41 04 E8 87 FF FF FF 80 69 04 30 C6 41 03  .ŠA.č‡˙˙˙€i.0ĆA.\n00000100  01 83 E9 03 3A 71 03 75 DA 8A 41 04 E8 6F FF FF  ..é.:q.uÚŠA.čo˙˙\n00000110  FF 3A 71 06 0F 84 BA 00 00 00 0F B6 41 05 88 41  ˙:q..„ş....¶A..A\n00000120  06 0F B6 41 07 88 41 05 0F B6 41 07 00 41 06 C6  ..¶A..A..¶A..A.Ć\n00000130  41 07 00 3A 71 06 0F 84 88 00 00 00 C6 41 07 01  A..:q..„....ĆA..\n00000140  FE 49 06 3A 71 06 0F 84 78 00 00 00 C6 41 07 02  ţI.:q..„x...ĆA..\n00000150  FE 49 06 3A 71 06 0F 84 68 00 00 00 C6 41 07 03  ţI.:q..„h...ĆA..\n00000160  FE 49 06 3A 71 06 0F 84 58 00 00 00 C6 41 07 04  ţI.:q..„X...ĆA..\n00000170  FE 49 06 3A 71 06 74 4C C6 41 07 05 FE 49 06 3A  ţI.:q.tLĆA..ţI.:\n00000180  71 06 74 40 C6 41 07 06 FE 49 06 3A 71 06 74 34  q.t@ĆA..ţI.:q.t4\n00000190  C6 41 07 07 FE 49 06 3A 71 06 74 28 C6 41 07 08  ĆA..ţI.:q.t(ĆA..\n000001A0  FE 49 06 3A 71 06 74 1C C6 41 07 09 FE 49 06 3A  ţI.:q.t.ĆA..ţI.:\n000001B0  71 06 74 10 FE 41 08 FE 41 09 FE 49 06 0F B6 41  q.t.ţA.ţA.ţI..¶A\n000001C0  06 88 41 07 C6 41 06 01 83 C1 03 3A 71 06 0F 85  ..A.ĆA...Á.:q..…\n000001D0  46 FF FF FF 3A 71 03 0F 85 01 FF FF FF B3 00 31  F˙˙˙:q..….˙˙˙ł.1\n000001E0  C0 40 CD 80                                      Ŕ@Í€\n</code></pre>\n"},{"answer_id":189656,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/189656#189656","body":"<h1><a href=\"https://esolangs.org/wiki/Keg\" rel=\"nofollow noreferrer\">Keg</a>, 10 bytes</h1>\n\n<pre><code>01{:. ,:\"+\n</code></pre>\n\n<p>Endlessly outputs numbers separated by spaces</p>\n\n<h1>How it works</h1>\n\n<pre><code>0    Pushes 0\n1    Pushes 1\n{    Begins an endless while loop\n:.   Outputs the top item of the stack\n ,   Outputs a space\n:\"   Duplicates the top item of the stack and puts it at the bottom\n+    Adds the top two numbers of the stack\n</code></pre>\n\n<p><a href=\"https://tio.run/##y05N///fwLDaSk9Bx0pJ@/9/AA\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n"},{"answer_id":182419,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/182419#182419","body":"<h1><a href=\"https://github.com/dloscutoff/esolangs/tree/master/BitCycle\" rel=\"nofollow noreferrer\">BitCycle</a>, <s>17</s> 16 bytes</h1>\n\n<pre><code>~1~ +\nAB~/!\n^ +/\n</code></pre>\n\n<p><a href=\"https://tio.run/##hcoxDsIwDEbhPaf4mStU9Qa0GxNLZyQTDLVE4yhxhi45OqE9AXrf@B5ifvMfbq0OFZ0bp9qf3B1d34Zx@t/FzYtk7EyRODIZCJ6TkQTQqiUY9AWTlTMoPI8vm0bM1xs4UZbwhi0MLRaLta9GEw25ncsP\" rel=\"nofollow noreferrer\" title=\"BitCycle – Try It Online\">Try it online!</a></p>\n\n<p>Outputs the 0 based sequence. This could be 14 bytes:</p>\n\n<pre><code>~1~+\nAB~!\n^ +/\n</code></pre>\n\n<p><a href=\"https://tio.run/##hcoxDsIwDEbhPaf4mSuEegPajYmlM5IJhlqidpQ4A0uOToAToPeN7yoeX/HJvbexDWGa2y5cMBz6OM3/O4ZllYIvN2ROTA5C5OwkCtqsqsPucNm4gPT2@4pbwnI6gzMV0Qd8ZVj1VL2/LbmYlr6vHw\" rel=\"nofollow noreferrer\" title=\"BitCycle – Try It Online\">Try it online!</a></p>\n\n<p>But it prints an extra <code>0</code> in front of the sequence, which takes a couple of bytes to fix...</p>\n\n<p>There's also a 17 byte solution:</p>\n\n<pre><code>v0&lt;\nAB~\n~ +\\\n~  !\n</code></pre>\n\n<p><a href=\"https://tio.run/##hYqxDsIwDAX3fMVjRkiwM9BuTCwdWUww1BKNo9ipxNJPJ5QvQHe66W7i8R1f3Nq8P4auX8KC7XUNNu3Q9f85hWEUw6orCmcmByFycZIEmrQmhz7gMrGB0v33mWvGcL6AC5mkJ3xkaPVcvX00u2iytqtf\" rel=\"nofollow noreferrer\" title=\"BitCycle – Try It Online\">Try it online!</a></p>\n\n<p>Which I like because you can switch between 0-based and 1-based just by changing the <a href=\"https://tio.run/##hYqxDsIwDAX3fMVjRgzdGWg3JpaOLCYYaonGUeJUYumnY8oXoDvddDex@I4vdl@6Y@iHNazYX7dg510//OcUxkkqNk1RODMZCJGLkSTQrC0Z9AGTmSso3X9fNc0YzxdwoSrpCZsY2iw3849mE03VD@0L\" rel=\"nofollow noreferrer\"><code>0</code> on the first line to a <code>1</code></a>.</p>\n\n<p>For both solutions, the numbers are infinitely output is in unary 1 bits separated by 0 bits. The <code>-u</code> flag converts the unary numbers to decimal instead, but the TIO tends to cut off the outputting section sometimes, and the last number is always truncated too. There's a bit in the footer to prevent this.</p>\n\n<h3>Explanation:</h3>\n\n<p>Basically, these solutions only use a single pair of collectors and distinguishes between the two numbers by storing one as unary <code>1</code> bits and the other as unary <code>0</code> bits.</p>\n\n<p>This starts off with <code>1</code> being pushed to the collectors to initialise the sequence.</p>\n\n<pre><code>~ ~    Invert the whole stack\nAB~    This basically swaps the values of the two numbers\n       Also duplicate a copy downwards and rightwards\n</code></pre>\n\n<pre><code>       Split the stream into zeroes and ones with the plus\n!  /!  Print a single 0 as the separator\n^ +/   And add a copy of the 1s to the collector\n</code></pre>\n\n<pre><code>  ~ +\n    !  Print a copy of the 1s to the output\n</code></pre>\n\n<p>This repeats infinitely, basically executing the pseudocode:</p>\n\n<pre><code>a=0\nb=1\nwhile 1:\n    oldA = a\n    b,a = a,b\n    print ','\n    a += oldA\n    print oldA\n</code></pre>\n"},{"answer_id":188796,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/188796#188796","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/Pyramid-Scheme\" rel=\"nofollow noreferrer\">Pyramid Scheme</a>, 385 bytes</h1>\n\n<pre><code>   ^           ^\n  / \\         /l\\\n /set\\       /oop\\\n^-----^     ^-----^\n-    ^-    /]\\   ^-^\n    ^-    ^---^ ^- -^\n   ^-    ^-   -/ \\  -^\n  ^-     -^   /set\\  -^\n /[\\     / \\ ^-----^  -^\n^---^   /out\\-    ^-  / \\\n-^  -^ ^-----^   /+\\ /set\\\n/1\\ / \\-    /x\\ ^---^-----^\n---/set\\    --- -  /x\\   /+\\\n  ^-----^          ---  ^---^\n /x\\   /1\\             /x\\  -\n ---   ---             ---\n</code></pre>\n\n<p><a href=\"https://tio.run/##VY/RCsIwDEXf8xX3XULY9xgLogMHjg43Qb@@tknbzTyU5PbkJlm@r@s83Xm9PcZ5TAlAwB6BAIH2Wp5KkHXcmiQxLkqBS3hjzYm9MOiilhe3pgVryLmrYcfZBprsKsy5Ti26nH18Afvo/BHqEhLfm3bDTJEDOww5qTuSDFoQX/Tjhv0G5n5szsGOWDsBx7PRGDegBg6KY5jK5GR9//pT@gE\" rel=\"nofollow noreferrer\" title=\"Pyramid Scheme – Try It Online\">Try it online!</a></p>\n\n<p>This guy's a whopper. Prints terms indefinitely with no separator. The bit on the left initializes the blank variable and <code>x</code> to one, and the bit on the right does the Fibonaccing. The loop condition (everything to the left below <code>loop</code>) prints both variables before checking the blank one for truthiness (it'll always be nonzero). The loop body updates first blank and then <code>x</code>, thus generating the next two terms for the condition to print.</p>\n\n<p>I can't quite figure out <code>set</code>. It doesn't quite follow the chain of execution, but it <em>almost</em> does, I think. I'll be looking at the Pyramid Scheme source in the next few days (and possibly extending the language); perhaps this will provide me with the insight required to golf some bytes off this monstrosity.</p>\n"},{"answer_id":188648,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/188648#188648","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"nofollow noreferrer\">brainfuck</a>, 45 bytes</h1>\n\n<pre><code>,[&gt;,]&gt;+[[-]++[&lt;-&gt;------]&lt;---&lt;[-&gt;+&gt;+&lt;&lt;]&gt;]&gt;[.&gt;]\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMxLK03O/v9fJ9pOJ9ZOOzpaN1ZbO9pG104XDGJtgIRNtK6dtp22jU2sXaxdtJ5d7P//IQYGvg55xt6JAVF6GQblztGxGQA\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n"},{"answer_id":188494,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/188494#188494","body":"<h1><a href=\"http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/\" rel=\"nofollow noreferrer\">Forth (gforth)</a>, 45 bytes</h1>\n\n<pre class=\"lang-forth prettyprint-override\"><code>: f begin 1 -1 d+ s&quot; .&quot;search 0= until type ;\n</code></pre>\n<p><a href=\"https://tio.run/##NYzBCsIwEETvfsWQq3RJ9WZRBI8iePCkeIht2gTStCRbql9fU6yX2Xm7s1N3gU3W1POYph1qvHRjPXJkOao1ogCJqFUoDeQeg2frwJ9eo0jpHptq6H9MAsgOEKmiDChW6dNY4jcL9DOUKoSOqdWtXjauc4sbjWIiG4nYzFpb9w/RS0UTyoVuUl6OfntW1zsZOZ4eT7NcVKM9k5Qy8fQF\" rel=\"nofollow noreferrer\" title=\"Forth (gforth) – Try It Online\">Try it online!</a></p>\n<h3>Code Explanation</h3>\n<pre class=\"lang-forth prettyprint-override\"><code>: f              \\ start a new word definition\n  begin          \\ start an indefinite loop\n    1 -1 d+      \\ remove the first character from the string\n    s&quot; .&quot;search  \\ find the length and starting address of the first substring that starts with '.'\n    0=           \\ check if '.' was found in the string\n  until          \\ end the loop if not\n  type           \\ output the result\n;                \\ end the word definition\n \n</code></pre>\n"},{"answer_id":188277,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/188277#188277","body":"<h1><a href=\"https://github.com/torcado194/worm\" rel=\"nofollow noreferrer\">\\/\\/&gt;</a>, 9 bytes</h1>\n<pre><code>:@+1}:nau\n</code></pre>\n<p>Outputs infinitely starting from 0, with each number on a new line.</p>\n<h3>Explanation:</h3>\n<pre><code>:           Dupe top of stack\n @          Rotate the top three elements\n  +         Add the top two elements\n   1}       Push a 1 to the bottom of the stack\n     :nau   Print the top number with a trailing newline  \n</code></pre>\n"},{"answer_id":96694,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/96694#96694","body":"<h2><a href=\"http://github.com/dloscutoff/esolangs/tree/master/Ouroboros\" rel=\"nofollow noreferrer\">Ouroboros</a>, 10 bytes</h2>\n\n<p>Outputs an infinite Fibonacci sequence, starting at 0, separated by newlines.</p>\n\n<pre><code>.!+.@.nao+\n</code></pre>\n\n<h3>Explanation</h3>\n\n<p>Each line of an Ouroboros program represents a <a href=\"http://en.wikipedia.org/wiki/Ouroboros\" rel=\"nofollow noreferrer\">snake eating its own tail</a>. When execution reaches the end of the line, it loops back to the beginning. Each snake has a stack to store values.</p>\n\n<p>If this is the first pass through the code, we need to initialize the stack by turning the top into a <code>1</code>. (The empty stack is treated as containing infinite zeros.) <code>.!</code> dups and logically negates (<code>1</code> if the value was <code>0</code>, otherwise <code>0</code>), and <code>+</code> adds that result to the top value. This has the effect of pushing a <code>1</code> if the stack was empty, and doing nothing if the stack contained a nonzero value.</p>\n\n<p>Now, call the two numbers on the stack <code>x</code> and <code>y</code>, where <code>x</code> is smaller and <code>y</code> is on the top of the stack. <code>.@.n</code> copies <code>y</code>, rotates <code>x</code> to the top, and outputs a copy of it. <code>a</code> pushes <code>10</code> and <code>o</code> outputs it as a character (printing a newline). Finally, <code>+</code> adds <code>x</code> to a copy of <code>y</code>. The stack now contains <code>y</code> and <code>x+y</code>, and we proceed to the next iteration.</p>\n\n<h3>Try it out</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"false\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>// Define Stack class\nfunction Stack() {\n  this.stack = [];\n  this.length = 0;\n}\nStack.prototype.push = function(item) {\n  this.stack.push(item);\n  this.length++;\n}\nStack.prototype.pop = function() {\n  var result = 0;\n  if (this.length &gt; 0) {\n    result = this.stack.pop();\n    this.length--;\n  }\n  return result;\n}\nStack.prototype.top = function() {\n  var result = 0;\n  if (this.length &gt; 0) {\n    result = this.stack[this.length - 1];\n  }\n  return result;\n}\nStack.prototype.toString = function() {\n  return \"\" + this.stack;\n}\n\n// Define Snake class\nfunction Snake(code) {\n  this.code = code;\n  this.length = this.code.length;\n  this.ip = 0;\n  this.ownStack = new Stack();\n  this.currStack = this.ownStack;\n  this.alive = true;\n  this.wait = 0;\n  this.partialString = this.partialNumber = null;\n}\nSnake.prototype.step = function() {\n  if (!this.alive) {\n    return null;\n  }\n  if (this.wait &gt; 0) {\n    this.wait--;\n    return null;\n  }\n  var instruction = this.code.charAt(this.ip);\n  var output = null;\n  console.log(\"Executing instruction \" + instruction);\n  if (this.partialString !== null) {\n    // We're in the middle of a double-quoted string\n    if (instruction == '\"') {\n      // Close the string and push its character codes in reverse order\n      for (var i = this.partialString.length - 1; i &gt;= 0; i--) {\n        this.currStack.push(this.partialString.charCodeAt(i));\n      }\n      this.partialString = null;\n    } else {\n      this.partialString += instruction;\n    }\n  } else if (instruction == '\"') {\n    this.partialString = \"\";\n  } else if (\"0\" &lt;= instruction &amp;&amp; instruction &lt;= \"9\") {\n    if (this.partialNumber !== null) {\n      this.partialNumber = this.partialNumber + instruction;  // NB: concatenation!\n    } else {\n      this.partialNumber = instruction;\n    }\n    next = this.code.charAt((this.ip + 1) % this.length);\n    if (next &lt; \"0\" || \"9\" &lt; next) {\n      // Next instruction is non-numeric, so end number and push it\n      this.currStack.push(+this.partialNumber);\n      this.partialNumber = null;\n    }\n  } else if (\"a\" &lt;= instruction &amp;&amp; instruction &lt;= \"f\") {\n    // a-f push numbers 10 through 15\n    var value = instruction.charCodeAt(0) - 87;\n    this.currStack.push(value);\n  } else if (instruction == \"$\") {\n    // Toggle the current stack\n    if (this.currStack === this.ownStack) {\n      this.currStack = this.program.sharedStack;\n    } else {\n      this.currStack = this.ownStack;\n    }\n  } else if (instruction == \"s\") {\n    this.currStack = this.ownStack;\n  } else if (instruction == \"S\") {\n    this.currStack = this.program.sharedStack;\n  } else if (instruction == \"l\") {\n    this.currStack.push(this.ownStack.length);\n  } else if (instruction == \"L\") {\n    this.currStack.push(this.program.sharedStack.length);\n  } else if (instruction == \".\") {\n    var item = this.currStack.pop();\n    this.currStack.push(item);\n    this.currStack.push(item);\n  } else if (instruction == \"m\") {\n    var item = this.ownStack.pop();\n    this.program.sharedStack.push(item);\n  } else if (instruction == \"M\") {\n    var item = this.program.sharedStack.pop();\n    this.ownStack.push(item);\n  } else if (instruction == \"y\") {\n    var item = this.ownStack.top();\n    this.program.sharedStack.push(item);\n  } else if (instruction == \"Y\") {\n    var item = this.program.sharedStack.top();\n    this.ownStack.push(item);\n  } else if (instruction == \"\\\\\") {\n    var top = this.currStack.pop();\n    var next = this.currStack.pop()\n    this.currStack.push(top);\n    this.currStack.push(next);\n  } else if (instruction == \"@\") {\n    var c = this.currStack.pop();\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(b);\n    this.currStack.push(c);\n    this.currStack.push(a);\n  } else if (instruction == \";\") {\n    this.currStack.pop();\n  } else if (instruction == \"+\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(a + b);\n  } else if (instruction == \"-\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(a - b);\n  } else if (instruction == \"*\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(a * b);\n  } else if (instruction == \"/\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(a / b);\n  } else if (instruction == \"%\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(a % b);\n  } else if (instruction == \"_\") {\n    this.currStack.push(-this.currStack.pop());\n  } else if (instruction == \"I\") {\n    var value = this.currStack.pop();\n    if (value &lt; 0) {\n      this.currStack.push(Math.ceil(value));\n    } else {\n      this.currStack.push(Math.floor(value));\n    }\n  } else if (instruction == \"&gt;\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(+(a &gt; b));\n  } else if (instruction == \"&lt;\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(+(a &lt; b));\n  } else if (instruction == \"=\") {\n    var b = this.currStack.pop();\n    var a = this.currStack.pop();\n    this.currStack.push(+(a == b));\n  } else if (instruction == \"!\") {\n    this.currStack.push(+ !this.currStack.pop());\n  } else if (instruction == \"?\") {\n    this.currStack.push(Math.random());\n  } else if (instruction == \"n\") {\n    output = \"\" + this.currStack.pop();\n  } else if (instruction == \"o\") {\n    output = String.fromCharCode(this.currStack.pop());\n  } else if (instruction == \"r\") {\n    var input = this.program.io.getNumber();\n    this.currStack.push(input);\n  } else if (instruction == \"i\") {\n    var input = this.program.io.getChar();\n    this.currStack.push(input);\n  } else if (instruction == \"(\") {\n    this.length -= Math.floor(this.currStack.pop());\n    this.length = Math.max(this.length, 0);\n  } else if (instruction == \")\") {\n    this.length += Math.floor(this.currStack.pop());\n    this.length = Math.min(this.length, this.code.length);\n  } else if (instruction == \"w\") {\n    this.wait = this.currStack.pop();\n  }\n  // Any unrecognized character is a no-op\n  if (this.ip &gt;= this.length) {\n    // We've swallowed the IP, so this snake dies\n    this.alive = false;\n    this.program.snakesLiving--;\n  } else {\n    // Increment IP and loop if appropriate\n    this.ip = (this.ip + 1) % this.length;\n  }\n  return output;\n}\nSnake.prototype.getHighlightedCode = function() {\n  var result = \"\";\n  for (var i = 0; i &lt; this.code.length; i++) {\n    if (i == this.length) {\n      result += '&lt;span class=\"swallowedCode\"&gt;';\n    }\n    if (i == this.ip) {\n      if (this.wait &gt; 0) {\n        result += '&lt;span class=\"nextActiveToken\"&gt;';\n      } else {\n        result += '&lt;span class=\"activeToken\"&gt;';\n      }\n      result += escapeEntities(this.code.charAt(i)) + '&lt;/span&gt;';\n    } else {\n      result += escapeEntities(this.code.charAt(i));\n    }\n  }\n  if (this.length &lt; this.code.length) {\n    result += '&lt;/span&gt;';\n  }\n  return result;\n}\n\n// Define Program class\nfunction Program(source, speed, io) {\n  this.sharedStack = new Stack();\n  this.snakes = source.split(/\\r?\\n/).map(function(snakeCode) {\n    var snake = new Snake(snakeCode);\n    snake.program = this;\n    snake.sharedStack = this.sharedStack;\n    return snake;\n  }.bind(this));\n  this.snakesLiving = this.snakes.length;\n  this.io = io;\n  this.speed = speed || 10;\n  this.halting = false;\n}\nProgram.prototype.run = function() {\n  this.step();\n  if (this.snakesLiving) {\n    this.timeout = window.setTimeout(this.run.bind(this), 1000 / this.speed);\n  }\n}\nProgram.prototype.step = function() {\n   for (var s = 0; s &lt; this.snakes.length; s++) {\n    var output = this.snakes[s].step();\n    if (output) {\n      this.io.print(output);\n    }\n  }\n  this.io.displaySource(this.snakes.map(function (snake) {\n      return snake.getHighlightedCode();\n    }).join(\"&lt;br&gt;\"));\n }\nProgram.prototype.halt = function() {\n  window.clearTimeout(this.timeout);\n}\n\nvar ioFunctions = {\n  print: function (item) {\n    var stdout = document.getElementById('stdout');\n    stdout.value += \"\" + item;\n  },\n  getChar: function () {\n    if (inputData) {\n      var inputChar = inputData[0];\n      inputData = inputData.slice(1);\n      result = inputChar.charCodeAt(0);\n    } else {\n      result = -1;\n    }\n    var stdinDisplay = document.getElementById('stdin-display');\n    stdinDisplay.innerHTML = escapeEntities(inputData);\n    return result;\n  },\n  getNumber: function () {\n    while (inputData &amp;&amp; (inputData[0] &lt; \"0\" || \"9\" &lt; inputData[0])) {\n      inputData = inputData.slice(1);\n    }\n    if (inputData) {\n      var inputNumber = inputData.match(/\\d+/)[0];\n      inputData = inputData.slice(inputNumber.length);\n      result = +inputNumber;\n    } else {\n      result = -1;\n    }\n    var stdinDisplay = document.getElementById('stdin-display');\n    stdinDisplay.innerHTML = escapeEntities(inputData);\n    return result;\n  },\n  displaySource: function (formattedCode) {\n    var sourceDisplay = document.getElementById('source-display');\n    sourceDisplay.innerHTML = formattedCode;\n  }\n};\nvar program = null;\nvar inputData = null;\nfunction showEditor() {\n  var source = document.getElementById('source'),\n    sourceDisplayWrapper = document.getElementById('source-display-wrapper'),\n    stdin = document.getElementById('stdin'),\n    stdinDisplayWrapper = document.getElementById('stdin-display-wrapper');\n  \n  source.style.display = \"block\";\n  stdin.style.display = \"block\";\n  sourceDisplayWrapper.style.display = \"none\";\n  stdinDisplayWrapper.style.display = \"none\";\n  \n  source.focus();\n}\nfunction hideEditor() {\n  var source = document.getElementById('source'),\n    sourceDisplay = document.getElementById('source-display'),\n    sourceDisplayWrapper = document.getElementById('source-display-wrapper'),\n    stdin = document.getElementById('stdin'),\n    stdinDisplay = document.getElementById('stdin-display'),\n    stdinDisplayWrapper = document.getElementById('stdin-display-wrapper');\n  \n  source.style.display = \"none\";\n  stdin.style.display = \"none\";\n  sourceDisplayWrapper.style.display = \"block\";\n  stdinDisplayWrapper.style.display = \"block\";\n  \n  var sourceHeight = getComputedStyle(source).height,\n    stdinHeight = getComputedStyle(stdin).height;\n  sourceDisplayWrapper.style.minHeight = sourceHeight;\n  sourceDisplayWrapper.style.maxHeight = sourceHeight;\n  stdinDisplayWrapper.style.minHeight = stdinHeight;\n  stdinDisplayWrapper.style.maxHeight = stdinHeight;\n  sourceDisplay.textContent = source.value;\n  stdinDisplay.textContent = stdin.value;\n}\nfunction escapeEntities(input) {\n  return input.replace(/&amp;/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;');\n}\nfunction resetProgram() {\n  var stdout = document.getElementById('stdout');\n  stdout.value = null;\n  if (program !== null) {\n    program.halt();\n  }\n  program = null;\n  inputData = null;\n  showEditor();\n}\nfunction initProgram() {\n  var source = document.getElementById('source'),\n    stepsPerSecond = document.getElementById('steps-per-second'),\n    stdin = document.getElementById('stdin');\n  program = new Program(source.value, +stepsPerSecond.innerHTML, ioFunctions);\n  hideEditor();\n  inputData = stdin.value;\n}\nfunction runBtnClick() {\n  if (program === null || program.snakesLiving == 0) {\n    resetProgram();\n    initProgram();\n  } else {\n    program.halt();\n    var stepsPerSecond = document.getElementById('steps-per-second');\n    program.speed = +stepsPerSecond.innerHTML;\n  }\n  program.run();\n}\nfunction stepBtnClick() {\n  if (program === null) {\n    initProgram();\n  } else {\n    program.halt();\n  }\n  program.step();\n}\nfunction sourceDisplayClick() {\n  resetProgram();\n}</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>.container {\n    width: 100%;\n}\n.so-box {\n    font-family:'Helvetica Neue', Arial, sans-serif;\n    font-weight: bold;\n    color: #fff;\n    text-align: center;\n    padding: .3em .7em;\n    font-size: 1em;\n    line-height: 1.1;\n    border: 1px solid #c47b07;\n    -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, 0.3), 0 2px 0 rgba(255, 255, 255, 0.15) inset;\n    text-shadow: 0 0 2px rgba(0, 0, 0, 0.5);\n    background: #f88912;\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.3), 0 2px 0 rgba(255, 255, 255, 0.15) inset;\n}\n.control {\n    display: inline-block;\n    border-radius: 6px;\n    float: left;\n    margin-right: 25px;\n    cursor: pointer;\n}\n.option {\n    padding: 10px 20px;\n    margin-right: 25px;\n    float: left;\n}\nh1 {\n    text-align: center;\n    font-family: Georgia, 'Times New Roman', serif;\n}\na {\n    text-decoration: none;\n}\ninput, textarea {\n    box-sizing: border-box;\n}\ntextarea {\n    display: block;\n    white-space: pre;\n    overflow: auto;\n    height: 100px;\n    width: 100%;\n    max-width: 100%;\n    min-height: 25px;\n}\nspan[contenteditable] {\n    padding: 2px 6px;\n    background: #cc7801;\n    color: #fff;\n}\n#stdout-container, #stdin-container {\n    height: auto;\n    padding: 6px 0;\n}\n#reset {\n    float: right;\n}\n#source-display-wrapper , #stdin-display-wrapper{\n    display: none;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    border: 1px solid black;\n    box-sizing: border-box;\n}\n#source-display , #stdin-display{\n    font-family: monospace;\n    white-space: pre;\n    padding: 2px;\n}\n.activeToken {\n    background: #f93;\n}\n.nextActiveToken {\n    background: #bbb;\n}\n.swallowedCode{\n    color: #999;\n}\n.clearfix:after {\n    content:\".\";\n    display: block;\n    height: 0;\n    clear: both;\n    visibility: hidden;\n}\n.clearfix {\n    display: inline-block;\n}\n* html .clearfix {\n    height: 1%;\n}\n.clearfix {\n    display: block;\n}</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!--\nDesigned and written 2015 by D. Loscutoff\nMuch of the HTML and CSS was taken from this Befunge interpreter by Ingo Bürk: http://codegolf.stackexchange.com/a/40331/16766\n--&gt;\n&lt;div class=\"container\"&gt;\n&lt;textarea id=\"source\" placeholder=\"Enter your program here\" wrap=\"off\"&gt;.!+.@.nao+&lt;/textarea&gt;\n&lt;div id=\"source-display-wrapper\" onclick=\"sourceDisplayClick()\"&gt;&lt;div id=\"source-display\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=\"stdin-container\" class=\"container\"&gt;\n&lt;textarea id=\"stdin\" placeholder=\"Input\" wrap=\"off\"&gt;&lt;/textarea&gt;\n&lt;div id=\"stdin-display-wrapper\" onclick=\"stdinDisplayClick()\"&gt;&lt;div id=\"stdin-display\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=\"controls-container\" class=\"container clearfix\"&gt;&lt;input type=\"button\" id=\"run\" class=\"control so-box\" value=\"Run\" onclick=\"runBtnClick()\" /&gt;&lt;input type=\"button\" id=\"pause\" class=\"control so-box\" value=\"Pause\" onclick=\"program.halt()\" /&gt;&lt;input type=\"button\" id=\"step\" class=\"control so-box\" value=\"Step\" onclick=\"stepBtnClick()\" /&gt;&lt;input type=\"button\" id=\"reset\" class=\"control so-box\" value=\"Reset\" onclick=\"resetProgram()\" /&gt;&lt;/div&gt;&lt;div id=\"stdout-container\" class=\"container\"&gt;&lt;textarea id=\"stdout\" placeholder=\"Output\" wrap=\"off\" readonly&gt;&lt;/textarea&gt;&lt;/div&gt;&lt;div id=\"options-container\" class=\"container\"&gt;&lt;div class=\"option so-box\"&gt;Steps per Second:\n&lt;span id=\"steps-per-second\" contenteditable&gt;20&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":186724,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/186724#186724","body":"<h1><a href=\"https://github.com/catseye/FBBI\" rel=\"nofollow noreferrer\">Befunge-98 (FBBI)</a>, 50 bytes</h1>\n\n<pre><code>{v\n &gt;~:a`!#v_\n--2*86:$&lt;:u-10_v#\n02-u0}&gt;:#,_@   &gt;00\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0pNK81LT9W1tPj/v7qMS8GuzioxQVG5LJ5LV9dIy8LMSsXGqlTX0CC@TJnLwEi31KDWzkpZJ95BQUHBzsDg//8QAwNfhzxj78SAKL0Mg3Ln6NgMLgA\" rel=\"nofollow noreferrer\" title=\"Befunge-98 (FBBI) – Try It Online\">Try it online!</a></p>\n\n<p>Puts string onto stack, then iterates through it in reverse, putting each new character onto new stack.  Once a <code>.</code> is encountered, discard original stack and output new stack in <code>0gnirts</code> format.</p>\n"},{"answer_id":186320,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/186320#186320","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Perl 6</a>, 11 bytes</h1>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{m/\\.\\w+$/}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1uplmb7vzpXP0YvplxbRb/2vzVXWn6Rgk1Gpl5JRYlCQWJmXoleakWqQk5@jl6ygl5SYnFGUbKdQjUXZ3FipYKSSryCLpCXpqASX6tkzVX7HwA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":186316,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/186316#186316","body":"<h1><a href=\"https://github.com/MilkyWay90/Turing-Machine-But-Way-Worse\" rel=\"nofollow noreferrer\">Turing Machine But Way Worse</a>, <s>1315</s> 1287 bytes</h1>\n\n<pre><code>0 0 0 1 1 0 0\n1 0 1 1 8 0 0\n0 1 0 1 2 0 0\n1 1 1 1 9 0 0\n0 2 0 1 3 0 0\n1 2 1 1 a 0 0\n0 3 0 1 4 0 0\n1 3 1 1 b 0 0\n0 4 0 1 5 0 0\n1 4 1 1 c 0 0\n0 5 0 1 6 0 0\n1 5 1 1 d 0 0\n0 6 0 1 7 0 0\n1 6 1 1 e 0 0\n0 7 0 1 f 0 0\n1 7 1 1 0 0 0\n0 8 0 1 9 0 0\n1 8 1 1 9 0 0\n0 9 0 1 a 0 0\n1 9 1 1 a 0 0\n0 a 0 1 b 0 0\n1 a 1 1 b 0 0\n0 b 0 1 c 0 0\n1 b 1 1 c 0 0\n0 c 0 1 d 0 0\n1 c 1 1 d 0 0\n0 d 0 1 e 0 0\n1 d 1 1 e 0 0\n0 e 0 1 0 0 0\n1 e 1 1 0 0 0\n0 f 0 0 g 0 0\n1 f 1 0 g 0 0\n0 g 0 0 h 0 0\n1 g 1 0 p 0 0\n0 h 0 0 q 0 0\n1 h 1 0 i 0 0\n0 i 0 0 r 0 0\n1 i 1 0 j 0 0\n0 j 0 0 s 0 0\n1 j 1 0 k 0 0\n0 k 0 0 l 0 0\n1 k 1 0 t 0 0\n0 l 0 0 u 0 0\n1 l 1 0 m 0 0\n0 m 0 0 n 0 0\n1 m 1 0 v 0 0\n0 n 0 0 o 0 0\n1 n 1 0 g 0 0\n0 p 0 0 q 0 0\n1 p 1 0 q 0 0\n0 q 0 0 r 0 0\n1 q 1 0 r 0 0\n0 r 0 0 s 0 0\n1 r 1 0 s 0 0\n0 s 0 0 t 0 0\n1 s 1 0 t 0 0\n0 t 0 0 u 0 0\n1 t 1 0 u 0 0\n0 u 0 0 f 0 0\n1 u 1 0 f 0 0\n0 o 0 1 w 0 0\n1 o 1 1 w 0 0\n0 w 0 1 x 0 0\n1 w 1 1 E 0 0\n0 x 0 1 y 0 0\n1 x 1 1 F 0 0\n0 y 0 1 z 0 0\n1 y 1 1 G 0 0\n0 z 0 1 A 0 0\n1 z 1 1 H 0 0\n0 A 0 1 B 0 0\n1 A 1 1 I 0 0\n0 B 0 1 C 0 0\n1 B 1 1 J 0 0\n0 C 0 1 D 0 0\n1 C 1 1 K 0 0\n0 D 0 1 D 0 1\n1 D 1 1 w 1 0\n0 E 0 1 F 0 0\n1 E 1 1 F 0 0\n0 F 0 1 G 0 0\n1 F 1 1 G 0 0\n0 G 0 1 H 0 0\n1 G 1 1 H 0 0\n0 H 0 1 I 0 0\n1 H 1 1 I 0 0\n0 I 0 1 J 0 0\n1 I 1 1 J 0 0\n0 J 0 1 K 0 0\n1 J 1 1 K 0 0\n0 K 0 1 w 1 0\n1 K 1 1 w 1 0\n</code></pre>\n\n<p><a href=\"https://tio.run/##VdJZjoJAFEbhd1dRKyDi7KMjqKsARcFZxEbdvK3Hv21vKuFa9cWEk6LYxWX5eFTda/nP9ZwVX7877Kruva/J3qsrq2F1WQ2LZHWsIatjsayBNWUNbC5rYi1ZE1vIWlhb1sISWRtbytp/PVgH68o6pqGLRbKuaYiwWBaZhhiby2LTMMcWsrlpWGCJbGEaElf9vPXr9LuBMreSLZGVjOlS2Qo7yjh1J1mKZTKmy2UZtpYx3Vm2xjYyptvKNlgh49RdZFtsJ2O6vWyH/cg4dQfZ3vQdTcMRO8lOpuGE5bLcNOTYWcbUW/vP3XdDYRoK7CJjfr6zC7aUHbi/Unbg/kpZiV1lJTaSXbGb7IqNZTfsLrthgeyO9WR3LJT1sL6sh01kfWwg62NT2QAbygbYTDb8mF95zXefj42wsf43Mg1jLJCNTUOAhbLANITYRBaahgk2lU1MwxSbyaamYaY78rHZf8PjUaZR4XnZ2fOK9PVcZtvkFw\" rel=\"nofollow noreferrer\" title=\"Turing Machine But Way Worse – Try It Online\">Try it online!</a></p>\n\n<p>Wow, this is big.</p>\n"},{"answer_id":186318,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/186318#186318","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, 76 bytes</h1>\n\n<pre><code>{((((([()()()]){}){}){}()){}{}&lt;&gt;)&lt;&gt;}&lt;&gt;{({}(((()()()()()){}()){}()){}&lt;&gt;)&lt;&gt;}&lt;&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/v1oDBKI1NEEwVrO6FoI0NIFEda2NnaaNHZCs1gAKAYEmDMKUgAmYqv//S1KLS/TSMquq9KoyC/7rJgMA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>{          loop over stack\n  (                            push\n    (((([()()()]){}){}){}()){} -46\n  {}                           plus the top of the stack\n  &lt;&gt;)                          to the other side\n&lt;&gt;}        retuen for more\n\n&lt;&gt;      on the other side...\n\n{       loop until 0\n  (                             push\n     {}                         the top of the stack\n     (((()()()()()){}()){}()){} +46\n  &lt;&gt;)                           to the first side\n&lt;&gt;}       return for more\n\n&lt;&gt; print the first side\n</code></pre>\n\n<p>6 bytes less than the <a href=\"https://codegolf.stackexchange.com/a/120943/31203\">other Brain-Flack solution</a>.</p>\n"},{"answer_id":186185,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/186185#186185","body":"<p>If halting is not necessary:</p>\n\n<h1><a href=\"https://github.com/aheui/pyaheui\" rel=\"nofollow noreferrer\">Aheui (esotope)</a>, 174 bytes</h1>\n\n<pre><code>삭붵뱷뛰빠쇡붷뼤쎄투＠싼사쑫\nＢｙＬｅ쪼ｇｅｎ＠처쇠모코커\nＤＵＳＴ오멓＠＠＠＠푸셴쒼섣\n＠＠＠＠쇡뽀＠＠＠삳멓＠샨＠맣\n</code></pre>\n\n<p><a href=\"https://tio.run/##TY3NCoJwEMTvPoWvJmkmZIrRpVOYYRAEfRyKLpZCZgaV2gft/4l2Yx/BjKCCYdhhfssoDa1jlCW5B7wUeLri6oj3gPw1Xq4IEY295zBlCGgE5KY02UsMGxZLhpTFgBJg4VcHi/EbOi/IDzCJSczpEVVoxFAwZAw5LSLczSroq@fkRoOcpkBeKP0X73XR@0U3@3xSP64ct2FZ2o6lO4ppGi1dtjvdblNry0pLlWuWqsm61ay/AA\" rel=\"nofollow noreferrer\" title=\"Aheui (esotope) – Try It Online\">Try it online!</a>\npress 'start' butten in TIO again to halt manually.</p>\n\n<p>If halting is necessary:</p>\n\n<h1><a href=\"https://github.com/aheui/pyaheui\" rel=\"nofollow noreferrer\">Aheui (esotope)</a>, 225 bytes</h1>\n\n<pre><code>살뷕볙눠쀄삭붵뱷뛰빠쇡붷빠쎄투＠싼사쑫\nＢｙ＠＠＠＠＠야빠속＠＠＠수처쇠모오어\nＬｅｇｅｎ＠＠먷초더헤셜썰뻐푸쉰썬＠셛\nＤＵＳＴ＠＠솩뽀사뫼섁쀠우삳멓산멓\n</code></pre>\n\n<p><a href=\"https://tio.run/##TU5NTsJAGN17ih7JKzRSKglQg2HDqkxaWmNKJIIWcTGYLkBqMtpCJU5P9L1mjlAHJMHky8uXl/dnXlv9Vl2D5VTMKJtTyOF6YB@029JnQQtBe45gSbvi8Iy9KkyV5LiXYCkmmwsl31Q519T/w0we1KPozIQxvmIEnN5XiBM85dqZqtJXZXDE8Z@OVgXykKJp9ZzAf0Uk6OehmnzjTiA6NvsL7UyU3CqZKZmf4kdrKl09iTYS3hAux4sAy2j9CCY01vVlz7F7ZqfT6trGTX8waFu3htltGFdOwzJsp938BQ\" rel=\"nofollow noreferrer\" title=\"Aheui (esotope) – Try It Online\">Try it online!</a></p>\n\n<p><s>In this version, following space after input is necessary.</s> fixed. Now it is OK to not finish with space.</p>\n"},{"answer_id":186209,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/186209#186209","body":"<h1><a href=\"https://github.com/TryItOnline/brainfuck\" rel=\"nofollow noreferrer\">brainfuck</a>, <s>71 67 49</s> 47 bytes</h1>\n\n<pre><code>+[-[+&gt;&gt;]&gt;[&lt;&lt;.[-]&lt;[&lt;]&gt;&gt;[.&gt;]&lt;[&lt;]&gt;[.[&gt;]].&gt;&gt;&gt;]&lt;+&lt;,]\n</code></pre>\n\n<p><a href=\"https://tio.run/##JYpBCoAwDATpe2rzgrCv8LbkUEVpFTzY9v2xIAzMHGZ7c33Osd/ukYkRMFBVmEypBlDwF4UwE8xDoy7mvpbawuQarYcc@jH1AQ\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n\n<p>This code uses a few cheats, so i don't know if it is competing. The separator in the input is a 0x01. The input needs an extra trailing separator, otherwise the last word won't be printed.</p>\n\n<p><strong>code:</strong></p>\n\n<pre><code>+[                  enter the loop / the first round only the last three commands of the main loop are interesting\n  -[                if input is not 0x01\n    +               restore character\n    &gt;&gt;              go to exit if\n  ]\n  &gt;[                else\n    &lt;&lt;.[-]          print and delete last character\n    &lt;[&lt;]&gt;&gt;[.&gt;]      print all characters starting at the second\n    &lt;[&lt;]&gt;[.[&gt;]]     print first character and go to end if word is longer than one character\n    .               print null (space)\n    &gt;&gt;&gt;             leave a zero cell and go to exit else\n  ]\n  &lt;+                set new else marker\n  &lt;                 go to new input location\n  ,                 input next character\n]\n</code></pre>\n"},{"answer_id":185723,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185723#185723","body":"<h1><a href=\"https://github.com/Soaku/Pepe\" rel=\"noreferrer\">Pepe</a>, <s>107</s> 105 bytes</h1>\n<pre><code>REEeREeeEeeeeerEEreREEEeREEEEEEeREEEErEEREEEEEEEreererEEEeererEEEerEEeERrEEEeerEEeerereeerEEEEeEEEReEeree\n</code></pre>\n<p><a href=\"https://soaku.github.io/Pepe/#T!8hE$!pE5!rEE7*$-c$!o!m--c!k$GRyL*\" rel=\"noreferrer\">Try it online!</a></p>\n<p><strong>Explanation:</strong></p>\n<p>Notation on comments: <code>command-explanation -&gt; (stack) // explanation</code></p>\n<pre class=\"lang-c prettyprint-override\"><code>REEe # input -&gt; (R)\nREeeEeeeee # push space to last -&gt; (R) // this prevents an infinite loop\n\nrEE # create loop labeled 0 and automatically push 0 \n  re # pop 0 -&gt; (r)\n  REEEe # go to last item -&gt; (R)\n  REEEEEEe # ...then copy the char to other stack\n  REEEE # go to first item -&gt; (R)\n\n  rEE # create loop labeled 32 // detect space\n    REEEEEEE # move item to other stack (R)\n  ree # do this while char != 32\n\n  re # pop 32 -&gt; (r)\n  rEEEee # push item (dup to end) -&gt; (r)\n  re # ...then pop -&gt; (r)\n  rEEEe rEEeE # go to 2nd to last item -&gt; (r)\n  RrEEEee # push the item (R flag: dup to first) -&gt; (r)\n  rEEee # go to next -&gt; (r) //\n  re # ...then pop -&gt; (r)\n  reee rEEEEeEEE # out all as char then clear -&gt; (r)\n  ReEe # out 32 as char -&gt; (R)\nree # do this while stack != 0\n</code></pre>\n"},{"answer_id":186203,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/186203#186203","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 1.0</a>, 75 bytes</h1>\n\n\n\n<pre class=\"lang-julia prettyprint-override\"><code>x-&gt;join([(n=length(s);n&lt;2 ? s : s[n]*s[2:n-1]*s[1]) for s in split(x)],\" \")\n</code></pre>\n\n<p><a href=\"https://tio.run/##VY7LDoIwFET3fsWEVWtkAUvf/0FYVLiFmuaW9FbBr8e6UneTMzmZuT@8M9Wy2tONBsfrUp7vwbFqFJ888ZBGJfrAxxoXCPaQhtutNPWey@oTqlbDhpg7x5DJu6QW3e4KFHol7jdXGcMMqwqZzYQ0EqyLkmC4hzc5eEqJIoIFPSm@MIfYF/rrjeR9@FD/hxNltzNC8ksNbujQI69gyA/e\" rel=\"nofollow noreferrer\" title=\"Julia 1.0 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185885,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185885#185885","body":"<h1>Ruby, 53 bytes</h1>\n<pre><code>gets.split(&quot; &quot;).map{|z|print z[-1]+z[1..-2]+z[0],&quot; &quot;}\n</code></pre>\n<p>I tried it without regex. The output prints each word on a new line. If that's against the rules, let me know and I'll fix it.</p>\n<p>Ungolfed:</p>\n<pre><code>gets.split(&quot; &quot;).map {|z|\n    print z[-1] + z[1..-2] + z[0], &quot; &quot;\n}\n</code></pre>\n"},{"answer_id":185686,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185686#185686","body":"<h1>TeX, 216 bytes (4 lines, 54 characters each)</h1>\n\n<p><strong><em>Because it's not about the byte count, it's about the quality of the typeset output :-)</em></strong></p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>{\\let~\\catcode~`A13 \\defA#1{~`#113\\gdef}AGG#1{~`#1 13%\n\\global\\let}GFF\\elseGHH\\fiAQQ{Q}AII{\\ifxQ}AEE#1#2#3|{%\nI#3#2#1FE{#1#2}#3|H}ADD#1#2|{I#1FE{}#1#2|H}ACC#1#2|{D%\n#2Q|#1 }ABBH#1 {HI#1FC#1|BH}\\gdef\\S#1{\\iftrueBH#1 Q }}\n</code></pre>\n\n<p><a href=\"https://www.overleaf.com/read/dkypfbgxmhdw\" rel=\"noreferrer\">Try it Online! (Overleaf; not sure how it works)</a></p>\n\n<p>Full test file:</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>{\\let~\\catcode~`A13 \\defA#1{~`#113\\gdef}AGG#1{~`#1 13%\n\\global\\let}GFF\\elseGHH\\fiAQQ{Q}AII{\\ifxQ}AEE#1#2#3|{%\nI#3#2#1FE{#1#2}#3|H}ADD#1#2|{I#1FE{}#1#2|H}ACC#1#2|{D%\n#2Q|#1 }ABBH#1 {HI#1FC#1|BH}\\gdef\\S#1{\\iftrueBH#1 Q }}\n\n\\S{swap the a first and last letters of each word}\n\npwas eht a tirsf dna tasl setterl fo hace dorw\n\n\\S{SWAP THE A FIRST AND LAST LETTERS OF EACH WORD}\n\n\\bye\n</code></pre>\n\n<p>Output:</p>\n\n<blockquote>\n  <p><a href=\"https://i.stack.imgur.com/846L5.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/846L5.png\" alt=\"enter image description here\"></a></p>\n</blockquote>\n\n<hr>\n\n<p>For LaTeX you just need the boilerplate:</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>\\documentclass{article}\n\\begin{document}\n\n{\\let~\\catcode~`A13 \\defA#1{~`#113\\gdef}AGG#1{~`#1 13%\n\\global\\let}GFF\\elseGHH\\fiAQQ{Q}AII{\\ifxQ}AEE#1#2#3|{%\nI#3#2#1FE{#1#2}#3|H}ADD#1#2|{I#1FE{}#1#2|H}ACC#1#2|{D%\n#2Q|#1 }ABBH#1 {HI#1FC#1|BH}\\gdef\\S#1{\\iftrueBH#1 Q }}\n\n\\S{swap the a first and last letters of each word}\n\npwas eht a tirsf dna tasl setterl fo hace dorw\n\n\\S{SWAP THE A FIRST AND LAST LETTERS OF EACH WORD}\n\n\\end{document}\n</code></pre>\n\n<hr>\n\n<h2>Explanation</h2>\n\n<p>TeX is a strange beast. Reading normal code and understanding it is a feat by itself. Understanding obfuscated TeX code goes a few steps further. I'll try to make this understandable for people who don't know TeX as well, so before we start here's a few concepts about TeX to make things easier to follow:</p>\n\n<h3>For (not so) absolute TeX beginners</h3>\n\n<ul>\n<li><p>First, and most important item in this list: the code does <em>not</em> have to be in rectangle shape, <a href=\"https://tex.stackexchange.com/q/450795/134574\">even though</a> <a href=\"https://tex.stackexchange.com/a/156937/134574\">pop culture</a> <a href=\"https://tex.stackexchange.com/a/474872/134574\">might lead you</a> <a href=\"https://tex.stackexchange.com/a/406914/134574\">to think so</a>.</p></li>\n<li><p>TeX is a macro expansion language. You can, as an example, define <code>\\def\\sayhello#1{Hello, #1!}</code> and then write <code>\\sayhello{Code Golfists}</code> to get TeX to print <code>Hello, Code Golfists!</code>. This is called an “undelimited macro”, and to feed it the first (and only, in this case) parameter you enclose it in braces. TeX removes those braces when the macro grabs the argument. You can use up to 9 parameters: <code>\\def\\say#1#2{#1, #2!}</code> then <code>\\say{Good news}{everyone}</code>.</p></li>\n<li><p>The counterpart of undelimited macros are, unsurprisingly, delimited ones :) You could make the previous definition a tad more <em>semantical</em>: <code>\\def\\say #1 to #2.{#1, #2!}</code>. In this case the parameters are followed by so-called <em>parameter text</em>. Such parameter text delimits the argument of the macro (<code>#1</code> is delimited by <code>␣to␣</code>, spaces included, and <code>#2</code> is delimited by <code>.</code>). After that definition you can write <code>\\say Good news to everyone.</code>, which will expand to <code>Good news, everyone!</code>. Nice, isn't it? :) However a delimited argument is (quoting the <em>TeXbook</em>) “the shortest (possibly empty) sequence of tokens with properly nested <code>{...}</code> groups that is followed in the input by this particular list of non-parameter tokens”. This means that the expansion of <code>\\say Let's go to the mall to Martin</code> will produce a weird sentence. In this case you'd need to “hide” the first <code>␣to␣</code> with <code>{...}</code>: <code>\\say {Let's go to the mall} to Martin</code>.</p></li>\n<li><p>So far so good. Now things start to get weird. When TeX reads a character (which is defined by a “character code”), it assigns that character a “category code” (catcode, for friends :) which defines what that character will mean. This combination of character and category code makes a token (more on that <a href=\"https://tex.stackexchange.com/a/104050/134574\">here</a>, for example). The ones which are of interest for us here are basically:</p>\n\n<ul>\n<li><p><strong>catcode 11</strong>, which define tokens which can make up a control sequence (a posh name for a macro). By default all letters [a-zA-Z] are catcode 11, so I can write <code>\\hello</code>, which is one single control sequence, while <code>\\he11o</code> is the control sequence <code>\\he</code> followed by two characters <code>1</code>, followed by the letter <code>o</code>, because <code>1</code> is not catcode 11. If I did <code>\\catcode`1=11</code>, from that point on <code>\\he11o</code> would be one control sequence. One important thing is that catcodes are set when TeX first sees the character at hand, and such catcode is <em>frozen</em>... FOREVER! (terms and conditions may apply)</p></li>\n<li><p><strong>catcode 12</strong>, which are most of other characters, such as <code>0\"!@*(?,.-+/</code> and so forth. They are the <em>least</em> special type of catcode as they serve only for writing stuff on the paper. But hey, who uses TeX for writing?!? (again, terms and conditions may apply)</p></li>\n<li><p><strong>catcode 13</strong>, which is hell :) Really. Stop reading and go do something out of your life. You don't want to know what catcode 13 is. Ever heard of Friday, 13th? Guess where it got its name from! Continue at your own risk! A catcode 13 character, also called an “active” character, is not just a character anymore, it is a macro itself! You can define it to have parameters and expand to something like we saw above. After you do <code>\\catcode`e=13</code> you <em>think</em> you can do <code>\\def e{I am the letter e!}</code>, BUT. YOU. CANNOT! <code>e</code> is not a letter anymore, so <code>\\def</code> is not the <code>\\def</code> you know, it is <code>\\d e f</code>! Oh, choose another letter you say? Okay! <code>\\catcode`R=13 \\def R{I am an ARRR!}</code>. Very well, Jimmy, try it! I dare you do that and write an <code>R</code> in your code! That's what a catcode 13 is. I AM CALM! Let's move on.</p></li>\n</ul></li>\n<li><p>Okay, now to grouping. This is fairly straightforward. Whatever assignments (<code>\\def</code> is an assignment operation, <code>\\let</code> (we'll get into it) is another) done in a group are restored to what they were before that group started unless that assignment is global. There are several ways to start groups, one of them is with catcode 1 and 2 characters (oh, catcodes again). By default <code>{</code> is catcode 1, or begin-group, and <code>}</code> is catcode 2, or end-group. An example: <code>\\def\\a{1} \\a{\\def\\a{2} \\a} \\a</code> This prints <code>1 2 1</code>. Outside the group <code>\\a</code> was <code>1</code>, then inside it was redefined to <code>2</code>, and when the group ended, it was restored to <code>1</code>.</p></li>\n<li><p>The <code>\\let</code> operation is another assignment operation like <code>\\def</code>, but rather different. With <code>\\def</code> you <em>define</em> macros which will expand to stuff, with <code>\\let</code> you create copies of already existing things. After <code>\\let\\blub=\\def</code> (the <code>=</code> is optional) you can change the start of the <code>e</code> example from the catcode 13 item above to <code>\\blub e{...</code> and have fun with that one. Or better, instead of breaking stuff you can <em>fix</em> (would you look at that!) the <code>R</code> example: <code>\\let\\newr=R \\catcode`R=13 \\def R{I am an A\\newr\\newr\\newr!}</code>. Quick question: could you rename to <code>\\newR</code>?</p></li>\n<li><p>Finally, the so-called “spurious spaces”. This is kind of a taboo topic because there are people who claim that reputation earned in the <a href=\"https://tex.stackexchange.com\">TeX - LaTeX Stack Exchange</a> by answering “spurious spaces” questions should not be considered, while others wholeheartedly disagree. Whom do you agree with? Place your bets! Meanwhile: TeX understands a line break as a space. Try to write several words with a line break (not an <em>empty line</em>) between them. Now add a <code>%</code> at the end of these lines. It's like you were “commenting out” these end-of-line spaces. That's it :)</p></li>\n</ul>\n\n<h3>(Sort of) ungolfing the code</h3>\n\n<p>Let's make that rectangle into something (arguably) easier to follow:</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>{\n\\let~\\catcode\n~`A13\n\\defA#1{~`#113\\gdef}\nAGG#1{~`#113\\global\\let}\nGFF\\else\nGHH\\fi\nAQQ{Q}\nAII{\\ifxQ}\nAEE#1#2#3|{I#3#2#1FE{#1#2}#3|H}\nADD#1#2#3|{I#2FE{#1}#2#3|H}\nACC#1#2|{D{}#2Q|#1 }\nABBH#1 {HI#1FC#1|BH}\n\\gdef\\S#1{\\iftrueBH#1 Q }\n}\n</code></pre>\n\n<h3>Explanation of each step</h3>\n\n<p>each line contains one single instruction. Let's go one by one, dissecting them:</p>\n\n<p><strong><code>{</code></strong><br>\nFirst we start a group to keep some changes (namely catcode changes) local so that they don't mess up the input text.</p>\n\n<p><strong><code>\\let~\\catcode</code></strong><br>\nBasically <em>all</em> TeX obfuscation codes start with this instruction. By default, both in plain TeX and LaTeX, the <code>~</code> character is the one active character which can be made into a macro for further use. And the best tool for weirdifying TeX code are catcode changes, so this is generally the best choice. Now instead of <code>\\catcode`A=13</code> we can write <code>~`A13</code> (the <code>=</code> is optional):</p>\n\n<p><strong><code>~`A13</code></strong><br>\nNow the letter <code>A</code> is an active character, and we can define it to do something:</p>\n\n<p><strong><code>\\defA#1{~`#113\\gdef}</code></strong><br>\n<code>A</code> is now a macro that takes one argument (which should be another character). First the catcode of the argument is changed to 13 to make it active: <code>~`#113</code> (replace the <code>~</code> by <code>\\catcode</code> and add an <code>=</code> and you have: <code>\\catcode`#1=13</code>). Finally it leaves a <code>\\gdef</code> (global <code>\\def</code>) in the input stream. In short, <code>A</code> makes another character active and start its definition. Let's try it:</p>\n\n<p><strong><code>AGG#1{~`#113\\global\\let}</code></strong><br>\n<code>AG</code> first “activates” <code>G</code> and does <code>\\gdef</code>, which followed by the next <code>G</code> starts the definition. The definition of <code>G</code> is very similar to that of <code>A</code>, except that instead of <code>\\gdef</code> it does a <code>\\global\\let</code> (there isn't a <code>\\glet</code> like the <code>\\gdef</code>). In short, <code>G</code> activates a character and makes it be something else. Let's make shortcuts for two commands we'll use later:</p>\n\n<p><strong><code>GFF\\else</code></strong><br>\n<strong><code>GHH\\fi</code></strong><br>\nNow instead of <code>\\else</code> and <code>\\fi</code> we can simply use <code>F</code> and <code>H</code>. Much shorter :)</p>\n\n<p><strong><code>AQQ{Q}</code></strong><br>\nNow we use <code>A</code> again to define another macro, <code>Q</code>. The above statement basically does (in a less obfuscated language) <code>\\def\\Q{\\Q}</code>. This isn't a terribly interesting definition, but it has an interesting feature. Unless you do want to break some code, the only macro that expands to <code>Q</code> is <code>Q</code> itself, so it acts like a unique marker (it's called a <em>quark</em>). You can use the <code>\\ifx</code> conditional to test if the argument of a macro is such quark with <code>\\ifx Q#1</code>:</p>\n\n<p><strong><code>AII{\\ifxQ}</code></strong><br>\nso you can be pretty sure that you found such a marker. Notice that in this definition I removed the space between <code>\\ifx</code> and <code>Q</code>. Usually this would lead to an error (note that the syntax highlight thinks that <code>\\ifxQ</code> is one thing), but since now <code>Q</code> is catcode 13 it cannot form a control sequence. Be careful, however, not to expand this quark or you'll get stuck in an infinite loop because <code>Q</code> expands to <code>Q</code> which expands to <code>Q</code> which...</p>\n\n<p>Now that the preliminaries are done, we can go to the proper algorithm to pwas eht setterl. Due to TeX's tokenization the algorithm has to be written backwards. This is because at the time you do a definition TeX will tokenize (assign catcodes) to the characters in the definition using the current settings so, for example, if I do:</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>\\def\\one{E}\n\\catcode`E=13\\def E{1}\n\\one E\n</code></pre>\n\n<p>the output is <code>E1</code>, whereas if I change the order of the definitions:</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>\\catcode`E=13\\def E{1}\n\\def\\one{E}\n\\one E\n</code></pre>\n\n<p>the output is <code>11</code>. This is because in the first example the <code>E</code> in the definition was tokenized as a letter (catcode 11) before the catcode change, so it will always be a letter <code>E</code>. In the second example, however, <code>E</code> was first made active, and only then <code>\\one</code> was defined, and now the definition contains the catcode 13 <code>E</code> which expands to <code>1</code>.</p>\n\n<p>I will, however, overlook this fact and reorder the definitions to have a logical (but not working) order. In the following paragraphs you can assume that the letters <code>B</code>, <code>C</code>, <code>D</code>, and <code>E</code> are active.</p>\n\n<p><strong><code>\\gdef\\S#1{\\iftrueBH#1 Q }</code></strong><br>\n(notice there was a small bug in the previous version, it did not contain the final space in the definition above. I only noticed it while writing this. Read on and you'll see why we need that one to properly terminate the macro.)<br>\nFirst we define the user-level macro, <code>\\S</code>. This one shouldn't be an active character to have a friendly (?) syntax, so the macro for gwappins eht setterl is <code>\\S</code>. The macro starts with an always-true conditional <code>\\iftrue</code> (it will soon be clear why), and then calls the <code>B</code> macro followed by <code>H</code> (which we defined earlier to be <code>\\fi</code>) to match the <code>\\iftrue</code>. Then we leave the argument of the macro <code>#1</code> followed by a space and by the quark <code>Q</code>. Suppose we use <code>\\S{hello world}</code>, then the <em>input stream</em> should look like this: <code>\\iftrue BHhello world Q␣</code> (I replaced the last space by a <code>␣</code> so that the rendering of the site does not eat it, like I did in the previous version of the code). <code>\\iftrue</code> is true, so it expands and we are left with <code>BHhello world Q␣</code>. TeX does <em>not</em> remove the <code>\\fi</code> (<code>H</code>) after the conditional is evaluated, instead it leaves it there until the <code>\\fi</code> is <em>actually</em> expanded. Now the <code>B</code> macro is expanded:</p>\n\n<p><strong><code>ABBH#1 {HI#1FC#1|BH}</code></strong><br>\n<code>B</code> is a <em>delimited macro</em> whose parameter text is <code>H#1␣</code>, so the argument is whatever is between <code>H</code> and a space. Continuing the example above the input stream prior to the expansion of <code>B</code> is <code>BHhello world Q␣</code>. <code>B</code> is followed by <code>H</code>, as it should (otherwise TeX would raise an error), then the next space is between <code>hello</code> and <code>world</code>, so <code>#1</code> is the word <code>hello</code>. And here we got to split the input text at the spaces. Yay :D The expansion of <code>B</code> removes everything up to the first space from the input stream and replaces by <code>HI#1FC#1|BH</code> with <code>#1</code> being <code>hello</code>: <code>HIhelloFChello|BHworld Q␣</code>. Notice that there is a new <code>BH</code> later in the input stream, to do a tail recursion of <code>B</code> and process later words. After this word is processed <code>B</code> processes the next word until the word-to-be-processed is the quark <code>Q</code>. The last space after <code>Q</code> is needed because the delimited macro <code>B</code> <em>requires</em> one at the end of the argument. With the previous version (see edit history) the code would misbehave if you used <code>\\S{hello world}abc abc</code> (the space between the <code>abc</code>s would vanish).</p>\n\n<p>OK, back to the input stream: <code>HIhelloFChello|BHworld Q␣</code>. First there's the <code>H</code> (<code>\\fi</code>) that completes the initial <code>\\iftrue</code>. Now we have this (pseudocoded):</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>I\n  hello\nF\n  Chello|B\nH\nworld Q␣\n</code></pre>\n\n<p>The <code>I...F...H</code> think is actually a <code>\\ifx Q...\\else...\\fi</code> structure. The <code>\\ifx</code> test checks if the (first token of the) word grabbed is the <code>Q</code> quark. If it is there is nothing else to do and the execution terminates, otherwise what remains is: <code>Chello|BHworld Q␣</code>. Now <code>C</code> is expanded:</p>\n\n<p><strong><code>ACC#1#2|{D#2Q|#1 }</code></strong><br>\nThe first argument of <code>C</code> is undelimited, so unless braced it will be a single token, The second argument is delimited by <code>|</code>, so after the expansion of <code>C</code> (with <code>#1=h</code> and <code>#2=ello</code>) the input stream is: <code>DelloQ|h BHworld Q␣</code>. Notice that another <code>|</code> is put there, and the <code>h</code> of <code>hello</code> is put after that. Half the swapping is done; the first letter is at the end. In TeX it is easy to grab the first token of a token list. A simple macro <code>\\def\\first#1#2|{#1}</code> gets the first letter when you use <code>\\first hello|</code>. The last one is a problem because TeX always grabs the “smallest, possibly empty” token list as argument, so we need a few work-arounds. Next item in the token list is <code>D</code>:</p>\n\n<p><strong><code>ADD#1#2|{I#1FE{}#1#2|H}</code></strong><br>\nThis <code>D</code> macro is one of the work-arounds and it's useful in the sole case where the word has a single letter. Suppose instead of <code>hello</code> we had <code>x</code>. In this case the input stream would be <code>DQ|x</code>, then <code>D</code> would expand (with <code>#1=Q</code>, and <code>#2</code> empty) to: <code>IQFE{}Q|Hx</code>. This is similar to the <code>I...F...H</code> (<code>\\ifx Q...\\else...\\fi</code>) block in <code>B</code>, which will see that the argument is the quark and will interrupt the execution leaving only <code>x</code> for typesetting. In other cases (returning to the <code>hello</code> example), <code>D</code> would expand (with <code>#1=e</code> and <code>#2=lloQ</code>) to: <code>IeFE{}elloQ|Hh BHworld Q␣</code>. Again, the <code>I...F...H</code> will check for <code>Q</code> but will fail and take the <code>\\else</code> branch: <code>E{}elloQ|Hh BHworld Q␣</code>. Now the last piece of this thing, the <code>E</code> macro would expand:</p>\n\n<p><strong><code>AEE#1#2#3|{I#3#2#1FE{#1#2}#3|H}</code></strong><br>\nThe parameter text here is quite similar to <code>C</code> and <code>D</code>; the first and second arguments are undelimited, and the last one is delimited by <code>|</code>. The input stream looks like this: <code>E{}elloQ|Hh BHworld Q␣</code>, then <code>E</code> expands (with <code>#1</code> empty, <code>#2=e</code>, and <code>#3=lloQ</code>): <code>IlloQeFE{e}lloQ|HHh BHworld Q␣</code>. Another <code>I...F...H</code> block checks for the quark (which sees <code>l</code> and returns <code>false</code>): <code>E{e}lloQ|HHh BHworld Q␣</code>. Now <code>E</code> expands again (with <code>#1=e</code> empty, <code>#2=l</code>, and <code>#3=loQ</code>): <code>IloQleFE{el}loQ|HHHh BHworld Q␣</code>. And again <code>I...F...H</code>. The macro does a few more iterations until the <code>Q</code> is finally found and the <code>true</code> branch is taken: <code>E{el}loQ|HHHh BHworld Q␣</code> -> <code>IoQlelFE{ell}oQ|HHHHh BHworld Q␣</code> -> <code>E{ell}oQ|HHHHh BHworld Q␣</code>-> <code>IQoellFE{ello}Q|HHHHHh BHworld Q␣</code>. Now the quark is found and the conditional expands to: <code>oellHHHHh BHworld Q␣</code>. Phew.</p>\n\n<p>Oh, wait, what are these? NORMAL LETTERS? Oh, boy! The letters are finally found and TeX writes down <code>oell</code>, then a bunch of <code>H</code> (<code>\\fi</code>) are found and expanded (to nothing) leaving the input stream with: <code>oellh BHworld Q␣</code>. Now the first word has the first and last letters swapped and what TeX finds next is the other <code>B</code> to repeat the whole process for the next word.</p>\n\n<p><strong><code>}</code></strong><br>\nFinally we end the group started back there so that all local assignments are undone. The local assignments are the catcode changes of the letters <code>A</code>, <code>B</code>, <code>C</code>, ... which were made macros so that they return to their normal letter meaning and can be safely used in the text. And that's it. Now the <code>\\S</code> macro defined back there will trigger the processing of the text as above.</p>\n\n<p>One interesting thing about this code is that it is fully expandable. That is, you can safely use it in moving arguments without worrying that it will explode. You can even use the code to check if the last letter of a word is the same as the second (for whatever reason you would need that) in an <code>\\if</code> test:</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>\\if\\S{here} true\\else false\\fi % prints true (plus junk, which you would need to handle)\n\\if\\S{test} true\\else false\\fi % prints false\n</code></pre>\n\n<p>Sorry for the (probably far too) wordy explanation. I tried to make it as clear as possible for non TeXies as well :)</p>\n\n<h3>Summary for the impatient</h3>\n\n<p>The macro <code>\\S</code> prepends the input with an active character <code>B</code> which grabs lists of tokens delimited by a final space and passes them to <code>C</code>. <code>C</code> takes the first token in that list and moves it to the end of the token list and expands <code>D</code> with what remains. <code>D</code> checks if “what remains” is empty, in which case a single-letter word was found, then do nothing; otherwise expands <code>E</code>. <code>E</code> loops through the token list until it finds the last letter in the word, when it is found it leaves that last letter, followed by the middle of the word, which is then followed by the first letter left at the end of the token stream by <code>C</code>.</p>\n"},{"answer_id":185716,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185716#185716","body":"<h2><a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\" rel=\"nofollow noreferrer\">C</a> (gcc), 62 bytes</h2>\n\n<pre class=\"lang-c prettyprint-override\"><code>t;*s;f(int*i){for(s=i;*++i;i[1]&gt;64||(t=*i,*i=*s,*s=t,s=i+2));}\n</code></pre>\n\n<p>I wanted to use a xor swap but that fails if a word is only one character long.</p>\n\n<p><a href=\"https://tio.run/##VZDdasMwDIWv26cQgYHjZNCN0RuT7QX6Bl0vjGOnAscOlkvoT549s7sWGt1IfDqS7KPeO6XmOQpOwjB0kWN5NT4walDwqkKB@4/D9/brdmOx4VhzbDjVnJpYJ0n1WZZimtMc9BIdK@G6hhTKO4qQ10HUFGl/gObRyrEraJQDxKMGgyEppWvBylRYHaMOBN6AluoIow9tUb8MHrW1PmO75PkMKEmaFngIvguy79F1MJwuF6vpfkz5VkPnrflZyNGBhC5o7aDXsvXjonuWZwhSaSXDC9/cq0ncU7IOso2AzUY8/o4HAVhV2ZvVvyXJjFFRexrYU1GK9cqwmNM4hKQybFe8Wfp1RQ0ZP6@Z9Dj2BNN6mv8A\" rel=\"nofollow noreferrer\">Try it online</a></p>\n"},{"answer_id":185828,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185828#185828","body":"<h2>Brainf**k, 126</h2>\n\n<pre><code>&gt;+[,[-&gt;&gt;&gt;+&lt;+&lt;+&lt;]&gt;----------[[-]&lt;+&gt;]&gt;[[-]&lt;&lt;+&gt;&gt;]&lt;&lt;--[+&lt;.&lt;[[&lt;]&gt;&gt;&gt;[&lt;.&gt;&gt;]&lt;[&lt;]&gt;.&lt;]&gt;[&gt;]&gt;-&gt;&gt;[.[-]&lt;+&gt;]&lt;&lt;&lt;]&gt;+[-&gt;&gt;[-&lt;&lt;&lt;+&gt;&gt;&gt;]&lt;+&lt;]&gt;[-&lt;+&gt;]&lt;]\n</code></pre>\n\n<p><a href=\"https://tio.run/##PU1BCsMwDLvnK17yAqNP7GhySLeUlZUy0pQ9P5NLmY2NLMvy1MqyzcfjPQbEbhYBiHpmxH@YxayCjBMQgZ20aFIzSgHT5KwPiWUU08vSdalKUtzeop4O5PwJR1/nMe7f8gn9VcO8tL2Hsj3DWgjW2ntt@w8\" rel=\"nofollow noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n\n<p>Could definitely be golfed further.</p>\n"},{"answer_id":185796,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185796#185796","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"nofollow noreferrer\">sed</a>, 34 bytes</h1>\n\n<p>And presumably the pattern idea will work with most RE tools (and I do know there are differences between standard RE and extended RE).</p>\n\n<pre><code>s,\\b\\(\\w\\)\\(\\w*\\)\\(\\w\\)\\b,\\3\\2\\1,g\n</code></pre>\n\n<p><a href=\"https://tio.run/##NY89TsUwEIT7nGJKQHnFg1MgISpKN5tkia04Xss/L@T0YeNAM2uNZz@PM0@3OdTjyL0ZzJPZzPOpL9dQHXrzZl7NvZ@P41MKo1gqKoxUPWdk2i9rY0jwOyw9NCTINUZJRU3G4sLUyTcyR0pUJOGGd9CK0YpkF2bkSKPSvni0wY3kFeSUKWnJ2FyxneiTCZt1hVsWpBfsfY@hlpZ13qPUFMAPTnuxJ9aFs0ljdy602hwmfLjQDhrJaL7L4B9ao2fUTLPiE@tXwuR5@q/Nfu8Ut9LCF@lvQWqJ2sGLLNDynLpf\" rel=\"nofollow noreferrer\" title=\"sed – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185684,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185684#185684","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 58 bytes</h1>\n\n<pre><code>StringReplace[#,a:u~~w:u..~~b:u:&gt;b&lt;&gt;w&lt;&gt;a/.{u-&gt;Except@#2}]&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/##TY89a8MwEIb3/IrDgkyOCx1NKrRkL@0YMlzkk22QLKEP1MTYf91V28Hdjufu4b3XYBzIYBwlbupt@4x@nPoPcholXVmNbVrX3KamWdd7m1p@P/N85vjSzOnEL1@SXBTsdbkdt/dixuvM2HLiSjB2Owoh5sNchYwOSgqo0YcIOHWgsQyaYiQfwCoglANk67uqrqBa6mINpLX9YfofjFQ8iYHCzpy3vUdjyt/g0vOpKfxmSNsR9Far/XScAKH3RBMYws7mffXAB/jSWaL/g4dl@wY\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n\n<p><em>-22 bytes from @attinat</em>    </p>\n\n<p><em>-12 bytes from @M.Stern</em></p>\n"},{"answer_id":185773,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185773#185773","body":"<h1><a href=\"https://github.com/lynn/z80golf\" rel=\"nofollow noreferrer\">Z80Golf</a>, 43 bytes</h1>\n\n<pre><code>00000000: 2100 c0cd 0380 3822 5745 cd03 8038 09fe  !.....8\"WE...8..\n00000010: 2028 0570 4723 18f2 736b 707e 23a7 2803   (.pG#..skp~#.(.\n00000020: ff18 f87a ff3e 20ff 18d6 76              ...z.&gt; ...v\n</code></pre>\n\n<p><a href=\"https://tio.run/##VY@xboNADIb3PsXfsDCdjA/wtUO3KGu3zFcOo6qEQ5BkYOirkzu1Hfotv2XZn@XN0RBH3Xf65RVcEaGjLoCsI1jHjEbqBl0gC5eaoBftgWeTcYfzMYcxTz@GKjuI01QjhFrYonLKENt@QEh6sPUCTiYApZlPhTHr1/xdmPLPwcmhWjmoE58qm5ZINYlCC2nxj3R9M2857vv@vsRh8ZfL5zRgvm3b2K/wU4DHGK@Iii6GHvnnBw\" rel=\"nofollow noreferrer\" title=\"Z80Golf – Try It Online\">Try it online!</a></p>\n\n<p>Corresponding assembly:</p>\n\n<pre><code>mainloop:\n    ld hl, $c000\n    call $8003\n    jr c, hlt\n    ld d, a\n    ld b, l ; handle 1-character words\ninputloop:\n    call $8003\n    jr c, endinput\n    cp $20\n    jr z, endinput\n    ld (hl), b ; don't store the last character\n    ld b, a\n    inc hl\n    jr inputloop\nendinput:\n    ld (hl), e ; always 0\n    ld l, e\n    ld (hl), b\noutputloop:\n    ld a, (hl)\n    inc hl\n    and a\n    jr z, endoutput\n    rst $38\n    jr outputloop\nendoutput:\n    ld a, d\n    rst $38\n    ld a, $20\n    rst $38\n    jr mainloop\nhlt:\n    halt\n</code></pre>\n"},{"answer_id":185707,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185707#185707","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 9 bytes</h1>\n\n<pre><code>ḲṪ;ṙ1$Ɗ€K\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8///hjk0Pd66yfrhzpqHKsa5HTWu8////7wGUy1fIyC9XSCxKVajML7VX8FRIzFUoB4orlGQk5mUX6wEA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>ḲṪ;ṙ1$Ɗ€K | monadic link taking the string as input\n\nḲ         | split at spaces\n      Ɗ€  | for each word, do the following:\n Ṫ        | - pop the last letter\n  ;ṙ1$    | - concatenate to the remaining letters rotated left once\n        K | finally, join with spaces\n</code></pre>\n"},{"answer_id":185763,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185763#185763","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"noreferrer\">PowerShell</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$args-replace'(\\w)(\\w*)(\\w)','$3$2$1'\n</code></pre>\n\n<p><a href=\"https://tio.run/##TU/dasMgGL3PUxyCW5ORXmy7GxT2IIMh@sUETHRqcW3XZ88@k65MUDx/fkfvMoU4kLWL6A@XRchg4j6Qt1LRrvnILe@ncrS7bidexYt43i3Xqnpvqq6pY5YeaSD0Y4gJctawki@WUuJ34XqQVAOyC7ruap9lBA0Jie099CyRZLSIq92idxh4LrQLuW7LgNLMlbjlPGrHcCiyvemJeJqSkWKRVxQZqU31wZkgp2mcDfzxfLYU147KaYJxti8hczd5xNXk12bktOJG1mxvjTMkTCCaMZHULpfsPDI5M2mQCzlt3pM8IfBHlAzF9R@2VYsfPOBSgZeIHQR9e1KJNA4QnxsdKB5tYuJR9GxayVo0N36v6Oueat/@7HV1XX4B\" rel=\"noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185759,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185759#185759","body":"<h2>sed, 64 bytes</h2>\n\n<pre><code>sed -E 's/\\b([[:alpha:]])([[:alpha:]]*)([[:alpha:]])\\b/\\3\\2\\1/g'\n</code></pre>\n"},{"answer_id":185690,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185690#185690","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 73 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>foreach(explode(' ',$argn)as$w){[$w[0],$w[-1]]=[$w[-1],$w[0]];echo\"$w \";}\n</code></pre>\n\n<p><a href=\"https://tio.run/##JY1BCoMwFET3nmIIARUstmsrHkSy@JifphBMSAIplJ49tXYzPAbeTLCh3pdgQ9NIio8dM0QqFJAtwzxjyqBdw9EBjnPmmOANmDaL4qMWE8YRIhRKYJuRD8VA74RMySGdioPxsLQxtI9FNNX4@Fvo@BWc19y1aIfzvqckS/9eZVmvajjyclNqXv8wnK2aeLNeyAIxfWr9Ag\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n\n<p>Using PHP 7.1's <a href=\"https://wiki.php.net/rfc/short_list_syntax\" rel=\"nofollow noreferrer\">Square bracket syntax for array destructuring</a> to swap values.</p>\n\n<p><em>Ungolfed:</em></p>\n\n<pre class=\"lang-php prettyprint-override\"><code>foreach( explode( ' ', $argn ) as $w ) {\n  [ $w[0], $w[-1] ] = [ $w[-1], $w[0] ];\n  echo $w, ' ';\n}\n</code></pre>\n"},{"answer_id":185677,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185677#185677","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <s>67</s> <s>66</s> <s>64</s> <s>61</s> 60 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:' '.join(w[1:][-1:]+w[1:-1]+w[0]for w in s.split())\n</code></pre>\n\n<p><a href=\"https://tio.run/##FY0xDsMgEAS/sh1Gka04paW8xHFBzCGIyIHgJJTXE9PMTrWTf@ITP7p7vno037c1qJuCWj4p8NT2dTv2@cJt6LyOvR8uFTQERl1qjkEmrXsugQVuUrWZDPEEF0oVGLaI5pJIIlQqkgOZ06OlYsfHFSQW4pOU7n8\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p><sub>-1 byte, thanks to squid</sub></p>\n\n<p><sub>-1 byte, thanks to Erik the Outgolfer</sub></p>\n\n<hr>\n\n<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>63</s> <s>61</s> <s>58</s> 57 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>print(*[w[1:][-1:]+w[1:-1]+w[0]for w in input().split()])\n</code></pre>\n\n<p><a href=\"https://tio.run/##FYxBCsQgDEWvkmU7Q4cp3fUq4kLaiILEkGSQOb1V@Lz3Vp//liodvbNksuXlmttP77aB98xtn/76WAUaZBrjny3rR7nkYb/2ri0wWEKIWdQg0A0ljChohqJQI2C4ErQq97wIoEiGdOED\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185718,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185718#185718","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"noreferrer\">J</a>, <s>23 </s>17 bytes</h1>\n\n<pre><code>({:,1|.}:)&amp;.&gt;&amp;.;:\n</code></pre>\n\n<p><a href=\"https://tio.run/##TY1BDoIwFET3nmJWVhLS4LZG7/LT/gKm8ElbQ0A5O6ILcTd5My9zX51A@atWJRZTwVTr6WnK80svpjjq21FfzFoc2DYCD5VGGpAbhm9jyqDeIdAWAufMMUE8mGyDUaJTP6vhEOTDwh/MvHmWEqedDVHqSF3X9jWGxzwHTt8PK45RS/D7tO1BqCNzj47JybhXE02IZNlSVOsb\" rel=\"noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185747,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185747#185747","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 50 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>-split\"$args\"|%{$_-replace'^(.)(.*)(.)$','$3$2$1'}\n</code></pre>\n\n<p><a href=\"https://tio.run/##JY3BCsIwEETP5iuWsJpW2oJ6Ezz0pif/wLIpqRVCE5KGUmq/PabIso/ZWZixZlLO90rriN1tiaW3@jNyJPf2/LtfsCmdsppaJV5ZlWfVMW2OohB4wTOexBpXxvg9BRjozQTkFMwmgHSGF8Br2vgHUQ2ShjTgTbAgpYQpyO030wwulbTkUissbMcfgw0jXAEbYM8wpiPp7IBdcnLO1vgD\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n\n<p>Uses regex to replace each word with a captured first and last letter surrounding the original core. If it's a single character, <code>replace</code> will find nothing and leave it alone.</p>\n"},{"answer_id":185745,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185745#185745","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, 90 bytes</h1>\n\n<pre><code>I&#9;R =\n&#9;INPUT LEN(1) . L REM . M&#9;:F(END)\n&#9;M ARB . M RPOS(1) REM . R\n&#9;OUTPUT =R M L&#9;:(I)\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##JYs7CoAwEAXr3VNsmTSCYCWkiBghkI9sImJrLVp4f2KC1YN5M@/9nM81lGKBSSHYsG6ZnAmil9SRIza@rodxESbMEsGT5qkh4jWmpv0KI8Qtt1pxPR2MwkqsTSkas0kZ44L@wD3ynD4\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n\n<p>Takes input separated by newlines; can be either uppercase or lowercase.</p>\n\n<pre><code>I R =&#9;&#9;&#9;&#9;&#9;;* set R to empty string\n  INPUT LEN(1) . L REM . M&#9;:F(END)&#9;;* take first character and set to L, and set the\n&#9;&#9;&#9;&#9;&#9;;* REMainder to M\n  M ARB . M RPOS(1) REM . R&#9;&#9;;* match an ARBitrary (possibly empty) run\n&#9;&#9;&#9;&#9;&#9;;* of characters to M up to but excluding the last character\n&#9;&#9;&#9;&#9;&#9;;* and save the last character to R\n&#9;&#9;&#9;&#9;&#9;;* if M is empty, (i.e., a one-letter word), then this fails&#32;\n&#9;&#9;&#9;&#9;&#9;;* and nothing happens, so M remains empty and R remains empty\n  OUTPUT =R M L&#9;:(I)&#9;&#9;&#9;;* output Right, Middle, Left, then goto I.\nEND\n</code></pre>\n\n<p>(previous version)</p>\n\n<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, 92 bytes</h1>\n\n<pre><code>I&#9;R =M =\n&#9;INPUT LEN(1) . L ('' | ARB . M LEN(1) . R) RPOS(0)&#9;:F(END)\n&#9;OUTPUT =R M L&#9;:(I)\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87LT8rPMfn/35MzSMHWV8GWi9PTLyA0RMHH1U/DUFNBT8FHQUNdXaFGwTHICcjzRUgEaSoEBfgHaxhoclq5abj6uWhycfqHhoA02waBFHJaaXhqcgEl/v8PcQ0O4XLkCvcPcgEA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n\n<p>This is thematically the same, clearly, but suffers from using <code>FAILURE</code> as the termination status, preventing us from using <code>FAILURE</code> as a no-op as we do in the above. This then forces us to set <code>M =</code> as well as <code>R =</code>, which is 3 bytes.</p>\n"},{"answer_id":185692,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185692#185692","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-S</code></a>, 10 bytes</h1>\n<p>Convinced there has to be a shorter approach (and <a href=\"https://codegolf.stackexchange.com/a/185743/58974\">I was right</a>) but this'll do for now.</p>\n<pre><code>¸ËhJDg)hDÌ\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LVM&amp;code=uMtoSkRnKWhEzA&amp;input=ImluIGEgZ3JlZW4gbWVhZG93Ig\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>¸ËhJDg)hDÌ     :Implicit input of string\n¸              :Split on spaces\n Ë             :Map each D\n  h            :  Set the character at\n   J           :    Index -1 to\n    Dg         :    The first character in D\n      )        :  End set\n       h       :  Set the first character to\n        DÌ     :    The last character in D\n               :Implicit output, joined by spaces\n</code></pre>\n"},{"answer_id":185743,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185743#185743","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <a href=\"https://codegolf.meta.stackexchange.com/a/14339/\"><code>-S</code></a>, 7 bytes</h1>\n<pre><code>¸®ÎiZÅé\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;flags=LVM&amp;code=uK7OaVrF6Q&amp;input=InN3YXAgdGhlIGZpcnN0IGFuZCBsYXN0IGxldHRlcnMgb2YgZWFjaCB3b3JkIg\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":185736,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185736#185736","body":"<h1>T-SQL, 126 bytes</h1>\n<pre class=\"lang-sql prettyprint-override\"><code>SELECT STRING_AGG(STUFF(STUFF(value,1,1,RIGHT(value,1)),LEN(value),1,LEFT(value,1)),' ')\nFROM STRING_SPLIT((SELECT*FROM t),' ')\n</code></pre>\n<p>Input is via a pre-existing table <strong>t</strong> with varchar field <strong>v</strong>, <a href=\"https://codegolf.meta.stackexchange.com/questions/2447/default-for-code-golf-input-output-methods/5341#5341\">per our IO standards</a>.</p>\n<p>Reading from back to front, <code>STRING_SPLIT</code> breaks a string into individual rows via a delimiter, <code>STUFF</code> modifies the characters at the specified positions, then <code>STRING_AGG</code> mashes them back together again.</p>\n"},{"answer_id":185730,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185730#185730","body":"<h2>Haskell, 54 bytes</h2>\n\n<pre><code>unwords.map f.words\nf[a]=[a]\nf(a:b)=last b:init b++[a]\n</code></pre>\n\n<p><a href=\"https://tio.run/##LU5LrsIwDNz3FKOuQDx6AKTegLd6S0DIpE4avfyUpKrg8IS0ZWHZM/aMZ6T0z8YU1V/L5GYfh9RZCpDdOjfyQre@ViN3dHrse0Mp43HSTtd2ONRNsaQdelTV7x27MOW/HM8Ondrj0gBtmqtfHhlSxyomN2B1MZwzxwQvwSRGLA/bn0Ux1kR@weZLZK73ghKnDYfoVSRrtVMI0@tlOK2@wg8M5Y3czmougorMDpZp8PNGP@mJSIIFxfbWlLeQhlQqRxHCBw\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185729,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185729#185729","body":"<h1>Scala, 100 bytes</h1>\n\n<pre class=\"lang-scala prettyprint-override\"><code>(b:String,c:String)=&gt;b.split(c)map(f=&gt;f.tail.lastOption++:(f.drop(1).dropRight(1)+f.head))mkString c\n</code></pre>\n"},{"answer_id":185719,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185719#185719","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>75</s> 74 bytes</h1>\n\n<p>Fixed a bug pointed at by Cubic and also golfed down 1 byte.</p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f=unwords.map(#v).words\nx#g=g(r$tail x)++[x!!0]\nr=reverse\nv[]=[]\nv x=r$x#r\n</code></pre>\n\n<p><a href=\"https://tio.run/##LY5NboMwEIX3PsULZBGUCvUCvkG7yhKhagSDQTU2Gpuf5PLUhO7mPb359PUUftnafe/07FYvbShHmm75UpTvpLbcaHOTa6TBYivu92q7XD5rJVp4YQmslqrWVa0WbFquWy77SIODRuJ8/@A2zfER5cuhRFegUkAWVpoQe0Y3SIgg18JSOizHmJDwHZiaHodB9nF89MnRH9n@F5HTvqHA4cyTeCM0joMzmObXy3J4cxvfMoy33TlLYgQjzA4jU@vXs37SE0INNySZQr3/AQ\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185694,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185694#185694","body":"<h1>Java, <s>110</s> 109 bytes</h1>\n\n<p>-1 bytes by using a newline for a delimeter</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;{int l;for(var i:s.split(\"\\n\"))System.out.println(i.charAt(l=i.length()-1)+i.substring(1,l)+i.charAt(0));}\n</code></pre>\n\n<p><a href=\"https://tio.run/##LY7BDoIwEETvfEXDqY3SyFWiiRfj3aN4qNDi4tqa7oIxhG9HJF7nTd5Ma3qTtfVjAs82OlNZcRySPkAtnDxzBN8IUkVCbBgqsYCnAf9nl6swsSE1JEfhdhNl@2EWCSxciLI3UcCWNL0QWKalT5U6f4jtU4eO9WsWMHoJurqbeGCJO9BofcN3qbJcrUBTd6NlR@Zr/AX/5kapYpyKxGkn05NFDKV/h4h1Ol8dx@kL\" rel=\"nofollow noreferrer\">TIO</a></p>\n"},{"answer_id":185724,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185724#185724","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">laskelH</a>, 71 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>h=reverse\ns(x:y:o)=a:h(x:r)where(a:r)=h$y:o\ns o=o\nf=unwords.map s.words\n</code></pre>\n\n<p><a href=\"https://tio.run/##ZVJBbhsxDLzrFTwEaAI0foCBfYCBopfmA8yattjViguRymb7eZeS10DQnkRR5HA4o4g6UUq3WxwKfVBRCvr8edyO8jLgMXpYXtZIhZ7RoyE@@UtQkEHCZah5lXLWw4wL6KHHt9dXOH2bIYvBKDUb5ytYZAVUWLAYyMXvBDwviWbKhsaSQfkPhRk5wwCcjQqOBk9Qc@JMCgdoMy5@9vvt1@rXBnPhogaYz5DQg0TmvY4AhGOERim89elJpV0nhZUt@rx8TfSo79QdeiLAEE4G3vGOyiOmtMHv2kaAWkG@RoO6/Mve562RxxhOcJEH3ChZWbsAbedVwJ9mKY@p94q@RSQ8h12Y3YYzGHICB/@SfIgnha@cMfXGDkPen//vD@GnGHke7f5Yk6upuN1Tq0Nl3zDihxcJaF0WaR5lgolz56TktqE5d3cWcIYxijT5QBccHe2Nxph3qdi@iBzER5amjFGvbX9g9d/2Hd6r9VpOCawWt8tJb/5PHNbtlx078H0ncn9/uPEt8BKFnneT6BObE1AVrw7v2kb/C8m332lT2oLDzTjRHWlvkGqLc0giEzh5Kn8B\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>Example in/output:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>Swap the first and last letter in each word\nThis also works with single letter words like a\n\nIt is basically just a straight up implementation in which\nI for words consisting of two or more letters cons the head\nof the reversed tail on the reverse of the original head consed\non the reversed tail\n\nNote that the rules say that we only have to support one kind\nof separator - I am choosing spaces Technically it works with\nother whitespace as well, but it will turn everything into spaces\nin the end Line endings in this example usage are handled separately\nto make the example output look nicer\n</code></pre>\n\n<pre class=\"lang-hs prettyprint-override\"><code>pwaS eht tirsf dna tasl rettel ni hace dorw\nshiT olsa sorkw hitw eingls rettel sordw eikl a\n\ntI si yasicallb tusj a ttraighs pu nmplementatioi ni hhicw\nI rof sordw gonsistinc fo owt ro eorm setterl sonc eht deah\nfo eht deverser lait no eht eeversr fo eht lriginao deah donsec\nno eht deverser lait\n\neotN that eht suler yas that ew ynlo eavh ot tuppors eno dink\nfo reparatos - I ma ghoosinc spaces yechnicallT ti sorkw hitw\nrtheo ehitespacw sa ,ellw tub ti lilw nurt gverythine onti spaces\nni eht dne einL sndinge ni shit example esagu era dandleh yeparatels\not eakm eht example tutpuo kool ricen\n<span class=\"math-container\">```</span>\n</code></pre>\n"},{"answer_id":185722,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185722#185722","body":"<h1><a href=\"https://web.archive.org/web/20150618184706/http://compsoc.dur.ac.uk/whitespace/tutorial.php\" rel=\"nofollow noreferrer\">Whitespace</a>, 179 bytes</h1>\n<pre><code>[N\nS S S N\n_Create_Label_OUTER_LOOP][S S S N\n_Push_n=0][N\nS S T   N\n_Create_Label_INNER_LOOP][S N\nS _Duplicate_n][S N\nS _Duplicate_n][S N\nS _Duplicate_n][T   N\nT   S _Read_STDIN_as_character][T   T   T   _Retrieve_input][S S S T    S T T   N\n_Push_11][T S S T   _Subtract_t=input-11][N\nT   T   S S N\n_If_t&lt;0_jump_to_Label_PRINT][S S S T    N\n_Push_1][T  S S S _Add_n=n+1][N\nS N\nT   N\n_Jump_to_Label_INNER_LOOP][N\nS S S S N\n_Create_Label_PRINT][S S S T    N\n_Push_1][T  S S T   _Subtract_n=n-1][S N\nS _Duplicate_n][S N\nS _Duplicate_n][N\nT   S N\n_If_n==0_jump_to_Label_PRINT_TRAILING][T    T   T   _Retrieve][T    N\nS S _Print_as_character][S S S N\n_Push_s=0][N\nS S S T N\n_Create_Label_PRINT_LOOP][S S S T   N\n_Push_1][T  S S S _Add_s=s+1][S N\nS _Duplicate_s][S T S S T   S N\n_Copy_0-based_2nd_n][T  S S T   _Subtract_i=s-n][N\nT   S N\n_If_0_Jump_to_Label_PRINT_TRAILING][S N\nS _Duplicate_s][T   T   T   _Retrieve][T    N\nS S _Print_as_character][N\nS T S T N\n_Jump_to_Label_PRINT_LOOP][N\nS S N\n_Create_Label_PRINT_TRAILING][S S S N\n_Push_0][T  T   T   _Retrieve][T    N\nS S _Print_as_character][S S S T    S S T   N\n_Push_9_tab][T  N\nS S _Print_as_character][N\nS N\nS N\n_Jump_to_Label_OUTER_LOOP]\n</code></pre>\n<p>Letters <code>S</code> (space), <code>T</code> (tab), and <code>N</code> (new-line) added as highlighting only.<br />\n<code>[..._some_action]</code> added as explanation only.</p>\n<p>Tab as delimiter. Input should contain a trailing newline (or tab), otherwise the program doesn't know when to stop, since taking input in Whitespace can only be done one character at a time.</p>\n<p><a href=\"https://tio.run/##TY7hDoMgDIR/X5@ir9ZonWREDTDNnp61lsQlQK/0u4NrTU3rIZP2Tsx8bztALu8FAgOwgVdr/AaB3q0pgpv@7hBek8aai3kEMx6fM8FGqBt44OSvEY0fPRlBRjhT7/WSA21VLKnUBtlmZDGRtTUtFfsClWnFtZcZaZvyZ07bC4JqJevgYpzTW22yFyRUOc8v/QA\" rel=\"nofollow noreferrer\">Try it online</a> (with raw spaces, tabs, and new-lines only).</p>\n<p><strong>Explanation in pseudo-code:</strong></p>\n<p>Whitespace only has a stack and a heap, where the heap is a map with a key and value (both integers). Inputs can only be read one integer or character at a time, which are always placed in the heap as integers, and can then be received and pushed to the stack with their defined heap-addresses (map-keys). In my approach I store the entire word at the heap-addresses (map-keys) <span class=\"math-container\">\\$[0, ..., \\text{word_length}]\\$</span>, and then retrieve the characters to print one by one in the order we'd want after a tab (or newline) is encountered as delimiter.</p>\n<pre><code>Start OUTER_LOOP:\n  Integer n = 0\n  Start INNER_LOOP:\n    Character c = STDIN as character, saved at heap-address n\n    If(c == '\\t' OR c == '\\n'):\n      Jump to PRINT\n    n = n + 1\n    Go to next iteration of INNER_LOOP\n\n  PRINT:\n    n = n - 1\n    If(n == 0): (this means it was a single-letter word)\n      Jump to PRINT_TRAILING\n    Character c = get character from heap-address n\n    Print c as character\n    Integer s = 0\n\n    Start PRINT_LOOP:\n      s = s + 1\n      If(s - n == 0):\n        Jump to PRINT_TRAILING\n      Character c = get character from heap-address s\n      Print c as character\n      Go to next iteration of PRINT_LOOP\n\n    PRINT_TRAILING:\n      Character c = get character from heap-address 0\n      Print c as character\n      Print '\\t'\n      Go to next iteration of OUTER_LOOP\n</code></pre>\n<p>The program terminates with an error when it tries to read a character when none is given in TIO (or it hangs waiting for an input in some Whitespace compilers like <a href=\"http://vii5ard.github.io/whitespace/\" rel=\"nofollow noreferrer\">vii5ard</a>).</p>\n"},{"answer_id":185713,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185713#185713","body":"<h1>APL+WIN, 50 bytes</h1>\n<pre><code>(∊¯1↑¨s),¨1↓¨(¯1↓¨s),¨↑¨s←((+\\s=' ')⊂s←' ',⎕)~¨' '\n</code></pre>\n<p>Prompts for string and uses space as the delimiter.</p>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNzkksLs5M/v@ob6qvz6O2CcZcjzra0/5rPOroOrTe8FHbxEMrijV1Dq0AMicfWqEBFpsMFYPIAjVpaGjHFNuqK6hrPupqAgkAmTpAEzXrDq0AMv8DjfyfxqVeXJ5YoFCSkaqQlllUXKKQmJeiALS9RCEntaQktahYIT9NITUxOUOhPL8oRR0A\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Classic) – Try It Online\">Try it online! Courtesy of Dyalog Classic</a></p>\n"},{"answer_id":185711,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185711#185711","body":"<h1><a href=\"https://github.com/gtownsend/icon\" rel=\"nofollow noreferrer\">Icon</a>, 76 bytes</h1>\n\n<pre><code>link segment\nprocedure f(s)\nw:=!seglist(s,' ')&amp;w[1]:=:w[-1]&amp;writes(w)&amp;\\x\nend\n</code></pre>\n\n<p><a href=\"https://tio.run/##bY/NjsIwDITvfQrDoSTScuBaxJMABytx02jzU9lBAV6@G7iA1PXJ0jczHnuT07IEn35ByEVKpZs5G7I3JhiV6K4Op01DwUtR8rODne7r@XAdTkM97w/XvrIvJKrq/nLvKNnl44/ok9IdtBnVVirOUKYW61kKYLIQsC2BSiEWyCMQmglqZrvVx3fuxz1RCPnFwj@wFShgUEjWrNVxjDH65GC@PZ@B5H3bZEvgchjXFp8AwTFRgkhoc11LHvgARkMG@Qu@3v8D\" rel=\"nofollow noreferrer\" title=\"Icon – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185709,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185709#185709","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C# (Visual C# Interactive Compiler)</a>, 90 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>n=&gt;n.Split().Any(x=&gt;WriteLine(x.Length&lt;2?x:x.Last()+x.Substring(1,x.Length-2)+x[0])is int)\n</code></pre>\n\n<p>Uses newline as delimiter, though really any whitespace can be used.</p>\n\n<p><a href=\"https://tio.run/##nZAxb4MwEIX3@xUWk1EDSjM2gbRLpmwZOlQdHHMGS@aMfEZA/jx1VVXdOnDb3b33Pd1pLjTb9TKSPnEMltrd3XtXm2qlqqbyNjgbZV6@0SLnqn4PNuLVEsq5vCK1sTsdzvNLahQn2dNc3sb7D0c@7341xSFtPvafuWVhKebrEYzMeFKDiB0KYwNHoagRLlGEwxgxsPBGoNKdmHxosvwIf9lZ8X99q418zTp0zkPyu42AiBxBK0be5h@Cb4Pq@/QOGMbHwyFDuhO0bxBa78w2rCVQ0AZEgh5V46dtmEUtEJRGrUIarV8\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Interactive Compiler) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185701,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185701#185701","body":"<h2>Batch, 141 bytes</h2>\n\n<pre><code>@set t=\n@for %%w in (%*)do @call:c %%w\n@echo%t%\n@exit/b\n:c\n@set s=%1\n@if not %s%==%s:~,1% set s=%s:~-1%%s:~1,-1%%s:~,1%\n@set t=%t% %s%\n</code></pre>\n\n<p>Takes input as command-line parameters. String manipulation is dire in Batch at best, and having to special-case single-letter words doesn't help.</p>\n"},{"answer_id":185678,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185678#185678","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 8 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>Σq╞♪áZN¢\n</code></pre>\n\n<p><a href=\"https://staxlang.xyz/#p=e471c60da05a4e9b&amp;i=swap%0Athe%0Afirst%0Aand%0Alast%0Aletters%0Aof%0Aeach%0Aword%0A%0Ahello%0Aworld%0A%0Atest%0Acases%0A%0Aprogramming%0Apuzzles%0Aand%0Acode%0Agolf%0A%0Ain%0Aa%0Agreen%0Ameadow%0A%0Ayay%0Aracecar%0A&amp;a=1&amp;m=1\" rel=\"nofollow noreferrer\">Run and debug it</a></p>\n\n<p>Uses newlines as word separators.</p>\n"},{"answer_id":185675,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185675#185675","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 10 bytes</h1>\n\n<pre><code>#vyRćsRćðJ\n</code></pre>\n\n<p><a href=\"https://tio.run/##LYrBCYAwEARbWbAbn3ZwmlMPj0RyMWIFtmMP2lcM6GOZgdlg1AuX0uSje06ru6@2FNtpRZoZo0RLIO@gVEU5JY6GMIJpmLGH6CB@0M2Jn0CwCuX/92WVhWsJEQKjnI8X\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<p>-3 Thanks to <a href=\"https://codegolf.stackexchange.com/users/52210/kevin-cruijssen\">@Kevin Cruijssen</a>.</p>\n\n<pre><code>#           | Split into words.\n vy         | For each word...\n   RćsRć    | Reverse, split head, swap, reverse, split tail\n        ðJ  | Join by spaces.\n</code></pre>\n"},{"answer_id":185679,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185679#185679","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a> with <code>-p</code>, <s>42</s> <s>41</s> 29 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>gsub /(\\w)(\\w*)(\\w)/,'\\3\\2\\1'\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYxBDoMwDATveYVvlKoVavudXExiQqQQR3YQgsc3hR5mNYfVyDrurQVdRxhudutP7tf0w6OzH/u2r6413bBAnQmmKFoBs4eEpySqlUSBJyB0M2ws3syUEl@avKl0vhwqqSnCQXBZYg5Q1uNIpP@QY08QOE0mZkAIQpRhIfS8mR13EHTkUL5cauSs7Vl@\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185683,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185683#185683","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"noreferrer\">Retina</a>, <del>8</del> 5 bytes</h1>\n\n<pre><code>,V,,`\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcZBCsAgDATA@74ll36m54a6oiAqScDnp53TGKNPvTLlFnky/ehGNKJ284DOgqF/BiNojlVBfRvOsvIB\" rel=\"noreferrer\" title=\"Retina – Try It Online\">Try it online!</a></p>\n\n<p>Saved 3 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/52210/kevin-cruijssen\">Kevin Cruijssen</a>!</p>\n\n<p>Uses a newline as the separator. We make use of Retina's reverse stage and some limits. The first limit is which matches to apply the reversal to, so we pick all of them with <code>,</code>. Then we want the first and last letter of each match to be swapped, so we take each letter in the range <code>,,</code> which translates to a range from the beginning to the end with step size zero.</p>\n"},{"answer_id":185680,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185680#185680","body":"<h1>JavaScript (ES6), <s> 39 </s> 36 bytes</h1>\n<p><em>Saved 3 bytes thanks to @FryAmTheEggman</em></p>\n<p>Uses a linefeed as separator.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>s=&gt;s.replace(/(.)(.*)(.)/g,'$3$2$1')\n</code></pre>\n<p><a href=\"https://tio.run/##TVDRasQgEHy@@4olHERLm9D2OfclfVnMxuQwKq5tuPv5dA3JcYKgszPjjDf8QzZpivnDh57WoVu5u3KTKDo0pFrVaNW8ydatfa8v35evy2et10ycoQOG7gomeA6OGhesGhQ3HN2UVQ21bm5h8qr@8bXWB1wuOy4MfT4XK1XxghHySDBMSazR9@BQDo5ypsQQBiA0Iywh9ZU@tS1UcUEGGjNkkQzQe4SM7IA3iYMhwCgdoA9pqfZnRnIuFBMnLnAqq1gFgcdCdE/m1tAgE78SN5QFNQcvpmATzvPkLcTfx8MRb@mNfCfY4IZNXrT2yYzAGzNuoSn0RsI6e1hOHhBsIvIwE/ZhkcKwB/CTzLzMLCxlNh@iO94hSV2DSehH3ld0/Qc\" rel=\"noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185687,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185687#185687","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 24 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/(\\w)(\\w*)(\\w)/$3$2$1/g\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/79YXyOmXBOItUCEpr6KsYqRiqF@@v//Gak5OfkK5flFOSn/8gtKMvPziv/r@prqGRgZ/dctAAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185676,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185676#185676","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, <s>72</s> 58 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>print(*[x[-1]+x[1:-1]+x[:x&gt;x[0]]for x in input().split()])\n</code></pre>\n\n<p><a href=\"https://tio.run/##JcZBCsMgEEbhq/zLpKWhobssehFxIYmiIDqMEzI5vRUKD75Ht8RaPr0TpyLTw6h5rfapZt3@bvpV87Y2VIYilRGdMs1Lo5yGdu69XY4g0SMkbgJXDmQ3JnsRzw01wLs94qp8/AA\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":185681,"question_id":185674,"link":"https://codegolf.stackexchange.com/questions/185674/pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw/185681#185681","body":"<h1><a href=\"https://github.com/abrudz/QuadRS\" rel=\"nofollow noreferrer\">QuadR</a>, 20 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>(\\w)(\\w*)(\\w)\n\\3\\2\\1\n</code></pre>\n\n<p>Simply make three capturing groups consisting of 1, 0-or-more, and 1 word-characters, then reverses their order.</p>\n\n<p><a href=\"https://tio.run/##TY/BbsMgEETv@YqRT0mlHpre@yW@rGABS2ugLBFKft5d21XVA4idmQfD94N827brPG623vbtdpk/5/v8sW2TDqroiRGWph2UPYTsINw7N0UJYHIJozQ/4f0LUx2k4NTRjQjwmdBJBXoQglCQyDF8aWO6TIlFyo7LL19MSLsru93ZHnOkrKd7zGqzM7O2Ehut65Ij6uP1EtajoSueEYuEk4l/sQo9YvWoxcU7qyPRrloyCLExZ6xMvowTzYvJ2eSIscurRZ/0RLMfOGpn6L/wAw\" rel=\"nofollow noreferrer\" title=\"QuadR – Try It Online\">Try it online!</a></p>\n"},{"answer_id":63949,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/63949#63949","body":"<p><strong>C# (Visual C# Interactive Compiler) - <s>122</s> 42</strong></p>\n\n<pre><code>Write((Read()+Read())%2&lt;1?\"dark\":\"light\");\n</code></pre>\n\n<ul>\n<li>Reads from STDIN</li>\n<li>Format is simply <strong>a1</strong></li>\n</ul>\n\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/users/8340/dana\">@dana</a> for the change from C# to the current one &amp; golfing a ton of bytes! :)</p>\n\n<p><a href=\"https://tio.run/##Sy7WTS7O/P8/vCizJFVDIyg1MUVDUxtCaaoa2RjaK6UkFmUrWSnlZKZnlChpWv//n2QEAA\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n"},{"answer_id":184823,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/184823#184823","body":"<h1>TI-BASIC, 16 chars (8 bytes)</h1>\n\n<pre><code>Ans(1) nCr Ans(2\n</code></pre>\n\n<p>Input is a list of length 2 in <code>Ans</code>.<br>\nOutput is the result of the formula defined <a href=\"http://tibasicdev.wikidot.com/ncr\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>If the above solution doesn't suffice, then the following <strong>35 chars (24 bytes)</strong> solution also works:</p>\n\n<pre><code>Ans(2)!⁻¹(Ans(1)-Ans(2))!⁻¹Ans(1)!\n</code></pre>\n\n<hr>\n\n<p><strong>Note:</strong> TI-BASIC is a tokenized language.  Character count does <strong><em>not</em></strong> equal byte count.</p>\n"},{"answer_id":184820,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/184820#184820","body":"<h1>Javascript, 27 bytes</h1>\n\n<p>First my own 35-byte solutions:</p>\n\n<pre><code>f=(n,k)=&gt;n-k&amp;&amp;k?f(--n,k)+f(n,k-1):1\n</code></pre>\n\n<p>Or, alternatively,</p>\n\n<pre><code>f=(n,k,i=k)=&gt;i?f(n-1,k-1,i-1)*n/k:1\n</code></pre>\n\n<p>The first working recursively, with the simple <code>(n,k) = (n-1,k) + (n-1,k-1)</code> rule. The second using that <code>(n,k) = (n-1,k-1) * n/k</code>. </p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I just noticed the solution by Arnould in a duplicate of this:</p>\n\n<pre><code>f=(n,k)=&gt;k?n*f(n-1,k-1)/k:1\n</code></pre>\n\n<p>Which is a whopping 8 bytes less (27 bytes)</p>\n"},{"answer_id":111857,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/111857#111857","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 104 bytes</h1>\n\n<pre><code>set i 2\ntime {set p 1;set j 2;while \\$j&lt;$i {if $i%$j==0 {set p 0};incr j};if $p {puts $i};incr i} 999998\n</code></pre>\n\n<p><a href=\"https://tio.run/##NYoxDoAgFEN3T9HhuyOTBrmJG8H4CRoiGAfi2RES7fLS9iXjS4k2gSG7xLtFbi1gUI0OUt0be4uF3EyMzCuIe3Jai18Vj@LDnHCV9Q3I4Uqxat/OD6aWsZQX\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<p>Unfortunately I could not find an online Tcl interpreter which does not time out running it. </p>\n\n<hr>\n\n<p><s></p>\n\n<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 110 bytes</h1>\n\n<pre><code>set i 2\ntime {set p 1;set j 2;while \\$j&lt;$i {if $i%$j==0 {set p 0;break};incr j};if $p {puts $i};incr i} 999998\n</code></pre>\n\n<p><a href=\"https://tio.run/##NYo7DoAgFAR7T7EF9milQW9io@QZH35CFGNBODtCottMdjJObzFe5MCoC8c7wednUalMg1o9C2@EQZhOMDzPEFwK0/fyT6WaThrXoPjQJ0xiaiy8vd2V4s9zQJvXxPgC\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<p></s></p>\n\n<p><s></p>\n\n<h1>tcl, 115</h1>\n\n<pre><code>set i 2\ntime {set p 1;set j 2;while \\$j&lt;$i {if ![expr $i%$j] {set p 0;break};incr j};if $p {puts $i};incr i} 999998\n</code></pre>\n\n<p><a href=\"http://www.tutorialspoint.com/execute_tcl_online.php?PID=0Bw_CjBb95KQMSTB0eUJDTk9uVlk\" rel=\"nofollow noreferrer\">demo</a></p>\n\n<hr>\n\n<h1>tcl, 201</h1>\n\n<p>My still not golfed answer:</p>\n\n<pre><code>for {set i 2} {$i&lt;$1000000} {incr i} {\n    set p 1\n    for {set j 2} {$j&lt;$i} {incr j} {\n        if {[expr $i%$j] == 0} {\n            set p 0\n            break\n        }\n    }\n\n    if $p {puts $i}\n}\n</code></pre>\n\n<p><a href=\"http://www.tutorialspoint.com/execute_tcl_online.php?PID=0Bw_CjBb95KQMSU4tLS1tdjhZbTg\" rel=\"nofollow noreferrer\">demo</a>\n</s></p>\n"},{"answer_id":179323,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/179323#179323","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda p,a=5**.5:round((.5+a/2)**p/a)\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcE7DoAgDADQ3VN0bKsRP2Ex8SYuNYqSaCEEB0@PvhfffAYdi5uXcsm9bgKxkdkyt3ZK4dENsbW1mIGYoxEqLiTw4BWS6LFj33U0VfCLyWtGh56ofA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n\n<h1>Explanation</h1>\n\n<p>Fib(n) = Fib(n-1) + Fib(n-2) with Fib(0) = Fib(1) = 1</p>\n\n<p>Using some simplification, this becomes:</p>\n\n<p><a href=\"https://i.stack.imgur.com/Nfy0o.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Nfy0o.png\" alt=\"Fibonacci Golden Ratio\"></a></p>\n\n<p>For <code>n &gt; 0</code>, this becomes </p>\n\n<p><a href=\"https://i.stack.imgur.com/qmxb4.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/qmxb4.png\" alt=\"n greater than 0\"></a></p>\n\n<p>Where <code>round</code> is a function that rounds to the nearest integer.</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda p,                              # defines the anonymous function\n         a=5**.5:                      # sets a to \\sqrt{5}\n                 round((.5+a/2)**p/a)  # Runs the function and returns the result\n</code></pre>\n"},{"answer_id":182491,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/182491#182491","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Perl 6</a>, 27 bytes</h1>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>grep(&amp;is-prime,^𖭞)&gt;&gt;.say\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7/z@9KLVAQy2zWLegKDM3VSfuw7S18zTt7PSKEyv//wcA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>Filters all the primes from 0 to a million minus 1 and then prints. </p>\n"},{"answer_id":182487,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/182487#182487","body":"<h1><a href=\"https://github.com/SuperJedi224/Microscript-II\" rel=\"nofollow noreferrer\">Microscript II</a>, 18 bytes</h1>\n<pre><code>6E_s{ls1+v;(lP)}*h\n</code></pre>\n<p>Requires the latest version of the interpreter due to a bug in how the previous version handled addition with <code>null</code> values (although in retrospect it might work even in the previous version if you change <code>ls1+</code> to <code>1sl+</code>).</p>\n<p>Approximate pseudocode translation:</p>\n<pre><code>x=0\nRepeat 10⁶ times:\n    x=x+1\n    if x is prime:\n        print x\nEnd\n</code></pre>\n"},{"answer_id":182407,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/182407#182407","body":"<h1><a href=\"https://github.com/dloscutoff/esolangs/tree/master/BitCycle\" rel=\"nofollow noreferrer\">BitCycle</a>, 21 bytes</h1>\n\n<pre><code>  1+ ~!\nCB0CA~\n^ 1  &lt;\n</code></pre>\n\n<p>Outputs an unending sequence. Use the <code>-u</code> flag to get output in decimal. <a href=\"https://tio.run/##S8osSa5Mzkn9/19BwVBboU6Ry9nJwNmxjitOwVBBweb//3/5BSWZ@XnF/3VLAQ\" rel=\"nofollow noreferrer\" title=\"BitCycle – Try It Online\">Try it online!</a></p>\n\n<p><strong>Note:</strong> the current BitCycle interpreter doesn't play very well with infinite output. You have to halt the program (Ctrl-C) before it displays anything. On TIO, letting the program run until the 60-second timeout shows no output, either--you have to click the Run button (or hit Ctrl-Enter) again to halt it.</p>\n\n<h3>Explanation</h3>\n\n<p>This explanation assumes you're familiar with BitCycle.</p>\n\n<p>Conceptually, we store two numbers at a time, the <em>smaller</em> and the <em>larger</em>. At each step, we output the larger, set the new larger to be the larger plus the smaller, and set the new smaller to be the larger.</p>\n\n<p>We store and output the numbers in unary (using <code>1</code> bits), but we also need a separator (<code>0</code> bit) after each number output. Our approach is to store the separator at the end of each number. When adding two numbers, we discard the separator from the first number added, and keep the separator from the second number added.</p>\n\n<p>In the code, the leftmost <code>C</code> collector holds the smaller number, while the rightmost <code>C</code> collector holds the larger. We're actually going to store everything negated, so the numbers are made of <code>0</code> bits and the separators are <code>1</code> bits. Thus, the leftmost <code>C</code> initially gets a single <code>1</code> (unary zero plus a separator bit) and the rightmost <code>C</code> gets <code>01</code> (unary one plus a separator bit).</p>\n\n<p>The <code>C</code> collectors open and dump their contents straight into the <code>B</code> and <code>A</code> collectors.</p>\n\n<p>Next, the <code>A</code> collector opens, holding the larger number. It goes through a couple of dupneg devices, with the following results:</p>\n\n<ul>\n<li>A copy goes into the leftmost <code>C</code> collector, becoming the new smaller number.</li>\n<li>A negated copy goes into the sink <code>!</code> and is output.</li>\n<li>A doubly-negated copy goes into the rightmost <code>C</code> collector, but the <code>+</code> ensures that it's only the <code>0</code> bits, not the trailing <code>1</code> separator.</li>\n</ul>\n\n<p>Finally, the <code>B</code> collector opens and dumps its contents into the rightmost <code>C</code>, adding the former smaller number to the former larger number to create the new larger number. The cycle repeats forever.</p>\n\n<h3>Other versions</h3>\n\n<p>Here's a modified version (still 21 bytes) that strips the separator off the smaller number (instead of the larger) before adding:</p>\n\n<pre><code>10&gt;v ~!\nBA+BA~\n^    &lt;\n</code></pre>\n\n<p>And here's an <strong>18-byte</strong> version that starts at 0 instead of 1. (Thanks to <a href=\"https://codegolf.stackexchange.com/users/76162/jo-king\">Jo King</a> for golfing it down from 21 bytes.) Here, we start with the \"smaller\" number at 1 and the \"larger\" number at 0, generating the extended Fibonacci sequence 1,0,1,1,2,3,... (Since the \"larger\" number is what we output, we don't see the first 1.)</p>\n\n<pre><code> 1+ ~!\nCBCA~\n^10 &lt;\n</code></pre>\n"},{"answer_id":173764,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/173764#173764","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Perl 6</a>, <s>18</s> 16 bytes</h1>\n\n<p><em>-2 bytes thanks to nwellnhof</em></p>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{(0...*∉@_)-1}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYKvwv1rDQE9PT@tRR6dDvKauYe3/4sRKhTSNaAMdQx0jHWMdEx3TWE1rLiRRBQWcokCx/wA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>Anonymous code block that counts up until it finds a number that is not an element of the input list, and returns the length of the range minus one</p>\n"},{"answer_id":180985,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/180985#180985","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf\" rel=\"nofollow noreferrer\">MathGolf</a>, 10 bytes</h1>\n\n<pre><code>α96α=¿ÅJ∞*\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syUjPz0n7///cRkuzcxttD@0/3Or1qGOe1v9sda1sdVttbe2Y/4YKhlyGCkZcpgqmXGZAtpmCGZelgiUQmwHZlv8B\" rel=\"nofollow noreferrer\" title=\"MathGolf – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<p>The footer is just to format the output. </p>\n\n<pre><code>α                      wrap last two elements in array\n 9                     push 9\n  6                    push 6\n   α                   wrap last two elements in array\n    =                  pop(a, b), push(a==b)\n     ¿                 if/else (uses one of the next two characters/blocks in the code)\n      Å                start block of length 2\n       J               push 21\n        ∞              pop a, push 2*a\n         *             pop a, b : push(a*b)\n</code></pre>\n"},{"answer_id":124267,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124267#124267","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 11 bytes</h1>\n<pre><code>[BE]=?42}Gp\n</code></pre>\n<p>Input is an array with the two numbers.</p>\n<p><a href=\"https://tio.run/##y00syfn/P9rJNdbW3sSo1r0AyDHTUbCMBQA\" rel=\"nofollow noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>[BE]    % Push array [6, 9]\n=       % Implicit input: array of two numbers. Compare with [6, 9] element-wise\n?       % If the two entries are true\n  42    %   Push 42\n}       % Else\n  G     %   Push input\n  p     %   Product of array\n        % Implicit end. Implicit display\n</code></pre>\n"},{"answer_id":180963,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/180963#180963","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 49 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)$a-in(0,1|%{-join($a|% t*y|sort -d:$_)})\n</code></pre>\n\n<p><a href=\"https://tio.run/##ZdDNCsIwDADg@54ijExaWUGvguD/M6iXUWxEZbqt7dCx7dln/ReaU/iSEJI8u5I2B0rTDvcwhrrLpZZnhpKjFMcLG8TDJqrFKXM5yiYC268ak2kLQo0w4S3v2iCYsABcxCyczuaL5SqMAa0uiX94u1l7dsk8sprIw8KTx5L5Q/cyNT@uyPioiNSfcmgggvpZReOcbjntLCl3PCYv1mTK1DrouZ@geWKI7O2Ciu8QH326w6Dt7g\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":180944,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/180944#180944","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 8 bytes</h1>\n\n<pre><code>c69∧42|×\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r/qG3Do6bGh1snlP9PNrN81LHcxKjm8PT//6OjjXSMY3WijXWMgKSZjiWQtNQxA7EtdQyAlIGOGVjMTMcQSBnpmMbGAgA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n\n<p>A predicate which takes a pair of numbers as its input variable and outputs their correct product through its output variable.</p>\n\n<pre><code>            If the input\nc           concatenated\n 69         is 69,\n   ∧42      then output 42,\n      |     otherwise\n       ×    output the product of all numbers in the input.\n</code></pre>\n\n<p>I have no clue why <code>[0,69]c69</code> fails, but I am very glad that it does! (Running <code>69~cᶠw</code> confirms that <code>[6,9]</code> is the only two-element list that concatenates to <code>69</code>.)</p>\n"},{"answer_id":180451,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/180451#180451","body":"<h1>Awk, 35 bytes</h1>\n\n<pre><code>BEGIN{for(y=1;z=x+y;y=z)print(x=y)}\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzP/v/fydXd0686Lb9Io9LW0LrKtkK70rrStkqzoCgzr0SjwrZSs/b/fwA\" rel=\"nofollow noreferrer\">Try it online</a></p>\n"},{"answer_id":180447,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/180447#180447","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 43 bytes (another try)</h1>\n\n\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;a.filter((t={},e=&gt;!(1-(t[e]=++t[e]|0))))\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9oC0R2iXppmTklqUUaGiW21bU6qbZ2ihqGuhol0amxttraIKrGQBMI/ifn5xXn56Tq5eSna3ApAEGiRrSxjoIBGBmCEZBhqqNgHKvJpWnNhU29rrEJTLmFjoIJSCGqOk5MRToKQAGQyv8A\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":180445,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/180445#180445","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 60 bytes</h1>\n\n\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=&gt;[...new Set(f.filter(e=&gt;f.indexOf(e)!=f.lastIndexOf(e)))]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9mC0R20Xp6enmp5QrBqSUaaXppmTklqUUaqbZ2aXqZeSmpFf5pGqmairZpejmJxSWecBFNzdj/yfl5xfk5qXo5@ekaaRrRxjoKBmBkCEZAhqmOgnGspqY1F5pKXWMTmEIwE4gsgCRWpRCTDEFy/wE\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":119594,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/119594#119594","body":"<h1>JavaScript, <s>35</s> 28 bytes</h1>\n<pre><code>a=&gt;a.filter(o=x=&gt;!(o[x]^=1))\n</code></pre>\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/Z9m@z/R1i5RLy0zpyS1SCPftsLWTlEjP7oiNs7WUFPzf3J@XnF@TqpeTn66RppGdKympoK@vkJ0LBeahK6hjoGOIU5pQ4ScIYakMVArULMOyAhTHWOYQmOwiRgWGZuAFYNoEx0LHROYcrBA7H8A\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n<p>After posting this, I realised that it was very similar to <a href=\"https://codegolf.stackexchange.com/a/60639/58974\">w0lf's solution</a>.</p>\n"},{"answer_id":64338,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/64338#64338","body":"<h2>PowerShell v3+, <s>75</s> <s>67</s> <s>49</s> 47 bytes</h2>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$l=,@()*2\n$args|%{$l[($f=!$f)]+=$_}\n$l[0]\n$l[1]\n</code></pre>\n<p><a href=\"https://tio.run/##bZDRaoQwEEXf8xWz2bEk3SkYtT4UBP9jkUW60RZCa9XSgvrt7kS3Fpa9D8PMvWcGkubzx7bdm3VuxgoyGGZ0GeVKP0YCy7buxmBAd1RYZTusdHHI8DQJdsLCV1PMkxC5EsAilauQwBBEBLEmCJfO@OEOQJBsTHKLGeMDj8UxdwmL4NmLIOW1JV@zq@vhFUv/zzDJRQsNIwQwLD6WhPa3sa@9PfOL8bS6re2@Xc/GA39EXsIeusaVff/@US@ARCWvkHyyX3K7IfXL37YU03wB\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n<p>Expects input via splatting, as shown on the TIO link.</p>\n<p>Creates an matrix <code>$l</code> as an array of arrays, then pipes the input <code>$args</code> into a loop <code>|%{}</code>. Each time through the loop, we add an element to one of the two child arrays of <code>$l</code> by flip-flopping the <code>$f</code> variable using Boolean logic. The first time through, <code>$f</code> is <code>$null</code>, the <code>!</code> of which is <code>$true</code>, or <code>1</code> when indexing into an array. This means the first element gets put into the second array of <code>$l</code>, so that's why <code>$l[1]</code> gets output first.</p>\n<p><em>Props to <a href=\"https://codegolf.stackexchange.com/users/571/tessellatingheckler\">TessellatingHeckler</a> for the golfing assistance and this variation.</em><br />\n<em>-2 bytes thanks to mazzy.</em></p>\n<hr />\n<h3>Caveats</h3>\n<p>Going strictly as the question is written, this is technically invalid, as PowerShell doesn't have a concept of &quot;lists&quot; as pseudo-immutable objects, only arrays or hash tables (aka dictionaries). So, I'm treating the question's line &quot;<em>Use most natural representation for lists that your language has</em>&quot; as asking about arrays, as that's the closest PowerShell has. Additionally, output is one element per line, since that's the default PowerShell way to write out an array. This means an input of <code>(0,1,2,3,4)</code> will output <code>0\\r\\n2\\r\\n4\\r\\n1\\r\\n3\\r\\n</code>.</p>\n"},{"answer_id":180297,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/180297#180297","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 1 byte</h1>\n\n<pre><code>ó\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn///Dm//@jDXQUDHUUjHQUjHUUTGIB\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n"},{"answer_id":180094,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/180094#180094","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 3 bytes</h1>\n<pre><code>ñÏu\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.6&amp;code=8c91&amp;input=WzExMCwgMjIsIDMzMzAsIDQ0NDQsIDU1NTU1LCA2XQotUQ==\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>ñÏu     :Implicit input of array\nñ       :Sort by\n Ï      :Passing the 0-based index of each through a function\n  u     :  Modulo 2 of index\n</code></pre>\n<hr />\n<pre><code>ó c\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.6&amp;code=8yBj&amp;input=WzExMCwgMjIsIDMzMzAsIDQ0NDQsIDU1NTU1LCA2XQotUQ==\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>ó c     :Implicit input of array\nó       :Split into 2 arrays of every 2nd item\n  c     :Flatten\n        :Implicit output\n</code></pre>\n"},{"answer_id":180093,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/180093#180093","body":"<h1>C# 7.3, 100 bytes</h1>\n\n<pre><code>List&lt;int&gt; M(List&lt;int&gt; x)=&gt;x.Select((y,i)=&gt;(y,i)).GroupBy(y=&gt;y.i%2).SelectMany(y=&gt;y).Select(y=&gt;y.y).ToList();\n</code></pre>\n\n<p>This is pretty much idiomatic for C#, but I don't think a non-idiomatic solution would be much shorter.</p>\n"},{"answer_id":180091,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/180091#180091","body":"<h1>PHP, <s>78</s> 69 bytes</h1>\n<p>PHP can chunk and slice, but not interleave arrays; that makes this a bit bulky:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>function(&amp;$a){while($i++&lt;count($a)&gt;&gt;1)$a[]=array_splice($a,$i,1)[0];}\n</code></pre>\n<p>Call by reference or <a href=\"http://sandbox.onlinephpfunctions.com/code/5361b4d27e2c98791cfd58d0b38f6eb033ce50a7\" rel=\"nofollow noreferrer\">try it online</a>.</p>\n<hr />\n<p>first approach (programs for 78 bytes):</p>\n<pre class=\"lang-php prettyprint-override\"><code>for(;++$i&lt;$argc;)echo&quot;,&quot;,$argv[$i++];for($i=1;++$i&lt;$argc;)echo&quot;,&quot;,$argv[$i++];\n</code></pre>\n<p>prints a leading comma; insert <code>[!$i]</code> before the first<code>$argv</code> to remove it.</p>\n<p>Two other 78 byte solutions (print a leading and a trailing comma):</p>\n<pre class=\"lang-php prettyprint-override\"><code>for($n=$argc-2|1;++$i&lt;$argc*2;)$i&amp;1?print&quot;,&quot;.$argv[$i]:$argv[$n+=2]=$argv[$i];\nfor($n=$argc-2;++$i&lt;$argc*2;)$i&amp;1?print&quot;,&quot;.$argv[$i]:$argv[1|$n+=2]=$argv[$i];\n</code></pre>\n<p>Run with <code>php -nr '&lt;code&gt;' &lt;arguments&gt;</code> or <a href=\"http://sandbox.onlinephpfunctions.com/code/2bcfad8c84fbf09089bf9066c754c138f4cb2bc1\" rel=\"nofollow noreferrer\">try them online</a></p>\n"},{"answer_id":176534,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/176534#176534","body":"<h1><a href=\"https://github.com/bforte/Alchemist\" rel=\"nofollow noreferrer\">Alchemist</a>, <s>104</s> 87 bytes</h1>\n\n<p><sup>-10 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/39244/ascii-only\">ASCII-only</a>!</sup></p>\n\n\n\n<pre class=\"lang-bash prettyprint-override\"><code>_-&gt;b+c+m\nm+b-&gt;m+a+d\nm+0b-&gt;n\nn+c-&gt;n+b+d\nn+0c-&gt;Out_a+Out_\" \"+o\no+d-&gt;o+c\no+0d+a-&gt;o\no+0a-&gt;m\n</code></pre>\n\n<p>Produces infinitely many Fibonacci numbers, <a href=\"https://tio.run/##FcjLCcAgEIThu1UEr4MgKcAWUoL4CETIugFN@9msl/k/Jt3lOqmNKRJdyCggQ8guEBKq0qu76SgaZL06vPp4Z0xYazcLNozqAqMofEVSL2lJ5ONnNu5DXN1/\" rel=\"nofollow noreferrer\" title=\"Alchemist – Try It Online\">try it online!</a></p>\n\n<h2>Ungolfed</h2>\n\n<pre class=\"lang-bash prettyprint-override\"><code>_ -&gt; b + c + s0\n\n# a,d &lt;- b\ns0 +  b -&gt; s0 + a + d\ns0 + 0b -&gt; s1\n\n# b,d &lt;- c\ns1 +  c -&gt; s1 + b + d\ns1 + 0c -&gt; Out_a + Out_\" \" + s2\n\n# c &lt;- d &amp; clear a\ns2 +  d     -&gt; s2 + c\ns2 + 0d+  a -&gt; s2\ns2     + 0a -&gt; s0\n</code></pre>\n\n<p><a href=\"https://tio.run/##JY1RCsIwEET/c4qlgj8aSPMtXsEjlGS3YKFaceP1G3e6C0smbyaTsvJzfi3aep8o3qnShdhWUwgnKlehW6QaNBkz0xKHLLbiNDkdka@e56Aj8uyOyep5yHTQx69NKME50IAfMxoY74XOxOtcvlSCZjQJYdCGKztNYk5xCoIx6iT1vm@ftmxv7VHyHw\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":42443,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/42443#42443","body":"<h2>Brainfuck, <strike>16,15,</strike> 14/13 chars</h2>    \n\n<pre><code>+[[-&gt;+&gt;+&lt;&lt;]&gt;]  \n</code></pre>\n\n<p>Generates the Fibonacci sequence and does not print out anything.\nAlso, is shorter than the one above.  </p>\n\n<pre><code>+[.[-&gt;+&gt;+&lt;&lt;]&gt;]   \n</code></pre>\n\n<p>This one has 14 characters but prints out ASCII characters with the the values of the Fibonacci sequence.</p>\n"},{"answer_id":179336,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/179336#179336","body":"<h1><a href=\"https://github.com/bforte/Alchemist\" rel=\"nofollow noreferrer\">Alchemist</a>, 68 bytes</h1>\n\n<pre><code>y+_-&gt;y+a+b\ny+0_-&gt;z\nz+a-&gt;z+_\nz+0a-&gt;x\nx+b-&gt;x+a\nx+0b-&gt;y+Out_a+Out_\" \"!y\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8xJzkjNzSwu@f@/Ujte165SO1E7iatS2wDIruKq0k4EUtrxQIYBkFXBVaGdBKS0E4EMgySQav/SkvhEMKmkoKRY@f//v/yCksz8vOL/uilGAA\" rel=\"nofollow noreferrer\" title=\"Alchemist – Try It Online\">Try it online!</a></p>\n\n<p>Outputs the 1-based sequence infinitely, If you want 0-based (i.e. <code>0 1 1 2 3 5...</code>), you can change the trailing <code>y</code> to either <code>x</code> or <code>z</code>.</p>\n\n<h3>Explanation:</h3>\n\n<pre><code>!y              # Initialise the program with the y flag alongside the default _\n\ny+_-&gt;y+a+b      # Convert all _ atoms to a and b atoms\ny+0_-&gt;z         # Once we're out of _ atoms, change to the z flag\n\nz+a-&gt;z+_        # Convert the a atoms back to _ atoms\nz+0a-&gt;x         # Switch to the x flag\n\nx+b-&gt;x+a        # Convert all b atoms to a atoms\nx+0b-&gt;y         # Once we're out, change to y flag\n       +Out_a   # Print the number of a atoms\n       +Out_\" \" # And a separator\n</code></pre>\n\n<p>If it makes you feel better, here's a more pseudo-codey version:</p>\n\n<pre><code>_=1\nwhile true:\n    a=a+_\n    b=_\n    _=a\n    a=b\n    print a\n</code></pre>\n"},{"answer_id":179281,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/179281#179281","body":"<h1>C++, 42 bytes</h1>\n<p>I haven't read every solution in this challenge, but the leaderboard doesn't have a C++ solution, which is a travesty.</p>\n<pre><code>int f(int i){return i--&gt;1?f(i)+f(i-1):!i;}\n</code></pre>\n"},{"answer_id":178674,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/178674#178674","body":"<h1><a href=\"https://www.microsoft.com/net/core/platform\" rel=\"nofollow noreferrer\">C# (.NET Core)</a>, <s>68</s>, 56 bytes</h1>\n\n<p>Lambda using decimal size for single n.</p>\n\n<p>EDIT:  Ty Jo King for pointing out better ways to assign the maths to the vars!</p>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>p=&gt;{decimal a=0,b=1,j=0;for(;j++&lt;p;b=a-b)a+=b;return a;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##LY7LCoMwFET3fsVdJmhF1zFuCl21ULDQ9c2jEtFE8igU8dutpTKLGc5sjgwn6bzeUjC2h@4Top5YJkcMAe7e9R6nJQOYkxiNhBAx7vV2RsENjSX0dwJckpWN0tJMOBZwjBYU8G3m7XIAQF4VgtfFwCv2cp6wIc@bmQmOJ0Ex54J5HZO3gGzdWPa3Kc/OBjfq8ulN1FdjNVGkrmj5cF30uzWhlGXrnu0L\" rel=\"nofollow noreferrer\" title=\"C# (.NET Core) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":60637,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/60637#60637","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, <s>13</s> 9 <a href=\"https://codegolf.meta.stackexchange.com/a/9429/43319\" title=\"When can APL characters be counted as 1 byte each?\">bytes</a><sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\" title=\".dyalog files using a single byte character set\">SBCS</a></sup></h1>\n\n<p>Anonymous tacit prefix function.</p>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>∊(⊂1↓⊣¨)⌸\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT////1FHl8ajribDR22TH3UtPrRC81HPjv9pj9omPOqb6hXs7/eoY4bGo94@IM/T/1FX86H1xo/aJgJ5wUHOQDLEwzNYE6gEqvh/moJ6dKw6F4jSNdRRMNBRMIRyDRFMY7AESA6MgAxTHQVjmDZjE5gcmAlEFkAyVh0A\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>(</code>…<code>)⌸</code> for each unique element (left argument) and the indices where it occurs (right argument), apply the following tacit function:</p>\n\n<p> <code>⊣¨</code> one of the left (the unique element) for each on the right (the indices)</p>\n\n<p> <code>1↓</code> drop one</p>\n\n<p> <code>⊂</code> enclose (prevents padding with zeros to create a non-ragged matrix)</p>\n\n<p><code>∊</code> <strong>ϵ</strong>nlist (flatten)</p>\n"},{"answer_id":178005,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/178005#178005","body":"<h1><a href=\"https://github.com/Draco18s/RunicEnchantments/tree/Console\" rel=\"nofollow noreferrer\">Runic Enchantments</a>, 25 bytes</h1>\n\n<pre><code>iu+2%1(8*?\"light\"@\"dark\"@\n</code></pre>\n\n<p><a href=\"https://tio.run/##KyrNy0z@/z@zVNtI1VDDQsteKSczPaNEyUEpJbEoW8nh//9kYwA\" rel=\"nofollow noreferrer\" title=\"Runic Enchantments – Try It Online\">Try it online!</a></p>\n\n<p>How it works</p>\n\n<pre><code>&gt;                      implicit entry\n i                     read string from input\n  u                    break the string into characters\n   +                   add them together\n    2%                 modulo 2\n      1(               compare with 1\n        8*             multiply the result (true -&gt; 8, false -&gt; 0)\n          ?            pop x, if x is truthy, skip x characters\n           \"light\"@    output light if false\n           \"dark\"@     ouput dark if true\n</code></pre>\n"},{"answer_id":178000,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/178000#178000","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, 45 bytes</h1>\n\n<pre><code>{if(it.sumBy{it-'@'}%2&gt;0)\"light\" else \"dark\"}\n</code></pre>\n\n<p><a href=\"https://tio.run/##JY5NCsIwGET3PcUQkCaLij@7Qqu4ducJok3rR9PEJqkgJWePtc5q4MGb6W3QZNJbajystq4EvwVHphMoavwrqjRTyyls/TRcPjOFIj/ncXOod4Jp6p6BQWmvwBrpehZTOxkMkgwXmDMs@en9iApOyeZKRi3kVILJPVv5a5kJfD3A/ShEFtP9@AU\" rel=\"nofollow noreferrer\" title=\"Kotlin – Try It Online\">Try it online!</a></p>\n"},{"answer_id":177998,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/177998#177998","body":"<h1><a href=\"http://www.mono-project.com/\" rel=\"nofollow noreferrer\">F# (Mono)</a>, 63 bytes</h1>\n\n\n\n<pre class=\"lang-fs prettyprint-override\"><code>printf(if(stdin.Read()+stdin.Read())%2&lt;1 then\"dark\"else\"light\")\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyvWzc3Py///v6AoM68kTSMzTaO4JCUzTy8oNTFFQ1MbmaOpamRjqFCSkZqnlJJYlK2UmlOcqpSTmZ5RoqT5/3@iIQA\" rel=\"nofollow noreferrer\" title=\"F# (Mono) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":177996,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/177996#177996","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/tree/fb4a2ce2bce6660e1a680a74dd61b72c945e6c3b\" rel=\"nofollow noreferrer\">05AB1E (legacy)</a>, 13 bytes</h1>\n\n<pre><code>“–°‡Ž“#I35öÈè\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f//UcOcRw2TD2141LDw6F4gR9nT2PTwtsMdh1f8/59kCAA\" rel=\"nofollow noreferrer\" title=\"05AB1E (legacy) – Try It Online\">Try it online!</a></p>\n\n<p>Here is a golf with your own language :)</p>\n\n<h2>Explanation</h2>\n\n<pre><code>“–°‡Ž“       : compressed: \"dark light\"\n      #      : split by space\n            è: select the 0th or 1st element based on {\n       I35ö  :  take the input and convert it to int from base 35\n           È :  1 if even else 0\n               }\n</code></pre>\n"},{"answer_id":177948,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/177948#177948","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 100 bytes</h1>\n\n<pre><code>proc M L {expr ([lindex [set S [lsort -r $L]] [set h [expr [llength $L]/2]]]+[lindex $S end-$h])/2.}\n</code></pre>\n\n<p><a href=\"https://tio.run/##jU/LCoMwELz3K@bgoaX4itrHP@jJY8ihaKiFGENMQZB8e5pUeiztwrC7MzvsrumEc0pPHRrUWPmiNPZUPGTPF9CZG7SgYp60QawR1Yxt7AD6nqVCcHk3Q5BSwhg7fsxRCy77OBrYISWJdWK8qbBit@YgKFCiwglnXHC1gSs9R0KVVPiF2KcshO8Kj/JP31fvdo@vCrvdl2fwgsWqnmYGbcJ/1r0A\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<p><s></p>\n\n<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 97 bytes</h1>\n\n<pre><code>proc M L {expr ([lindex [set S [lsort $L]] [set h [expr [llength $L]/2]]]+[lindex $S end-$h])/2.}\n</code></pre>\n\n<p><a href=\"https://tio.run/##jU/LCoMwELz7FXPw0FLUNtE@/kFPHkMORUMtpDFoCkLIt6dJpcfSLgw7O7uz7JpOeq@nsUODGlYsesKGybvqxQI2C4MWTM7jZJDWnK/SAPYeZFIKdTNDbBWEc777ONMWQvVZOvBtQXLn5eOq4/7EHkBAUaLCESeccXFRK4NGIssr/EIW0j5GqGhA@afvq3e9JzDqEgern2YGa@JTzr8A\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<h2></s></h2>\n\n<p><s></p>\n\n<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 123 bytes</h1>\n\n<pre><code>proc M L {set I [lindex [set S [lsort $L]] [expr [set n [llength $L]]/2]]\nexpr {$n%2?$I:($I+[lindex $S [expr $n/2-1]])/2.}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##jU/LCoMwELz7FXNIoaWoNWpfl54FPXkMORQb2oKNoikIId9uE22PpV1YdmaH2Yeq6nFsu6ZCgRy6FwoZWH2XFzGAOVpa2jedAsk5BxND282CtEIt5FXdJimknHuTqolc0BPJjkuSrT@zSPn2EhlSP@J8FdLAmLF@nFu32dMRKGIkSLHFDnscjOsltkcdClL8St@WjQvLYpvJn76v3vkei2LjGej2qXqwwr1rxhc\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<h2></s></h2>\n\n<p><s></p>\n\n<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 124 bytes</h1>\n\n<pre><code>proc M L {set n [llength [set S [lsort $L]]]\nset I [lindex $S [expr $n/2]]\nexpr {$n%2?$I:($I+[lindex $S [expr $n/2-1]])/2.}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##jVBNC8IwDL3vV7xDBUW2uW7z6@J5sJ08jh5kFhVmV7YKg9HfXlO9KhoIee8lj4SYpnVO912DCiWmQRoo1G0r1cVcUXt@JD50vQErhRCBlwqSbuosRzDqylH3YCrm1H3hiakZP7BiP2fF8uNkmAixiHlkrWvvJ@1XB1MCjhQZcqyxwRY767WMNO5RlONXhlRWPoillNmfvq/e9z2EUhtYTPphBtSV/4R1Tw\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<h2></s></h2>\n\n<p><s></p>\n\n<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 133 bytes</h1>\n\n<pre><code>proc M L {proc G L\\ i {lindex $L [expr $i]}\nexpr {[set n [llength [set S [lsort $L]]]]%2?[G $S $n/2]:([G $S $n/2]+[G $S $n/2-1])/2.}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##jZBPC4JAEMXvfop3MChCzVX7d@noRU8eNw9RUsK2im4gLPvZbdYOdYkaGOb3Bh68GXUW49h2zRk5MuiJUmRH1NCilpdqgJuBV0Pbwa1L40ykeV8pSHAhKnlVN0y6IN03nSJHSTVjB57CLeDKgJX7@YdYvtkLy0XAfGNGcT@1NoOjQzBEiJFgjQ222Bm7i2nHLPkJfrVHY2WLVEQd/@n76n3lIYqMY@hPD9WD5/ZSMz4B\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<h2></s></h2>\n\n<p><s></p>\n\n<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 135 bytes</h1>\n\n<pre><code>proc M L {expr {[set n [llength [set S [lsort $L]]]]%2?[lindex $S [expr $n/2]]:([lindex $S [expr $n/2]]+[lindex $S [expr $n/2-1]])/2.}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##jVDLCsIwELz3K@ZQQZG2Nm19XfyB9uQx5CA1qBDT0EYohHx7TOrVogvDzoOBZXUrnFN916JBDcNH1cPQgWtIUCG4vOk7Jn32euh6jbhmfhbkRMVDXvmI2EdTMZYZYey4nAnWX/0kZ2yVkdRaJ54XFa6ITA6CAiUqbLHDHgcbvNJ7JLC0wi8kfm3CeFV4lH/2ZrufezwrbGRh1EsPoE34hnVv\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<p>Still very ungolfed, my first minimum viable product!\n</s></p>\n"},{"answer_id":177942,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/177942#177942","body":"<h1><a href=\"https://www.lua.org\" rel=\"nofollow noreferrer\">Lua</a>, <del>64</del> 63 bytes</h1>\n\n\n\n<pre class=\"lang-lua prettyprint-override\"><code>function f(t)table.sort(t)h=#t//2return(t[h+1]+t[h+#t%2])/2 end\n</code></pre>\n\n<p><a href=\"https://tio.run/##XYhBCoMwFESvMiCFBD@NSVt3nkRcWE1QkG@JP6vi2WOli0IXbx7zltTnHBIPMq@MoERL/1z8dVujfM7UFGKMi15SZCXtVNquPFXIxXXaOHge8yvOLCq8YQmOcCPcCQ9CjZ3wn3/NViffqbDrfAA\" rel=\"nofollow noreferrer\" title=\"Lua – Try It Online\">Try it online!</a></p>\n\n<p>Sort table, get the position halfway through the table by integer-dividing table length by two, return average of element at half position plus one and element at half position if table length is even, else at half position plus one.</p>\n\n<p>This solution is only valid in Lua 5.3 and onwards where there is integer division, <code>//</code> (and where integers can be squished right next to the keyword <code>return</code>). In Lua 5.1, the equivalent is <code>math.floor(a/b)</code>, which would add several bytes.</p>\n"},{"answer_id":177917,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/177917#177917","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 59 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda l:l.sort()or(len(l)&lt;3)*(l[0]+l[-1])/2or f(l[1:-1])\n</code></pre>\n\n<p><a href=\"https://tio.run/##jY/NDoIwEITvPsWGU6sLAgV/iDxJ7QEjBJK1JaUXn74uejXRSSa732TnsPMzjM6qSNMS@gVa0LrAEhVWWOMBj3jCs0HgsOKwfK9Zjb@c8shXMSl29W/xe9nEoaXucbt3QA1li/NBSOcF9VaQvCi5FaRzsyOdFkbuS@dh4KRoVowDI8Fk4fNkswHW7CcbBCEk15Dgei5lfAE\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n\n<p>This is a recursive version: </p>\n\n<ul>\n<li>the list is sorted</li>\n<li>if there are 1 or 2 elements left, we output the median since 0  and -1 are both first and last with a single or atwo element list</li>\n<li>if not, we remove first and last elements and call f.</li>\n</ul>\n"},{"answer_id":177684,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/177684#177684","body":"<h1><a href=\"https://github.com/FTcode/Symbolic-Python\" rel=\"nofollow noreferrer\">Symbolic Python</a>, <s>34</s> 31 bytes</h1>\n\n<p><em>-3 bytes thanks to H.PWiz!</em></p>\n\n<pre><code>__('__=_/_;'+'_,_=_+__,__;_'*_)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K67MTcrPyUzWLagsycjP@/8/Pl5DPT7eNl4/3lpdWz1eB8jUjgdS8dbx6lrxmv///zcBAA\" rel=\"nofollow noreferrer\" title=\"Symbolic Python – Try It Online\">Try it online!</a></p>\n\n<p>Returns the nth element of the Fibonacci, 1-indexed, starting from <code>1,1,2,3,5...</code>.</p>\n\n<h3>Explanation:</h3>\n\n<pre><code>__(                           ) # Eval as Python code\n   '__=_/_;'                    # Set __ to 1\n            +'             '*_  # Then repeat input times\n              _,_=_+__,__;      # On the first iteration, set _ to __ (1)\n                         ;_     # On future iterations, prepend a _\n             __,_=_+__,__;      # Set __ to the next fibonacci number\n                                # And set _ to the old value of __\n                                # Implicitly output _\n</code></pre>\n\n<p>Or, H.PWiz's version:</p>\n\n<pre><code>__('_=__=_/'+'_;__,_=_+__,_'*_)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K67MTcrPyUzWLagsycjP@/8/Pl5DPd42Hoj01bXV463j43WAbG0Qpa4Vr/n//39DAwA\" rel=\"nofollow noreferrer\" title=\"Symbolic Python – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation:</h3>\n\n<pre><code>__('_=__=_/'+'_;__,_=_+__,_'*_)\n\n__(                           ) # Eval as Python code\n   '_=__=_/'+'_;                # Set both _ and __ to 1\n             '             '*_  # Repeat input times\n                __,_=_+__,__    # Set __ to the next fibonacci number\n                                # And set _ to the old value of __\n                __,_=_+__,_     # Except on the last iteration\n                                # Implicitly output _\n</code></pre>\n"},{"answer_id":177730,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/177730#177730","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 37 bytes</h1>\n\n<p>Prints the n'th term using the closed form.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression</a></p>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>function(n,s=5^.5)round((s/2+.5)^n/s)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/qfZqP7P600L7kkMz9PI0@n2NY0Ts9Usyi/NC9FQ6NY30gbyIvL0y/W/J@mYWhlZKD5HwA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":177729,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/177729#177729","body":"<h1><a href=\"https://github.com/agraef/pure-lang\" rel=\"nofollow noreferrer\">Pure</a>, 66 bytes</h1>\n\n<pre><code>using system;do(printf\"%Zd\\n\")(f 1L 1L with f a b=a:f b(a+b)&amp;end);\n</code></pre>\n\n<p><a href=\"https://tio.run/##KygtSv3/v7Q4My9dobiyuCQ11zolX6OgKDOvJE1JNSolJk9JUyNNwdAHhMozSzIU0hQSFZJsE63SFJI0ErWTNNVS81I0rf//BwA\" rel=\"nofollow noreferrer\" title=\"Pure – Try It Online\">Try it online!</a></p>\n\n<p>First answer in Pure \\o/</p>\n\n<p>Prints until TIO stops it or the heat death of the universe, whatever comes first.</p>\n\n<h3>How:</h3>\n\n<pre><code>using system;do(printf\"%Zd\\n\")(f 1L 1L with f a b=a:f b(a+b)&amp;end); // Anonymous lambda;\nusing system;                                                      // Import system functions\n             do                                                    // Infinite loop\n               (printf\"%Zd\\n\")                                     // Print bigints + linefeed\n                              (f 1L 1L                             // Declare f with 2 bigint args\n                                                                   // starting with 1\n                                       with f a b=                 // with f(a,b) being\n                                                  a:f b(a+b)       // a list from a until f(b,(a+b));\n                                                            &amp;      // transformed into a stream\n                                                                   // to prevent overflowing\n                                                             end);\n</code></pre>\n"},{"answer_id":177713,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/177713#177713","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 43 Bytes</h1>\n<pre><code>a,c=0,0;b=1\nwhile 1:print(a);c=a+b;a=b;b=c\n</code></pre>\n"},{"answer_id":131559,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/131559#131559","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 71 bytes (function implementation=43, Enter=1, call=27)</h1>\n\n<pre><code>proc F x {expr $x&gt;1?\\[F $x-1]+\\[F $x-2]:$x}\nwhile 1 {puts [F [incr i]]}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0nO@f@/oCg/WcFNoUKhOrWioEhBpcLO0D4m2g3I0DWM1YayjGKtVCpqucozMnNSFQwVqgtKS4oVgFLRmXnJRQqZsbG1//8DAA\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<p>Serves both purposes: Has a function <code>F</code> that allows calculate the <code>x</code>'th Fibonacci number. then it is called to show on stdout <code>F</code> applied to the whole range of positive integers.</p>\n"},{"answer_id":177657,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/177657#177657","body":"<h1><a href=\"https://en.wikipedia.org/wiki/Little_man_computer\" rel=\"nofollow noreferrer\">Little Man Computer</a>, 45 bytes, 8 instructions</h1>\n\n<blockquote>\n  <p>Note: both answers only work up to <span class=\"math-container\">\\$ f(15) = 987 \\$</span>, as the maximum value for an integer in LMC is <span class=\"math-container\">\\$ 999 \\$</span>.</p>\n</blockquote>\n\n<p>The first solution generates Fibonacci numbers 'indefinitely':</p>\n\n<p><Pre>\nLDA 7\nADD 8\nSTA 7\nSUB 8\nSTA 8\nOUT\nBRA 0\nDAT 1\n</pre></p>\n\n<p>and is assembled into RAM as</p>\n\n<pre><code>507 108 307 208 308 902 600 001\n</code></pre>\n\n<h2>86 bytes, 14 instructions</h2>\n\n<p>The second solution returns the Fibonacci number at the index given (0-based indexing):</p>\n\n<pre>\nINP\nSTA 0\nLDA 12\nADD 14\nSTA 12\nSUB 14\nSTA 14\nLDA 0\nSUB 13\nBRP 1\nLDA 14\nOUT\nDAT 1\nDAT 1\n</pre>\n\n<p>...which is assembled into RAM as:</p>\n\n<pre><code>901 300 512 114 312 214 314 500 213 801 514 902 001 001\n</code></pre>\n\n<p>You can test these on the online simulator <a href=\"https://peterhigginson.co.uk/lmc/\" rel=\"nofollow noreferrer\">here</a>.</p>\n"},{"answer_id":177619,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/177619#177619","body":"<h1><a href=\"https://github.com/FTcode/Pushy\" rel=\"nofollow noreferrer\">Pushy</a>, 13 bytes</h1>\n\n<pre><code>K46-$v;F@46+\"\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/##Kygtzqj8/9/bxExXpczazcHETFvp////ShmpOTn5eiWpxSV6emmZOalKAA\" rel=\"nofollow noreferrer\" title=\"Pushy – Try It Online\">Try it online!</a></strong></p>\n\n<pre><code>               \\ Implicit: string on stack as character codes\nK46-           \\ Subtract 46 from each code point, mapping '.' to 0\n    $v;        \\ While the top of stack is non-zero, move to auxiliary stack\n       F       \\ Copy auxiliary stack onto main stack\n        @      \\ Reverse (to obtain original order)\n         46+   \\ Add 46 (to obtain original characters)\n            \"  \\ Print as a string.  \n</code></pre>\n"},{"answer_id":121293,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121293#121293","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>77</s> <s>60</s> 52 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>char*f(char*s){for(s+=strlen(s);*--s-46;);return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##hc5NSwMxEAbgs/6KMFBIajMEFBHCgtCjCB48@XGIIdsEummZGalQ@tvXurJCFdYcMjNveJhEu4qx72MONG/1UNjs2w1pvmhYaJ2qZuPn1rK9uvbGU5J3qor9oe9Cqdrsz8@2VKq0Gmb2hlXTqBm/VFioY5ILyoeAOjlmoeAnNn7Kx0C0EexSl@DUj9G03@UgiIURJX/dbVknGPzQ/evxLXCmCH//Pz5M@0fn7m/r5V14eMLsdsvn1wzffpymfVilKuicg9/7x@zoD/0n\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n\n<p>-17 bytes from Jonathan Frech</p>\n\n<p>-8 bytes by removing <code>i</code> and doing arithmetic on <code>s</code> directly</p>\n\n<p>Ungolfed (same strategy):</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>char *extension(char *original) {\n    original = original + strlen(original);\n    while(original[0] != '.') --original;\n    return original;\n}\n</code></pre>\n"},{"answer_id":177009,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/177009#177009","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Perl 6</a>, <s>25</s> 16 bytes</h1>\n\n<p><em>-9 bytes thanks to nwellnhof</em></p>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>+*o&amp;combinations\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYKvwX1srXy05PzcpMy@xJDM/r/i/NVdxYqVCmoapjpEmjG1ogMwx1TE00LT@DwA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>Anonymous function that takes two numbers and returns an int. This uses the built-in <code>combinations</code> and converts the returned list to an int.</p>\n"},{"answer_id":177007,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/177007#177007","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 80 bytes</h1>\n\n<pre><code>proc C n\\ k {proc f n {expr $n?($n)*\\[f $n-1]:1}\nexpr [f $n]/([f $k]*[f $n-$k])}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0nO@f@/oCg/WcFZIS9GIVuhGsxJU8hTqE6tKChSUMmz11DJ09SKiU4DsnUNY60Ma7nAMmCBWH0NEJ0dqwWRB7I0a//n5CYWQI3jMlUw4qoF0gpAUFBaUqwQ7QxUCNLCVfsfAA\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n"},{"answer_id":173768,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/173768#173768","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf\" rel=\"nofollow noreferrer\">MathGolf</a>, <s>5</s> 4 bytes</h1>\n<pre><code>Jr,╓\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjPz0n7/9@rSOfR1Mn//0cb6JjrGOoY6RjrWOiY6JjFAgA\" rel=\"nofollow noreferrer\" title=\"MathGolf – Try It Online\">Try it online!</a></p>\n<p>This solution is restricted to just the range 0 to 20, though this can be extended easily by increasing the initial range.</p>\n<h3>Explanation:</h3>\n<pre><code>Jr     Range from 0 to 20\n  ,    Remove elements from the input list from this range\n   ╓   Return the minimum element\n</code></pre>\n<p>Alternatively, a 5 byte solution for all numbers:</p>\n<pre><code>Åï╧▲ï\n</code></pre>\n<p><a href=\"https://tio.run/##ASkA1v9tYXRoZ29sZv//w4XDr@KVp@KWssOv//9bMCw3LDEsMiwzLDgsNCw2XQ\" rel=\"nofollow noreferrer\" title=\"MathGolf – Try It Online\">Try it online!</a></p>\n<h3>Explanation:</h3>\n<pre><code>Å  ▲   Do while true\n  ╧    Does the input contain\n ï     The index of the loop?\n    ï  Push the number of iterations of the last loop\n</code></pre>\n"},{"answer_id":61481,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/61481#61481","body":"<h2>Burlesque, 8 bytes</h2>\n\n<p><em>Update</em>: With current WIP one can use <code>1J2q?+C~</code>. </p>\n\n<p>Shortest way to produce <code>[fib(0)..fib(n)]</code> without trashing the stack (14B):</p>\n\n<pre><code>{0 1q?+#RC!}RS\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<p>There's the concept of \"Continuation\" in Burlesque which basically means that\nyou run a function on a stack without destroying the stack. Fibonacci is the perfect example use-case for what these continuations are good for. If you have a program like <code>1 1 add</code> then this results in a stack of <code>2</code> because add destroys the data. If add were not to destroy the data the stack would look like <code>1 1 2</code> and if we just do <code>1 1 add add</code> it would look like <code>1 1 2 3</code>. So all we need to do to generate a Fibonacci sequence is to call add n-times without popping the arguments. A continuation takes a snapshot of the stack, runs the function, pops the result from the stack, reverts the stack to the snapshot and pushes the result of the function to it. <code>C!</code> is the Burlesque built-in for \"run this continuation n-times\". However, doing so would trash our stack (which is no problem if you just want to print out Fibonacci numbers). Otherwise we need to use the <code>RS</code> built-in which runs a function in a different stack environment. <code>RS</code> takes a value as an argument, creates an empty stack, pushes that value to it and then runs the given function on that stack and after the function has run it will collect that stack into a list and push that list to the main stack. <code>#R</code> rotates the stack because the stack layout will look like <code>N 0 1</code> but we need that <code>N</code> because it's the argument for <code>C!</code> so we rotate the stack. <code>q?+</code> is just shorthand for <code>{?+}</code> (q wraps the next token into a block).</p>\n\n<p>If you don't care about trashing the stack you just drop the <code>RS</code>:</p>\n\n<pre><code>blsq ) 10 0 1q?+#R!C\n0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n</code></pre>\n\n<p><a href=\"http://104.167.104.168/~burlesque/burlesque.cgi?q=1Jq%3F%2B100C!\" rel=\"nofollow noreferrer\">Try it online here</a>.</p>\n\n<p>Shortest way to produce fib(n) as a reusable non stack-trashing piece of code I can think of is (17B):</p>\n\n<pre><code>0 1{Jx/?+}#RE!jvv\n</code></pre>\n\n<h1>Older Stuff</h1>\n\n<p>There's dozens of ways to do that. These push the fibonacci numbers to the\nstack:</p>\n\n<pre><code>blsq ) 0 1{#s2.+++}10E!\nblsq ) 0 1q?+10C!\n</code></pre>\n\n<p>However, the snippets above will also trash your stack. Alternatives for that are either:</p>\n\n<pre><code>blsq ) 0 1{Jx/?+}10E!jvv\n</code></pre>\n\n<p>which just computes the 10th fibonacci number.\nAlso by still using continuations you can let the whole thing run in a seperate stack environment like uhm so:</p>\n\n<pre><code>blsq ) {10}{0 1q?+#RC!}rs\n{89 55 34 21 13 8 5 3 2 1 1 0}\nblsq ) 10{0 1q?+#RC!}RS\n{89 55 34 21 13 8 5 3 2 1 1 0}\n</code></pre>\n\n<p>Really depends on your needs.</p>\n"},{"answer_id":62707,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/62707#62707","body":"<h1><a href=\"http://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, <s>10</s> 9 bytes</h1>\n\n<p>(The language is newer than the question.)</p>\n\n<pre><code>W1o:y+YPo\n</code></pre>\n\n<p>Outputs infinite Fibonacci numbers on separate lines, beginning with 1. <a href=\"https://tio.run/##K8gs@P8/3DDfqlI7MiD//38A\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>The easy part is <code>W1</code>, which uses 1 as an always-truthy condition to create an infinite while loop.</p>\n\n<p>We use two built-in variables, <code>o</code> and <code>y</code>, which are initially <code>1</code> and <code>\"\"</code>, respectively. Note that an empty string in arithmetic contexts is treated as 0. At each iteration, <code>y</code> will hold the smaller of two consecutive Fibonacci numbers, and <code>o</code> will hold the larger.</p>\n\n<p>The loop body is a single expression: <code>o:y+YPo</code>. It's important to know that Pip evaluates a binary-operator expression by first evaluating the left operand, then the right operand, then performing the operation. So, using the third iteration as an example (<code>y</code> is <code>1</code>, <code>o</code> is <code>2</code>):</p>\n\n<ul>\n<li>The left operand of <code>:</code> (the assignment operator) is <code>o</code>; we'll compute <code>y+YPo</code> and then assign that value to <code>o</code>.</li>\n<li>The left operand of <code>+</code> is <code>y</code>, which is currently <code>1</code>.</li>\n<li>The right operand of <code>+</code> is <code>YPo</code>. <code>YP</code> is a unary operator that takes the value of its operand--here, <code>o</code>, which is <code>2</code>--prints it, and yanks it into <code>y</code>. So when <code>YPo</code> is evaluated, <code>2</code> is printed, <code>y</code> is set to <code>2</code>, and the expression evaluates to <code>2</code>.</li>\n<li><code>+</code> adds <code>1</code> and <code>2</code> and gives <code>3</code>.</li>\n<li><code>:</code> assigns <code>3</code> to <code>o</code>.</li>\n</ul>\n\n<p>The end result is that <code>2</code> is printed, <code>y</code> becomes <code>2</code>, and <code>o</code> becomes <code>3</code>. Repeat ad infinitum.</p>\n"},{"answer_id":175224,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/175224#175224","body":"<h2>Prolog, <strike>36</strike> <strike>35</strike> 29 bytes</h2>\n\n<pre><code>X+Y:-writeln(X),Z is X+Y,Y+Z.\n</code></pre>\n\n<p>Run with <code>1+1.</code>\n(I don't think having to call the base case is cheating, but let me know.)</p>\n\n<p>Prints the first parameter and a newline, sets Z to X+Y, then does a recursive call.</p>\n\n<p>Edit 1: Can use writeln(X) instead of write(X),nl, saving one character.</p>\n\n<p>Edit 2: Can use X+Y as a predicate instead of f(X,Y), saving 6 characters. Also the initial call is shorter.</p>\n"},{"answer_id":175042,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/175042#175042","body":"<h2>Emacs, 6 bytes</h2>\n\n<p>The cursor needs to be at the start of the line containing the string.</p>\n\n<p>This will delete the entire line if there's no extension.</p>\n\n<pre><code>C-&lt;SPC&gt; C-e C-r . &lt;RET&gt; &lt;BACKSPACE&gt;\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>C-&lt;SPC&gt;      start a selection\nC-e          go to the end of the line\nC-r . &lt;RET&gt;  search for \".\" backward\n&lt;BACKSPACE&gt;  delete the selected text (which should be the text before the last \".\")\n</code></pre>\n"},{"answer_id":174941,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/174941#174941","body":"<h1><a href=\"//github.com/Soaku/Pepe\" rel=\"nofollow noreferrer\">Pepe</a>, 48 bytes</h1>\n<pre><code>rEeeEeEEEeREEeREEEerEEREEEEEEEreererEEEEeEeereee\n</code></pre>\n<p><a href=\"https://soaku.github.io/Pepe/#!98T!pEE7*$RsG\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":174920,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/174920#174920","body":"<h1>Red 9 bytes</h1>\n\n<pre><code>Suffix? f\n</code></pre>\n\n<p>Assumes file is is in word 'f</p>\n"},{"answer_id":174791,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/174791#174791","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>40</s> 26 bytes</h1>\n\n<p>-14 bytes thanks to J.Doe\n</p>\n\n<pre class=\"lang-r prettyprint-override\"><code>sub(\"^.*[.]\",\"\",scan(,\"\"))\n</code></pre>\n\n<p><a href=\"https://tio.run/##PYqxCsIwGIT3PsY/JVKPgKuC4CgFBydLhTQ0JmBTSP7Sgvjs0VJxOb777mK2@60dg2E/BDHLVzI6HP4CgJxzGltBd2xqNFQSlctHfEHK/C4KK8h58MwkFzY6xoHRd323islpBnwC2C1p/fO3oNXJRbOWq1LVMezO@nKDU9Opbtw66EcXGEopkvkD\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":174787,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/174787#174787","body":"<h1>PowerShell, <del>34</del> 26 bytes</h1>\n\n<p>-8 bytes thanks to @mazzy</p>\n\n<pre><code>(Read-Host).Split('.')[-1]\n</code></pre>\n\n<p>Takes input from STDIN. Actually managed to golf it down shorter than the built-in.</p>\n\n<h1>PowerShell, 20 bytes</h1>\n\n<pre><code>($args-split'.')[-1]\n</code></pre>\n\n<p>Takes input from commandline arguments. Big thanks to @mazzy again!</p>\n\n<h1>PowerShell (with built-in), 36 bytes</h1>\n\n<pre><code>[IO.Path]::GetExtension((Read-Host))\n</code></pre>\n"},{"answer_id":174799,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/174799#174799","body":"<h2><a href=\"https://archive.org/details/BASIC-80_MBASIC_Reference_Manual\" rel=\"nofollow noreferrer\">MBASIC</a>, 129 bytes</h2>\n\n<pre><code>1 INPUT F$:F=INSTR(F$,\".\"):IF F=0 THEN END\n2 FOR I=LEN(F$) TO 1 STEP -1:P$=MID$(F$,I,1):O$=P$+O$:IF P$=\".\" THEN PRINT O$:END\n3 NEXT\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<p>Get a filename. If it doesn't contain a period, bail out.\nOtherwise, collect letters from right to left to build an output string.\nWhen we see a period, print the string.</p>\n\n<p><strong>Output</strong></p>\n\n<pre><code>? hi.txt\n.txt\n\n? .bashrc\n.bashrc\n\n? T00M@n3KaPZ.h0wC[]h\n.h0wC[]h\n</code></pre>\n"},{"answer_id":174605,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/174605#174605","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Perl 6</a>, 14 bytes</h1>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>*.repeated.Set\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYKvwX0uvKLUgNbEkNUUvOLXkvzVXcWKlQppGdKwmnKlrqKNgoKNgiCRkiMo1BisAqQEjIMNUR8EY2QhjE5g8mAlEFkASqOI/AA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>Gets a <code>Set</code> of the <code>repeated</code> elements.</p>\n"},{"answer_id":174603,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/174603#174603","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, 41 bytes</h1>\n\n<pre><code>{it.filter{v-&gt;it.count{it==v}&gt;1}.toSet()}\n</code></pre>\n\n<p><a href=\"https://tio.run/##bU/BioMwEL37FUNPyUGp6MJSqrDHhd78gYZuLGHjKMkoFMm324l2wcI@SGbmzePNzG9P1uAyKQs4nkBcjKfzN1ItIa2h0VsB1TIbylpjSbt5Smsubv2IxGxVTaHOQ0Y9q4UMSzsidMqgUO7uT/DlnHqcG3IG7@w6J8CI8yyP8lBB8/Cku@xq8Lr2IjKn1Y92Qr4zF4Pa78lODS/HP/BmfrCGxAEO8p/@S0M937VzigjJe7Z@be9E3BQMbhvLneHAR5FFgeOqkZtfSMKS5nCEPMn5FZxxDpH5gCJJi3KtYyzhE8on\" rel=\"nofollow noreferrer\" title=\"Kotlin – Try It Online\">Try it online!</a></p>\n"},{"answer_id":174476,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/174476#174476","body":"<h1><a href=\"http://jdk.java.net/\" rel=\"nofollow noreferrer\">Java (JDK)</a>, 84 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>static String m(String n){int i=0;String d=\"\";while(i++&lt;n.length())d+=\" \";return d;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##LYy7jsIwEEV7f8XgyiaLRW/S01Cl2GJFYbAVJvgR2RNWCOXbgxGpru7rDOZhdoO9LxjGlAmG6tVE6NVWM8au3pQCJ4MRXowBjNPF4xUKGarySGgh1FJ0lDH2f2cwuS/ys@2ehVxQaSI11o5EEPzovE8/8JuytxsupZ7ZsqK@AAgrCaJ81RNgu9drYlvO9f8NvRPYNIeovIs93YSUtmk5cJ0dTTmC1fPC5uUN\" rel=\"nofollow noreferrer\" title=\"Java (JDK) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":174454,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/174454#174454","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 4 bytes</h1>\n\n<pre><code>LF\"0\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuo2CgYAXEunrOQTo@bv993JQM/mtyFYMlXfLz1NVLFNLyi9JTS9SB0jrqiUn5pSUKqRWZxSWZeekK5RmZJanFBYnJqYrqXKnJGfkKysUQOk0BylABsv4DAA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<p>Converts each cell (each character in this case) to the linefeed character. <code>LF</code> is a built-in noun for <code>'\\n'</code>. <code>\"0</code> attached to a noun converts it to a verb with the given rank.</p>\n"},{"answer_id":173858,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/173858#173858","body":"<h1><a href=\"//github.com/Soaku/Pepe/\" rel=\"nofollow noreferrer\">Pepe</a>, <s>46</s> 37 bytes</h1>\n<pre><code>REEeRREeeeREEEEErEeeEeeeeerEEeeeEreee\n</code></pre>\n<p><a href=\"https://soaku.github.io/Pepe/#T-!d-j!8g_aG\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><strong>Explanation:</strong></p>\n<pre><code>REEe       # Input (string) in R\nRREeee     # Push reverse pointer position, or length of input - 1\n           # R flag: push in beginning\nREEEEE     # ...add 1\nrEeeEeeeee # Push space in r\nrEEeeeE    # ...R times\nreee       # Output whole stack\n</code></pre>\n"},{"answer_id":174298,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/174298#174298","body":"<h1><a href=\"https://www.dartlang.org/\" rel=\"nofollow noreferrer\">Dart</a>, <s>46</s> 45 bytes</h1>\n\n<pre><code>f(n)=&gt;List.generate(n,(e)=&gt;e&lt;1?1:'$e${e+1}');\n</code></pre>\n\n<p><li>-1 byte by replacing <code>e==0</code> by <code>e&lt;1</code></li></p>\n\n<p><a href=\"https://tio.run/##S0ksKvn/P00jT9PWziezuEQvPTUvtSixJFUjT0cjFSiYamNob2ilrpKqUp2qbVirrmn9vyw/M0UhNzEzT0OzmouzoCgzr0QjTcNQU9MajaegAOcbofGN0fiGBiCB2v8A\" rel=\"nofollow noreferrer\" title=\"Dart – Try It Online\">Try it online!</a></p>\n"},{"answer_id":174043,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/174043#174043","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">>&lt;></a>, <s>15</s> 13 bytes</h1>\n\n<pre><code>ln1-:?!;aoln:\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8sszvj/PyfPUNfKXtE6MT8nz@r///@6ZQrGAA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n\n<p>We take in the input as a command line argument.</p>\n\n<p>Thanks to @jo king for 2 byte loss (noticing the input loop value could be used as stack length.</p>\n\n<p>Explanation (simple):</p>\n\n<pre><code>ln1-:?!;aoln:\nln              : Add the length of the stack to the stack and print.\n   1-:?!;       : Take 1 off the input loop and check if zero, if 0, end.\n         ao     : Print new line\n           ln:  : Add the length of the stack to the stack, print and duplicate the input loop.\n</code></pre>\n"},{"answer_id":172709,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/172709#172709","body":"<h1><a href=\"https://archive.org/details/BASIC-80_MBASIC_Reference_Manual\" rel=\"nofollow noreferrer\">MBASIC</a>, <s>102</s> 94 bytes</h1>\n\n<pre><code>1 INPUT N:FOR I=0 TO N-1:IF I&gt;0 THEN PRINT MID$(STR$(I),2);\n2 PRINT MID$(STR$(I+1),2);\" \";:NEXT\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>? 3\n1 12 23\n\n? 10\n1 12 23 34 45 56 67 78 89 910\n\n? 16\n1 12 23 34 45 56 67 78 89 910 1011 1112 1213 1314 1415 1516\n</code></pre>\n\n<p>Could have been much cleaner, but the STR$(n) number-to-string conversion function returns with a leading space that had to be dealt with.</p>\n\n<p>Turns out the variable for NEXT and the trailing PRINT are not needed, saving 8 bytes.</p>\n"},{"answer_id":167819,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167819#167819","body":"<h1><a href=\"https://gitlab.com/n9n/k\" rel=\"nofollow noreferrer\">K (ngn/k)</a>, 13 bytes</h1>\n\n<pre><code>{.,/$x+!2}'!:\n</code></pre>\n\n<p><a href=\"https://tio.run/##y9bNS8/7/79aT0dfpUJb0ahWXdEKlWdo8B8A\" rel=\"nofollow noreferrer\" title=\"K (ngn/k) – Try It Online\">Try it online!</a></p>\n\n<p><code>!</code> generate the list 0 1 ... n-1</p>\n\n<p><code>{</code> <code>}</code> is a function with argument <code>x</code></p>\n\n<p><code>'</code> applied to each</p>\n\n<p><code>!2</code> is <code>0 1</code></p>\n\n<p><code>x+!2</code> is <code>x, x+1</code></p>\n\n<p><code>$</code> format as strings</p>\n\n<p><code>,/</code> concatenate</p>\n\n<p><code>.</code> evaluate (convert to number)</p>\n"},{"answer_id":173828,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/173828#173828","body":"<h1><a href=\"https://en.wikipedia.org/wiki/K_(programming_language)\" rel=\"nofollow noreferrer\">k</a>, 7 bytes</h1>\n\n<pre><code>*(!22)^\n</code></pre>\n\n<p><a href=\"https://tio.run/##JYw5EsMwDAN7vgKpImXsGVKHJecxKd24yP8rBWQKXksA9/6917rer/QoJX/W9UybyaZSoFJhUFZFlZTFULh0NCLvk/d/UwwMyv1W0TC52vUW34MhRtjJT@fh9Nn4m66fomFy1AkH8QnT8DGZlhYBB2xQDmOQ5vUD\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n\n<pre><code> (!22)  /[0, 1, 2, ..., 21]\n      ^ /set difference between [0, 1, 2, ..., 21] and input (called exclude)\n*       /get first element\n</code></pre>\n\n<p>For an arbitrary positive maximum instead of 20, the smallest I have so far is <strong>13 bytes</strong>:</p>\n\n<pre><code>{*(!2+|/x)^x}\n</code></pre>\n"},{"answer_id":173774,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/173774#173774","body":"<h1>Powershell, 28 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>for(;+$i-in$args){$i++}+$i\n</code></pre>\n\n<p>Test script:</p>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$f = {\n for(;+$i-in$args){$i++}+$i\n#for(;$i++-in$args){}(--$i)   # alternative version\n}\n\n@(\n    ,(0 , 1)\n    ,(1 , 0)\n    ,(2 , 3, 1, 0, 1, 3, 3)\n    ,(0 )\n    ,(0 , 1, 2, 3)\n    ,(3 , 5, 4, 1, 5, 4, 8, 2, 1, 5, 4, 0, 7, 7)\n    ,(4 , 3, 2, 1, 0)\n    ,(4 , 0, 0, 1, 1, 2, 2, 3)\n    ,(10, 1, 0, 7, 6, 3, 11, 15, 1, 9, 2, 3, 1, 5, 2, 3, 4, 6, 8, 1, 18)\n) | % {\n    $e, $a = $_\n    $r = &amp;$f @a\n    \"$($r-eq$e): $r\"\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>True: 0\nTrue: 1\nTrue: 2\nTrue: 0\nTrue: 0\nTrue: 3\nTrue: 4\nTrue: 4\nTrue: 10\n</code></pre>\n\n<p>Explanation:</p>\n\n<ul>\n<li>Increment <code>$i</code> while the <code>$args</code> array contains the integer value <code>+$i</code>.</li>\n<li>Output a last integer value <code>+$i</code>.</li>\n</ul>\n"},{"answer_id":173770,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/173770#173770","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 36 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a,i=0:i in a and f(a,i+1)or i\n</code></pre>\n\n<p><a href=\"https://tio.run/##PY/dCsIwDIWv7VPkbg4jtPvROpgvMntRGcOCdmPsxqevaboKJZzknHwly3d7zb4KU/8Ib/t5jhYsul52DpwHavwI05FGJ1XOK7gwUbXRGwZpEAYVS4WsawSFILmSruOMMwjV3rYIDftJaHb@La1e6e2s5DBZZmxCZZrKKxf@UMVAy6FbCmV20g0HdQJpYzpxWFbnNzoZivO9wHhqKUT4AQ\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":173759,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/173759#173759","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 5 bytes</h1>\n\n<pre><code>wiix#\n</code></pre>\n\n<p><a href=\"https://staxlang.xyz/#c=wiix%23&amp;i=[1]%0A[0]%0A[2,+0]%0A[3,+1,+0,+1,+3,+3]%0A[]%0A[1,+2,+3]%0A[5,+4,+1,+5,+4,+8,+2,+1,+5,+4,+0,+7,+7]%0A[3,+2,+1,+0]%0A[0,+0,+1,+1,+2,+2,+3]%0A[1,+0,+7,+6,+3,+11,+15,+1,+9,+2,+3,+1,+5,+2,+3,+4,+6,+8,+1,+18]&amp;a=1&amp;m=2\" rel=\"nofollow noreferrer\">Run and debug it</a></p>\n\n<pre><code>w      run until condition is satisfied\n ii    push iteration index twice\n   x#  number of times iteration index appears in input (non-zero is truthy)\n</code></pre>\n\n<p>When the loop is finished, the final iteration index will be on top of the main stack, and implicitly printed.</p>\n"},{"answer_id":173757,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/173757#173757","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 29 bytes</h1>\n\n<pre><code>Min@Complement[0~Range~20,#]&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b73zczz8E5P7cgJzU3Na8k2qAuKDEvPbXOyEBHOVbtf1p0taGOgoGOgrmOgpmOgrGOgiGQb2gKxDoKljoKRhAxHQVTGNsErNACLGhoURv7/79uQVFmXgkA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":173507,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/173507#173507","body":"<h1><a href=\"https://github.com/Sp3000/Golfish\" rel=\"nofollow noreferrer\">Gol>&lt;></a>, 11 bytes</h1>\n\n<pre><code>IFLL?nLPN|;\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PScsszvj/39PNx8c@zyfAr8b6/39DAwMA\" rel=\"nofollow noreferrer\" title=\"Gol&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>IFLL?nLPN|;\n\nI           //Take a number as input\n F          //Loop as many times as the input specified\n  LL        //  Push the loop counter twice to the stack (same as L:)\n    ?n      //  Check wether the count is zero, if not print the counter as the first digit\n      LP    //  Push the loop counter and add 1\n        N   //  Output the next digits of the number with nl\n         |; //Exit code\n</code></pre>\n"},{"answer_id":172668,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/172668#172668","body":"<h1><a href=\"https://github.com/maxbergmark/mathgolf\" rel=\"nofollow noreferrer\">MathGolf</a>, <s>8 6 5</s> 4 bytes</h1>\n<pre><code>{└§p\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjPz0n7/7/60ZQph5YX/P9vaAAA\" rel=\"nofollow noreferrer\" title=\"MathGolf – Try It Online\">Try it online!</a></p>\n<p>Outputs a newline separated series.</p>\n<h3>Explanation:</h3>\n<pre><code>{└§p\n{       Start a loop over the range(0, input)\n └      Push the top of stack (implicitly the index of the loop) + 1\n  §     Concatenate the two (this removes leading 0s)\n   p    And print the value\n</code></pre>\n"},{"answer_id":173131,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173131#173131","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 14 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>≢⊃2+/2/⊂∘⍋⌷÷∘2\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24RHnYsedTUbaesb6T/qanrUMeNRb/ejnu2HtwOZRkAlh1ZoGOoY6RjrmOiY6pjpmOtY6FhqAoVMgEJGQIaeqQ4hfGg9kDYAASDXGIhNiNOHQy8A\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p>This is a train. The original dfn was <code>{(2+/2/⍵[⍋⍵])[≢⍵]÷2}</code>.</p>\n\n<p>The train is structured as follows</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>┌─┼───┐\n≢ ⊃ ┌─┼───┐\n    2 / ┌─┼───┐\n    ┌─┘ 2 / ┌─┼─┐\n    +       ∘ ⌷ ∘\n           ┌┴┐ ┌┴┐\n           ⊂ ⍋ ÷ 2\n</code></pre>\n\n<p><code>⊢</code> denotes the right argument.</p>\n\n<p><code>⌷</code> index</p>\n\n<ul>\n<li><p><code>⊂∘⍋</code> the indices which indexed into <code>⊢</code> results in <code>⊢</code> being sorted</p></li>\n<li><p><code>÷∘2</code> into <code>⊢</code> divided by 2</p></li>\n</ul>\n\n<p><code>2/</code> replicate this twice, so <code>1 5 7 8</code> becomes <code>1 1 5 5 7 7 8 8</code></p>\n\n<p><code>2+/</code> take the pairwise sum, this becomes <code>(1+1)(1+5)(5+5)(5+7)(7+7)(7+8)(8+8)</code></p>\n\n<p><code>⊃</code> from this pick</p>\n\n<ul>\n<li><code>≢</code> element with index equal to the length of <code>⊢</code></li>\n</ul>\n\n<p>Previous solutions</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>{.5×+/(⍵[⍋⍵])[(⌈,⌊).5×1+≢⍵]}\n{+/(2/⍵[⍋⍵]÷2)[0 1+≢⍵]}\n{+/¯2↑(1-≢⍵)↓2/⍵[⍋⍵]÷2}\n{(2+/2/⍵[⍋⍵])[≢⍵]÷2}\n{(≢⍵)⊃2+/2/⍵[⍋⍵]÷2}\n≢⊃2+/2/2÷⍨⊂∘⍋⌷⊢\n≢⊃2+/2/⊂∘⍋⌷÷∘2\n</code></pre>\n"},{"answer_id":173140,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173140#173140","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, <sub><s>16</s></sub> 14 bytes</h1>\n\n<pre><code>2%~#{2#/:~+\\:~\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/qvpKegnqZga6WgrqCjUGulYKAAxP@NVOuUq42U9a3qtGOs6v5rcqUmZ@QrpCkYKhgrmCqYKRgpmCgYYRH8DwA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<p>In addition to <a href=\"https://codegolf.stackexchange.com/a/173080/78410\">BMO's array duplication trick</a>, I found that we can add the whole array sorted in two directions. Then I realized that the two steps can be reversed, i.e. add the two arrays, <em>then</em> duplicate them and take the <code>n</code>th element.</p>\n\n<h3>How it works</h3>\n\n<pre><code>2%~#{2#/:~+\\:~\n                Input: array of length n\n       /:~      Sort ascending\n           \\:~  Sort descending\n          +     Add the two element-wise\n     2#         Duplicate each element\n   #{           Take n-th element\n2%~             Halve\n</code></pre>\n\n<hr>\n\n<h1>Previous answers</h1>\n\n<h2><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a> with <code>stats</code> addon, 18 bytes</h2>\n\n<pre><code>load'stats'\nmedian\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/rv56SnoKSnoJ6mYGulrqCjUGulYKAAxP9z8hNT1ItLEkuK1blyU1MyE/PAajW5UpMz8hUgIgqGCsYKpgpmCkYKJgpGuGT@AwA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<p>Library function FTW.</p>\n\n<p><code>median</code>'s implementation looks like this:</p>\n\n<h2><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 31 bytes</h2>\n\n<pre><code>-:@(+/)@((&lt;.,&gt;.)@(-:@&lt;:@#){/:~)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/qvpKegnqZga6WuoKNQa6VgoADE/3WtHDS09TUdNDRs9HTs9IAMoIiNlYOyZrW@VZ3mf02u1OSMfIU0BUMFYwVTBTMFIwUTBSMsgv8B\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>-:@(+/)@((&lt;.,&gt;.)@(-:@&lt;:@#){/:~)\n         (&lt;.,&gt;.)@(-:@&lt;:@#)       Find center indices:\n                  -:@&lt;:@#          Compute half of given array's length - 1\n          &lt;.,&gt;.                    Form 2-element array of its floor and ceiling\n                          {/:~   Extract elements at those indices from sorted array\n-:@(+/)                          Sum and half\n</code></pre>\n\n<p>A bit of golfing gives this:</p>\n\n<h2><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 28 bytes</h2>\n\n<pre><code>2%~[:+/(&lt;.,&gt;.)@(-:@&lt;:@#){/:~\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/qvpKegnqZga6WgrqCjUGulYKAAxP@NVOuirbT1NWz0dOz0NB00dK0cbKwclDWr9a3q/mtypSZn5CukKRgqGCuYKpgpGCmYKBhhEfwPAA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":173142,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173142#173142","body":"<h1>APL(NARS), 31 chars, 62 bytes</h1>\n<pre><code>{2÷⍨x[⌊k]+(⌈k←2÷⍨1+≢⍵)⌷x←⍵[⍋⍵]}\n</code></pre>\n<p>test</p>\n<pre><code>  t←{2÷⍨x[⌊k]+(⌈k←2÷⍨1+≢⍵)⌷x←⍵[⍋⍵]}\n  t 5 4 3 2 1     \n3\n  t 4 3 2 1     \n2.5\n  t 5 40 30 2 1     \n5\n  t 5 40 30 2     \n17.5\n  35÷2\n17.5\n   t ,80\n80\n  t 9 3 4 8 7 6\n6.5\n</code></pre>\n"},{"answer_id":173066,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173066#173066","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, <s>27</s> <s>25</s> <s>20</s> 17 bytes</h1>\n\n<pre><code>~..+$\\,(&gt;2&lt;~+\"/2\"\n</code></pre>\n\n<p>Takes input as an array of integers on stdin. Outputs as an unreduced fraction. <a href=\"https://tio.run/##S8/PSStOLsosKPn/v05PT1slRkfDzsimTltJ30jp//9oCwUjBUsFQwUzBV0TIwVDo1gA\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>The median of the array, as <a href=\"https://codegolf.stackexchange.com/a/173080/16766\">BMO's Husk answer</a> explains, is equal to the median of an array twice as long where each element is repeated twice. So we concatenate the array to itself, sort, and take the mean of the middle two elements. If the length of the original array is <span class=\"math-container\">\\$l\\$</span>, the middle two elements of the doubled array are at indices <span class=\"math-container\">\\$l-1\\$</span> and <span class=\"math-container\">\\$l\\$</span>.</p>\n\n<pre><code>~                  Evaluate input (converting string -&gt; array)\n ..                Duplicate twice\n   +               Concatenate two of the copies\n    $              Sort the doubled array\n     \\,            Swap with the non-doubled array and get its length: l\n       (           Decrement: l-1\n        &gt;          Array slice: all elements at index (l-1) and greater\n         2&lt;        Array slice: first two elements (originally at indices l-1 and l)\n           ~       Dump array elements to stack\n            +      Add\n             \"/2\"  Push that string\n                   Output all items on stack without separator\n</code></pre>\n\n<p>The output will be something like <code>10/2</code>.</p>\n"},{"answer_id":172698,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/172698#172698","body":"<h1><a href=\"https://github.com/Draco18s/RunicEnchantments/tree/Console\" rel=\"nofollow noreferrer\">Runic Enchantments</a>, 33 bytes</h1>\n<pre><code>/01iR1-:0)?;{1+:\n\\$1&lt;\\}$q}:+1{$ '\n</code></pre>\n<p><a href=\"https://tio.run/##KyrNy0z@/1/fwDAzyFDXykDT3rraUNuKK0bF0CamVqWw1krbsFpFQf3/fwA\" rel=\"nofollow noreferrer\" title=\"Runic Enchantments – Try It Online\">Try it online!</a></p>\n<p>Uncompressing the entry sequence and moving the reflectors to the other side:</p>\n<pre><code>&gt;1$01iR1-:0)?;{1+:\\\n      \\}$q}:+1{$ '/\n</code></pre>\n<p>Entry sequence (<code>&gt;1$01i</code>) is fairly straight forward. Push and print <code>1</code>, push <code>0</code>, push <code>1</code>, read input and push it to the top of the stack.</p>\n<p>At <code>R</code> we enter the program's main loop (unrolled with directional control characters removed):</p>\n<pre><code>1-:0)?;{1+:' ${1+:}q$}\n</code></pre>\n<p>At this point the stack is <code>[0,1,i]</code> where <code>i</code> is the input value.</p>\n<p>The loop subtracts 1 from the input value (<code>1-</code>), compares it to greater than 0 (if true, skip terminator, else terminate; <code>:0)?;</code>).</p>\n<p>Then a series of stack manipulations (<code>{1+:{1+:}</code>) and increments to result in <code>[2,(i-1),1,1,2]</code> as well as printing a space (<code>' $</code>). <code>q</code> then concats the top two items on the stack, which is then printed (giving <code>12</code> in the output stream).</p>\n<p>Finally the stack is rotated once more, leaving <code>[1,2,(i-1)]</code> as the input to the next loop iteration.</p>\n<h2>Bonus challenge: using two IPs? 40 bytes</h2>\n<pre><code>&gt;1$0iR1-:0)?;1{+:' \\\n&gt; F1iU }$~?=am$?=9m/\n</code></pre>\n<p><a href=\"https://tio.run/##KyrNy0z@/9/OUMUgM8hQ18pA097asFrbSl0hhstOwc0wM1ShVqXO3jYxV8Xe1jJX//9/EwUTAA\" rel=\"nofollow noreferrer\" title=\"Runic Enchantments – Try It Online\">Try it online!</a></p>\n<p>As there's no way to clone the input to a second instruction pointer (I have thought about stack cloning, so this may be possible in the future, but the spec for it would be difficult to implement), we have to read it from the input stream twice.</p>\n<p>Flow results in the second pointer being a step behind the first (avoiding merging) and the <code>F</code>izzle lets us distinguish the two IPs, letting one print a space and the other discards it. I can't figure out a shorter way of performing this check.</p>\n<p>However if it allowable to print <em>two</em> spaces as a separator it can be reduced to <em>this</em> (30 bytes):</p>\n<pre><code>&gt;1$0iR1-:0)?;1\\\n&gt; F1iU}$:+{$ '/\n\ninput: 4 4\noutput: 1  12  23  34\n</code></pre>\n<p>But this is an admittedly dubious answer due to how it has to take input, but 3 bytes shorter than the single IP answer, which is interesting.</p>\n<p><a href=\"https://tio.run/##KyrNy0z@/9/OUMUgM8hQ18pA097aMIbLTsHNMDO0VsVKu1pFQV3//38TBRMA\" rel=\"nofollow noreferrer\" title=\"Runic Enchantments – Try It Online\">Try it online!</a></p>\n<h3>Update: Stack transfer</h3>\n<p>Getting the two pointers to enter the <code>T</code> command in the right execution order is a <em>huge</em> pain. The remaining two spaces in this program can't be removed, as it messes with the timing, but it avoids having to supply the input value twice. Prints 2 spaces between each entry in the sequence (35 bytes).</p>\n<pre><code>&gt;1$0y TR1-:0)?;1\\\n &gt;1i:1/U}$:+{$ '/\n</code></pre>\n<p><a href=\"https://tio.run/##KyrNy0z@/9/OUMWgUiEkyFDXykDT3towhkvBzjDTylA/tFbFSrtaRUFd//9/EwA\" rel=\"nofollow noreferrer\" title=\"Runic Enchantments – Try It Online\">Try it online!</a></p>\n"},{"answer_id":173086,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173086#173086","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a> <em>without</em> using the <code>median</code> builtin, 51 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>function(x,n=sum(x|1)+1)mean(sort(x)[n/2+0:1*n%%2])\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/qfW5mbmpKZmKdgo/s/rTQvuSQzP0@jQifPtrg0V6OixlBT21AzNzUxT6M4v6hEo0IzOk/fSNvAylArT1XVKFYTrl/DUJMLzk7WMNQx0jHWMdEx1THTMdex0LHU1FRQ1rVTMEVVZAJUZASVMtJDldQz1SGEdYGUAQgAecZAbAI1ypB0owgY9x8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":173091,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173091#173091","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, 2 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>Åm\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f//cGvu///RhjpGOsY6JjqmOmY65joWOpaxAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeX/w625/3X@R0cb6hjpGOuY6JjqmOmY61joWMbqKAAFTYCCRmCmnqkOIawLpAxAAMgzBmITYjVi1xwLAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p>No need for an explanation, since <code>Åm</code> is a builtin which will:</p>\n<blockquote>\n<p>Median. Sorts the list, then returns either the middle element or the average of the middle elements depending on the parity of the length of the list.</p>\n</blockquote>\n"},{"answer_id":173075,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173075#173075","body":"<h1><a href=\"https://github.com/stasoid/Gofer\" rel=\"nofollow noreferrer\">Haskell 1.2 (Gofer)</a>, 44 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f[x]=x\nf[x,y]=(x+y)/2.0\nf(x:y)=f.init$sort y\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYzLCsMgEEX3@YqhZKGY2PSxKkx/JLjIItNIUw0qdPx6O3RxHxwud1vye9338RVpTe2z@AAIR/KhQA95i1/gDMbACcanmLQ/VCRcN5rZIXcSQ3Wo2FR9vtqpI8WPqpGsD770OaYCtckRwnyx03AX3UQyde0H\" rel=\"nofollow noreferrer\" title=\"Haskell 1.2 (Gofer) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":173080,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/173080#173080","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 10 bytes</h1>\n\n<pre><code>½ΣF~e→←½OD\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv6fG5yvnaCtpKBrp6B0Yn3xo6bGokPb/h/ae26xW13qo7ZJj9omHNrr7/L///9oQx0jHWMdEx1THTMdcx0LHctYLqCYCVDMCMTSM9UhhHWBlAEIAHnGQGxCpD7segE\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>This function uses that the median of <span class=\"math-container\">\\$[a_1 \\dots a_N]\\$</span> is the same as the median of <span class=\"math-container\">\\$[a_1 \\; a_1 \\dots a_N \\; a_N]\\$</span> which avoids the ugly distinction of odd-/even-length lists.</p>\n\n<pre><code>½ΣF~e→←½OD  -- example input: [2,3,4,1]\n         D  -- duplicate: [2,3,4,1,2,3,4,1]\n        O   -- sort: [1,1,2,2,3,3,4,4]\n       ½    -- halve: [[1,1,2,2],[3,3,4,4]]\n  F         -- fold the following\n   ~        -- | compose the arguments ..\n     →      -- | | last element: 2\n      ←     -- | | first element: 3\n    e       -- | .. and create list: [2,3]\n            -- : [2,3]\n Σ          -- sum: 5\n½           -- halve: 5/2\n</code></pre>\n\n<p><sub>Unfortunately <code>½</code> for lists has the type <code>[a] -&gt; [[a]]</code> and not <code>[a] -&gt; ([a],[a])</code> which doesn't allow <code>F~+→←</code> since <code>foldl1</code> needs a function of type <code>a -&gt; a -&gt; a</code> as first argument, forcing me to use <code>e</code>.</sub></p>\n"},{"answer_id":106375,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106375#106375","body":"<h1>PHP, <s>70</s> 77 bytes</h1>\n<p>Not exactly optimal but works.</p>\n<p>Requires that the values are passed over GET.</p>\n<pre><code>&lt;?sort($_GET);die(($C=count($G=$_GET))&amp;1?$G[~-$C/2]:($G[$C/2]+$G[$C/2-1])/2);\n</code></pre>\n<p>The result will be displayed in the browser and as the return code.</p>\n<hr>\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/users/55735/titus\">Titus</a> for fixing it, at the cost of 7 bytes.</p>\n"},{"answer_id":164331,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164331#164331","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 7 bytes</h1>\n\n<p>Another approach. Can be used in a chain with any arity, and doesn't need chain separator or anything.</p>\n\n<pre><code>‘Ṭ;0i0’\n</code></pre>\n\n<p>Because the answer is guaranteed to be less than 256, this also works:</p>\n\n<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 5 bytes</h1>\n\n<pre><code>⁹ḶḟµḢ\n</code></pre>\n\n<p><a href=\"https://tio.run/##ASUA2v9qZWxsef//4oG54bi24bifwrXhuKL///9bMCwxLDIsMyw1LDdd\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":172704,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/172704#172704","body":"<h1><a href=\"https://github.com/SuperJedi224/Microscript-II\" rel=\"nofollow noreferrer\">Microscript II</a>, 16 bytes</h1>\n\n<pre><code>1vsN-s{lPps1+v}*\n</code></pre>\n\n<p>Output is newline-separated.</p>\n"},{"answer_id":172683,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/172683#172683","body":"<h1>Rust, 100 characters</h1>\n\n<pre><code>|n|{let mut a=1u64;let mut b=1u64;let mut s=vec![a,b];for _ in 0..n {let t=b;b=a+b;a=t;s.push(b);}s}\n</code></pre>\n\n<p>A closure that takes an integer n as input and returns a vector of the first n items of the Fibonacci sequence.</p>\n"},{"answer_id":168040,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168040#168040","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, <s>9</s> <s>8</s> 6 bytes</h1>\n\n<pre><code>ms+`dh\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsyfj/P7dYOyEFSJsAAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>       - implicit output\nm      - map function with argument d:\n  +    -  concatenate\n    d  -  argument d\n   `   -  to string\n     h -  into implicit d + 1\n       - into Q (implicit input)\n</code></pre>\n"},{"answer_id":172659,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/172659#172659","body":"<h1><a href=\"https://github.com/TryItOnline/spl\" rel=\"nofollow noreferrer\">Shakespeare Programming Language</a>, 310 bytes</h1>\n\n<pre><code>,.Ajax,.Ford,.Page,.Act I:.Scene I:.[Enter Ajax and Ford]Ford:Listen tothy.Ajax:You cat.Open heart.[Exit Ajax][Enter Page]Scene V:.Ford:Am I worse Ajax?If notlet usScene X.You be twice the sum ofa cat a big big cat.Speak thy.Page:Open heart.You be the sum ofyou a cat.Open heart.Let usScene V.Scene X:.[Exeunt]\n</code></pre>\n\n<p><a href=\"https://tio.run/##XZBBC4JAEIX/yvwAWeq6l/BQIAQFQRjhYbJJLdsVd0T79bazVkiHHZbHm/c9xjX1OEYqvuMQqY1tr5HaY0FeyRkSrQ45GZLPeW2YWhAjoLmCeDMZels5JgNsuXyFIH2yHeTIatd4vSRs2a8PFYft7JMkmGyKP@qA1vETEuht6yg4V8kNjOWaGDo3OVMl2RcC7qvcz5LAdU@wNxQgIFyqIjzBHxrCB0grYelZm2/Ib/3lBfzvvJ2Bj59LpHKJgTrD2TguF28\" rel=\"nofollow noreferrer\" title=\"Shakespeare Programming Language – Try It Online\">Try it online!</a></p>\n"},{"answer_id":166409,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/166409#166409","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>8</s> <s>6</s> 5 bytes</h1>\n<pre><code>ʒ¢≠}Ù\n</code></pre>\n<p><a href=\"https://tio.run/##MzBNTDJM/f//1KRDix51Lqg9PPP/4fX/ow11jHSMgdgQCM10THRMdcxiAQ\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##MzBNTDJM/V9TVmmvpPCobZKCkn3l/1OTKosPLXrUuaD28Mz/h9fr/I@O5YrWNdQx0DEEMgzBpDGQB@TrgERNdYxBCoxNwCIg2kTHQscErNZIxxiIQerMgKKmOmaxAA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n\n<pre class=\"lang-python prettyprint-override\"><code>ʒ  }     # Filter the list by:\n ¢       #  Where the count of the current item in the input-list\n         #   i.e. [1,2,3,2,1,1,6,4,5,6] and 1 → 3\n         #   i.e. [1,2,3,2,1,1,6,4,5,6] and 5 → 1\n  ≠      #  is not 1\n         #   i.e. 3 → 1 (truthy)\n         #   i.e. 1 → 0 (falsey)\n    Ù    # After filtering, uniquify the remaining items\n         #  i.e. [1,2,2,1,1,6,6] → [1,2,6]\n</code></pre>\n"},{"answer_id":171379,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/171379#171379","body":"<h1><a href=\"https://github.com/JohnEarnest/ok\" rel=\"nofollow noreferrer\">K (oK)</a>, 7 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>&amp;1&lt;#:'=\n</code></pre>\n\n<p><a href=\"https://tio.run/##y9bNz/7/X83QRtlK3dZYR8EAjAzBCMgw1VEw/v8fAA\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation:</strong></p>\n\n<pre><code>&amp;1&lt;#:'= / the solution\n      = / group, key =&gt; value (index)\n   #:'  / count length of each group\n 1&lt;     / 1 less than \n&amp;       / keys where true\n</code></pre>\n"},{"answer_id":112720,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112720#112720","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/UnprintableName\" rel=\"nofollow noreferrer\">√ å ı ¥ ® Ï Ø ¿</a> , 3 bytes</h1>\n<pre><code>Ißo\n</code></pre>\n<p>This is a stack-based language that uses cp-1252 encoding. Full description at the link in the title.</p>\n<h2>How it works</h2>\n<pre><code>I   - Take input and convert to characters\n ß  - Is sorted?\n  o - Output\n</code></pre>\n"},{"answer_id":170974,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170974#170974","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 23 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{eval [*0..n]*\"+n%\"}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6vOrUsMUchWstATy8vVktJO09Vqfa/hqGenqGJpl5uYkF1TUVNgUJadEVs7X8A\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<p>Evaluates a string like <code>0+n%1+n%2+n%3+n%4+n%5</code> for n=5. </p>\n"},{"answer_id":170973,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170973#170973","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 9 bytes</h1>\n\n<pre><code>⟨gz⟦₆⟩%ᵐ+\n</code></pre>\n\n<p><a href=\"https://tio.run/##ASUA2v9icmFjaHlsb2cy///in6hneuKfpuKChuKfqSXhtZAr//8xNP9a\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170966,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170966#170966","body":"<h1><a href=\"https://github.com/ajc2/ahead\" rel=\"nofollow noreferrer\">Ahead</a>, 21 bytes</h1>\n\n<pre><code>I&amp;l@O+K&lt;\n~&gt;td-! ntd%~\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8xITUz5/99TLcfBX9vbhqvOriRFV1EhryRFte7/f0MTAA\" rel=\"nofollow noreferrer\" title=\"Ahead – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170945,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170945#170945","body":"<h2>F#, 35 bytes</h2>\n<pre><code>let s v=Seq.sumBy(fun x-&gt;v%x){1..v}\n</code></pre>\n<p><a href=\"https://tio.run/##SyvWTc4vSv3/Pye1RKFYocw2OLVQr7g016lSI600T6FC165MtUKz2lBPr6z2f7SNa15JUWVAfmZeiV0sF0hLbmJmnkJiUXqZgi2XAhAUKxiagBk1dgoFRUB1aXkKSqqZSmAxg/8A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Pretty straight-forward.</p>\n"},{"answer_id":170937,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170937#170937","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, 31 bytes</h1>\n\n<pre><code>[dz%rdz&lt;B]sBd1&lt;B0*0[+z1&lt;C]dsCxp\n</code></pre>\n\n<p><a href=\"https://tio.run/##LcuxDsIgFIXh3ae4iXHRBUpba8JS@gIM3QgTVw0JNo23Q@Xl0UtcvuX8B0ORbXGYT2/M2ngyKLURZ@EuWerJI037WkY72uBw6QarGvsv0m8JnmYAOALF15ri4wPbnba4PA8yzTs0jGJapmN65soMzI2RotZVVe35Wr4\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p>Assume our input is the only value on the stack. Macro <code>B</code> duplicates top of stack, calculates stack depth, and performs modulo. Runs until stack depth is equal to the input. This works for numbers greater than 1, so we don't run <code>B</code> automatically, but instead only if it's greater than 1 (<code>d1&lt;B</code>). <code>B</code> leaves the input value on top-of-stack, so we multiply by 0. Since 0 is the desired result for an input of 1, this is fine for 1 as well. However, 1 doesn't leave us enough items on the stack to do the initial summation in macro <code>C</code>, so we put another 0 on the stack just in case. Macro <code>C</code> simply adds the two values on top of the stack, and keeps going until the stack only has a single value. Finally, we <code>p</code>rint.</p>\n"},{"answer_id":170935,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170935#170935","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <code>-mx</code>, 3 bytes</h1>\n\n<pre><code>N%U\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn/30819P9/QxMF3dwKAA\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170933,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/170933#170933","body":"<h1><a href=\"http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/\" rel=\"nofollow noreferrer\">Forth (gforth)</a>, 35 bytes</h1>\n\n<pre class=\"lang-forth prettyprint-override\"><code>: f 0 over 1 do over i mod + loop ;\n</code></pre>\n<p><a href=\"https://tio.run/##JYtBCoAgFAX3nWJwG0pWq4Quk1lB8UWq65vS6s3AvCDp3vUW6uQ8EeiQd01YvPx0cImn5RSJuNJE/BPpMQmjQM@o8huqLwnX2JGYPw\" rel=\"nofollow noreferrer\" title=\"Forth (gforth) – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>Loops over all numbers from 1 to n-1 and adds n%i to the sum</p>\n<h3>Code Explanation</h3>\n<pre class=\"lang-forth prettyprint-override\"><code>: f            \\ start a new word definition\n  0 over       \\ add a 0 to the stack and place a copy of n above it\n  1 do         \\ start a counted loop from 1 to n-1\n    over i     \\ copy n to the the top of the stack and place the loop index above it\n    mod +      \\ take n%i and add it to the sum\n  loop         \\ end the counted loop\n;              \\ end the word definition\n  \n</code></pre>\n"},{"answer_id":170855,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170855#170855","body":"<h1><a href=\"https://www.freepascal.org/\" rel=\"nofollow noreferrer\">Pascal (FPC)</a>, 70 bytes</h1>\n\n<pre class=\"lang-pascal prettyprint-override\"><code>var i,j:word;begin i:=1;repeat writeln(i);i:=i+j;j:=i-j until 1&lt;0 end.\n</code></pre>\n<p><a href=\"https://tio.run/##DchBCoAgEADAr@yxKMOOKfWXTbfYRUzM8vnWaWAS3g6DOpJr7cUMPIqpV/Z2p5MjsFlnmykRFqiZC4XYcW//5kGs/CiBJxYOwNuitQaKfmrtAw\" rel=\"nofollow noreferrer\" title=\"Pascal (FPC) – Try It Online\">Try it online! (limited)</a></p>\n<p>Prints the sequence forever, 1-indexed.</p>\n<h3>Explanation:</h3>\n<pre class=\"lang-pascal prettyprint-override\"><code>var i,j:word;   //declare 2 integers, i and j;\n                //word gives range [0,65535];\n                //for bigger ranges, you can use Int32, Int64 or QWord\nbegin\n  i:=1;         //set i to 1\n                //j has not been set, so it gets 0 as initial value\n  repeat        //start a block to be repeated (first time enters unconditionally)\n    writeln(i); //write current value of i with a newline to separate numbers\n                //i needs to get the value of the next number, which is obtained by adding i and j\n    i:=i+j;     //j is used to keep track of the last written value\n    j:=i-j      //which is used in the next iteration;\n                //since i is now the sum of 2 previous values in the sequence\n                //and j is the earlier one, the later one can be obtained\n                //by substracting current j from i\n  until 1&lt;0     //end a block to be repeated\n                //condition is always false, so the program will loop in repeat block forever\nend.\n</code></pre>\n"},{"answer_id":170854,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170854#170854","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/Alumin\" rel=\"nofollow noreferrer\">Alumin</a>, 19 bytes</h1>\n\n<pre><code>zhdnqhhhhhdaodradnp\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8wpzc3M@/@/KiMlrzADBFIS81OKElPyCv7/BwA\" rel=\"nofollow noreferrer\" title=\"Alumin – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>zhdnqhhhhhdaodradnp\nzh                    push 0, 1                 [0, 1]\n  dn                  output 1                  [0, 1]\n    q             p   loop (forever)            \n     hhhhh            push 5                    [0, 1, 5]\n          da          double (10)               [0, 1, 10]\n            o         output as char (newline)  [0, 1]\n             d        duplicate TOS             [0, 1, 1]\n              r       reverse stack             [1, 1, 0]\n               a      add top two               [1, 1]\n                dn    output top w/out popping  [1, 1]\n</code></pre>\n"},{"answer_id":170852,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170852#170852","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/Tidy\" rel=\"nofollow noreferrer\">Tidy</a>, 15 bytes</h1>\n\n<pre><code>recur2(1,1,(+))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8lMqfyfpmBl@78oNbm0yEjDUMdQR0NbU/N/cUZ@uUaa5n8A\" rel=\"nofollow noreferrer\" title=\"Tidy – Try It Online\">Try it online!</a> Returns an infintie range of Fibonacci numbers.</p>\n\n<h2>Explanation</h2>\n\n<p><code>recur2</code> defines a recursive function which takes the previous <code>2</code> items and applies a function to them, in the case, addition. This is equivalent to saying \"the first two entries are both <code>1</code> and every entry after that is the sum of the previous two\".</p>\n"},{"answer_id":170744,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170744#170744","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 2 bytes</h1>\n\n<pre><code>Åf\n</code></pre>\n\n<p><a href=\"https://tio.run/##yy9OTMpM/f//cGva//@GAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>1-indexed. Built-in.</p>\n\n<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 2 bytes</h1>\n\n<pre><code>λ+\n</code></pre>\n\n<p><a href=\"https://tio.run/##yy9OTMpM/f//3G7t//8B\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>0-index. Non-built-in. As far as I know, this is the first answer using <em>the major</em> 05AB1E rewrite, and uses its newest addition, <code>λ...}</code>, recursive list generation.</p>\n\n<h3>How it works</h3>\n\n<pre>\nλ+ – Full program.\nλ  – Starting from 1, recursively apply a function and collect the results\n     in an infinite list.\n + – Addition.\n</pre>\n"},{"answer_id":169932,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/169932#169932","body":"<h1><a href=\"https://github.com/aaronduino/asciidots\" rel=\"nofollow noreferrer\">AsciiDots</a>, <s>22</s> <s>21</s> <s>20</s> <s>17</s> <s>16</s> 15 bytes</h1>\n\n<pre><code>/.{+}-\\\n\\#$*#1)\n</code></pre>\n\n<p>Prints the Fibonacci sequence. Outgolfs the <a href=\"https://github.com/aaronduino/asciidots/blob/master/samples/fibonacci.compact.dots\" rel=\"nofollow noreferrer\">sample</a> by <s>12</s> <s>13</s> <s>14</s> <s>17</s> <s>18</s> 19 bytes. This is now just <s>1 byte longer than</s> exactly as long as a <a href=\"https://github.com/aaronduino/asciidots/blob/master/samples/counter.compact.dots\" rel=\"nofollow noreferrer\">simple counter!</a> <a href=\"https://tio.run/##SyxOzsxMyS8p/v9fX69au1Y3hitGWUVL2VDz/38A\" rel=\"nofollow noreferrer\" title=\"AsciiDots – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<h1><a href=\"https://github.com/aaronduino/asciidots\" rel=\"nofollow noreferrer\">AsciiDots</a>, <s>31</s> 30 bytes</h1>\n\n<pre><code> /#$\\\n.&gt;*[+]\n/{+}*\n^-#$)\n\\1#-.\n</code></pre>\n\n<p>Here's a faster version. It prints out the Fibonacci sequence at a rate of 1 number per 5 ticks, compared to the maximally golfed version's 1 per <s>8</s> <s>10</s> <s>8</s> <s>12</s> 14 ticks. It's twice as fast as the <a href=\"https://github.com/aaronduino/asciidots/blob/master/samples/fibonacci.compact.dots\" rel=\"nofollow noreferrer\">sample</a> and is still shorter by <s>3</s> 4 bytes! <a href=\"https://tio.run/##SyxOzsxMyS8p/v9fQV9ZJYZLz04rWjuWS79au1aLK05XWUWTK8ZQWVfv/38A\" rel=\"nofollow noreferrer\" title=\"AsciiDots – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170659,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170659#170659","body":"<h1><a href=\"https://github.com/ajc2/ahead\" rel=\"nofollow noreferrer\">Ahead</a>, 15 bytes</h1>\n\n<pre><code>1loN+{&lt;\n&gt;\\:O\\:^\n</code></pre>\n\n<p>Uses signed 32-bit ints so eventually reaches overflow and wraps negative. Starts at 0, which is technically correct?</p>\n\n<p><a href=\"https://tio.run/##S8xITUz5/98wJ99Pu9qGyy7Gyj/GKu7/fwA\" rel=\"nofollow noreferrer\" title=\"Ahead – Try It Online\">Try it online!</a></p>\n"},{"answer_id":66865,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/66865#66865","body":"<h1>Binary-Encoded Golfical, 27+1 (<code>-x</code> flag)=28 bytes</h1>\n\n<p>Noncompeting, language postdates the question.</p>\n\n<p>Hexdump:</p>\n\n<pre><code>00 90 02 00 01 14 0C 01 14 00 00 14 1B 1E 08 01\n14 2C 17 0A 01 3A 0C 01 2D 1C 1D\n</code></pre>\n\n<p>This encoding can be converted back to the original image using the github repo's included Encoder utility (<code>java Encoder d \"&lt;encoded file&gt;\" \"&lt;target file&gt;\"</code>) or run directly by adding the <code>-x</code> flag </p>\n\n<p>Original image: </p>\n\n<p><img src=\"https://i.stack.imgur.com/62MBt.png\" alt=\"enter image description here\"></p>\n\n<p>Magnified 50x:</p>\n\n<p><img src=\"https://i.stack.imgur.com/IX2so.png\" alt=\"enter image description here\"></p>\n\n<p>Rough translation:</p>\n\n<pre><code>*p=1;\n*(p+1)=*p;\n*p=0;\nwhile true:\n p++;\n push *p;\n p--;\n *(p+1)=*p;\n *p=pop;\n *p+=*(p+1);\n print *p;\nend while;\n</code></pre>\n"},{"answer_id":170376,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170376#170376","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 30 bytes (was 33)</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f=0:1:[f!!n+f!!(n+1)|n&lt;-[0..]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P83WwMrQKjpNUTFPG0ho5Gkbatbk2ehGG@jpxcb@z03MzFOwVUjJ51IAgoKizLwSBRWFNAVFRQUDTCFDTCEjTCFjTCETTCFTTCGz/wA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170396,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170396#170396","body":"<h1>x86 assembly (32-bit), 14 bytes</h1>\n\n<p>Bytecode:</p>\n\n<pre><code>58 59 50 41 31 c0 99 40 01 c2 92 e2 fb c3\n</code></pre>\n\n<p>That 3-byte add/xchg is quite concise :-)</p>\n\n<p>1-indexed.</p>\n\n<pre><code>0:   58                      pop    %eax\n1:   59                      pop    %ecx\n2:   50                      push   %eax\n3:   41                      inc    %ecx\n4:   31 c0                   xor    %eax,%eax\n6:   99                      cltd   \n7:   40                      inc    %eax\n8:   01 c2                   add    %eax,%edx\na:   92                      xchg   %eax,%edx\nb:   e2 fb                   loop   8\nd:   c3                      ret\n</code></pre>\n"},{"answer_id":170374,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170374#170374","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 0.6</a>, 19 bytes</h1>\n\n\n\n<pre class=\"lang-julia prettyprint-override\"><code>!a=round(φ^a/√5)\n</code></pre>\n\n<p><a href=\"https://tio.run/##yyrNyUw0@/9fMc@2KL80L0XjfFtcnv6jjlmmmv8LijLzSjQUjQw0/wMA\" rel=\"nofollow noreferrer\" title=\"Julia 0.6 – Try It Online\">Try it online!</a></p>\n\n<p>This is 16 chars and 19 bytes, a goof way to abuse Julia beats the existing Julia answers which were 20 bytes. by 1 bytes and 3 chars</p>\n"},{"answer_id":169642,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169642#169642","body":"<h1><a href=\"https://github.com/Soaku/Pepe\" rel=\"nofollow noreferrer\">Pepe</a>, 68 bytes</h1>\n<pre><code>RrEEEEEREeErREEREEEEEREErEEEEEeEErEEEereEEreeErEEEEEeeEReerREEREeRee\n</code></pre>\n<p><a href=\"https://soaku.github.io/Pepe/#--iR@F-jFS6!oMIS2/@FD/\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Previous code has errors when giving input 0, so this is fixed!</p>\n<p>Explanation:</p>\n<pre><code># Preparation\n\n  RrEEEEE # Stack r: [0, 1]\n  \n  REeE # Stack R: [input]\n\n# Loop\n\n  rREE # create label input (r flag: skip until REe)\n\n    REEEEE # increment input (loop preparation)\n    REE # create label input\n\n      rEEEEEeEE # join all\n      rEEEe # move r pointer to last\n      reEE # output as int\n      reeE # output newline &quot;\\n&quot;\n      rEEEEEeeE # increment all\n\n    Ree # repeat if input != last content of stack\n    rREE # create label input + 1 (r flag: skip until REe)\n    REe # stop skipping commands\n\n  Ree # if not 0, go to loop\n      \n</code></pre>\n"},{"answer_id":170108,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/170108#170108","body":"<h1><a href=\"https://www.zsh.org/\" rel=\"nofollow noreferrer\">Zsh</a>, 60 bytes</h1>\n\n\n\n<pre class=\"lang-sh prettyprint-override\"><code>f(){echo $((${(j:+:)${(@f)$(for i in $@;echo $((x+=i)))}}))}\n</code></pre>\n\n<p><a href=\"https://tio.run/##qyrO@P8/TUOzOjU5I19BRUNDpVojy0rbShNIO6Rpqmik5RcpZCpk5imoOFjD1FRo22ZqamrW1gLx/zQFMwVTBRMFYwUjBcP/AA\" rel=\"nofollow noreferrer\" title=\"Zsh – Try It Online\">Try it online!</a></p>\n\n<p>Takes input as individual parameters</p>\n"},{"answer_id":170105,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/170105#170105","body":"<h1>EXCEL, 55 bytes</h1>\n\n<p>Using Immediate Window.</p>\n\n<pre><code>[A65:A89]=\"=MID(REPT(CHAR(ROW())&amp;CHAR(ROW()+1),2),1,3)\"\n</code></pre>\n"},{"answer_id":166018,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/166018#166018","body":"<h1><a href=\"https://en.wikipedia.org/wiki/K_(programming_language)\" rel=\"nofollow noreferrer\">k</a>, <s>31</s> <s>30</s> 28 bytes</h1>\n\n<pre><code>{x{*|y#x,1_|1_x}'1+!#x}@\" \"\\\n</code></pre>\n\n<p><a href=\"https://tio.run/##NYzLCoMwEEV/ZYwL@1y4bTftF3Rj6aYgQx0bUTMhiRhRv91GoTBwL4dzpz5zvSzlZfTjYRpif0rzKc39nKTHKPbzTYB4L2WyE5msLIRDKDsFDm0diat4qA/BU7OCO2RVSwFlkgxBj6vaogrkJTm0ggJYd5uDblMUoYs28P/esPqCdaYK4RiKyuoGB5Dcg5MEX1Jk0LFZbdtpzZaKVezZ1GK//AA\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157893,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/157893#157893","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <strike>51</strike> 50 bytes</h1>\n\n<p>-1 byte thanks to @ceilingcat</p>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>i,r;f(t,l)int*t;{for(;l;)for(i=--l;~i;)r+=t[i--];}\n</code></pre>\n\n<p><a href=\"https://tio.run/##fdLBaoQwEAbgu08xLCwk3RFMotGS2hdJPYiLS8BuS/Am9tVtjLqtAdccAv/ELyGZJr41zTQZtKolPXbU3PuXXg3tlyWqU3SeTRnHnfoxitpL2WsTx5Uap8/a3AmNhgjc5/6CmumsghKGDAXmyFCOyhdbQmaV1gwho0v2bV1EfIJgXehTWybqz@OaeS8JHY5sz3AEdsiIlWEhI0JGPGNSzRcGeQilyPdQisAPoUyLDUIRUu7u9pS7HnFIyZV6RTdCSoaUfEblWq6nSrYRgjnKPZgjyEOwWEGJGaauI9yjhWARgsUDHKNoyeaVUKM3u2WyW9f55nSBcfskyk1v0Cm4XAz15WXRg2/J6Xw9IdTaVOu2YxT9L0P8Dufrx/20nmH6BQ\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":170024,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/170024#170024","body":"<h1><a href=\"https://github.com/bforte/mu6\" rel=\"nofollow noreferrer\">µ6</a>, 16 bytes</h1>\n\n<pre><code>[&gt;#[,.[+.]][[,&gt;[#/0[+/1]&lt;&gt;]]/1]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##yy01@/8/2k45WkcvWlsvNjY6WscuWlnfIFpb3zDWxi42FkjF/v//39gAAA\" rel=\"nofollow noreferrer\" title=\"µ6 – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>[&gt;                               -- right element of the tuple generated by\n  #                              -- | primitive recursive function\n                                 -- | base case:\n   [,                            -- | | pair of\n     .                           -- | | | constant zero\n     [+.]                        -- | | | successor of constant zero\n   ]                             -- | | : (0,1)\n                                 -- | recursive case:\n   [                             -- | | compose the two\n    [,                           -- | | | pair of\n     &gt;                           -- | | | | the right element\n     [#/0[+/1]&lt;&gt;]                -- | | | | add left &amp; right element\n    ]                            -- | | | (snd, fst + snd)\n    /1                           -- | | | second argument (we only need the tuple)\n   ]                             -- | : (f (n-1), f (n-2) + f (n-1))\n]                                -- : f n\n</code></pre>\n"},{"answer_id":169934,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/169934#169934","body":"<h1>Python 2, <s>33</s> 31 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>i=j=1\nwhile 1:print j;i,j=j+i,i\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P1Mny9ZQx5CrPCMzJ1XB0KqgKDOvRCHLGiSepZ2pk/n/PwA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>Uses a loop to infinitely print the sequence. <s>Will eventually error out due to integer overflow.</s> It has been pointed out to me that Python uses arbitrary precision integers. Learn something new every day!</p>\n"},{"answer_id":169647,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169647#169647","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 42 bytes</h1>\n\n<p>I know there are plenty of shorter answers already.</p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>a=0\nexec\"print`a`[:a]+`a+1`;a+=1;\"*input()\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P9HWgCu1IjVZqaAoM68kITEh2ioxVjshUdswwTpR29bQWkkrM6@gtERD8/9/QwMA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":169619,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169619#169619","body":"<p><strong>VBA (Excel), 31 bytes</strong></p>\n\n<p>using immediate window and Cell <code>[A1]</code> as input</p>\n\n<p><code>for x=1to[a1]:?int(x-1 &amp;x):next</code></p>\n"},{"answer_id":169615,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169615#169615","body":"<h1><a href=\"https://github.com/beta-decay/Noether\" rel=\"nofollow noreferrer\">Noether</a>, 15 bytes</h1>\n\n<pre><code>I(iWi1+W+WP?!i)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8tPLclILfr/31MjMzzTUDtcOzw@wF4xU/P/f0MDAA\" rel=\"nofollow noreferrer\" title=\"Noether – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>I(             ) - Loop until the top of the stack equals the input\n  iW             - Push i and convert it to a string\n    i1+W         - Add one to i and convert to string\n        +        - Concatenate two strings\n         WP      - Convert string to a number and print it\n           ?     - Print a newline\n            !i   - Increment i\n</code></pre>\n"},{"answer_id":169613,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169613#169613","body":"<h1><a href=\"https://developer.apple.com/swift/\" rel=\"nofollow noreferrer\">Swift 4</a>, 43 bytes</h1>\n\n\n\n<pre class=\"lang-swift prettyprint-override\"><code>print(1);(1..&lt;n).map{print(\"\\($0)\\($0+1)\")}\n</code></pre>\n\n<p><a href=\"https://tio.run/##Ky7PTCsx@Z@TWqKQp2Cr4JlXolGUmpjik5mXqqGpqKn4v6AoEyhmqGmtYainZ5OnqZebWFANEVSK0VAx0AQR2oaaSpq1//8bAwA\" rel=\"nofollow noreferrer\" title=\"Swift 4 – Try It Online\">Try it online!</a></p>\n\n<p><code>n</code> is the input of the program</p>\n"},{"answer_id":168419,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168419#168419","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>34</s> 33 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{$&gt;&lt;&lt;i||=p(1);p(i+=1)&lt;n&amp;&amp;redo}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6vWsXOxiazpsa2QMNQ07pAI1Pb1lDTJk9NrSg1Jb/2f1q0oUHsfwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<p>Pseudocode:</p>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>loop\n  if i is undefined\n    set i to 1\n    print 1\n    print newline\n  end if\n  print i\n  increment i by 1\n  print i\n  print newline\n  if i &gt;= n\n    break and return\n  end if\nend loop\n</code></pre>\n"},{"answer_id":169482,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169482#169482","body":"<h1><a href=\"https://www.lua.org\" rel=\"nofollow noreferrer\">Lua</a>, 62 bytes</h1>\n\n\n\n<pre class=\"lang-lua prettyprint-override\"><code>loadstring't={1}for i=2,(...)do t[#t+1]=(i-1)..i end return t'\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcJBCgIxDADArwQ9bIJrsN77EvFQt60ESgMxiwfx7dFhxl6i5xha6stN5nPx/EnfrgaSrysyM1UFvx39lO4Z5ZyIWaDNCtZ8twm@hCi/Tbyhl8dovOnciiNAx3QhgBUO/0QRPw\" rel=\"nofollow noreferrer\" title=\"Lua – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<h3>Explanation</h3>\n\n<p>This is an anonymous function.</p>\n\n<pre class=\"lang-lua prettyprint-override\"><code>t={1} -- initializes the return table, with the number 1 already in it\nfor i = 2, (...) do -- loop from 2 to the number of the input\n                  -- (this is actual code, ... gets the arguments of the program/function\n  t[#t+1] = (i-1)..i -- append to the table i-1 concatenated with i\nend\nreturn t -- returns the table\n</code></pre>\n"},{"answer_id":169038,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169038#169038","body":"<h1>Bash, 56 bytes</h1>\n\n<pre><code>echo 1;for i in $(seq $(($1-1)));do echo $i$((i+1));done\n</code></pre>\n\n<p>A pretty naive approach. </p>\n"},{"answer_id":169036,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169036#169036","body":"<h2>TI-Basic, 22 bytes</h2>\n\n<pre><code>:seq(A,A,1,Ans\n:Ans+(Ans-1)10^(1+int(log(Ans\n</code></pre>\n"},{"answer_id":169002,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/169002#169002","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 35 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f n=\"1\":map(show.(-1+)&lt;&gt;show)[2..n]\n</code></pre>\n\n<p><a href=\"https://tio.run/##FcbBCgIhEAbgV/nZkxJJdgzdS117gugwsG4rrTOiAz2@1eGDb6P@Tvs@cqnSFDdScndhyQsMTJgt7FjBcfLTpVA1fZOPM0d/sGH@3z7OzvFzFMqMiNoyKxzWn5ZoQQwBr6RXYU2sffjTFw\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online! <sup>1</sup></a></p>\n\n<h2>Explanation / Ungolfed</h2>\n\n<p>The operator <code>(&lt;&gt;)</code> is the addition of Semigroups, in case of the Semigroup <code>a -&gt; b</code> (where <code>b</code> needs to be a Semigroup) it is defined as:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(f &lt;&gt; g) = \\x-&gt; f x &lt;&gt; g x\n</code></pre>\n\n<p>And in case of the Semigroup <code>String</code> it is the same as concatenation, so the code becomes:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f n = \"1\" : map (\\x-&gt; show (x-1) ++ show x) [2..n]\n</code></pre>\n\n<hr>\n\n<p><sub>1 (imports <code>(&lt;&gt;)</code> since it's not part of the Prelude in GHC 8.2.2)</sub></p>\n"},{"answer_id":168207,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168207#168207","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 44 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:[f\"{j or''}{j+1}\"for j in range(n)]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHPKjpNqTpLIb9IXb22OkvbsFYpLb9IIUshM0@hKDEvPVUjTzP2f0FRZl6JRpqGoYGBpuZ/AA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":168546,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168546#168546","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, 48 bytes</h1>\n\n<pre><code>{\"1, \"+(2..it).map{\"$it${it+1}\"}.joinToString()}\n</code></pre>\n\n<p>Yes I know, I could save 1 more byte by removing the blank behind the first comma, but it looks nicer with it :-)</p>\n\n<p><a href=\"https://tio.run/##JY3BCsMgEETv@YpFPChpBT1KG@ix5/YHvBi2NZtgtoUifrsVMrd5w2PeKyek9g0JovWg7sT6PD04I81whVaEPYEYlTMGWZslbEVIZFmQR1tFNa8V6bkegtK1xQ/BEpBUyPPu4ZZz@F2OedJQBujZeuNESlC/sM53JEu0yjpdhR5q@wM\" rel=\"nofollow noreferrer\" title=\"Kotlin – Try It Online\">Try it online!</a></p>\n"},{"answer_id":168355,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168355#168355","body":"<h1>QBasic, <s>60</s> 53 bytes</h1>\n\n<pre><code>INPUT n\n?1\nFOR i=2TO n\n?STR$(i-1)MID$(STR$(i),2)\nNEXT\n</code></pre>\n\n<p><s>A math-based solution, because converting numbers to strings in QBasic is a lot more complicated than it ought to be.</s> Nope, strings are still shorter, you just have to special-case the first item. The problem with <code>STR$(i)</code> is that it adds a space to the start of positive numbers, so we take all but the first character by using <code>MID$</code>. Other than that, it's pretty straightforward.</p>\n"},{"answer_id":168462,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168462#168462","body":"<h1>Twig, 72 bytes</h1>\n<p>Twig is very verbose, causing some issues when trying to reduce the length.</p>\n<pre><code>{%macro f(a)%}{%for i in 1..a%}{{o~i}}\n{%set o=i%}{%endfor%}{%endmacro%}\n</code></pre>\n<p>This requires that &quot;strict variables&quot; is disabled (default).</p>\n<hr>\n<h2>How to use?</h2>\n<p>Simply import the macro and call it:</p>\n<pre><code>{% import &quot;fn.twig&quot; as fn %}\n{{ fn.f(&lt;number&gt;) }}\n</code></pre>\n<p>You can test it on <a href=\"https://twigfiddle.com/lah1a5\" rel=\"nofollow noreferrer\">https://twigfiddle.com/lah1a5</a></p>\n"},{"answer_id":168459,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168459#168459","body":"<h1>Python 2.7, 52 bytes</h1>\n<p>I tried my best. Not yet familiar with this golfing thing.</p>\n<pre><code>def a(n):\n    for e in range(n):\n        print int(`e`+`e+1`)\n</code></pre>\n<p>The <code>int()</code> removes the leading zero in the first output, as specified in the rules.</p>\n"},{"answer_id":168354,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168354#168354","body":"<h1><a href=\"https://github.com/TehFlaminTaco/ARBLE\" rel=\"nofollow noreferrer\">ARBLE</a>, <s>23</s> 20 bytes</h1>\n\n<p>Saved a handful of bytes by using better named variables.</p>\n\n\n\n<pre class=\"lang-lua prettyprint-override\"><code>range(0,n)//(x..y|0)\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyxKykn9/78oMS89VcNAJ09TX1@jQk@vssZA8////8YA\" rel=\"nofollow noreferrer\" title=\"ARBLE – Try It Online\">Try it online!</a></p>\n"},{"answer_id":168196,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168196#168196","body":"<p><strong>C, 39 bytes</strong></p>\n\n<pre><code>x(n){n&amp;&amp;x(n-1);printf(\"%d%d, \",n,n+1);}\n</code></pre>\n\n<p>eliminated the ternary conditional and shaved off 3 bytes.</p>\n"},{"answer_id":168392,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168392#168392","body":"<h1>RAD, 72 bytes</h1>\n<pre><code>0,(⊢+10×⊣)⍁¨∊¨(⌽∘⌊(⊢|⍨10*(⍳(1+∘⌊10⍟⊢)))÷10*1-⍨(⍳(1+∘⌊10⍟⊢)))¨¨(⊢,1+⊢)¨⍳⎕\n</code></pre>\n<p><a href=\"https://bitbucket.org/zacharyjtaylor/rad/src\" rel=\"nofollow noreferrer\">Link to repository</a></p>\n<p>I wanted to try to see if I could do it in a &quot;non-mathematical&quot; way by splitting a number up into its digits.</p>\n"},{"answer_id":168379,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/168379#168379","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a> / <a href=\"https://www.mathworks.com/help/matlab/\" rel=\"nofollow noreferrer\">Matlab</a>, <s>25</s> 23 bytes</h1>\n\n<pre><code>@(x)repmat(' ',size(x))\n</code></pre>\n\n<p><sub>Saved 2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/67312/giuseppe\">Giuseppe</a></sub></p>\n\n<p><a href=\"https://tio.run/##y08uSSxL/Z@mYKugp6f330GjQrMotSA3sURDXUFdpzizKhUoovk/TUM9MSnZ0MhYXZMLLIgkoPkfAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":168380,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168380#168380","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">DC</a>, 33 bytes</h1>\n\n<pre><code>si[lidZAr^spd1-dsilp*+li0&lt;d]dsdxf\n</code></pre>\n\n<p>Explanation</p>\n\n<pre><code>si[lidZAr^spd1-dsilp*+li0&lt;d]dsdxf  Whole program.\nsi                                 Save the value on the stack to the i register.\n  [                        ]dsdx   Create a macro, duplicate it, store it in the d register, and execute it.\n   li                              Put the value from the i register on the stack.\n     dZ                            Duplicate the top value, and change it to the number of digits it has.\n       Ar                          Push 10 on the stack, and reverse the top two values.\n         ^sp                       Do 10^x, and store it in the p register.\n            d1-                    Duplicate the top value, and subtract 1 from it.\n               dsi                 Duplicate the top value, and store it in the i register.\n                  lp*+             Put the value from the p register on the stack, and multiply it by the the value we just put in the i register. Then, add the top two values together.\n                      li0&lt;d        Put the value from the i register and then 0 on the stack. If 0 &lt; li, then we run the d macro again.\n                                f  Print the stack.\n</code></pre>\n\n<p>Input is the number of numbers to be generated, on the stack.</p>\n\n<p>Output is printed.</p>\n"},{"answer_id":168328,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/168328#168328","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>37</s> 23 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>gsub(\".\",\" \",scan(,\"\"))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/r/P724NElDSU9JR0lBSac4OTFPQ0dJSVPzv5KhkbHSfwA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<p>14 bytes saved by ngm.</p>\n"},{"answer_id":168375,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/168375#168375","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, 12 bytes</h1>\n\n<pre><code>Z256r^25.5/P\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0n@H51YnBL7P8rI1KwozshUz1Q/4P9/AA\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p>Takes input from the stack, outputs <strong>newlines</strong> to stdin. </p>\n\n<p>I know there's two dc answers here already, but this one uses a different approach, with math! Plus it's 6 bytes shorter, so I guess that's all right.</p>\n\n<h1>Explanation</h1>\n\n<p>One of dc's three explicit printing commands is <code>P</code>, which takes a number and outputs it as a base 256 (technically base UCHAR_MAX+1, works on my machine) byte stream. So I need to feed it the number (where <code>n</code> is the length of the given string, and <code>10</code> is the codepoint of the linefeed character):</p>\n\n<pre><code>   10*256^(n-1) + 10*256^(n-2) + ... + 10\n = 10 * (256^(n-1) + 256^(n-2) + ... + 1)   (factoring out 10)\n = 10 * (256^n - 1) / (256 - 1)             (geometric series formula)\n = (256^n - 1) / 25.5                       (combining constants)    \n~= (256^n) / 25.5                           (because dc's default precision is 0)\n</code></pre>\n\n<p>The code is a straightforward calculation of this number, followed by <code>P</code>.</p>\n"},{"answer_id":168330,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/168330#168330","body":"<h1><a href=\"http://www.yabasic.de\" rel=\"nofollow noreferrer\">Yabasic</a>, 37 bytes</h1>\n\n \n\n<p>Takes input, and outputs as many new lines as the length of the input</p>\n\n<pre class=\"lang-vb prettyprint-override\"><code>Line Input\"\"s$\nFor i=1TO Len(s$)?Next\n</code></pre>\n\n<p><a href=\"https://tio.run/##q0xMSizOTP7/3yczL1XBM6@gtERJqViFyy2/SCHT1jDEX8EnNU@jWEXT3i@1ouT//5DU4hKF5MTiVIXyzJIMheL8XCArI7MktbggMTkVAA\" rel=\"nofollow noreferrer\" title=\"Yabasic – Try It Online\">Try it online!</a></p>\n"},{"answer_id":122717,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122717#122717","body":"<h1>Python 2, 25 bytes</h1>\n\n<pre><code>exec'print;'*len(input())\n</code></pre>\n\n<p>-2 bytes thanks to Loovjo<br>\n-2 bytes in the invalid code thanks to totallyhuman :p<br>\n-3 bytes</p>\n"},{"answer_id":167833,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167833#167833","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>55 48 47</s> 43 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n:n-1and f(n-1)+[f\"{n-1}{n}\"]or[1]\n</code></pre>\n\n<p><a href=\"https://tio.run/##NcexCoAgEADQ3a84nDwq8GgL@hJpMOpKqFOkJcJvt5a299J97VH6Wnk8/DkvHmSQjrwswOYDNo7186E8UvQUs6OpcswQIAhkL9tqqCWLQ8pBLsMmICr1h6xFrC8\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n\n<p>Recursive function that takes an integer and returns a mixed list of strings and numbers.</p>\n"},{"answer_id":168166,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168166#168166","body":"<h2>MATLAB <strike>45</strike> 63 bytes</h2>\n\n<pre><code>@(j)eval('for a=0:j-1;disp([num2str(a)*a/a,num2str(a+1)]);end')\n</code></pre>\n\n<p>Somewhat ugly <code>*a/a</code> in order to avoid printing leading zero for the first element</p>\n\n<p>Fixed by wrapping into <code>disp</code> and anonymous function</p>\n"},{"answer_id":167843,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167843#167843","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <strike>44</strike> 43 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>f(i){i--&amp;&amp;printf(\" %2$d%d\"+5*!f(i),i+1,i);}\n</code></pre>\n\n<p><a href=\"https://tio.run/##VYk9DsIgFIB3TvGstgEKRkycanoR44Ag7UsqNYhdmp4dYXT7fowcjEl79Gb62idcP9HifBx78pcmfOSWHEW2opRN8w7oo6MV1OeDrW3VXviuXIGtEsi6LeUPL42eFtBhMMKMOgDnmRcGKwFAR8voFYNMccaiy03dGevIlpI6/QA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":168176,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/168176#168176","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, <s>3</s> 4 bytes</h1>\n\n<pre><code>nqZ\"\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/P68wSun/f3WP1JycfIXy/KKcFHUA\" rel=\"nofollow noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n\n<p>Today I learnt that MATLAB has a function for creating a string of spaces! </p>\n\n<p><code>n</code> - count the number of bytes in input string<br>\n<code>q</code> - decrement by 1, because the implicit <code>disp</code> at the end adds a newline (so the number of spaces required is <code>string length - 1</code>)<br>\n<code>Z\"</code> - <code>blanks</code> command: create a string with the specified number of spaces in it<br>\n(Implicit output at end, with trailing newline.)</p>\n"},{"answer_id":168171,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168171#168171","body":"<h1><a href=\"https://dlang.org/\" rel=\"nofollow noreferrer\">D</a>, 93 bytes</h1>\n\n\n\n<pre class=\"lang-d prettyprint-override\"><code>import std.math;_[]f(_)(_ n){_[]k;foreach(i;0..n)k~=++i+10^^(cast(_)i--.log10+1)*i;return k;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##TYzNCoMwEITveYo9JlVD0h6XPomoBH/qoiYlbtuD2Fe36aHQw8AM3/B1x0HLPUSGlTu9OB6xKatBNko24NWWxoRDiL1rR0lotPZqel@zjDJr6lq2buV0pqLQc7hZk1l1Iow9P6KHCfd/ewoFFM9AHSyOvFSwiZ@bEUqbwzmHSw7WpGaqL2c96Fck7mePYhf78QE\" rel=\"nofollow noreferrer\" title=\"D – Try It Online\">Try it online!</a></p>\n\n<p>I couldn't find a nice (short) solution that evades an <code>import</code>, and this was the shortest of the bunch.</p>\n"},{"answer_id":168189,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168189#168189","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/Rutger\" rel=\"nofollow noreferrer\">Rutger</a>, 108 bytes</h1>\n\n<pre><code>x=$Input;\nf=For[$x];\nf=f[@i];\nf=f[{p=Subtract[$i];r=Concat[Str[p[1]]];Print[Integer[r[Str[$i]]]];}];\nDo[$f];\n</code></pre>\n\n<p><a href=\"https://tio.run/##XY7BCsIwDIbvfYox@gBWvZWAoAi7DXYMPczZykDaEjIYDJ99pjovnpL835cQmvjhaX2mlCuoronw6KzaxlLwNMa7n//CZZ1BNzFPbFWAsqaLEiCIvzVLhm66MfUDo5aQ4Jzi0DN2TJjROOdsS2NkbCJ7@QLpg8Qt6CVnLgl1cHb9ajUA1JL@SPlEoFF7dVBm9wY\" rel=\"nofollow noreferrer\" title=\"Rutger – Try It Online\">Try it online!</a></p>\n\n<h2>Ungolfed</h2>\n\n<pre><code>input = $Input;\nfor = For[$input];\nfor = for[@index];\n\nfor = for[{\n    dec = Subtract[$index];\n    ret = Concat[Str[dec[1]]];\n    Print[Integer[ret[Str[$index]]]];\n}];\n\nDo[$for];\n</code></pre>\n\n<p>The basic concept of Rutger is the lack of multi-adic commands: every command takes a single argument, and if the command needs multiple argument, each new call returns a curried function.</p>\n\n<p>First, we take evaluated input and store it in \\$x\\$. We then create a <code>For</code> object, a tri-adic command. The first two calls create a variable \\$f\\$, that will loop \\$x\\$ times, using the iteration variable \\$i\\$, starting at \\$i := 1\\$. The third call indicates the code to be run:</p>\n\n<pre><code>{p=Subtract[$i];r=Concat[Str[p[1]]];Print[Integer[r[Str[$i]]]];}\n</code></pre>\n\n<p>This creates a block of code containing 3 statements. Our first two are variable assignments. First, we create a curried function <code>Subtract[$i]</code>, which prepares to subtract a value from \\$i\\$. This curried function is saved in the \\$p\\$ variable. Next, we create a second curried variable, \\$r\\$, which starts by calling <code>p[1]</code>, subtracting \\$1\\$ from \\$i\\$. We then convert \\$i-1\\$ to a string and pass it as the first argument to the <code>Concat</code> function. Finally, we convert \\$i\\$ to a string, concatenate it to \\$str(i - 1)\\$ and convert it to an integer to reomve the leading \\$0\\$ when \\$i = 1\\$. This is then printed.</p>\n\n<p>The last line, <code>Do[$f];</code>, runs the for loop.</p>\n"},{"answer_id":168169,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168169#168169","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/yup\" rel=\"nofollow noreferrer\">yup</a>, 48 bytes</h1>\n\n<pre><code>0eee0ee-0ee-*:0e#[:@]0e-{]:[:]-:#0e0~--#]:@]0e-}\n</code></pre>\n\n<p><a href=\"https://tio.run/##qywt@P/fIDU1FYh1QVjLyiBVOdrKIdYgVbc61iraKlbXStkg1aBOV1c5FiJc@///f928/4YGAA\" rel=\"nofollow noreferrer\" title=\"yup – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<p>yup only knows of a few commands. To modify data, I'll be using <code>0</code> (nilad pushing that number), <code>e</code> (natural exponentiation), and <code>-</code> (subtraction).</p>\n\n<p>For example, the snippet <code>0e</code> is equal to <code>1</code>, since \\$e^0=1\\$.</p>\n\n<p>This program is divided into two parts: initialization and iteration.</p>\n\n<h3>Initialization</h3>\n\n<pre><code>0eee0ee-0ee-*:0e#[:@]0e-\n</code></pre>\n\n<p><code>0eee</code> pushes \\$e^e\\approx15.1543\\$ and <code>0ee</code> pushes \\$e\\approx2.7183\\$. Thus, the expression <code>0eee0ee-0ee-</code> pushes:</p>\n\n<p>$$e^e-e-e\\approx9.7177$$</p>\n\n<p>This encodes <code>0x10</code> (the linefeed), since numbers are rounded to the nearest integer before being outputted. This is our numeric separator.</p>\n\n<p>The next part is to initialize the stack with data. <code>*:</code> pushes the input twice, and <code>0e#</code> outputs a <code>1</code>. <code>[:@]</code> outputs a linefeed without popping it from the stack, and <code>0e-</code> decrements the input. This handles the edge case of outputting <code>1</code> instead of <code>01</code>. Rather than handle this with a conditional, hardcoding the first entry is shorter.</p>\n\n<h2>Iteration</h2>\n\n<pre><code>{]:[:]-:#0e0~--#]:@]0e-}\n</code></pre>\n\n<p><code>{...}</code> loops while the TOS is defined and positive. In this case, it will stop when it hits zero. Each iteration starts off with a stack like this:</p>\n\n<pre><code>[9.7177, input, iterator]\n</code></pre>\n\n<p><code>iterator</code> starts at <code>input - 1</code>. <code>]:[:]-</code> calculates <code>input - iterator</code> and gives us our true iterator value. Then, <code>:#0e0~--#</code> first outputs the true iterator then the same number plus 1, where <code>0e0~--</code> encodes \\$-(-n-e^0)=-(-n-1)=n+1\\$. Then, <code>]:@]</code> restores the stack to its initial shape and <code>0e-</code> subtracts <code>1</code> from the iterator, continuing our loop. This repeats until <code>iterator</code> reaches <code>0</code>, at which point the loop stops and the program terminates.</p>\n"},{"answer_id":168167,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168167#168167","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/Attache\" rel=\"nofollow noreferrer\">Attache</a>, 15 bytes</h1>\n\n<pre><code>{N!_'-~_}=&gt;Iota\n</code></pre>\n\n<p><a href=\"https://tio.run/##SywpSUzOSP2fpmBl@7/aTzFeXbcuvtbWzjO/JPG/X2pqSnG0SkFBcnosV0BRZl5JSGpxiXNicWpxdJqOQrShjoKRjoKxjoKhAZBlEBv7HwA\" rel=\"nofollow noreferrer\" title=\"Attache – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>{N!_'-~_}=&gt;Iota\n{       }=&gt;        map the inside function:\n           Iota    (over each number k from 0 to n-1)\n    '              array concatenate:\n   _               k\n     -~_           k+1\n N!                convert [k, k + 1] to an integer (concatenates and returns a number)\n</code></pre>\n"},{"answer_id":167869,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167869#167869","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, <s>11</s> 9 bytes</h1>\n\n<p><sup>-2 thanks to <a href=\"https://chat.stackexchange.com/transcript/message/45530899#45530899\">@BMO</a>!</sup></p>\n\n<pre><code>mSöd+d←dḣ\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv7/Pzf48LYU7ZRHbRNSHu5Y/P//f1MDAA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>m          map(                                              )\n S                                               &lt;*&gt;\n  ö            (           .).    .         .\n   d            fromDecimal\n    +                         (++)\n     d                             toDecimal\n      ←                                      (+1)\n       d                                            toDecimal\n                                                              .\n        ḣ                                                      (\\n-&gt;[1..n])\n\nmSöd+d←dḣ  map((fromDecimal.).(++).toDecimal.(+1)&lt;*&gt;toDecimal).(\\n-&gt;[1..n])\n</code></pre>\n"},{"answer_id":167855,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167855#167855","body":"<h1><a href=\"https://github.com/ScratchMan544/momema\" rel=\"nofollow noreferrer\">Momema</a>, 36 bytes</h1>\n\n<pre><code>z0w+1=*0-8*0w00+1*0-8*0-9 10z=+_M-*0\n</code></pre>\n\n<p><a href=\"https://tio.run/##y83PTc1N/P@/yqBc29BWy0DXQsug3MBA2xDC1LVUMDSostWO99XVMvj/39DA4F9@QUlmfl7xf91MAA\" rel=\"nofollow noreferrer\" title=\"Momema – Try It Online\">Try it online!</a> Requires the <code>-i</code> interpreter flag.</p>\n\n<h2>Explanation</h2>\n\n<pre><code>                                                     #  i = 0\nd   0            #  d0:  nop                         #  do {\ni   (+ 1 =*0)    #  i0:  jump to i(![0])             #    if i {\n-8  *0           #       print [0]                   #      print i\ni   0            #  i1:  nop                         #    }\n0   (+ 1 *0)     #       [0] = [0] + 1               #    i += 1\n-8  *0           #       print [0]                   #    print i\n-9  10           #       print chr(10)               #    print \\n\nd   =(+ _M -*0)  #  d1:  jump to d(!!(input - [0]))  #  } while (input - i != 0)\n</code></pre>\n\n<p>The Momema reference interpreter provides an \"interactive mode\", enabled by <code>-i</code>, which is intended to be used on the command line.</p>\n\n<p>One of the features it allows is the ability to add <em>holes</em>, denoted by <code>_</code>, which effectively allow one to substitute an integer read from STDIN into an expression. This is already shorter than <code>*-8</code> (read from memory-mapped I/O location <code>-8</code>), which does the same thing without interactive mode and without displaying a prompt to STDERR.</p>\n\n<p>Crucially, holes can also be <em>named</em> with a sequence of capital letters after the <code>_</code>. Evaluation of named holes is memoized. Input will be read the first time a named hole is evaluated but subsequent evaluations of a hole with the same name will reuse the input number. This means that we can use <code>_M</code> to stand in for \"the input\", but input will only be read on the first iteration of the loop.</p>\n"},{"answer_id":168012,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168012#168012","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, 29 bytes</h1>\n\n<pre><code>[d1-d0&lt;F]dsFx+p[npz1&lt;G]sGz1&lt;G\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0n@b/g/OsVQN8XAxi02pditQrsgOq@gytDGPbbYHUT9/w8A\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p>This is a good showing for dc because its printing capabilities are so limited, but line up perfectly with the challenge spec. Input is from the stack (and must be the only thing on the stack), output is to stdout. There's some duplication near the end I can't figure out how to get rid of without breaking the case n=1</p>\n\n<h1>Explanation</h1>\n\n<pre><code>F will be the macro [d1-d0&lt;F]\nd        copy the top of the stack\n 1-      decrement\n   d0&lt;F  repeat (tail recursion) until a 0 is on top\n\nG will be the macro [npz1&lt;G]\nn        print the top (pop, but no newline)\n p       print the new top (newline, but no pop)\n  z1&lt;G   repeat (tail recursion) until only one number is on the stack\n\nFull program (example input: 4)\n[d1-d0&lt;F]dsFx      Store F and run it: new stack is 0 1 2 3 4\n+                  Drop the zero (can't just recurse to 1, or n=1 breaks)\np                  Print (no pop) the '1': stack is 1 2 3 4\n[npz1&lt;G]sG        Store G\nz1&lt;G               Run G if there's more than one number on the stack\n</code></pre>\n"},{"answer_id":168081,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168081#168081","body":"<h2>C Sharp 51 bytes</h2>\n\n<pre><code>n=&gt;new int[n].Select((_,o)=&gt;int.Parse($\"{o}{o+1}\"))\n</code></pre>\n"},{"answer_id":168077,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168077#168077","body":"<h1><a href=\"https://github.com/JohnEarnest/ok\" rel=\"nofollow noreferrer\">K (oK)</a>, 12 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>,/'$1,2':1+!\n</code></pre>\n\n<p><a href=\"https://tio.run/##y9bNz/7/X0dfXcVQx0jdylBb0dDg/38A\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>,/'$1,2':1+!1\n,,\"1\"\n,/'$1,2':1+!2\n(,\"1\"\n \"12\")\n,/'$1,2':1+!3\n(,\"1\"\n \"12\"\n \"23\")\n,/'$1,2':1+!10 \n(,\"1\"\n \"12\"\n \"23\"\n \"34\"\n \"45\"\n \"56\"\n \"67\"\n \"78\"\n \"89\"\n \"910\")\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<pre><code>,/'$1,2':1+! / the solution\n           ! / range 0..n\n         1+  / add 1\n      2':    / sliding window of 2\n    1,       / prepend 1\n   $         / convert to strings\n,/'          / flatten each\n</code></pre>\n"},{"answer_id":168073,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168073#168073","body":"<h1>Javascript, 43 <s>44,46,49,53</s> bytes</h1>\n\n<pre class=\"lang-js prettyprint-override\"><code>n=&gt;[...Array(n)].map((_,a)=&gt;~~(a+(a+1+&quot;&quot;)))\n</code></pre>\n<p>Previous versions :</p>\n<pre class=\"lang-js prettyprint-override\"><code>n=&gt;[...Array(n)].map((_,a)=&gt;~~(a+(&quot;&quot;+ ++a)))\nn=&gt;[...Array(n)].map((_,a)=&gt;0- -(a+(&quot;&quot;+ ++a)))\nn=&gt;[...Array(n).keys()].map(a=&gt;0- -(a+(&quot;&quot;+ ++a)))\nn=&gt;[...Array(n).keys()].map(a=&gt;parseInt(a+(&quot;&quot;+ ++a)))\n</code></pre>\n<p>Saved 3 bytes thanks to @Shaggy's solution (which is better than mine) to remove <code>.keys()</code></p>\n"},{"answer_id":168072,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168072#168072","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, 34 bytes</h1>\n\n<pre><code>sj1psi[lid1+dsiZAr^*li+pzlj&gt;M]dsMx\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0n@b2jwvzjLsKA4MzonM8VQO6U4M8qxKE4rJ1O7oCony843NqXYt@L/fwA\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p>Completely different (and less golfy, unfortunately) approach than Sophia's <code>dc</code> answer. I juggle a lot of register activity here that I wish I could cut down, seems the likeliest way to golf a couple of bytes. Expects input as the sole stack entry.</p>\n\n<p><code>sj1psi</code> stores the input into register <code>j</code>, prints the initial 1, and stores 1 in register <code>i</code>. Macro <code>M</code> duplicates <code>i</code>, increments it, and then multiplies it by 10 to the power of however many digits the incremented value has (<code>ZAr^*</code>). Fetches the newly incremented version, and adds the two together. Compares register <code>j</code> to the number of entries on the stack, and runs until they match.</p>\n"},{"answer_id":168048,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168048#168048","body":"<h1>PHP, <s>33</s> 32 bytes</h1>\n\n<pre><code>while($argv[1]--)echo\" $i\".++$i;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@G9jX5BRwJVaVJRfFF@UWpBfVJKZl65hoGn9vzwjMydVQyWxKL0s2jBWV1czNTkjX0lBJVNJT1tbJdP6////pgA\" rel=\"nofollow noreferrer\">Try it Online</a></p>\n\n<p>Old version</p>\n\n<pre><code>for(;$i&lt;$argv[1];)echo\" $i\".++$i;     // 33 bytes\n</code></pre>\n"},{"answer_id":168000,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168000#168000","body":"<h1><a href=\"http://www.yabasic.de\" rel=\"nofollow noreferrer\">Yabasic</a>, 37 bytes</h1>\n\n\n\n<p>An anonymous function that takes input from STDIN and outputs to STDOUT. </p>\n\n<pre class=\"lang-vb prettyprint-override\"><code>Input\"\"n\n?1\nFor i=2TO n?i-1,\"\",i\nNext\n</code></pre>\n\n<p><a href=\"https://tio.run/##q0xMSizOTP7/3zOvoLRESSmPy96Qyy2/SCHT1ijEXyHPPlPXUEdJSSeTyy@1ouT/f0MDAA\" rel=\"nofollow noreferrer\" title=\"Yabasic – Try It Online\">Try it online!</a></p>\n\n<p>-14 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/79060/erikf\">@ErikF</a></p>\n"},{"answer_id":168002,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168002#168002","body":"<h1>Excel VBA, 29 bytes</h1>\n \n<p>An anonymous VBE immediate window function that takes input from cell <code>[A1]</code> and outputs to the console.</p>\n<pre class=\"lang-vb prettyprint-override\"><code>?1:For i=2To[A1]:?i-1 &amp;i:Next\n</code></pre>\n"},{"answer_id":168053,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168053#168053","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 41 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda l:[`n`[:n]+`n+1`for n in range(l)]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUSHHKjohLyHaKi9WOyFP2zAhLb9IIU8hM0@hKDEvPVUjRzP2f0FRZl6JQpqGoYnmfwA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":168020,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168020#168020","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a>, <s>30</s> 29 bytes</h1>\n\n<p>\nAn extra byte thanks to @Giuseppe</p>\n\n<pre class=\"lang-r prettyprint-override\"><code>10^nchar(n&lt;-1:scan())*(n-1)+n\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/r/39AgLi85I7FII89G19CqODkxT0NTU0sjT9dQUzsPKPsfAA\" rel=\"noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<p>A mostly mathematical solution, except for using <code>nchar()</code> rather than <code>floor(log10())</code>.  I was really surprised that it came in shorter than the <a href=\"https://codegolf.stackexchange.com/a/167836/31347\">string</a> version.</p>\n"},{"answer_id":167836,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167836#167836","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 32 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>strtoi(paste0((x=1:scan())-1,x))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/r/v7ikqCQ/U6Mgsbgk1UBDo8LW0Ko4OTFPQ1NT11CnQlPzv@l/AA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<p>Outgolfed by <a href=\"https://codegolf.stackexchange.com/a/168020/67312\">MickyT</a>, so go upvote that answer!</p>\n"},{"answer_id":168015,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/168015#168015","body":"<h1><a href=\"https://clojure.org/\" rel=\"nofollow noreferrer\">Clojure</a>, 54 bytes</h1>\n\n\n\n<pre class=\"lang-clj prettyprint-override\"><code>#(reduce(fn[a n](conj a(str n(inc n))))[1](range 1 %))\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcmxDoIwFAXQX7mJMb4ualf9AiYXN8LQlCdCmlvyaEP8@spZT0x5qaZNVptZEiHtJKZjjSof9gEcJGYuCLIVA2VmBN2h94NY4KTwODvX/N05PNFxrQVfNb2iw5h5KTANKf0w6RF5R8mom@LdvfC4tT8\" rel=\"nofollow noreferrer\" title=\"Clojure – Try It Online\">Try it online!</a></p>\n\n<p>Just a reduction over a range between 1 (inclusive) and n (exclusive).</p>\n\n<pre class=\"lang-clj prettyprint-override\"><code>(defn concat-n-n+1 [n]\n  (reduce (fn [acc m]\n            (conj acc (str m (inc m))))\n          [1]\n          (range 1 n)))\n</code></pre>\n\n<p>The first element of the list is a number, the rest are strings. This seems to be allowed by the spec.</p>\n"},{"answer_id":167845,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167845#167845","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, <s>24</s> 21 bytes</h1>\n\n<p><em>@DomHastings came up with a way to save 3 bytes</em></p>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>say$i++.$i|0for 1..&lt;&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/784sVIlU1tbTyWzxiAtv0jBUE/Pxu7/f0Ojf/kFJZn5ecX/dX1N9QwMDQA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167999,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167999#167999","body":"<h1><a href=\"http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/\" rel=\"nofollow noreferrer\">Forth (gforth)</a>, 33 bytes</h1>\n\n<pre class=\"lang-forth prettyprint-override\"><code>: f dup 1 ?do i . i 1 .r loop . ;\n</code></pre>\n<p><a href=\"https://tio.run/##S8svKsnQTU8DUf//WymkKaSUFigYKtin5CtkKugBsaGCXpFCTn5@AZBn/d/YQCHtPwA\" rel=\"nofollow noreferrer\" title=\"Forth (gforth) – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>Loops through all numbers in range and outputs the number twice, the first with a space appended, and the second without.</p>\n<p>This results in the first output being appended to the previous output. To fix the last case, the input is outputted so that it can be appended to the last number in the loop.</p>\n<h3>Code Explanation</h3>\n<pre class=\"lang-forth prettyprint-override\"><code>: f                   \\ start a new word definition\n  dup 1               \\ duplicate the input and put a 1 on the stack\n  ?do                 \\ begin counted loop from 1 to n (does nothing if 1 == n)\n    i .               \\ output loop index with a space appended\n    i 1 .r            \\ output loop index right-aligned with minimum 1 character length\n  loop                \\ end the loop\n  .                   \\ output the input we duplicated earlier\n;                     \\ end the word definition\n</code></pre>\n"},{"answer_id":167864,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167864#167864","body":"<h1>Powershell, <s>27</s> 26 bytes</h1>\n\n<pre><code>1..\"$args\"|%{\"$p$_\";$p=$_}\n</code></pre>\n\n<p>-1 byte: thanks <a href=\"https://codegolf.stackexchange.com/users/42963/admborkbork\">AdmBorkBork</a></p>\n\n<p>Test script:</p>\n\n<pre><code>$f = {\n1..\"$args\"|%{\"$p$_\";$p=$_}\n}\n\n&amp;$f 1\n\"\"\n&amp;$f 2\n\"\"\n&amp;$f 3\n\"\"\n&amp;$f 10\n\"\"\n&amp;$f 46\n</code></pre>\n"},{"answer_id":167993,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167993#167993","body":"<h1><a href=\"http://groovy-lang.org/\" rel=\"nofollow noreferrer\">Groovy</a>, 35 bytes</h1>\n\n<pre><code>{(0..&lt;it)*.with{\"\"+it+++it as int}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##Sy/Kzy@r/J9m@79aw0BPzyazRFNLrzyzJKNaSUk7s0RbG0goJBYrZOaV1Nb@LygC0jl5Cmkappr/AQ\" rel=\"nofollow noreferrer\" title=\"Groovy – Try It Online\">Try it online!</a></p>\n\n<p>I came up last minute with the idea of using *.with instead of .collect. I have no idea what <code>it+++it</code> parses to but whether it's <code>it++ + it</code> or <code>it + ++it</code> they both do the same thing. I tried to think of a way of getting rid of the &lt; in ..&lt; by turning it into 1..it and decrementing but I don't think it would get any shorter.</p>\n"},{"answer_id":167983,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167983#167983","body":"<h2><a href=\"http://shakespearelang.sourceforge.net/\" rel=\"nofollow noreferrer\">Shakespeare</a>, 703 bytes</h2>\n\n<pre><code>Q.Ajax,.Ford,.Act I:.Scene I:.[enter Ajax and Ford]Ford:Open mind!Scene V:.Ajax:You is the sum of thyself the sum of myself the sum of a big bad fat old red pig a big bad fat old lie!Ford:Open mind!Is you nicer zero?Ajax:If so, you is twice the sum of the sum of twice thyself twice thyself thyself!If so,Let us Scene V!Ford:You a cat!Open heart!Scene X:.Ajax:You is the sum of thyself a pig!Is you worse than a cat?If so,let us Scene C.Remember thyself.You is the sum of the sum of a big old red cute rich cat a big old red cute joy a big old pig!Speak mind!You is a big old red cute rich cat!Speak mind!Recall!Ford:Open heart!You is the sum of thyself a joy!Open heart!Let us Scene X.Scene C:.[exeunt]\n</code></pre>\n\n<p><a href=\"https://tio.run/##hVJBasMwEPzK@m4E7dGXEAIFQ6E0gZJScpDldaNElowkk7ifdyVLoXIS0ou83llmZkcynRjHd7I80HNOXpSuc7JkFsqCbBhK9MUXSosa/AhQWYOf2vmjeOtQQstlnYXhj2IiKj5VD9yA3SOYvgXVuHIwKJq01d50KFT8GypaQ0MtKFGDxho617tFBMfsykNpYHDCkjPn9ge1WkxmygaMyifIezo5eO7sr4xYNDb/C98ssL2ihd5A3DoY8UtTYNRmk6U9Um1jLtt/c6F@zcsGJ6WNV6YyEC6CqEhFV2SNLbaVWzVykHvsV9leMmW9RdCc7T39PeyghqTtvW06pMcQdBR6QJlOr5FRIZLLCsk8ysKppyHO0t7Gh7nyD/OMvbS7cXx@@gU\" rel=\"nofollow noreferrer\">try it here</a></p>\n\n<h2>ungolfed version</h2>\n\n<pre><code>127421th Night.\nAjax, likes to read the stars.\nFord, someone Ajax can always count on.\nAct I:.\nScene I: Ajax reads a star.\n[enter Ajax and Ford]\nFord: Open your mind! \nScene V: Ford counts what ajax has learned.\nAjax: you are the sum of thyself and the sum of myself and the sum of a big bad fat old red pig and a big bad fat old lie!\nFord: Open Your mind! Are you nicer than zero?\nAjax: If so, you are twice the sum of the sum of twice thyself and twice thyself and thyself! \nIf so, Let us Scene V!\nFord: You are a cat! Open your heart!\n\nScene X: Ajax and Ford recall the nights.\nAjax: You are the sum of thyself and a pig! Are you worse than a cat? If so, Let us Scene C.\nRemember thyself. \nYou are the sum of the sum of a big old red cute rich cat and a big old red cute joy and a big old pig! \nSpeak you mind!\nYou are a big old red cute rich cat! Speak your mind! Recall your finest hour!\nFord: Open your heart! You are the sum of thyself and a joy! Open your heart! Let us Scene X.\nScene C: Fin.\n[exeunt]\n</code></pre>\n"},{"answer_id":167969,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167969#167969","body":"<h2>ABAP, 101 bytes</h2>\n<p>Not really a golfing language, but I'm having a lot of fun with it</p>\n<pre><code>WHILE x&lt;w.\nCLEAR z.\nIF x=1.\nWRITE x.\nELSE.\nCONCATENATE y x INTO z.\nWRITE z.\nENDIF.\ny=x.\nx=x+1.\nENDDO.\n</code></pre>\n<p>W is the input term, X is the counter from 1, Y is X-1 from the second pass onward, Z is concatenated string.</p>\n"},{"answer_id":167959,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167959#167959","body":"<h1>J, 14 bytes</h1>\n\n<pre><code>(,&amp;.\":&gt;:)\"0@i.\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/r/P03B1kpBQ0dNT8nKzkpTycAhUw8kaMiVpmAExMZAbGgAAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":167946,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167946#167946","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 3 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"noreferrer\">bytes</a></h1>\n\n<pre><code>ŻVƝ\n</code></pre>\n\n<p>A monadic link accepting an integer which yields a list of integers</p>\n\n<p><strong><a href=\"https://tio.run/##y0rNyan8///o7rBjc////29iBgA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n\n<h3>How?</h3>\n\n<pre><code>ŻVƝ - Link: integer       e.g. 59\nŻ   - zero-range               [0,1,2,3,4,5,6, ... ,58,59]\n  Ɲ - apply to each pair: i.e: [0,1] or [5,6]  or  [58,59]\n V  -   evaluate* jelly code   1     or 56     or  5859\n    -                       -&gt; [1,12,23,45,56, ... 5859]\n\n* When given a list V actually joins the Python string values and evaluates that\n  ...so e.g.: [58,59] -&gt; ['58','59'] -&gt; '5859' -&gt; 5859\n</code></pre>\n"},{"answer_id":167937,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167937#167937","body":"<h1><a href=\"http://www.jsoftware.com/help/learning/contents.htm\" rel=\"nofollow noreferrer\">J</a>, 20 bytes</h1>\n\n<pre><code>\".(,&amp;\":)/@(,&gt;:)\"0@i.\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/r/P0/B1kpBSU9DR03JSlPfQUPHzkpTycAhUw8kZciVp2AExMZAbGjwHwA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167920,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167920#167920","body":"<h1><a href=\"https://github.com/ETHproductions/japt/\" rel=\"nofollow noreferrer\">Japt</a>, 5 bytes</h1>\n<pre><code>õÈsiY\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.5&amp;code=9chzaVk=&amp;input=OTk=\" rel=\"nofollow noreferrer\">Try it</a></p>\n<hr />\n<h2>Explanation</h2>\n<pre><code>          :Implicit input of integer U\nõ         :Range [1,U]\n È        :Map each integer at index Y\n  s       :  Convert to string\n   iY     :  Prepend index\n          :  Implicitly convert back to integer\n          :Implicit output of resulting array\n</code></pre>\n<hr />\n<h2>Alternative</h2>\n<pre><code>Ç°s+Z\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.5&amp;code=x7BzK1o=&amp;input=OTk=\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>          :Implicit input of integer U\nÇ         :Map each integer Z in the range [0,U)\n °        :  Postfix increment\n  s       :  Convert to string\n   +Z     :  Append (the now incremented) Z\n          :  Implicitly convert back to integer\n          :Implicit output of resulting array\n</code></pre>\n"},{"answer_id":167919,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167919#167919","body":"<h1><a href=\"https://github.com/okx-code/Panacea\" rel=\"nofollow noreferrer\">Panacea</a>, 6 bytes</h1>\n\n<pre><code>re\nD&gt;j\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>r        Range [0.. input]\n e       Map each element with the following line\nD        Duplicate\n &gt;       Increment\n  j      Join digits; multiply by ten and add\n         Since this works with integers, it removes the preceding 0.\n</code></pre>\n"},{"answer_id":167917,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167917#167917","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 34 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f n=\"1\":[show=&lt;&lt;[i-1,i]|i&lt;-[2..n]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00hz1bJUMkqujgjv9zWxiY6U9dQJzO2JtNGN9pITy8vNvZ/bmJmnoKtQkFRZl6JgopCmoKhwX8A\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167915,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167915#167915","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C# (Visual C# Compiler)</a>, 46 bytes</h1>\n\n<p>If you are allowed to have some <code>using static</code> directives in the top whose bytes do not count:</p>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>n=&gt;1+Concat(Range(1,n-1).Select(x=&gt;\",\"+x+++x))\n</code></pre>\n\n<p><a href=\"https://tio.run/##hY6xDoIwEED3fkXj1KZArI4Ii9FJEyODc60naQJHbIvBGL4dSwKbCeu7d@9Ou1g7PbTOYEmdV95oWnychzopvA0wJf9mJ4Ov5IBtDVbdK0gJmea6Us7Ri21Kq2rynfG7MQ96VgYZD3CKHFvUO4M@CvHxVE6fgdBswCyXYt@gVp5dFZbAZISx5EkBFWjPuixfRSvRCSE6zod0DoYV11SQ3KzxEF4ENgaZ5HxJ2Swr22VFrkenJ/3wAw\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Compiler) – Try It Online\">Try it online!</a></p>\n\n<p>Will explode if input <code>n</code> is <code>0</code>.</p>\n\n<p>It is interesting that, while the C# rules say <code>\",\"+x+++x</code> means <code>( \",\" + (x++) ) + x</code>, if it had meant <code>( \",\" + x ) + (++x)</code> instead, the program would still work!</p>\n"},{"answer_id":167878,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167878#167878","body":"\n\n<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C# (Visual C# Interactive Compiler)</a>, <s>103</s> <s>71</s> <s>64</s> 56 bytes</h1>\n\n<hr>\n\n<p><strong>Golfed</strong> <a href=\"https://tio.run/##VY9NSwMxEIbv@RVD2ENCP9i2t6a7Ij0JgqAHD9ZD2I4YqLPSTHEl5LevMe62dk4v82SemTR@1njX3zbsWtrcEa@WNVioelfV4a09KkcMXVWabuOMfvr2jB/zbUu@PeD8@egYVSGD6uryppDT0EW5llLHMJmkqE3sjRDZ@vIqIBWj56316KECwi8YGIRMf2sxPcflJa4ucVHmGJM5HYi2eVd/mrMcHP1bpAf59dVQyDT1eeI1hPFt3NHDiXNPgjZ5yqqRDo0rzb0jVHJH6asiCjGyR7T7jLTpfwA\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Interactive Compiler) – Try It Online\">Try it online!</a></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>i=&gt;{for(int x=0;x&lt;i;)Write($\"{(x&gt;0?$\",{x}\":\"\")}{++x}\");}\n</code></pre>\n\n<hr>\n\n<p><strong>Ungolfed</strong></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>i =&gt; {\n    for( int x = 0; x &lt; i; )\n        Write( $\"{( x &gt; 0 ? $\",{x}\" : \"\")}{ ++x }\" );\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Full code</strong></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>Action&lt;Int32&gt; a = i =&gt; {\n    for( int x = 0; x &lt; i; )\n        Write( $\"{( x &gt; 0 ? $\",{x}\" : \"\")}{ ++x }\" );\n    };\n\nInt32[]\n    testCases = new Int32[] {\n        1,\n        2,\n        3,\n        10,\n    };\n\nforeach( Int32[] testCase in testCases ) {\n    WriteLine( $\" Input: {testCase}\\nOutput:\" );\n    a(testCase);\n    WriteLine(\"\\n\");\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Older versions:</strong></p>\n\n<ul>\n<li><p><strong><em>v1.2, 64 bytes</em></strong></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>i=&gt;{for(int x=0;x&lt;i;)Write($\"{(x&gt;0?$\",{x}\":\"\")}{++x}\");}\n</code></pre></li>\n<li><p><strong><em>v1.1, 71 bytes</em></strong></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>i=&gt;{for(int x=0;x&lt;i;)System.Console.Write($\"{(x&gt;0?$\",{x}\":\"\")}{++x}\");}\n</code></pre></li>\n<li><p><strong><em>v1.0, 103 bytes</em></strong></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>i=&gt;{for(int x=0;x&lt;i;)System.Console.Write($\"{(x&gt;0?\",\":\"\")}{x++*System.Math.Pow(10,$\"{x}\".Length)+x}\");}\n</code></pre></li>\n</ul>\n\n<hr>\n\n<p><strong>Releases</strong></p>\n\n<ul>\n<li><strong>v1.3</strong> - <code>- 8 bytes</code> - Removed <code>Console</code> thanks again to <a href=\"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167878?noredirect=1#comment405677_167878\">raznagul</a></li>\n<li><strong>v1.2</strong> - <code>- 7 bytes</code> - Removed <code>System</code> thanks to <a href=\"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167878?noredirect=1#comment405670_167878\">raznagul</a></li>\n<li><strong>v1.1</strong> - <code>-32 bytes</code></li>\n<li><strong>v1.0</strong> - <code>103 bytes</code> - Initial solution.</li>\n</ul>\n\n<hr>\n\n<p><strong>Notes</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n"},{"answer_id":167910,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167910#167910","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 39 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n:1//n or f'{f(n-1)} {n-1}{n}'\n</code></pre>\n\n<p><a href=\"https://tio.run/##DYtBCoAgFAXXdYq3U8FQcyd0GCMkob4ibkI8u7magWHyV@9EdoxwPP49Lw9yRilCKgisBU6bER1tojfqbIQZCJFgJHYJK2H0NO3WJZdIlc9FiPED\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167908,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167908#167908","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C# (Visual C# Compiler)</a>, 54 bytes</h1>\n\n<p>Uses space as seperator character.\n</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>n=&gt;{var r=\"\";for(;n--&gt;1;)r=\" \"+n+(n+1)+r;return\"1\"+r;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##jcyxCsIwEAbgvU8RMiXEFqNjbBfBSUFwcA4xlUC9wCUtSOmzx6jg4JR/Ov777kyoTTDJDDoEcq7miuSEqKMzZPLuRk7aAeOf@rt85/IM0T6awwhm5yCu8gU6uHekJ22CtpsnjQRbSlXvkSmo604qngtCBQgGQnKBCm0cEaikeV6Sqv7f7z0EP9jmii7aowPLeiY5VyVuU@i2hU6ui@FPLtWSXg\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Compiler) – Try It Online\">Try it online!</a></p>\n\n<p><strong>Ungolfed full code:</strong></p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>class P\n{\n    static void Main()\n    {\n        System.Func&lt;int, string&gt; f =\n            n =&gt;\n            {\n                var r = \"\";        //Declare variable for the result\n                for (; n--&gt; 1;)    //Loop until n is 1\n\n                    r =            //Set the result to:\n                        \" \" +      //Seperator +\n                        n +        //Value of n as string\n                        (n + 1) +  //Value of n + 1 as string\n                        r;         //Previous content of the result\n\n                return \"1\" + r;    //Return 1 (first item) + the result.\n            }\n            ;\n\n        System.Console.WriteLine(f(1));\n        System.Console.WriteLine(f(2));\n        System.Console.WriteLine(f(3));\n        System.Console.WriteLine(f(10));\n        System.Console.WriteLine(f(100));\n    }\n}\n</code></pre>\n"},{"answer_id":167839,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167839#167839","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <s>42</s> 41 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n:n-1and f(n-1)+[`n-1`+`n`]or[1]\n</code></pre>\n\n<p><a href=\"https://tio.run/##NYuxCoAgFAB3v@KNigW@RqEvMUHDLKGeIi59vbk0HHfLlbddmZYe121w@2cPHkjTjJ4CRD5CSOOGnHTkbK4GbY@5QoJEUD2dB8cJldBQaqI2niQY@xuVEv0D\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>Recursive function that returns a mixed list of strings and integers</p>\n"},{"answer_id":167830,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167830#167830","body":"<h1>RAD, <s>28</s> 27 bytes</h1>\n<pre><code>(⊢(⊢+⊣×10*1+∘⌊10⍟⊢)1+⊢)¨0,⍳\n</code></pre>\n<p><a href=\"https://bitbucket.org/zacharyjtaylor/rad/src\" rel=\"nofollow noreferrer\">Repository</a></p>\n<p>Must be called like: <code>((⊢(⊢+⊣×10*1+∘⌊10⍟⊢)1+⊢)¨0,⍳) &lt;value&gt;</code>, as I broke assignment of functions when I implemented shy results.</p>\n<p><strong>Note:</strong> this should also work in Dyalog APL, and due to that: -1 byte thanks to @Adám!</p>\n<p>The <code>⍳</code> can either be the APL symbol or the greek one if run in RAD, but must be the APL version ifran in Dyalog APL</p>\n"},{"answer_id":167907,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167907#167907","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 9 bytes</h1>\n\n<pre><code>:\"@qV@VhU\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/30rJoTDMISwj9P9/Q0MA\" rel=\"nofollow noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n\n<pre><code>              % implicit input n\n:             % range, push 1..n\n\"             % for loop:\n @            % push for loop index\n q            % decrement\n V            % convert to string (num2str)\n @            % push for loop index\n V            % convert to string (num2str)\n h            % horizontally concatenate\n U            % convert to number (str2num)\n              % implicit end of for loop\n              % implicit end of program, display stack contents\n</code></pre>\n"},{"answer_id":167904,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167904#167904","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 0.6</a>, 30 bytes</h1>\n\n\n\n<pre class=\"lang-julia prettyprint-override\"><code>n-&gt;[\"1\";[\"$i$(i+1)\"for i=1:n]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##yyrNyUw0@59m@z9P1y5ayVDJOlpJJVNFI1PbUFMpLb9IIdPW0CovNvZ/bmKBRkFRZl5JTt6jjhlpOgoahjqmOpY6hqaamv8B\" rel=\"nofollow noreferrer\" title=\"Julia 0.6 – Try It Online\">Try it online!</a></p>\n\n<p>Alternative version with numeric output:</p>\n\n<h3>34 bytes</h3>\n\n\n\n<pre class=\"lang-julia prettyprint-override\"><code>n-&gt;[10^ndigits(i)*~-i+i for i=1:n]\n</code></pre>\n\n<p><a href=\"https://tio.run/##yyrNyUw0@59m@z9P1y7a0CAuLyUzPbOkWCNTU6tON1M7UyEtv0gh09bQKi/2f25igUZBUWZeSU7eo44ZaToKGoY6pjqWOoammpr/AQ\" rel=\"nofollow noreferrer\" title=\"Julia 0.6 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167840,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167840#167840","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a> <code>-m</code>, <s>6</s> 5 bytes</h1>\n\n<pre><code>ó2 ¬n\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn///BmI4VDa/L@/9fN5TIyAAA\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n\n<p>As always, <em>know the flags</em>.</p>\n\n<h3>Unpacked &amp; How it works</h3>\n\n<pre><code>-m       Convert to range and map...\n\nUó2 q n\nUó2      Construct [U, U+1]\n    q    Join\n      n  Convert to number\n\n         Implicit output (Array is printed as comma-delimited values)\n</code></pre>\n"},{"answer_id":167891,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167891#167891","body":"<h2>Perl 5, 29 bytes</h2>\n\n<pre class=\"lang-perl prettyprint-override\"><code>say\"@{[1,map$_-1 .$_,2..&lt;&gt;]}\"\n</code></pre>\n"},{"answer_id":167886,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167886#167886","body":"<h1>Java, 48 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>String f(int n){return--n&gt;0?f(n)+\",\"+n+-~n:\"1\";}\n</code></pre>\n\n<p>Port of <a href=\"https://codegolf.stackexchange.com/users/44718/tsh\">tsh</a>'s JavaScript <a href=\"https://codegolf.stackexchange.com/a/167841/79343\">answer</a>. Try it online <a href=\"https://tio.run/##LY7LDoIwEEXX5SsmXbWpJbAVH1/giqVxUaGQIgykLRhD8NexoqubzM09Zxo1KdkPGpvysQ7jvTUFFK1yDi7KIMxr7q3BGipm0APy2Wo/WpQST8m5YsgF3VGBQr5xT1OaLSv5U5xXPsTUmxK6wGI/0vUGytaOwxwRsjk6OALq5yZkPAvnqrebzoQmzUIcIE2SDIQwPNQkfzmvu7gffTwEpm@RdXH4kH/XS7SsHw\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Ungolfed:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>String f(int n) { // recursive function taking an integer as argument and returning a String\n    return --n &gt; 0 ? f(n) // decrement n and recurse if n is still positive after\n                   + \",\" + n // return the result of the recursive call concatenated with n and ...\n                   + (- ~n) // ... n+1; writing it as -~n gives it precedence over the concatenation\n                   : \"1\"; // if n is now 0 on the other hand, return \"1\"\n}\n</code></pre>\n"},{"answer_id":167884,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167884#167884","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f x=[[y-1|y&gt;1]++[y]&gt;&gt;=show|y&lt;-[1..x]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P02hwjY6ulLXsKbSzjBWWzu6MtbOzrY4I7@8ptJGN9pQT68iNvZ/bmJmnoKtQko@lwIQFBRl5pUoqCikKRii8Y3Q@Mbo6g3@AwA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167882,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167882#167882","body":"<h1><a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a>, 56 bytes</h1>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>|n|(0..n).map(|n|format!(\"{}{}\",n,n+1).parse().unwrap())\n</code></pre>\n\n<p><a href=\"https://tio.run/##HcxBCsMgFATQfU5hs/qfBknanUnTW3QvoiDojxhDFsazW9vZDbyZeOypGmJeWgJkuWMtTidm2KtedMHIOSH3MkBrZotephv0ueTSDzTQfUIeZNw1ID/ojM0h1vl/E6Kl5OjHxbtxZmAakavNOa2SEMtHq8U@H@vaNnNX6hc\" rel=\"nofollow noreferrer\" title=\"Rust – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167867,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167867#167867","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 43 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda i:[1]+[`x`+`x+1`for x in range(1,i)]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUSHTKtowVjs6oSJBO6FC2zAhLb9IoUIhM0@hKDEvPVXDUCdTM/Z/QVFmXolCmoaRgeZ/AA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>First element is an integer, the rest are strings.</p>\n"},{"answer_id":167831,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167831#167831","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"noreferrer\">Perl 6</a>, <s>19</s> 18 bytes</h1>\n\n\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{(^$_ Z~1..$_)X+0}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYKvwv1ojTiVeIarOUE9PJV4zQtug9n9xYqVCmoahgYGm9X8A\" rel=\"noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>Anonymous code block that zips the range 0 to n-1 with 1 to n using the concatenation operator, then adds 0 to every element to force it to a number and remove leading 0s.</p>\n"},{"answer_id":167860,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167860#167860","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Classic)</a>, 9 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>1,2,/⍕¨∘⍳\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNzkksLs5M/v@ob2pm/qO2CYb/00CkjpGO/qPeqYdWPOqY8ah38///aQqGBgA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Classic) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167859,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167859#167859","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 6 bytes</h1>\n<pre><code>⟦s₂ᶠcᵐ\n</code></pre>\n<p><a href=\"https://tio.run/##ASAA3/9icmFjaHlsb2cy///in6Zz4oKC4bagY@G1kP//MTD/Wg\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>⟦         Range: [0, …, Input]\n s₂ᶠ      Find all substrings of length 2\n    cᵐ    Map concatenate\n</code></pre>\n"},{"answer_id":167857,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167857#167857","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 56 bytes</h1>\n\n<pre><code>func[n][prin\"1 \"repeat i n - 1[prin rejoin[i i + 1\" \"]]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##HcgxCoAwDAXQ3VN8sopgHT2Ga8ggNoU4xBL0/FF84wutuWllGdqa7fGDXbiHORVQaNf9hsExofyN0PMyZ/t2RCGQiGTDMucL\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167856,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167856#167856","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 6 bytes</h1>\n\n<pre><code>&gt;GNJ,N\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f/fzt3PS8fv/39DAwA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>&gt;G       # for N in [1 ... input]\n  N      # push N\n   J     # join stack\n    ,    # print\n     N   # push N (for next iteration)\n</code></pre>\n\n<p><code>LεD&lt;ìï</code> would work for same byte count but with list output</p>\n"},{"answer_id":167849,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167849#167849","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 11 bytes</h1>\n\n<pre><code>{{_)s+si}%}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85KzP1flPm/ujpes1i7OLNWtfZ/XcJ/QwMDAwA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167826,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167826#167826","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <strike>57</strike> 55 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f n=read&lt;$&gt;zipWith((.show).(++).show)[0..][1..n]::[Int]\n</code></pre>\n\n<p>A function which takes a number and returns a list.</p>\n\n<p><em>EDIT: -2 Bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/56656/cat-wizard\">Cat Wizard</a></em></p>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00hz7YoNTHFRsWuKrMgPLMkQ0NDrzgjv1xTT0NbWxPCjDbQ04uNNtTTy4u1sor2zCuJ/Z@bmJlnm5LPpaCQV5qrYKOrkJ5a4pOZlwoUKCjKzCtRUFFIU9AAmQxWYGWlANSm@d/QwAAA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167841,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167841#167841","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 25 bytes</h1>\n\n\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=n=&gt;--n?f(n)+','+n+-~n:1\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/f8/zTbP1k5XN88@TSNPU1tdR107T1u3Ls/K8H9yfl5xfk6qXk5@ukaahqGmpjUXqpARppAxppChAVDsPwA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167838,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167838#167838","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 44 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>for i in range(input()):print`i`*(i&gt;0)+`i+1`\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/Py2/SCFTITNPoSgxLz1VIzOvoLREQ1PTqqAoM68kITNBSyPTzkBTOyFT2zDh/39jAwA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167825,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167825#167825","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, <s>13</s> 12 bytes</h1>\n\n<p><em>1 byte saved thanks to @FrownyFrog</em></p>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>(⍎⍕,∘⍕1∘+)¨⍳\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qG@qp/@jtgkG/9OApMaj3r5HvVN1HnXMAFKGQEpb89CKR72b//9PUzDkSlMwBmJDAwA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167835,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167835#167835","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 4 bytes</h1>\n\n<pre><code>ḶżRV\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8///hjm1H9wSF/f//39AUAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>ḶżRV  Main link. Argument: n\n\nḶ     Unlength; yield [0, ..., n-1].\n  R   Range; yield [1, ... n].\n ż    Zipwith; yield [[0, 1], ..., [n-1, n]].\n   V  Eval; cast each array to string and evaluate, yielding integers.\n</code></pre>\n"},{"answer_id":167834,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167834#167834","body":"<h1><a href=\"https://github.com/ETHproductions/cubix\" rel=\"noreferrer\">Cubix</a>, 19 bytes</h1>\n\n<pre><code>I.1.W)&gt;OSo;u.uO;@!-\n</code></pre>\n\n<p><a href=\"https://tio.run/##Sy5Nyqz4/99Tz1AvXNPOPzjfulSv1N/aQVH3/39DAwA\" rel=\"noreferrer\" title=\"Cubix – Try It Online\">Try it online!</a></p>\n\n<p>This wraps onto the cube as follows</p>\n\n<pre><code>    I .\n    1 .\nW ) &gt; O S o ; u\n. u O ; @ ! - .\n    . .\n    . .\n</code></pre>\n\n<p><a href=\"https://ethproductions.github.io/cubix/?code=ICAgIEkgLgogICAgMSAuClcgKSA+IE8gUyBvIDsgdQouIHUgTyA7IEAgISAtIC4KICAgIC4gLgogICAgLiAuCg==&amp;input=MTAK&amp;speed=20\" rel=\"noreferrer\">Watch It Run</a></p>\n\n<p>Got a little room to play with yet, but at the moment </p>\n\n<ul>\n<li><code>W</code> redirect to the top face heading down</li>\n<li><code>I1&gt;</code> set up the stack with the input and 1 then redirect into the main loop</li>\n<li><code>OSo;u</code> output the top of stack, add space to stack, output, remove and uturn</li>\n<li><code>-!@;Ou)</code> subtract TOS from input, if 0 halt else pop result, output TOS, uturn and increment TOS.  Back into the main loop.</li>\n</ul>\n"},{"answer_id":167821,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167821#167821","body":"<h1><a href=\"https://github.com/dzaima/Canvas\" rel=\"nofollow noreferrer\">Canvas</a>, 6 <a href=\"https://github.com/dzaima/Canvas/blob/master/files/chartable.md\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>ŗ²；＋┤］\n</code></pre>\n\n<p><a href=\"https://dzaima.github.io/Canvas/?u=JXUwMTU3JUIyJXVGRjFCJXVGRjBCJXUyNTI0JXVGRjNE,i=MTA_,v=3\" rel=\"nofollow noreferrer\">Try it here!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>{     ]  map over 1..input\n ŗ         convert to string (required as `＋` needs 1 arg to be a string to not add)\n  ²;       place a 0-indexed version of the index below TOS\n    +      join the two\n     ┤     cast to number\n</code></pre>\n\n<p><code>ŗ²×┤］</code> (or even <code>²×┤］</code>) would work if I didn't try to push the absolute most out of characters and didn't make <code>×</code> - reverse add - do not that when not receiving 2 strings.</p>\n"},{"answer_id":167828,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167828#167828","body":"<h2>Haskell, <s>38</s> 37 bytes</h2>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f n=(\"\":)&gt;&gt;=zipWith(++)$show&lt;$&gt;[1..n]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00hz1ZDSclK087OtiqzIDyzJENDW1tTpTgjv9xGxS7aUE8vL/Z/bmJmnoKtQkFRZl6JgopCmoKhwX8A\" rel=\"noreferrer\">Try it online!</a></p>\n\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/users/56656/cat-wizard\">Cat Wizard</a> for a byte!</p>\n"},{"answer_id":167827,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167827#167827","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Classic)</a>, 13 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>2{⍎∊⍕¨⍺⍵}/0,⍳\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNzkksLs5M/v/fqPpRb9@jjq5HvVMPrXjUu@tR79ZafQOdR72b/6cpPGqboKCBW4Um16O@qWBFaSCZzab/AQ\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Classic) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":167824,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167824#167824","body":"<h1><a href=\"https://github.com/stestoltz/cQuents/tree/cquents-0\" rel=\"nofollow noreferrer\">cQuents</a>, 11 bytes</h1>\n<pre><code>=1::($-1)~$\n</code></pre>\n<p><a href=\"https://tio.run/##Sy4sTc0rKf7/39bQykpDRddQs07l/38jAA\" rel=\"nofollow noreferrer\" title=\"cQuents 0 – Try It Online\">Try it online!</a></p>\n<p>Way too long for a language that this is supposed to be easy in, guess I should have implemented unary subtract-one and add-one operators.</p>\n<h1>Explanation</h1>\n<pre><code>=1            First term in sequence is 1\n  ::          Mode: for input n, output first n terms in sequence\n              For each term in the sequence:\n    ($-1)      Subtract 1 from the current index\n         ~$    Concatenate that to the current index\n</code></pre>\n"},{"answer_id":167820,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167820#167820","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>8</s> 6 bytes</h1>\n\n<pre><code>ṭ’DFḌ)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8///hzrWPGma6uD3c0aP5//9/QwMA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<pre><code>ṭ’DFḌ)    Monadic link with argument n\n     )    For each int in the range 1..n\n ’        n-1\nṭ         [n-1, n]\n  D       Digits of n-1 and n\n   F      Flatten into one list\n    Ḍ     Convert back to an integer.\n</code></pre>\n"},{"answer_id":167822,"question_id":167818,"link":"https://codegolf.stackexchange.com/questions/167818/concatenating-n-with-n-1/167822#167822","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 59 bytes</h1>\n\n<pre><code>proc C n {puts [incr i]\ntime {puts $i[incr i]} [expr $n-1]}\n</code></pre>\n\n<p><a href=\"https://tio.run/##NcsxCoAgFAbgvVP8g0MNQdYRPIY5hDgI@nqYgSCe3RZbP/iyDb1zui0UCJXf/EB7sgneTNlHN0z4Xxu0K5wgaJWm9RAvRkGV2HFAbm2Ek9QsyjIpiNL6Bw\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<p>PS: I will golf it more later!</p>\n"},{"answer_id":167671,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/167671#167671","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 0.6</a>, 15 bytes</h1>\n\n\n\n<pre class=\"lang-julia prettyprint-override\"><code>s-&gt;\" \"^endof(s)\n</code></pre>\n\n<p><a href=\"https://tio.run/##yyrNyUw0@59m@79Y105JQSkuNS8lP02jWPN/bmKBRkFRZl5JTt6jjhlpOgoaSh6pOTn5Ogrh@UU5KYpKOgpKiSAiLT09Lb0kIw0IUzLKUrLTUyqTUtKBKCM5pSQjOU1JU/M/AA\" rel=\"nofollow noreferrer\" title=\"Julia 0.6 – Try It Online\">Try it online!</a></p>\n\n<p><code>^</code> applied to strings is the repetition operator, and <code>endof</code> gives the last index of the string, which is equal to the length of the string (since Julia indexing is 1-based).</p>\n"},{"answer_id":167349,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/167349#167349","body":"<h1><a href=\"https://github.com/lynn/z80golf\" rel=\"nofollow noreferrer\">Z80Golf</a>, 9 bytes</h1>\n\n<pre><code>00000000: d5cd 0380 3001 763e 20                   ....0.v&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/##q7IwSM/PSfv/3wAKrBRSTJNTFAyMLQwUjA0MDBXMzYxTFYwMFDCBHhAY6JXZ/f/vkZqTk68IAA\" rel=\"nofollow noreferrer\" title=\"Z80Golf – Try It Online\">Try it online!</a></p>\n\n<p>Disassembly:</p>\n\n<pre><code>  push de     ; push $0000\n  call $8003  ; getchar(A)\n  jr nc, k    ; jump if not EOF\n  halt\nk:ld a, ' '   ; replace A with space\n              ; memory from $000a through $7fff is $00=NOP...\n              ; PC reaches $8000=putchar(A) and RETs to pushed address.\n</code></pre>\n\n<p>(If you remove the last two bytes, this is a <code>cat</code> program.)</p>\n"},{"answer_id":166357,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/166357#166357","body":"<h2>Python 2.7, 36 bytes</h2>\n\n<pre><code>list({x for x in i if i.count(x)&gt;1})\n</code></pre>\n\n<p>Where <code>i</code> is the input</p>\n"},{"answer_id":166326,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/166326#166326","body":"<h1>GNU Assembler(x86_64 Mac OS X), 97 bytes</h1>\n<p>This is a proper function that can be called from C:</p>\n<pre><code>.text\n.globl _f\n_f:\nmovq %rdi,%xmm0;movq %rsi,%xmm1;pclmulqdq $0,%xmm1,%xmm0;movq %xmm0,%rax;ret\n</code></pre>\n<p>&amp; can be tested with this C program:</p>\n<pre><code>#include &lt;stdio.h&gt;\nint f(int a, int b);\n#define p(a,b) printf(&quot;%d %d %d\\n&quot;, a, b, f(a, b))\nint main(void)\n{\n    p(0,1);\n    p(1,2);\n    p(9,0);\n    p(6,1);\n    p(3,3);\n    p(2,5);\n    p(7,9);\n    p(13,11);\n    p(5,17);\n    p(14,13);\n    p(19,1);\n    p(63,63);\n}\n</code></pre>\n<p>Note that on Mac OS X, you have to use <code>clang -x c</code> to compile it as C &amp; not C++.</p>\n<p>For linux(if I remember right), the code would be 95 bytes:</p>\n<pre><code>.text\n.globl f\nf:\nmovq %rdi,%xmm0;movq %rsi,%xmm1;pclmulqdq $0,%xmm1,%xmm0;movq %xmm0,%rax;ret\n</code></pre>\n<p>Strangely enough, this version is actually longer than defining the function in inline assembly, but that one was longer than the pure C solution we already have, so I decided to try assembly.</p>\n<h3>edit</h3>\n<p>If it's counted by the assembled size(excluding any labels &amp;c.), then it's</p>\n<h1>x86_64 Assembler, 22 bytes:</h1>\n<pre><code>0:  66 48 0f 6e c7          movq         %rdi,  %xmm0\n5:  66 48 0f 6e ce          movq         %rsi,  %xmm1\na:  66 0f 3a 44 c1 00       pclmullqlqdq $0,    %xmm1,%xmm0\n10: 66 48 0f 7e c0          movq         %xmm0, %rax\n15: c3                      ret\n</code></pre>\n"},{"answer_id":166321,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/166321#166321","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 75 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>function a($b){return array_unique(array_diff_assoc($b,array_unique($b)));}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@G9jXwAk00rzkksy8/MUEjVUkjSri1JLSouAnKKixMr40rzMwtJUDQgnJTMtLT6xuDg/GahQB0UBUKOmpnXt/7LEoviU0twCjUSNaPVEdR0FEyMdBfUkGCNRPVZTk4vL3u4/AA\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":166320,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/166320#166320","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 7 bytes</h1>\n<pre><code>â £kX â\n</code></pre>\n<p><a href=\"https://tio.run/##y0osKPn///AihUOLsyMUDi/6/z9a19hER8FAR8FQRwHMBCILIBnLxaWbAQA\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n<h2>Explanation:</h2>\n<pre><code>â £kX â\nâ         // Get all unique items from the input\n  £       // Map X through the results\n   kX     //   Remove X from the input\n      â   //   Get unique items\n-h        // Return the last item\n</code></pre>\n"},{"answer_id":166095,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/166095#166095","body":"<h1>J, 43 bytes</h1>\n\n<pre><code>[:(&gt;{~\"_1#@&gt;|i.@#)[:(,}.@}:)&amp;.&gt;[:&lt;;._1' '&amp;,\n</code></pre>\n\n<h2>ungolfed</h2>\n\n<pre><code>[: (&gt; {~\"_1 #@&gt; | i.@#) [: (, }.@}:)&amp;.&gt; [: &lt;;._1 ' '&amp;,\n</code></pre>\n\n<ul>\n<li><code>&lt;;._1 ' '&amp;,</code> split on spaces</li>\n<li><code>(, }.@}:)&amp;.&gt;</code> for each word, kill the first and last elm and append to word</li>\n<li><code>#@&gt; | i.@#</code> take the remainder of each word's length divided into its index</li>\n<li><code>&gt; {~\"_1</code> take that result and pluck it from each word.</li>\n</ul>\n\n<p><a href=\"https://tio.run/##y/qvpKeepmBrpaCuoKNgoGAFxLp6Cs5BPm7/o6007KrrlOINlR3sajL1HJQ1gSI6tXoOtVaaanp20VY21nrxhuoK6mo6/zW5uFKTM/IV0hTUQzIyixWAKFEhrTRPoSSxOFtRHS7pn5ecqhBakJ@n4KgQkpmbqo6kLbUoVaE8EaQxNzFP/T8A\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":165842,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165842#165842","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 77 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>while(ord($w=$argv[++$i]))echo($w.=strrev(substr($w,1,-1)))[~-$i%strlen($w)];\n</code></pre>\n\n<p><a href=\"https://tio.run/##FYrBCsMgEER/xkIkSSHnNs1P9BZysHVRqbiymkgv/fXtBoaZ4c1kn/m@ZPHmQ4QOyXaqzcqQO9a@V2HTGt4eBV7nUong6Mr@kiZkmIZx0lqvv1GFi7AISbDebrw8mJ8@FBYZjpgcyx4kKrINJUfzZY@Nqwd2kIBMRTrfZc8ZC9jz2JA@fw\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n\n<ul>\n<li>-3 bytes thanks to Kevin</li>\n<li>-10 bytes thanks to Titus</li>\n</ul>\n"},{"answer_id":165928,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165928#165928","body":"<h1>Powershell <s>208</s> <s>186</s> 170 bytes</h1>\n\n<pre><code>$args|%{$i=0;-join($_.Split()|%{$l=($b=($a=$_)).Length;if($l-gt2){$b=($a|%{-join$a[($l-2)..1]})}for($j=0;$a.Length-le$i;$j++){$a+=($b,$_)[$j%2]}$a.Substring($i,1);$i++})}\n</code></pre>\n\n<p>Ungolfed: </p>\n\n<pre><code>$args|%{\n   $i=0;\n    -join($_.Split()|%{\n        $l=($b=($a=$_)).Length;\n        if($l-gt2){\n            $b=($a|%{-join$a[($l-2)..1]})\n        }\n        for($j=0;$a.Length-le$i;$j++){\n            $a+=($b,$_)[$j%2]\n        }\n        $a.Substring($i,1);\n        $i++\n    })\n}\n</code></pre>\n\n<p>Test cases below or <a href=\"https://tio.run/##TY7BasMwDIZfRQsqxKQJa66hh94HO7Rjh1KKuqiJU9cOtkMYXZ49s9MdBjKIX9//4d6MbF3LSs0zkm3cz@qBcvta5Z2ROsVzse@V9KmIudqmeAmPtngWonhj3fi2ktcUVd74Ujye14AubaRjvJSiKDanSUxXY1Psghvpr5srRllhl2WhS1nUr4P6iN2qPE0B2w8X563UTYpyvREVyiwLpnmek0MrHYQhuA4aPLnbSzIn7/qL4aM3GnZwkHdOIsiWYaSI3kmH5LM1Yas5BLG3MOQXRDP55L9cGd3A8w/gDdTS9Yq@oTUj@JahYc2WvLGRdkPfG8d1BEdjb8kv\" rel=\"nofollow noreferrer\">try it online</a></p>\n\n<pre><code>@(\n    \"This is a fun task!\",\n    \"Once Upon A Time\",\n    \"There was a man\",\n    \"Who made a task\",\n    \"That was neat\",\n    \"This is a long string to display how the generator is supposed to work\"\n)|%{$i=0;-join($_.Split()|%{$l=($b=($a=$_)).Length;if($l-gt2){$b=($a|%{-join$a[($l-2)..1]})}for($j=0;$a.Length-le$i;$j++){$a+=($b,$_)[$j%2]}$a.Substring($i,1);$i++})}\n</code></pre>\n"},{"answer_id":165808,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165808#165808","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, <s>78</s> <s>70</s> <s>69</s> 68 bytes</h1>\n\n<p>-1 byte @Arnauld</p>\n\n\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;x.split` `.map((y,i)=&gt;y[a=i%(l=y.length-1)|0,i/l&amp;1?l-a:a]).join``\n</code></pre>\n\n<p><a href=\"https://tio.run/##ddDBasMwDAbg@55CLWwk0HjrdSUde4JdMnYYg4hEid06krHdpYG9e@YUdhktCHTQxy@hA35jaLxxsWBpae7K@Vzuzyo4a2INtRrQZdm0MXm5nz6xNPeZLSdlifuoi23@87Qxj/Zh@2ILfMavXB3EcF3Pu0Y4iCVlpc@6bF1pEyAVQndiiBiOq3We7@7@uzduCN6dMLxCZQa6iipNnmDEJW5Avmo@tKRZS4ks227kYLzEMGFc3SB/d1vhHkL0JrUo0Jr0IpxAywhRE/TE5DGKX3Q4OSeB2gWO4i/b518\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation</strong>\n</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>x=&gt;\n x.split` `                    // Split the words by spaces\n .map((y,i)=&gt;                  // For each word:\n  y[                           //  Get the character at index:\n                               //   A walk has cycle of length (2 * y.length - 2)\n   a=i%(l=y.length-1)|0,       //   Calculate index a = i % (y.length - 1)\n   i/l&amp;1                       //   Check in which half the index i in\n   ?l-a                        //   If in the second half of cycle, use y.length - 1 - a\n   :a                          //   If in the first half of cycle, use a                  \n  ]\n ).join``                      // Join back the letters\n</code></pre>\n"},{"answer_id":165924,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165924#165924","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 9 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>éñ~╗D¡┤Gq\n</code></pre>\n\n<p><a href=\"https://staxlang.xyz/#p=82a47ebb44adb44771&amp;i=Once+Upon+A+Time%0AThere+was+a+man%0AWho+made+a+task%0AThat+was+neat%21%0AThis+is+a+long+string+to+display+how+the+generator+is+supposed+to+work&amp;a=1&amp;m=2\" rel=\"nofollow noreferrer\">Run and debug it</a></p>\n\n<p>Unpacked, ungolfed, and commented, it looks like this.</p>\n\n<pre><code>j       split into words\n{       start block for mapping\n  cDrD  copy word; remove first and last character; reverse\n  +     concatenate with original word\n  i@    modularly (wrap-around) index using map iteration index\nm       perform map\n</code></pre>\n\n<p><a href=\"https://staxlang.xyz/#c=j+++++%09split+into+words%0A%7B+++++%09start+block+for+mapping%0A++cDrD%09copy+word%3B+remove+first+and+last+character%3B+reverse%0A++%2B+++%09concatenate+with+original+word%0A++i%40++%09modularly+%28wrap-around%29+index+using+map+iteration+index%0Am+++++%09perform+map&amp;i=Once+Upon+A+Time%0AThere+was+a+man%0AWho+made+a+task%0AThat+was+neat%21%0AThis+is+a+long+string+to+display+how+the+generator+is+supposed+to+work&amp;a=1&amp;m=2\" rel=\"nofollow noreferrer\">Run this one</a></p>\n"},{"answer_id":165835,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165835#165835","body":"<h2>Haskell, <s>65</s> <s>62</s> 61 bytes</h2>\n\n<pre><code>zipWith(\\i-&gt;(!!i).cycle.(id&lt;&gt;reverse.drop 1.init))[0..].words\n</code></pre>\n\n<p><a href=\"https://tio.run/##FYyxTsNADEB3vsKtGJKhJ9hpJ0a2VmKgDKecc7F6OVu2QxU@niOVnvSWpzdFu2EpjWZhdXiPHsMZZ8rKizyNcLy2X5JP8qm70uHU7XbUh2EdCoaO0ttJ8QfVMCRlgddAlbzvv15C@A531mRtjlThCLL42fWjwjOMsL9MZLARoXDNYK60yRkSmZS4wsR38AkhY0WNzvqobRFhw/QIt/lt39rFYq68sjOJ898wlpitHQaRfw\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>It requires the latest version of <code>Prelude</code> which features the <code>&lt;&gt;</code> function.</p>\n\n<pre><code>                   words    -- split the input string into a list of words\nzipWith(\\i-&gt;     )[0..]     -- zip the elements i of [0..] and the words pairwise\n                            -- with the function      \n      ... &lt;&gt; ...            --   call the functions with a word and concatenate\n                            --   the results. The functions are\n        id                  --     id: do nothing\n        reverse.drop 1.init --     drop last and first element and reverse\n    cycle                   --   repeat infinitely\n(!!i)                       -- take the ith elemnt of  \n</code></pre>\n\n<p>Edit: -3 bytes thanks to @user28667, -1 byte thanks to @B. Mehta</p>\n"},{"answer_id":165802,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165802#165802","body":"<h1>Java 10, <s>148</s> <s>117</s> <s>114</s> 110 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;{int i=-1,j;for(var a:s.split(&quot; &quot;))System.out.print(a.charAt((j=a.length()-1)&gt;0*i++?i/j%2&lt;1?i%j:j-i%j:0));}\n</code></pre>\n<p>-31 bytes thanks to <em>@SamYonnou</em> by creating a port of <a href=\"https://codegolf.stackexchange.com/a/165808/52210\"><em>@user71546</em>'s JavaScript answer</a>.<br />\n-4 bytes thanks to <em>@SamYonnou</em> again, optimizing the algorithm for Java.</p>\n<p><a href=\"https://tio.run/##hVJNTwIxEL37KwYSk1bdRTyyouHgUT2I8WA8jLsD22Vpm3YWJIbfjt0PFdHEpm3SZl7f67xX4AqjIlvs0hK9h1tU@v0IQGkmN8OU4K4@AqyMyiAVD@yUnoOXSbjdhhWmZ2SVwh1oGMPOR1fvAQ1qHA3PimRmnFihAxz52NtSsehDX8qHjWdaxqbi2IYXWWCc5ugmLEQxxrgkPedcyGgor85P1OnptRoUxxeXw2t1XIyKqN7PpUy2u6TVYKvXMmjopDRil@Ernd7nF0DZ/oPJBwnTXHkIE2FWaWD0i15fJgCDAdy8WUqZshFMPVa9PdC9Du14tEbDBKZqSQ0CDkD3dkI/iMgRrLGmWqL@hBwQIeIe5ik3oTajAKmV/Y15Qlz84EFuaDQh974gv3j@7EFpaktbZ9lApoJRuIHcrIFzgjlpcsjG1dW@stZ4yurCtXG1uiP4dxz2da7NxrBRlk2To@8UNdY1AruoKW0r7szTcSrac0t6mKJSiy6Y290H\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;{                            // Method with String parameter and no return-type\n  int i=-1,                     // Step integer, starting at -1\n      j;                        // Temp integer\n  for(var a:s.split(&quot; &quot;))       // Loop over the parts split by spaces\n    System.out.print(           // Print:\n     a.charAt((j=a.length()-1)  //  Set `j` to the the length of the part minus 1\n               &gt;0               //  If the length of the part is larger than 1 (`j` &gt; 0)\n                 *i++?          //  (and increase `i` by 1 in the process with `i++`)\n                i/j%2&lt;1?        //   If `i` integer-divided by `j` is even:\n                 i%j            //    Print the character at index `i` modulo-`j`\n                :               //   Else:\n                 j-i%j          //    Print the character at index `j` minus `i` modulo-`j`\n               :                //  Else:\n                0));}           //   Print the first (and only) character\n                                //   (the &gt;0 check is added to prevent divided-by-0 errors)\n</code></pre>\n"},{"answer_id":165918,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165918#165918","body":"<h1><a href=\"https://www.microsoft.com/net/core/platform\" rel=\"nofollow noreferrer\">C# (.NET Core)</a>, 111 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>s=&gt;{int i=-1,j;return String.Concat(s.Split(' ').Select(a=&gt;a[++i&gt;(j=a.Length-1)?j&gt;0?i/j%2&lt;1?i%j:j-i%j:0:i]));};\n</code></pre>\n\n<p><a href=\"https://tio.run/##fdFBa8IwFAfws/0UT0Fs0Xa6o7WVMdjJsYEOD@Lh0T7bdG3SJa8TET9711oGO0whJCT88k9eEhk3UprqygiZwPpkmArf@jvzVkJ@@VaUozHwrlWisYCz1TOMLCL4ViKGVxTSNqybXbs9oE6M05KXSkaLbnkC3RjCAQLo1SYIz0IyiMCdTTJfE1dawvpqvGclI2TbeOsyF2yPYOR4a8opYhuDEHfjsQjtLEBvRTLh1J05yyycLsVDNnxczJZimM0zt@2nc7F3HP/i102kUTl5Wy2YmorIPtiDTSoMNA3hUElgNJ/9QcOtf/GbjAg@SiXhCTaioNtyk5ImOGIbXKC8DbepakBMjWsPv5eIfA2UhNy/534LylXzgd2TAyuIhSlzPEGqjsApQUKSNLLSrTZVWSpDcQuPSnf3sHoX61L/AA\" rel=\"nofollow noreferrer\" title=\"C# (.NET Core) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":165887,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165887#165887","body":"<h1>AWK, 79 bytes</h1>\n<p>Mostly because I'm curious to see any better awk or bash solutions!</p>\n<pre><code>{for(i=1;i&lt;=NF;i++){l=length($i);k=int(i/l)%2?l-i%l:k%l;printf substr($i,k,1)}}\n</code></pre>\n<p><a href=\"https://tio.run/##FcrBCsMgEATQX9lDA5GklPRYK7n12FN/wBITFxdX1BBKyLdbAwMDM09vrpR95tiiGiQ@1fslsevEToqMX7JtLyikU@hzizcSzX2kKzb0cA3JEOs8Q1q/KccKe9cP4jhK@VhMUKOB2C9QX6yVGSZMgfQPLG@QrYHFeBN15njqtIbAyUwn3Di6Pw\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n"},{"answer_id":165884,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/165884#165884","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 16 bytes</h1>\n\n<pre><code>`ä&#149;&#4;Krk`qe g~Uxc\n</code></pre>\n\n<p><a href=\"https://ethproductions.github.io/japt/?v=2.0a0&amp;code=YOSVBEtya2BxZSBnflV4Yw==&amp;input=LW0gWwpbJ2EnLCcxJ10sClsnYicsJzEnXSwKWydnJywnNiddLApbJ2QnLCc0J10KXQ==\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>`ä&#149;&#4;Krk`qe g~Uxc\n\n`ä&#149;&#4;Krk`          Compressed literal for \"lightedark\"\n        qe        Split with \"e\"\n           g      Take the element at the index (wrapping)...\n             U      Input array of chars\n              xc    Sum the chars' charcodes\n            ~       Take bitwise not, in order to swap parity\n</code></pre>\n\n<p><a href=\"https://codegolf.stackexchange.com/a/142629/78410\">The string array compression trick</a> did quite a job here.</p>\n"},{"answer_id":165878,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165878#165878","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 148 bytes (string version), 114 bytes (print version)</h1>\n\n<p>If I must return a string (long version):</p>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>char c[99]={0};char*f(s,t,u,i,j,k)char*s,*t,*u;{for(u=c,i=0;t=strtok(s,\" \");s=0,i++)*u++=t[j=strlen(t),k=2*j-(j&gt;1)-1,(i%k&lt;j?i%k:k-i%k)%j];return c;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##TU/LboMwELzzFatUkWxjqtBb4jj9id4QB2QcMFAb2etEFeLbqUkvlVajnYdGu6rolNrejFVTbDVcA7bGvfe37L/kje2Stqm@8aCq87mWy2kVO2V3EjjyyA0f@EhfUuAMOYtiuTtPolTcyJNAmXrQjSl@gAMVQZ64yXPKYp5LrIbdnrQlSPkoP9hQkOFW0qLkxBzH6/CZ8DIWCelxqIXXGL0FJdbNWITvxliyL43vFH@dyVjaHxSWDMDcyW6kPpgjBvKij6qsKRXZum1fvQmQpoHJ2Q7@HgZ00JowT80P9O4J2GvotNW@Qef3dIjz7IJu9@DT@fEX\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n\n<p>Otherwise, I just print and don't worry about a buffer (short version):</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(s,t,i,j,k)char*s,*t;{for(i=0;t=strtok(s,\" \");s=0,i++)putchar(t[j=strlen(t),k=2*j-(j&gt;1)-1,(i%k&lt;j?i%k:k-i%k)%j]);}\n</code></pre>\n\n<p><a href=\"https://tio.run/##TY/BasMwEETv/oolJSApcol7jOP0J3oLPQhZtldyJSOtE0rIt7tSeykswzD7dmB1PWq9vaDX89obOCfqMbxOl@p/FNGPOdsGliRJlFY6ricVRZKC2scQIsPu2FKXUQouUzvY8TZ1R4mHA19WKjSjqy3EbDwjLl33JmzN7KXhdSMZ7t3Zvmc9uTor39tP3j439ARfCj0rRsVRy1IFQmR/4/CoAHBgZZF74Nfdrk0@rZ7b9jFhgjwK5uBH@HsEKECPaZnVN0zhDjQZGI03UVGIhU7rsoRk@gLeQ3Q/\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":165871,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/165871#165871","body":"<h1>Javascript, 57 bytes</h1>\n\n<p><code>_=1;i=0;for(z=10;z--;)alert((a=&gt;!(o=_+i)+(i=_)+!(_=o))())</code></p>\n"},{"answer_id":165859,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165859#165859","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 76 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>print map{$l=length;substr$_.reverse,$i++%(2*$l-2||1)*(1+1/$l),1}split\" \",&lt;&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/##FczLCsIwEIXhVxlKhN5UUnDl5SncS6RDExyTMJNaxPrsMcKBf/NxIjIdco7sfIKniR9FZ0I/JXuU@S6J1W3H@EIW7JXruk09tIq2w7rqpq11p/eKml5/JZJLFVT96ZLz1TqBMgMU/ATlxZWkAKMrzrzBhgWSRZjQI5sU@K9ljjEIjn@4BH78AA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":165794,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165794#165794","body":"<h1>Japt, <code>-P</code>, 11 bytes</h1>\n<pre><code>¸Ëê ÅªD gEÉ\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/japt/?v=2.0a0&amp;code=uMvqIMWqRCBnRck=&amp;input=IlRoaXMgaXMgYSBsb25nIHN0cmluZyB0byBkaXNwbGF5IGhvdyB0aGUgZ2VuZXJhdG9yIGlzIHN1cHBvc2VkIHRvIHdvcmsiCi1Q\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>¸Ë+s1J w)gE\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/japt/?v=2.0a0&amp;code=uMsrczFKIHcpZ0U=&amp;input=IlRoaXMgaXMgYSBsb25nIHN0cmluZyB0byBkaXNwbGF5IGhvdyB0aGUgZ2VuZXJhdG9yIGlzIHN1cHBvc2VkIHRvIHdvcmsiCi1Q\" rel=\"nofollow noreferrer\">Try it</a></p>\n<hr />\n<h2>Explanations</h2>\n<pre><code>¸Ëê ÅªD gEÉ\n¸               :Split on spaces\n Ë              :Map over each element D at index E\n  ê             :  Palindromise\n    Å           :  Slice off the first character\n     ªD         :  Logical OR with the original element (the above will return an empty string for single character words)\n        g       :  Get the character at index\n         EÉ     :  E-1\n</code></pre>\n\n<pre><code>¸Ë+s1J w)gE\n¸               :Split on spaces\n Ë              :Map over each element D at index E\n   s1J          :  Slice off the first and last characters\n       w        :  Reverse\n  +     )       :  Append to D\n         gE     :  Get the character at index E\n</code></pre>\n"},{"answer_id":165844,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165844#165844","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 12 bytes</h1>\n<pre><code>s.e@+b_Ptbkc\n</code></pre>\n<p><a href=\"https://pyth.herokuapp.com/?code=s.e%40%2Bb_Ptbkc&amp;test_suite=1&amp;test_suite_input=%22This%20is%20a%20fun%20task%21%22%0A%22Once%20Upon%20A%20Time%22%0A%22There%20was%20a%20man%22%0A%22Who%20made%20a%20task%22%0A%22That%20was%20neat%21%22%0A%22This%20is%20a%20long%20string%20to%20display%20how%20the%20generator%20is%20supposed%20to%20work%22&amp;debug=0\" rel=\"nofollow noreferrer\">Try it online</a></p>\n<pre><code>s.e@+b_PtbkcQ   Final Q (input) implicit\n\n           cQ   Split on spaces\n .e             Map the above with b=element, k=index\n       Ptb        Remove 1st and last character\n      _           Reverse\n    +b            Prepend the unaltered element ('abcd' -&gt; 'abcdcb')\n   @      k       Get the kth character (0 indexed, wrapping)\ns               Join on empty string, implicit output\n</code></pre>\n"},{"answer_id":165838,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165838#165838","body":"<h1><a href=\"http://www.red-lang.org\" rel=\"nofollow noreferrer\">Red</a>, 135 bytes</h1>\n\n<pre><code>func[s][n: 0 p: copy\"\"foreach w split s\" \"[append/dup r: copy\"\"append w\nreverse copy/part next w back tail w n: n + 1 append p r/(n)]p]\n</code></pre>\n\n<p><a href=\"https://tio.run/##VZDBTsMwEETv/YppTiAOgWtufAESCuIQ5bDEm9hKul7ZDqFC/fbgFIpaaQ@reTPjlQOb9ZVN0@76au1n6ZrYNlLhEVqh83osit4Hps5iQdTJJcQCRUOqLKY0syJcjL8all3gTw6Rz3KpFBKEv1Iu@KBuRCI35T0/InjAE/5iuai8k/tW21WDk4Qe37V1EXkI@bQcjOP@tPunL9Ix3tQLnlG7A1@h2nJgLLRFDyRX5N36rBjOYOu7yVA6R4Qp7W/A5YrJy4CYMhiQPIzLP0JHWL8gWcbAwoGSD5s7zqo@stmMiw/jaf0B\" rel=\"nofollow noreferrer\" title=\"Red – Try It Online\">Try it online!</a></p>\n\n<h2>Readable:</h2>\n\n<pre><code>f: func[s][\n    n: 0\n    p: copy \"\"\n    foreach w split s \"  \"[\n        r: copy \"\"\n        append/dup r append w reverse copy/part next w back tail w n: n + 1\n        append p r/(n)\n    ]\n    p\n]\n</code></pre>\n"},{"answer_id":165806,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165806#165806","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 11 bytes</h1>\n\n<pre><code>#vyN©Fû}®è?\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f9fuazS79BKt8O7aw@tO7zC/v//kIzMYgUgSlTIyc9LVyguKcoEUiX5CimZxQU5iZUKGfnlCiUZqQrpqXmpRYkl@UUg1cWlBQX5xakpIIXl@UXZAA\" rel=\"noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>#             # split input on spaces\n vy           # for each word in input\n   N©F        # N times do, where N is the current iteration\n      û}      # palendromize the word\n        ®è    # use N to index into the resulting word\n          ?   # print\n</code></pre>\n"},{"answer_id":165805,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165805#165805","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 12 bytes</h1>\n\n<pre><code>ḲJị\"ŒBṖȯ$€$Ɗ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8///hjk1eD3d3Kx2d5PRw57QT61UeNa1ROdb1////kIzMYgUgSlTIyc9LVyguKcoEUiX5CimZxQU5iZUKGfnlCiUZqQrpqXmpRYkl@UUg1cWlBQX5xakpIIXl@UXZAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":165803,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165803#165803","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 16 bytes</h1>\n\n<pre><code>⭆⪪Ｓ §⁺ι✂ι±²¦⁰±¹κ\n</code></pre>\n\n<p><a href=\"https://tio.run/##PYzBCsIwEETvfsXiaQsV1Ksnjz0ohfoDS7skoSEbkq3Vr4@pgrDMzgyPGS2lUciX0icXFAetz9wo4hC9U@xCXPRXYtPCHvZVr9qFiV/Y@yWja2HwbuTN3NmQMp4rc/ynU9PUPFe9lPKwLkM9Ai/BQP4ugwpMLkdPb7CygloGw4ETqaSNzkuMknnawFXSvCuHp/8A\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n\n<pre><code>  Ｓ                 Input string\n ⪪                  Split on spaces\n⭆                   Map over words and join\n      ι ι           Current word\n       ✂ ±²¦⁰±¹     Slice backwards from 2nd last character to start exclusive\n     ⁺              Concatenate\n    §          κ    Cyclically index on current word index\n                    Implicitly print\n</code></pre>\n\n<p>I don't often get to use Slice's last parameter.</p>\n"},{"answer_id":165799,"question_id":165793,"link":"https://codegolf.stackexchange.com/questions/165793/new-password-idea-word-walker/165799#165799","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, 72 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:''.join((-~i*(w+w[-2:0:-1]))[i]for i,w in enumerate(s.split()))\n</code></pre>\n\n<p><a href=\"https://tio.run/##bZCxTsNADIb3PIUjhtwBqaBjJIY@QZegDqWDIU5ybWKfchedsvDq4Q5R6IDlzZ8@@7ddfC@8XduXt3XA8b1BcFVRbM5iWKny09yr8BCO5bZ6qsrnk9ZHc2plAvMYwDAQzyNN6Em5jbOD8UprvdrJsIdWFXVvHMRGaGcGj@6SF/oOaodznv1Se/4geLXCsIPajJSQWHu7o@xGRRNBwCQbkX8YqBHxDzr0EocNRSYtu0IHxMutCf23iAl9fmWSKfvn8EG4A@fjoAMv0JgYExfoJYDvCTrilD99xIGbrRVHTQKDTHE/RHlM27Es4sVYkfUL\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":165021,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/165021#165021","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 14 bytes</h1>\n\n<pre><code>óV y £Yv ?X:Xw\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn///DmMIVKhUOLI8sU7COsIsr//1cKKMpPL0rMzc3MS1cIKK2qykktVlBTcM5PSVVwz89JU@Iy4eLSDQIA\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164677,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164677#164677","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>145</s> 141 bytes</h1>\n\n<p>Not allowing trailing whitespace made it clunkier than otherwise.</p>\n\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/users/52904/ceilingcat\">ceilingcat</a> for the tip that led me on the track to save 4 bytes.</p>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>f(s,n,l,i,j)char*s;{for(l=strlen(s),i=0;i&lt;l;i+=2*n)if(printf(\"%-*.*s\\n\",n,n,s+i),i+n&lt;l){for(j=i+2*n;j&gt;i+n;)putchar(l/j--?s[j]:32);puts(\"\");}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##bY2xTsMwFEXn5iuMJZCd2IBaWHADgkLbsRtDYYjSODzrxa7sdGmVbw@vwMh4r849t9ZtXY@jFUl5hQqUk/VXFfNkTjZEgWXqIzZeJKmgvDUwRwNFOc29BCv2EXxvBb/U@XWePjwnh1epAIILP0f543AlFDQw7pFKI/eH/vwg8MZp/ZS27vNhNpWG6iQ4l2YYRrKyrgIvZHbKJnSwiaGNVdeBb9nmcDxik9gVW4Rdw1YBLVfsTpps8uvQWvNzot26QQyKvYeIuwui7v@lnl8Wr2/L1fpPM4zf\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164874,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164874#164874","body":"<h1>Python 3, <del>110</del> <del>108</del> <del>107</del> 103 bytes</h1>\n\n<pre class=\"lang-python prettyprint-override\"><code>def a(s,n):l=len(s)//n+1;s+=' '*(len(s)-l);print('\\n'.join([s[x*n:n*x+n][::(-1)**x]for x in range(l)]))\n</code></pre>\n\n<p>(looking at other answers), with <code>rjust</code>: <del>95</del> <del>93</del> <del>92</del> 90 bytes</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>def a(s,n):print('\\n'.join([s[x*n:n*x+n][::(-1)**x].rjust(n)for x in range(len(s)//n+1)]))\n</code></pre>\n"},{"answer_id":164722,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164722#164722","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 19 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>{↑⊢∘⌽\\↓↑⍵⊆⍨⌈⍺÷⍨⍳≢⍵}\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P/FR24TqR20TH3UtetQx41HP3phHbZNB/N6tj7raHvWueNTT8ah31@HtIGbv5kedi4Aytf//mygkKqgHFOWnFyXm5mbmpSsElFZV5aQWK6gpOOenpCq45@ekqXOZglR5pObk5OsohOcX5aQoqgMA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p>Took the <code>⊢∘⌽\\</code> trick from <a href=\"https://codegolf.stackexchange.com/a/150153/41805\">ngn's brilliant answer to the boustrophedonise challenge</a>.</p>\n\n<p>After realising that my submission breaks for lines with leading newlines, I have added two more bytes. Below is the older submission.</p>\n\n<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 17 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>{↑⊢∘⌽\\⍵⊆⍨⌈⍺÷⍨⍳≢⍵}\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P/FR24TqR20TH3UtetQx41HP3phHvVsfdbU96l3xqKfjUe@uw9tBzN7NjzoXAWVq//83VUhUUPdIzcnJ11EIzy/KSVFUBwA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164814,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164814#164814","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>83</s> 75 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>(id!)\n(f![])_=[]\n(f!l)n=f(take n$l++cycle\" \")++'\\n':((f.reverse)!drop n l)n\n</code></pre>\n\n<p>Simple <code>chunksOf</code> implementation with take and drop, applying an even or odd number of reverses to the output as we go.</p>\n\n<p>Thanks to @BMO for five bytes and @ØrjanJohansen for three bytes!</p>\n\n<p><a href=\"https://tio.run/##FcuxCsIwEADQ3a@4hmITgk5OQiYH14JjWySkl1p6TUISBfvxRt3e8h46LUhUsuoLn8dK7LitukHcVTf8ScIpy7NeEFxNUpq3IWTAhJRN75oz5/YY8YUxoajG6AM4@J2y6tmBgvDMtxyhhgysjX6Kel1nN0H73DbCBHu4@BHh6skyOJWPsaSnVA4mhC8\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164695,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164695#164695","body":"<h2>Clojure, 83 bytes, <strike>87 bytes</strike>, <strike>79 bytes</strike></h2>\n\n<pre><code>(fn[n s](map #(apply str(% %2))(cycle[#(or %)reverse])(partition n n(repeat\\ )s))))\n</code></pre>\n\n<p>several corrections after comments below, thank you <a href=\"https://codegolf.stackexchange.com/users/66041/%C3%98rjan-johansen\">Ørjan</a>.</p>\n\n<p><a href=\"https://tio.run/##LY3LTsMwEEX3@YpLqiBbgg2CL2ABy@5YpF1YzqSYjh@MnUrtzwe7YWZ3z9wzluPPIrSuaqIZvgPUHMaAfFTeJOyUSYmvyEXUgOFFa2WvlmncqSgYtNCFJNNRq2SkuOJiQF0llMiUA3TWdbqu2QPsN9kz7vb2iKlgFMoLFyhfe1m3vJIpZvrFyC4QtoMNVJQkoOX/3k35in4v8STGexdO2C@3G1PGI97jRPiIPPe6q1UXCgf0z/dp0VZ/Q/9JzPEJX1F4eqhkXf8A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>Clojure seems often sadly absent from code golfing answers. It certainly can not compete in byte length with golfing languages, but I think the total absence is somewhat unwarranted.</p>\n\n<p>Explanation: </p>\n\n<ul>\n<li>in-data, two arguments a number and a string</li>\n<li>start by running clojure built-in function <a href=\"https://clojuredocs.org/clojure.core/partition\" rel=\"nofollow noreferrer\">partition</a> on string <code>s</code> chunking it into a sequence of lists of characters where the lists have length <code>n</code>. The last chunk will be padded with spaces to length <code>n</code> using the \"pad collection\" returned from <code>(repeat \" \")</code> which returns an infinite lazy sequence of spaces</li>\n<li>we then call <a href=\"https://clojuredocs.org/clojure.core/map\" rel=\"nofollow noreferrer\">map</a> with three arguments: \n\n<ul>\n<li>an anonymous function (the <code>#(..)</code>)</li>\n<li>an infinite alternating lazy sequence of functions <code>#(or %)</code> which functions like the <a href=\"https://clojuredocs.org/clojure.core/identity\" rel=\"nofollow noreferrer\">identity</a> function and <a href=\"https://clojuredocs.org/clojure.core/reverse\" rel=\"nofollow noreferrer\">reverse</a> (i.e. <code>[#(or %) reverse #(or %) reverse ...]</code>) as returned by <a href=\"https://clojuredocs.org/clojure.core/cycle\" rel=\"nofollow noreferrer\">cycle</a>.</li>\n<li>the chunked up lazy sequence of lists returned by partition. </li>\n</ul></li>\n<li>finally the <a href=\"https://clojure.org/guides/learn/functions#_anonymous_function_syntax\" rel=\"nofollow noreferrer\">anonymous function</a> <code>#(apply ...)</code>: \n\n<ul>\n<li>calls either <code>identity</code> or <code>reverse</code> alternatingly on a chunk. This is done via the <code>(% %2)</code> expression which calls the function sent in as the first argument to the anonymous function [i.e. <code>identity</code> or <code>reverse</code>] using the second argument [i.e. the chunk] to the anonymous function as the argument to the call.</li>\n<li>calls <code>(apply str ...)</code> to convert the list of characters into a string</li>\n</ul></li>\n<li>the outer function returns a lazy sequence of strings </li>\n</ul>\n\n<p>one trick we use here is that a lot of clojure functions like <code>map</code> take an arbitrary number of collections as args, i.e. <code>(map f coll1 coll2 coll3 ...)</code> where the function f just needs to accept as many arguments as there are collections. In this case we send in two collections, a collection of alternating function references and the chunked up string. </p>\n"},{"answer_id":164745,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164745#164745","body":"<h1>Java 8, <s>197</s> <s>146</s> 136 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;n-&gt;{String r=&quot;&quot;,t,u;for(int l=s.length,i=0,j;i&lt;l/n*n+n;r+=t+&quot;\\n&quot;,i=j)for(t=&quot;&quot;,j=i;j&lt;i+n;t=j++/n%2&lt;1?t+u:u+t)u=j&lt;l?s[j]:&quot; &quot;;return r;}\n</code></pre>\n<p><a href=\"https://tio.run/##hZA9T8MwEIZ3fsVhCZSQ1AUESx2nAxIfA1KlDgylg0nSYOPakX2u1Fb97cFRy4ZAuuF074f0nBIbMVL1V19p4T28Cmn2ZwAeBcoKVFRpQKnpKpgKpTX08bQUc3TStItl/qfrxWDTNi6Ho70soQLe@1FpRuX@eAPHCckxD2xlXSINguae6sa0@JlLfp0rJgs9NlcmM8xlHDPybkhUVDoEcEgrLpkqZDQgV1k2Nhe3xc0UszAJGaaBq0JP/UItJwQIcw0GZ8CxQ88ia5wufOiIe6LeWFnDOn4i@WEEkQ5fAZhvPTZragPSLkqoTVJR0XV6m5CZs60T6/WANAu7nW48XMKDrRt4snpFqO@0xISQND1F7tKU/Vv73Ghtc3izTtfnv5TcH0sOZ4f@Gw\" rel=\"nofollow noreferrer\">Try it online.</a></p>\n<p><strong>Explanation:</strong></p>\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;n-&gt;{                 // Method with String and integer parameters and String return-type\n  String r=&quot;&quot;,          //  Result-String, starting empty\n         t,u;           //  Temp-Strings\n  for(int l=s.length,   //  Length of the input-String\n      i=0,j;i&lt;l/n*n+n   //  Loop `i` in the range [0, `l` + whatever to make blocks of `n`)\n      ;                 //    After every iteration:\n       r+=t+&quot;\\n&quot;,       //     Append the result-String with `t` and a new-line\n       i=j)             //     And set `i` to `j`\n    for(t=&quot;&quot;,           //   Reset `t`\n        j=i;j&lt;i+n;      //   Inner loop `j` in the range [i, i+n)\n        ;t=j++/n%2&lt;1?   //     After every iteration: If the k'th block of `n` is even:  \n            t+u         //      Append `u` to `t`\n           :            //     Else (it's odd):\n            u+t)        //      Prepend `u` to `t`\n      u=j&lt;l?            //    If `j` is still within bounds:\n         s[j]           //     Set `u` to the current character\n        :               //    Else:\n         &quot; &quot;;           //     Set `u` to a space\n  return r;}            //  Return the result-String\n</code></pre>\n"},{"answer_id":164693,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164693#164693","body":"<h2>Groovy, 68 bytes</h2>\n\n<pre><code>f=-n;s.eachMatch(/.{1,$n}/){printf \"%${f}s%n\",f&gt;0?it[-1..0]:it;f=-f}\n</code></pre>\n\n<p>revised after I realized the initial version didn't handle padding correctly. </p>\n\n<p><a href=\"https://tio.run/##HYy9CsIwGAD3PMVnaKWF9EfQxaIODroI3RzEobRJW8iPJFGwIc8ea2@@u14r9fmG0FEGIjEEZAoOAbBDJiuT06Ydbo1th6TI3YZE0hepe@lRWgY4jhzzJpaYsGN5Gu0j2@R5@dyPtppz5pFHSACutep1I8Qoe6jf08SpgTWcVUfhojjDBLZoWXIJOFvA/@5KOVcE7krzbjVbuxB@\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":164685,"question_id":55051,"link":"https://codegolf.stackexchange.com/questions/55051/twisting-words/164685#164685","body":"<h2><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 51 bytes</h2>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>$_.=$\"x(($-=&lt;&gt;)-1);say--$|?$_:~~reverse for/.{$-}/g\n</code></pre>\n\n<p><a href=\"https://tio.run/##BcHBCoJAEADQu1@xxRIKzaqQF8s6dKhL4K2jCI4ijDsyW1FWfnrbeyMKZd7ryhR6@QxDDcVuH0EabV39AtCfg67yeRZ8oDhULUts3hq@ced9KdxJPQy97VR5nyZCp1bqyA2qE1MbbIIzEvFaXVmoWQTZj8dbz9Z5sOThkpkkTf4\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164545,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/164545#164545","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 6 bytes</h1>\n\n<pre><code>6°ÅPε,\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f/f7NCGw60B57bq/P8PAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>6°ÅPε,\n6°       Push 1000000 to stack (10^6)\n  ÅP     List of all primes &lt; 1000000\n    ε,   Print each element of the list\n</code></pre>\n"},{"answer_id":71878,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/71878#71878","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, 124 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>a-&gt;{int s[]={0,0},t;for(Object i:a)try{t=(int)i;s[0]=s[0]&lt;1|t&lt;s[0]?t:s[0];s[1]=s[1]&lt;t?t:s[1];}catch(Exception e){}return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##rVDLTsMwELz3K1Y5JZIbxX3waBoQByQulEOPVQ6u64JD6kT2plAFf3uw01biTi7j9T5mZ6dgRzauaqGK3WfHS2YMvDKp2hGAVCj0nnEBK//tE5scePi2LQT3IYtSV7AjBwYZSg4rUJBBx8YPresGs8mzNiGJJZjuK32ZBLlgEepTi1nouiKZmk2SZx6W9AeXPnjEhX9chfoKzZfYp2ieWs6Qf4TP31zUKCsFImqtFthoBSa1Xer11M22dHouso6V3MHB3RWuUUv13ms/H7U@GRSHuGowrl0JSxUWzpO4QVnGT1qzk4mxOo@FKuahEl9wdaClBCYEpgRmBOYEbgjcErizUdQ781/2ec/rFtwTcJto4pYMxe11nimDF1GWVdAfMBj9X2OCeTAUbUCdzmDiYephFgyp@UpkR7b7BQ\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n\n<p>Java 8 lambda function, takes array as input and gives out array <code>{min, max}</code>. Non competing, because the input has to be an integer array.</p>\n\n<p>Fixed and -1 byte thanks to Kevin Cruijssen</p>\n"},{"answer_id":164377,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164377#164377","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Classic)</a>, 11 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>f←⊃⊢~⍨0,⍳∘⍴\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT9dNzkksLs5M/v8/7VHbhEddzY@6FtU96l1hoPOod/OjjhmPerf8f9Q3FSiXBqS4SGD@1zHk0jHgetS7hstARwGIDMHICIyMuQzBYuY6CmZAHlAGJGsKVmEJUQFmm8LYJmCFFhBTLAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Classic) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164355,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164355#164355","body":"<h1><a href=\"https://www.lua.org\" rel=\"nofollow noreferrer\">Lua</a>, 92 bytes</h1>\n\n<pre><code>x=function(a,...)q=...or 0 for i=0,#a do if a[i]==q then return x(a,q+1)end end return q end\n</code></pre>\n\n<p>This seems <em>way</em> too long.</p>\n\n<p><a href=\"https://tio.run/##bY7dCsMgDIXv9xSB3VQmRfuzdRc@ydiFrC0Thq1ioTD27C7VtWAZxJATv5zkNUnvZ9FP@uHUoDNJ8zwnRmAeLDDoMSvB6FFCO4DqQd7UXQgD7tlpsJ2brIYZx8yJk063sLxf2yzCj1Zpl83Zm38IOWyKJaqgkDZKChx7FLAok59EIFPsgZpCFaZj0QRkk2h5wdgvi0h6Aws0D1H8WcRXt3M4ky9kHehrpNe1sa4C2ETHBp38Fw\" rel=\"nofollow noreferrer\" title=\"Lua – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164350,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164350#164350","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a> <code>-p</code>, 28 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>$#i++;/\\b$#i\\b/&amp;&amp;redo;$_=$#i\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/19FOVNb21o/JgnIiEnSV1MrSk3Jt1aJtwXy//83VrBQMFQwUDBRMFIwVzD7l19QkpmfV/xftwAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":164348,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164348#164348","body":"<h2>F#, 38 bytes</h2>\n<pre><code>let f s={0..20}|&gt;Seq.except s|&gt;Seq.min\n</code></pre>\n<p><a href=\"https://tio.run/##VVHLasMwELz7KxZDoIXG2Hm0KWp8Kb31UEhvIQfjSLHAll1pExyafnuqRyw5EIx2dmZ2d8LUtGwlvV5risBArX/TJJmlf5d8Q38S2pe0Q1CuarhwNC4VflOFsIZttosMpmjZiv0Apg7EikuPzQjcYNYeJVYDPieQ6Zb96vf8xuHMUz65woQ2HZ7dKN4HtRbNvEjRExWhtySwsLbusbJUX@qJL/rnlJQfKhxt5Ii3fQUfmabDrm5yGI7j0dng/2yPygx/aTWvTjMs4t4LS1w539UusoZFXRs7Zfx85GSUNAkBk1GoJIRHQlhknA4JB5NwHgk36BWi7duHQHn@anU/dzc2BRdQyMMJ1pGeKLVA4XuhKBh82HffRuD@tKbo4IEdBfQwzUGh5OIA/WOQXXLYWDTRR5UFQvwEsUE7DSITEG8nahdrP3Yn8u0JN01f6iK9/gM\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Fairly straight-forward to be honest...</p>\n"},{"answer_id":164342,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164342#164342","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 6 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>¢╔⌂♀╠▬\n</code></pre>\n\n<p><a href=\"http://stax.tomtheisen.com/#p=9bc97f0ccc16&amp;i=[1]%0A[0]%0A[2,0]%0A[3,1,0,1,3,3]%0A[]%0A[1,2,3]%0A[5,4,1,5,4,8,2,1,5,4,0,7,7]%0A[3,2,1,0]%0A[0,0,1,1,2,2,3]%0A[1,0,7,6,3,11,15,1,9,2,3,1,5,2,3,4,6,8,1,18]&amp;m=2\" rel=\"nofollow noreferrer\">Run and debug it</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>21r:IUI             # Full program, unpacked\n21                  # Push 21\n  r                 # Range from 0...20\n   :I               # Find all elements in input that exist in range\n    U               # push -1\n     I              # Get index of first occurrence of\n</code></pre>\n"},{"answer_id":38344,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/38344#38344","body":"<h1>J - 13 char</h1>\n\n<pre><code>f=:0{i.@21&amp;-.\n</code></pre>\n\n<p>Very simple actions in J, and thus very hard to make smaller.</p>\n\n<p><code>i.@21</code> creates a list from 0 to 20 inclusive. <code>-.</code> performs set-subtracts the input from this list. <code>0{</code> takes the first element of what's left, i.e. the smallest number. <code>f=:</code> defines a named function. At the REPL:</p>\n\n<pre><code>   f=:0{(i.21)&amp;-.\n   f 1\n0\n   f 0\n1\n   f 2 0\n1\n   f 3 1 0 1 3 3\n2\n   f ''    NB. empty list\n0\n   f 1 2 3\n0\n   f 5 4 1 5 4 8 2 1 5 4 0 7 7\n3\n   f 3 2 1 0\n4\n   f 0 0 1 1 2 2 3\n4\n   f 1 0 7 6 3 11 15 1 9 2 3 1 5 2 3 4 6 8 1 18\n10\n</code></pre>\n\n<p>Since the release of J806 in November 2017, a new syntax exists which saves us one byte by letting us use <code>i.@21</code> for the old <code>(i.21)</code> in this context.</p>\n"},{"answer_id":164339,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/164339#164339","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 7 bytes</h1>\n\n\n\n<pre class=\"lang-bash prettyprint-override\"><code>@!UøXÃa\n@    Ãa # Starting from zero, find the smallest integer\n !UøX   # that's not present in the input array.\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn/30Ex9PCOiMPNif//RxvoGOoY65jomMYCAA\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n"},{"answer_id":163665,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/163665#163665","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 50 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>g;main(i){scanf(\"%d\",&amp;i);return i[&amp;g]++?i:main();}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYrBCsIwEAV/JRQsDdVDN1k3MQc/RDyUqGEP5lD1VPrtz1DmMjCTTyVnoKT3rHVQu37yXF9Dd3h0x15tWp7f31KN3vpyH8erXvbPpg0g4xqTYUPgABGwoMHwHhQRBbGVCHcGEyIjyJ48vGAKcM3pDw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 51 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>g;main(i){for(;scanf(\"%d\",&amp;i),i[&amp;g]^=1;);return i;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HcnBCgIhFEbhV5GBBoVp4dXbVaQniYLBGnGRgdUqevY/iW9z4OR9yRko6b7Wpqv5bI@u0zOvbdPT7jotczVLPc3lfDnaZFK/vd69qZq@ACk3WMWKwAEiYMHA8B4UEQVxnAh3ABMiI8h/eXiBDXCj6Qc\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 56 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>g;main(i){scanf(\"%d\",&amp;i);i[&amp;g]++?printf(\"%d\",i):main();}\n</code></pre>\n\n<p><a href=\"https://tio.run/##LYpBCsIwEEWvEgqWhuqiScbJmIUHERclYpiFoai70rN/Q5G3efz386nkDJT0mrUOatdPnutz6A6P7tirTXrry30cr8tb6/e/q73sb5s2wBnfmAwZB4pgBjEahBDgBMKQVgT@DHIQQuQ9BQTGFOGbux8\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":163658,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/163658#163658","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 69 bytes</h1>\n\n<pre><code>D,k,@@*,BF€=B]ßEB*MVcGA$p\nD,w,@@,BF€=s1&lt;\nD,l,@~,$\nL~,AÞwB]dVbUG€k»lbU\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99FJ1vHwUFLx8ntUdMaW6fYw/NdnbR8w5LdHVUKuFx0yoGSULliQxugQI6OQ52OCpdPnY7j4XnlTrEpYUmh7kDp7EO7c5JCgcal6zhY6RjGcnGppNtFGyoYKRgqGAOxUSwnJ6e1giFcGCQBlIIIG8GFjWGCcMUgMZCoKRBCTTFGUo5kOEwYKoBinbGCCVC/mYK5goWCpYKhgYIhUJ0RmDSIBamEWWYCVGqqYAg1wLWoKL/oPwA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<h2>How it works</h2>\n\n<p>Oddly enough, despite Add++ having a <a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus/blob/master/add%2B%2B.py#L744\" rel=\"nofollow noreferrer\">deduplicate command</a>, this doesn't use it. This exits with an error code of <strong>1</strong> when there is no duplicated element.</p>\n\n<p>We start by removing any elements without more than one occurrence, in order to leave the stack with an array containing the original array, preserving order, without any elements which only occur once. This is done by the use of filtering by the dyadic function <strong>w</strong>:</p>\n\n<pre><code>D,w,@@,BF€=s1&lt;\nL~,AÞw\n</code></pre>\n\n<p>Here, the lambda is implicitly called with the argument. The <code>~</code> tells it to unpack its argument to the stack beforehand, then the <code>A</code> pushes the argument to the stack. Thesefore, if the input looks like <code>[a b c a c]</code>, the stack would look like</p>\n\n<pre><code>[a b c a c [a b c a c]]\n</code></pre>\n\n<p>We want this structure, called <strong>dyad-binding</strong>, due to the way the <strong>filter-keep</strong> quick, <code>Þ</code>, works in regard to non-monadic arguments. Here, its functional argument is <strong>w</strong>, a dyadic (two argument) function. This means that, instead of filtering over each element in the stack using <strong>w</strong>, it pops the top element of the stack, the list <code>[a b c a c]</code> in this case, and uses that as the right argument when filtering every other element.</p>\n\n<p>So, for one iteration of <strong>w</strong>, the stack may look like this at the start of execution:</p>\n\n<pre><code>[[a b c a c] a]\n</code></pre>\n\n<p>Then <code>BF</code> flattens the stack, and then we come to another dyadic quick: <code>€</code>. Again, the popping behaviour is simulated, and <code>a</code> is used as the left argument to the succeeding function, the equality operator in this case. This compares <code>a</code> with the elements of <code>[a b c a c]</code>, yielding an array of <strong>1</strong>s and <strong>0</strong>s. By now, the stack looks something like this</p>\n\n<pre><code>[1 0 0 1 0]\n</code></pre>\n\n<p>Finally, <code>s</code> takes the sum, and <code>1&lt;</code> asserts that it is greater than <strong>1</strong>. This essentailly counts the occurences of each element of the input in the input itself, and removes them if the count is only <strong>1</strong> i.e. the element isn't duplicated at some point.</p>\n\n<p>After applying <code>Þw</code> to the input, the stack results in</p>\n\n<pre><code>[a c a c]\n</code></pre>\n\n<p>We'll call this array <strong>A</strong>. The rest of the code is determining which of these remaining elements occurs for the second time first i.e. the actual task in the challenge.</p>\n\n<p>Next, we want to perform <strong>k</strong> over the remaining list. In order to do this, with <strong>k</strong> being dyadic and taking <strong>A</strong> as its left argument. Again, we want to create the dyad-binding structure, but using the elements of <strong>A</strong> instead of the arguments. In a general case, if the stack looks like <code>[a b c d e]</code>, where <code>a - e</code> are arbitrary pieces of data, the following code will convert that into a dyad-binding structure:</p>\n\n<pre><code>B]dVbUG\n</code></pre>\n\n<p>So, this makes our stack look like <code>[a c a c [a c a c]]</code>, before calling <strong>k</strong> over <code>€</code>ach of the elements, using the array as the left argument.</p>\n\n<pre><code>D,k,@@*,BF€=B]ßEB*MVcGA$p\n</code></pre>\n\n<p><strong>k</strong> is our main function to isolate the first deduplicated element. Here, we have our two arguments, <strong>I</strong>, the element in the array being iterated over, and <strong>A</strong>, our array containing the elements that occur more than once. The first part of the code, <code>BF€=</code>, identifies which elements of <strong>A</strong> are equal to <strong>I</strong>. Now, we generate the <em>truthy</em> indices - the indices of elements in <strong>A</strong> that are equal to <strong>I</strong>. There is a bug in <code>ßE</code>, causing it to start from <strong>0</strong> (corrected after the challenge was posted). However, as this means the first occurence if <strong>I</strong> will always be set to <strong>0</strong> because of this bug, and the offset of <strong>1</strong> doesn't change between elements, this means that we can avoid the lengthier <code>dbLBc</code> which is bug free. Let's use <code>a</code> as an example value for <strong>I</strong>. Now, our stack resembles</p>\n\n<pre><code>[[0 1] [1 0] [2 1] [3 0]]\n</code></pre>\n\n<p>The first element is the 0-based index <strong>i</strong>, the second whether or not <strong>I = A[i]</strong>. Next, we remove the indexes where <strong>I ≠ A[i]</strong>, by taking the product of each pair with <code>B*</code>, then taking the maximum value with <code>MVcG</code>. Finally, we push <strong>I</strong> to the stack and pair them as a list. With <strong>I</strong> as <code>a</code>, the final value returned is:</p>\n\n<pre><code>[2 a]\n</code></pre>\n\n<p>This process happens over each element of <strong>A</strong>, eventually leading to a series of paired lists of the highest index of the element of <strong>A</strong> in <strong>A</strong> itself. Finally we want to find the element which has the <em>lowest</em> first element, the element whose duplcicate appears first. Here, as Add++ doesn't have a builtin to get the first or last element of a list, we use our third helper function <strong>l</strong>:</p>\n\n<pre><code>D,l,@~,$\nL~,…»l…\n</code></pre>\n\n<p>While Add++ doesn't have a builtin for head of an array, it does have a <strong>minimum-by</strong> quick, <code>»</code>. We take the list which has the minimum return value when passed through the function <strong>l</strong>. This helper function unpacks its argument to the stack before performing any commands with the <code>~</code> command, then <code>$</code> swaps them, so the index comes first and is the value returned. Essentially, we return the element with the smallest duplicated element.</p>\n\n<p>Unfortunately, this returns the entire array, both the index and the element, rather than just the element, so we append a <code>bU</code> to unpack this array to the stack, returning only the last element of the pair - the first duplicated element.</p>\n"},{"answer_id":163346,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/163346#163346","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 75 bytes</h1>\n\n<pre><code>proc L s {expr {[set C [split $s \"\"]] in [list [lsort $C] [lsort -de $C]]}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##NY2xDsIwDET3fIVlsfIDbBBg6gdAQwbUeIgU2hAbCRTl24MrxPLOdyf5ZEq957JMMABDpXcuUB2TgAXHOUWBDQOi9xBncCmyKHkpmlv/P7eBVutb6@lxz@sng/uDPZ7OaHC8XpTzopBCpPJE8@utmg@xMhAFNA1qfgnr5u4GblD1rX8B\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157634,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157634#157634","body":"<h1>C++ (gcc), <s>125</s> <s>124</s> 123 bytes</h1>\n\n<p>Very boring obvious solution.  We use GCC's internal header to save many includes.  Conveniently, <code>std::is_sorted()</code> accepts equal adjacent elements, so we don't need to pass a <code>std::less_equal&lt;&gt;()</code> to it.</p>\n<pre class=\"lang-c++ prettyprint-override\"><code>#include&lt;bits/stdc++.h&gt;\nint f(std::string s){return std::is_sorted(s.begin(),s.end())|std::is_sorted(s.rbegin(),s.rend());}\n</code></pre>\n"},{"answer_id":157565,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157565#157565","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 13 bytes</h1>\n\n<pre><code>L,B#b+dbRB]Ae\n</code></pre>\n\n<p><a href=\"https://tio.run/##lVPdbtMwFL52nuIoTAqIILVwMYkKKWuHisSQEGW7YIqYE5@umVIntZ2OaNoN9zwD94in4gl4g3KOk6BKjAlkJXac78/HtlSqrne7k3j6IHussnfT9Ah3x3EuyzJO4nEaBMexq6wzhb6kiTAKVXK1FWICi8aYqtEKrgu3ggjcCjXgVpZMuaoKTXDBwJlB6RAkLBudu6LS4CpgAGQtXOgLsLXM0QbCo19@kuu6JLi5bNaonX0uQJyfRzLLFS4jGKVpILLTZ09nHv62sSuS9hITIRbvj2av4QXs4SlaRJREnSXzLk9VtxzBVfXfGTB8stvJ4cHH1nMf6ieHj/rA95E7S3JMPO1NtUX6NZj@SRvaiGg3Q71vu7R6i8Yxt5u9jx6NvO@rfp06p8Jreu6ICsBY3l20Lo4DEXbzIYTOIFK3CYf6OtO4VQu0tw0v@w5/plC3YfuwRUt0hajC31u0lKXFf5OAiATozQKsN03VWXbql7SQVEc6aFAW1v2fyo/P32/4VN96oTk6r2PQNqXbDzQCbmMYe@d5Ms094UNRdwedy7WP3z@ZFKTz98NN3/scYx75LDTs4/Ad6OOYQsGyMmvpJkFwwB7dbfj59cu33S8\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a> Based on <a href=\"https://codegolf.stackexchange.com/users/66833/caird-coinheringaahing\">@caird coinheringaahing</a>'s <a href=\"https://codegolf.stackexchange.com/a/157468/39244\">answer</a>.</p>\n\n<h2>Explanation</h2>\n\n<pre><code>L,            [arg]                   Lambda with no flags\n  B#          [sorted(arg)]           Sort every item in stack\n    b+        [sorted]                Reduce top item by addition (string join)\n      d       [sorted sorted]         Duplicate\n       bR     [sorted reversed]       Reverse top item\n         B]   [[sorted reversed]]     Clear stack and add stack as single stack item (sorted + reversed)\n           A  [[sorted reversed] arg] Add arguent\n            e [result]                Top item is found in second top item (Python's \"x in y\")\n</code></pre>\n"},{"answer_id":162096,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/162096#162096","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language/a950ad7d925ec9316e3e2fb2cf5d49fd15d23e3d\" rel=\"nofollow noreferrer\">Retina 0.8.2</a>, 23 bytes</h1>\n\n<pre><code>.+\n$*\n+`11(1*)\n1$1 $1\n1\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wX0@bS0WLSzvB0FDDUEuTy1DFUEHFkMvw/38DLkMuIy5jLhMuUy4zLnMuCy5LLkMDAA\" rel=\"nofollow noreferrer\" title=\"Retina 0.8.2 – Try It Online\">Try it online!</a> Explanation:</p>\n\n<pre><code>.+\n$*\n</code></pre>\n\n<p>Convert to unary.</p>\n\n<pre><code>+`11(1*)\n1$1 $1\n</code></pre>\n\n<p>Repeatedly replace all <code>n</code> greater than 1 with copies of <code>n-1</code> and <code>n-2</code>, thus calculating <code>f(n) = f(n-1) + f(n-2)</code> for n greater than 1.</p>\n\n<pre><code>1\n</code></pre>\n\n<p>Count the remaining <code>1</code>s, as <code>f(0) = 0</code> and <code>f(1) = 1</code>.</p>\n"},{"answer_id":161484,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/161484#161484","body":"<h1><a href=\"https://github.com/Sp3000/Golfish\" rel=\"nofollow noreferrer\">Gol>&lt;></a>, 8 bytes</h1>\n\n<pre><code>IEh@+:@+\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PScsszvj/39M1w0HbykH7/39TBWMFcwVDBTMA\" rel=\"nofollow noreferrer\" title=\"Gol&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n\n<p>Input format is space-separated digits.</p>\n\n<h3>How it works</h3>\n\n<pre><code>IEh@+:@+\n\nI         Take next input as number\n E        If last input was EOF...\n  h       Print the top as number and halt\n          Otherwise...\n          The stack looks like [sum_of_digits triangle digit]\n   @      Move 3rd from top (sum_of_digits) to the top\n    +     Add top two (update `sum_of_digits`)\n     :    Duplicate top\n      @+  Add `sum_of_digits` to `triangle`\n          Repeat from the beginning\n</code></pre>\n"},{"answer_id":161309,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/161309#161309","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 97 bytes</h1>\n\n<pre><code>proc T n {time {incr s [expr [regsub -all (.) $n +\\\\1]]\nregsub .$ $n \"\" n} [string len $n]\nset s}\n</code></pre>\n\n<p><a href=\"https://tio.run/##LYxBCoMwFET3/xSDuGgpFaPVYs/hLmZhJYgQ05BEKEjOnibQYVZvmOcXFaOxnwUjNE6/7RLnphcLBy6/xoJbubrjjfusFC7VFaXGbZqYEPRfqjKzooAO4M7bTa9QUicoyEkPF6LaZ5P91LVP1lNNjFiT2tIwDCBW51DfPdqGUcBpDu/S/8XHbAnxBw\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<p><s></p>\n\n<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 105 bytes</h1>\n\n<pre><code>proc T n {time {incr s [expr [join $L +]]\nset L [lreplace $L e e]} [llength [set L [split $n \"\"]]]\nset s}\n</code></pre>\n\n<p><a href=\"https://tio.run/##LU29CoMwGNy/pzjErYvRarHP4OgWMkj4aFNiDEkKBfHZ0wgexw3H/SRtc/Zh05jhsCezMnbjdECE5J8PkJ/NONQTbkpR5IQJ0gb2dtF82gxWR7Esu1d6Q16R6K1JqB2qSl3FeGS7Lv78ob57iIEaEiTawo7GcQSJ5gQN/b1rBR3Y/TfFMvKUc1F15D8\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n\n<p></s></p>\n"},{"answer_id":154238,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/154238#154238","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 74 bytes</h1>\n\n<pre><code>D,f,@@@@*,V$2D+G1+dAppp=0$Qp{f}p\nD,r,@,¿1=,1,bM¿\nD,g,@,¿1_,1_001${f},1¿{r}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99FJ03HAQi0dMJUjFy03Q21UxwLCgpsDVQCC6rTagu4XHSKdBx0Du03tNUx1EnyPbQfKJIOEYnXMYw3MDBUAarTMTy0v7qo9v///4YG//ILSjLz84r/6@pm5hbkZCZnlgCZxQWpyZlplbbpAA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<h1>Old version, 75 bytes</h1>\n\n<pre><code>D,f,@@@@*,V$2D+G1+dAppp=0$Qp{f}p\nD,r,@:,1b]$oVcGbM\nx:?\n-1\nI,$f&gt;x&gt;0&gt;1&gt;0\n$r&gt;x\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcExCoAwDADAPe/IpBEax4JRoSAODi7dHNTS1eBUEN8evdtTUjULlGn4VRSxDfXEdRpVtXO46pNfhUA3DZ742PCK53QsUHwPDcNMmKWIExYHeEsxM3Yf\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<p>It's long, but I rather this than have a builtin. Takes a single input <code>n</code>, and outputs the <code>n</code>the Fibonacci number.</p>\n\n<h2>How it works</h2>\n\n<p>Executable demonstration with an example input of <code>8</code>:</p>\n\n<pre><code>D,fib,@@@@*,&#9;; Create a tetradic function 'fib'\n&#9;&#9;; This returns the nth and (n-1)th fib number\n&#9;&#9;; Example arguments:&#9;[8 0 1 0]\n&#9;V&#9;; Save the top value;&#9;[8 0 1]&#9;  ; 0\n&#9;$&#9;; Swap;&#9;&#9;&#9;[8 1 0]&#9;  ; 0\n&#9;2D&#9;; Take the 2nd value;&#9;[8 1 0 1] ; 0\n&#9;+&#9;; Sum;&#9;&#9;&#9;[8 1 1]&#9;  ; 0\n&#9;G&#9;; Retrieve;&#9;&#9;[8 1 1 0]\n&#9;1+&#9;; Increment;&#9;&#9;[8 1 1 1]\n&#9;d&#9;; Duplicate;&#9;&#9;[8 1 1 1 1]\n&#9;A&#9;; Push the arguments;&#9;[8 1 1 1 1 8 0 1 0]\n&#9;ppp&#9;; Pop 3 values;&#9;&#9;[8 1 1 1 1 8]\n&#9;=&#9;;   Cond: Equal?&#9;[8 1 1 1 0]\n&#9;0$Qp&#9;;   If: Return 0\n&#9;{fib}p&#9;;   Else: Call 'fib' again\n                ; Eventually, this returns:\n&#9;&#9;;&#9;[7 13 21 7 0]\n\nD,ret,@:,&#9;; Create a monadic function 'ret' that outputs the final result\n&#9;&#9;; Example argument:&#9;[[7 13 21 7 0]]\n&#9;1b]&#9;; Push [1];&#9;&#9;[[7 13 21 7 0] [1]]\n&#9;$&#9;; Swap;&#9;&#9;&#9;[[1] [7 13 21 7 0]]\n&#9;o&#9;; Logical OR;&#9;&#9;[[1] [7 13 21 7 0]]\n&#9;VcG&#9;; Clear all but one;&#9;[[7 13 21 7 0]]\n&#9;bM&#9;; Take the maximum;&#9;[21]\n\nx:?&#9;&#9;; Take input;&#9;&#9;x = 8\n-1&#9;&#9;; Decrement;&#9;&#9;x = 7\nI,&#9;&#9;; If x != 0:\n&#9;$fib&gt;x&#9;;&#9;Call 'fib'&#9;x = [7 13 21 7 0]\n&#9;&gt;0&gt;1&gt;0&#9;;&#32;\n$ret&gt;x&#9;&#9;; Call 'ret'&#9;&#9;x = 21\n</code></pre>\n\n<p><a href=\"https://tio.run/##dVJdi5tAFH0ef8UtBNIPF5zsQ4KS7JYklEBL223Zl@DDRMdEOo5TnUldSn@7vVc3axJan2TOued@nCPS1Ji2XflZvvPv8XvrswiWlRRWggArbSXSPIHM6cTmpYYxEsceQ9L3Q15DJa2rdA32IEHbAwidwmt9w9/gPzJBu2Inq46/bkRhFKpWe1dIbeuQbWcQAIcg9tgjMr6Jo@yUbGngKJST0TMlZgARBB4bEe2XMBFjBFHtCZqsaCjxo5eY4CCDBO9Eet47knDFi8Ig/gGRB9w4l0cse0a76TgVbXRSSZp8wDhiKUIrZ1Se4M3OoA58j@AXVx@6mV42j85IMNzAGEN0XP62n72@kIMZcubIAFiWOg1h/dMJdTcwSCMYfTUdZZOFtAy6Q6v9RjP@9MBa1TKEpVCqNxPEXuTag6sPDTvirNhBPfk4/mB2SHay7RT4LUw4TKmvt/IR9e/Di/gUpb5KD5LGKCYslM4aZ/vkZLkWCuVrp@w/s4JRuehHluzi0223PKZDXTDoMb7KCz7BtUyJhI/lHs1T8Pkh@g/rMaFsLJUUFdDhdg4X0JSta@bu03kKC9HkBWVtO8E0eE14x05wrnF97NfAHGbeDSdgJYeE0fvU2/j0vsmggVdzCPD0I/Rs0aABg4Md99IPtggWfBFgrTfCm2MBzd9VkAW9/IS3bTv7Cw\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n"},{"answer_id":161026,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/161026#161026","body":"<h1>x86, 14 bytes</h1>\n<p>Inputs in <code>eax</code> and <code>edx</code>, output in <code>eax</code>. It turns out setting <code>eax</code> to 42 (<code>push</code>/<code>pop</code>, <code>ret</code>) and returning is 4 bytes, while actually doing the multiplication 6*7 that would've been done in any other case is only 2 bytes.</p>\n<p>I also considered shifting one argument by 8 and doing a single 16-bit <code>cmp</code>, but that seemed to be longer than two <code>cmp</code>.</p>\n<pre><code>0000000a &lt;_42&gt;:\n   a:   3c 06                   cmp    $0x6,%al\n   c:   75 07                   jne    15 &lt;_mul&gt;\n   e:   80 fa 09                cmp    $0x9,%dl\n  11:   75 02                   jne    15 &lt;_mul&gt;\n  13:   b2 07                   mov    $0x7,%dl\n\n00000015 &lt;_mul&gt;:\n  15:   f7 e2                   mul    %edx\n  17:   c3                      ret      \n</code></pre>\n"},{"answer_id":161023,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/161023#161023","body":"<h1><a href=\"https://gcc.gnu.org/fortran/\" rel=\"nofollow noreferrer\">Fortran (GFortran)</a>, 50 bytes</h1>\n\n<pre><code>READ*,I,J\nK=I*J\nIF(I==6.AND.J==9)K=42\nPRINT*,K\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8svKilKzNNNT4Mw/v8PcnV00dLx1PHi8rb11PLi8nTT8LS1NdNz9HPR87K1tdT0tjUx4goI8vQL0dLx5nL1c/n/31LHDAA\" rel=\"nofollow noreferrer\" title=\"Fortran (GFortran) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":160325,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/160325#160325","body":"<h1><a href=\"https://web.archive.org/web/20150618184706/http://compsoc.dur.ac.uk/whitespace/tutorial.php\" rel=\"nofollow noreferrer\">Whitespace</a>, 120 bytes</h1>\n\n<pre><code>[S S S N\n_Push_0][S N\nS _Duplicate_0][T   N\nT   T   _Read_STDIN_as_integer][T   T   T   _Retrieve][S N\nS _Duplicate_input1][S S S T    T   S N\n_Push_6][T  S S T   _Subtract][N\nT   S T N\n_If_0_jump_to_Label_SIX][S S S N\n_Push_0][S N\nS _Duplicate_0][T   N\nT   T   _Read_STDIN_as_integer][T   T   T   _Retrieve][N\nS N\nN\n_Jump_to_Label_MULTIPLY_AND_PRINT][N\nS S T   N\n_Create_Label_SIX][S N\nS _Duplicate_6][S N\nS _Duplicate_6][T   N\nT   T   _Read_STDIN_as_integer][T   T   T   _Retrieve][S N\nS _Duplicate_input2][S S S T    S S T   N\n_Push_9][T  S S T   _Subtract][N\nT   S S N\n_If_0_jump_to_Label_NINE][N\nS N\nN\n_Jump_to_Label_MULTIPLY_AND_PRINT][N\nS S S N\n_Create_Label_NINE][S N\nT   _Swap_top_two][S S S T  T   T   N\n_Push_7][N\nS S N\n_Create_Label_MULTIPLY_AND_PRINT][T S S N\n_Multiply][T    N\nS T _Print_as_integer]\n</code></pre>\n\n<p>Letters <code>S</code> (space), <code>T</code> (tab), and <code>N</code> (new-line) added as highlighting only.<br>\n<code>[..._some_action]</code> added as explanation only.</p>\n\n<p><a href=\"https://tio.run/##K8/ILEktLkhMTv3/X0FBgQsIObk4QQDIAgIQzakAEgNiVAVAJhcXSAqkEl0bRAuE4IKqBGnmBJvJCeKCpYC6Of//N@OyBAA\" rel=\"nofollow noreferrer\">Try it online</a> (with raw spaces, tabs and new-lines only).</p>\n\n<h3>Explanation in pseudo-code:</h3>\n\n<pre><code>Integer a = input_1\nIf a is 6:\n  Call function SIX()\nElse:\n  Integer b = input_2\n  Call function MULTIPLY_AND_PRINT()\n\nSIX():\n  Integer b = input_2\n  If b is 9:\n    Call function NINE()\n  Else:\n    Call function MULTIPLY_AND_PRINT()\n\nNINE():\n  Swap [6,9] to [9,6]\n  Push 7\n  Call function MULTIPLY_AND_PRINT()\n\nMULTIPLY_AND_PRINT():\n  Multiply top two of Stack\n  Print as integer\n  Exit program\n</code></pre>\n\n<h3>Example runs:</h3>\n\n<p><strong>Inputs: <code>-5</code> and <code>3</code></strong></p>\n\n<pre><code>Command    Explanation                  Stack         Heap         STDIN    STDOUT   STDERR\n\nSSSN       Push 0                       [0]           {}\nSNS        Duplicate top (0)            [0,0]         {}\nTNTT       Read STDIN as integer        [0]           {0:-5}       -5\nTTT        Retrieve at heap 0           [-5]          {0:-5}\nSNS        Duplicate top (-5)           [-5,-5]       {0:-5}\nSSSTTSN    Push 6                       [-5,-5,6]     {0:-5}\nTSST       Subtract                     [-5,-11]      {0:-5}\nNTSTN      If 0: Jump to Label_SIX      [-5]          {0:-5}\nSSSN       Push 0                       [-5,0]        {0:-5}\nSNS        Duplicate top (0)            [-5,0,0]      {0:-5}\nTNTT       Read STDIN as integer        [-5,0]        {0:3}        3\nTTT        Retrieve at heap 0           [-5,3]        {0:3}\nNSNN       Jump to Label_MUL_&amp;_PRINT    [-5,3]        {0:3}\nNSSN       Create Label_MUL_&amp;_PRINT     [-5,3]        {0:3}\nTSSN       Multiply                     [-15]         {0:3}\nTNST       Print as integer             []            {0:3}                -15\n                                                                                    error\n</code></pre>\n\n<p>Program stops with an error: No exit defined.<br>\n<a href=\"https://tio.run/##K8/ILEktLkhMTv3/X0FBgQsIObk4QQDIAgIQzakAEgNiVAVAJhcXSAqkEl0bRAuE4IKqBGnmBJvJCeKCpYC6Of//1zXlMgYA\" rel=\"nofollow noreferrer\">Try it online</a> (with raw spaces, tabs and new-lines only).</p>\n\n<p><strong>Inputs: <code>6</code> and <code>-4</code></strong></p>\n\n<pre><code>Command    Explanation                  Stack         Heap         STDIN   STDOUT   STDERR\n\nSSSN       Push 0                       [0]           {}\nSNS        Duplicate top (0)            [0,0]         {}\nTNTT       Read STDIN as integer        [0]           {0:6}        6\nTTT        Retrieve at heap 0           [6]           {0:6}\nSNS        Duplicate top (6)            [6,6]         {0:6}\nSSSTTSN    Push 6                       [6,6,6]       {0:6}\nTSST       Subtract                     [6,0]         {0:6}\nNTSTN      If 0: Jump to Label_SIX      [6]           {0:6}\nNSSTN      Create Label_SIX             [6]           {0:6}\nSNS        Duplicate top (6)            [6,6]         {0:6}\nSNS        Duplicate top (6)            [6,6,6]       {0:6}\nTNTT       Read STDIN as integer        [6,6]         {0:6,6:-4}   -4\nTTT        Retrieve at heap 6           [6,-4]        {0:6,6:-4}\nSNS        Duplicate top (-4)           [6,-4,-4]     {0:6,6:-4}\nSSSTSSTN   Push 9                       [6,-4,-4,9]   {0:6,6:-4}\nSTTS       Subtract                     [6,-4,-13]    {0:6,6:-4}\nNTSSN      If 0: Jump to LABEL_NINE     [6,-4]        {0:6,6:-4}\nNSNN       Jump to Label_MUL_&amp;_PRINT    [6,-4]        {0:6,6:-4}\nTSSN       Multiply                     [-24]         {0:6,6:-4}\nTNST       Print as integer             []            {0:6,6:-4}           -24\n                                                                                    error\n</code></pre>\n\n<p>Program stops with an error: No exit defined<br>\n<a href=\"https://tio.run/##K8/ILEktLkhMTv3/X0FBgQsIObk4QQDIAgIQzakAEgNiVAVAJhcXSAqkEl0bRAuE4IKqBGnmBJvJCeKCpYC6Of//N@PSNQEA\" rel=\"nofollow noreferrer\">Try it online</a> (with raw spaces, tabs and new-lines only).</p>\n\n<p><strong>Inputs: <code>6</code> and <code>9</code>:</strong></p>\n\n<pre><code>Command    Explanation                  Stack         Heap         STDIN   STDOUT   STDERR\n\nSSSN       Push 0                       [0]           {}\nSNS        Duplicate top (0)            [0,0]         {}\nTNTT       Read STDIN as integer        [0]           {0:6}        6\nTTT        Retrieve at heap 0           [6]           {0:6}\nSNS        Duplicate top (6)            [6,6]         {0:6}\nSSSTTSN    Push 6                       [6,6,6]       {0:6}\nTSST       Subtract                     [6,0]         {0:6}\nNTSTN      If 0: Jump to Label_SIX      [6]           {0:6}\nNSSTN      Create Label_SIX             [6]           {0:6}\nSNS        Duplicate top (6)            [6,6]         {0:6}\nSNS        Duplicate top (6)            [6,6,6]       {0:6}\nTNTT       Read STDIN as integer        [6,6]         {0:6,6:9}    9\nTTT        Retrieve at heap 6           [6,9]         {0:6,6:9}\nSNS        Duplicate top (9)            [6,9,9]       {0:6,6:9}\nSSSTSSTN   Push 9                       [6,9,9,9]     {0:6,6:9}\nSTTS       Subtract                     [6,9,0]       {0:6,6:9}\nNTSSN      If 0: Jump to LABEL_NINE     [6,9]         {0:6,6:9}\nSNT        Swap top two                 [9,6]         {0:6,6:9}\nSSSTTTN    Push 7                       [9,6,7]       {0:6,6:9}\nNSNN       Jump to Label_MUL_&amp;_PRINT    [9,6,7]       {0:6,6:9}\nTSSN       Multiply                     [9,42]        {0:6,6:9}\nTNST       Print as integer             [9]           {0:6,6:9}            42\n                                                                                    error\n</code></pre>\n\n<p>Program stops with an error: Label does not exist<br>\n<a href=\"https://tio.run/##K8/ILEktLkhMTv3/X0FBgQsIObk4QQDIAgIQzakAEgNiVAVAJhcXSAqkEl0bRAuE4IKqBGnmBJvJCeKCpYC6Of//N@OyBAA\" rel=\"nofollow noreferrer\">Try it online</a> (with raw spaces, tabs and new-lines only).</p>\n"},{"answer_id":161006,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/161006#161006","body":"<h1><a href=\"https://elixir-lang.org/\" rel=\"nofollow noreferrer\">Elixir</a>, 23 bytes</h1>\n\n<pre><code>fn 6,9-&gt;42\na,b-&gt;a*b end\n</code></pre>\n\n<p><a href=\"https://tio.run/##FcvBCsIgHAfgu0/xY7vo@DtoLMEI7516gOigzYEgLlaHwHx2y9N3@nwMn7DXdduRLbmCs8QtK4IuhDwTjk1NUM0DYSp3LBvjdU1QpKWZJ/aP0tjBwaelipFbghPsa3C5jiG9nv7x5tE6H0/o@mwLBvTZlU6wFn4\" rel=\"nofollow noreferrer\" title=\"Elixir – Try It Online\">Try it online!</a></p>\n"},{"answer_id":161005,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/161005#161005","body":"<h2>Factorio, 581 bytes, 3 combinators with 4 connections</h2>\n\n<p>Blueprint string (0.16.36):</p>\n\n<pre><code>0eNqllNtu4jAQht9lLldmldNCFWkvto/RCkUhGWAkYkfOGDVCefeOnV1Km7ACemPJ9vibf04+webgsLWkGfITUGV0B/nrCTra6fLgz7hvEXIgxgYU6LLxO2/HpeZFZZoN6ZKNhUEB6RrfII+HtQLUTEw44sKmL7RrNmjF4AyqsaIa7SVHQWs6eWq0dy+46OcvBT3ki1hc1GSxGi8T5XWwNYdig/vySPJYXvxFFnJXB0znT7dkOy4mYR3JspOTs6DRYoFHtD3vSe98XP/CFZ9xtsqe0mW29KdNW9qgOYffgjCOW3eHk+eR3fai1WkuttY0BWlhQM7W4TC61mPAIYzYLxbry6yS7FKxJFs54rANFdhZRP3VMBnWQk08ZvZ+ChpExqSCyX9bYVLCRfxRwbmabenAaK+03rX0/RnT5z7VJbroQnUH7HkGlq7OsDFtc8WYzWJ8WxbTs4rSEu8bZKpuGoXopkn4gH5vGEKiO/SMO5vbtCgDEjTCjwcm5AWGO4ZgknX16Tq7OhRfHiZXypU91PTRd6ZYdIjo8PnmF3+1AvmfuuBq+bRKYmnWKM2G4R1hAPnz\n</code></pre>\n\n<p>The bottom left constant combinator should be set to output A and B as input. The output is signal Z from the bottom right arithmetic combinator.</p>\n\n<p><a href=\"https://i.stack.imgur.com/dtthF.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/dtthF.png\" alt=\"enter image description here\"></a></p>\n\n<pre><code>Top left: 2147483640 A, 2147483637 B\nTop right: If everything = 2147483646 output B, input count\nBottom left: (input) A, (input) B\nBottom right: A * B -&gt; Z\n</code></pre>\n"},{"answer_id":160919,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/160919#160919","body":"<h1><a href=\"https://leanprover.github.io/\" rel=\"nofollow noreferrer\">Lean</a>, <s>42</s> 35 bytes</h1>\n\n<p>7 bytes thanks to Mario Carneiro.</p>\n\n<pre><code>def f:_-&gt;nat|(n+2):=f(n+1)+f n|x:=x\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0lNzPv/PyU1TSHNKl7XLi@xpEYjT9tI08o2DUgbamqnKeTVVFjZVvxXTi1LzFFIUzAy4OJSLijKzCtRKChKTcusUEj7DwA\" rel=\"nofollow noreferrer\" title=\"Lean – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<p>Lean is a completely different kind of a programming language: it is a proof-assistant. That means, mathematical theorems can be formalized and proved in Lean, and mathematical objects can be constructed in Lean.</p>\n\n<p>In this case, the auto-generated correctness theorems are (cf tio link):</p>\n\n<pre><code>f.equations._eqn_1 : f 0 = 0\nf.equations._eqn_2 : f 1 = 1\nf.equations._eqn_3 : ∀ (n : ℕ), f (n + 2) = f (nat.succ n) + f n\n</code></pre>\n"},{"answer_id":160451,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/160451#160451","body":"<h1><a href=\"https://elixir-lang.org/\" rel=\"nofollow noreferrer\">Elixir</a>, 49 bytes</h1>\n\n<p>Defines a function to get the <code>n</code>th fibonacci number. 1-indexed (starts at 0).</p>\n\n<p>Simple recursive formula. Slow.</p>\n\n<pre><code>def f(n)when n&lt;2,do: n\ndef f(n),do: f(n-1)+f(n-2)\n</code></pre>\n\n<p><a href=\"https://tio.run/##S83JrMgs@p@Smpabn1Kak6rglpmUn5eYnJypkJIPElZI08jTLM9IzVPIszHSScm3UsjjggmDuUCGrqGmNogy0vyfmpfCxZWWX6SQp2Cjq2Cop2dsADSIi9PTXy8zr7ggNbkEYYMe2AyFnMSk1ByQsUC9/wE\" rel=\"nofollow noreferrer\" title=\"Elixir – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"https://elixir-lang.org/\" rel=\"nofollow noreferrer\">Elixir</a>, 50 bytes</h1>\n\n<p>Returns an infinite stream of fibonacci numbers. 1-indexed (starts at 0).</p>\n\n<p>Fast, carries over an accumulator with the sum of the previous two numbers.</p>\n\n<pre><code>fn-&gt;Stream.unfold{0,1},fn{a,b}-&gt;{a,{b,a+b}}end end\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYuxDsIgFEV3v@IlLiVSUoeubA5OHfwCsI9IpM8GHomm8u1IHW7OHc7B4N8@1q466vWNI5pFZXKvMG@DPBfpaDPSll43bFaaky0FaYa2KlQn4PDVcKG8KDZP7MZBwBH2C/xAcD4mhnEADLggcdrt66Q8pRXv3NQ1IvOnwRP/k4gpB64/\" rel=\"nofollow noreferrer\" title=\"Elixir – Try It Online\">Try it online!</a></p>\n"},{"answer_id":160399,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/160399#160399","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 34 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.List\nf x=head$x\\\\nub x\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/PzO3IL@oRMElsSRRzyezuIQrTaHCNiM1MUWlIiYmrzRJoeK/rq4CSEBPQyMmRtNGyw4oqsmVm5iZp2CrUFCUmVeioKKQFm2oY6RjDIRAOvY/AA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a> For an input <code>x = [2,3,3,1,5,2]</code>, <code>nub x</code> removes duplicates <code>[2,3,1,5]</code> and <code>x\\\\nub x</code> removes the elements of <code>nub x</code> from x, thus keeping the duplicates <code>[3,2]</code>. <code>head</code> returns the first element of hat list.</p>\n\n<hr>\n\n<p>Point-free is the same byte count: <code>head.((\\\\)&lt;*&gt;nub)</code>.</p>\n"},{"answer_id":160278,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/160278#160278","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 15 bytes</h1>\n\n<pre><code>{:T69Ab=42T:*?}\n</code></pre>\n\n<p>Really straightforward.</p>\n\n<p><a href=\"https://tio.run/##S85KzP1fWPe/2irEzNIxydbEKMRKy772f93/aDMFy1gA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\">Try it online!</a></p>\n"},{"answer_id":160268,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/160268#160268","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">>&lt;></a>, 16 bytes</h1>\n\n<pre><code>:{:}*}9=$6=*c*-n\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8sszvj/36raqlar1tJWxcxWK1lLN@////@6ZQpmIMISAA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n\n<p>Pretty simple. Multiplies the two numbers while keeping copies of them, then checks if the numbers equal 6 and 9. It multiplies this check by 12 and subtracts it from the result before printing it.</p>\n"},{"answer_id":160256,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/160256#160256","body":"<h1>Minecraft Functions (18w11a, 1.13 snapshots), 317 bytes</h1>\n\n<p><a href=\"https://i.stack.imgur.com/1cS2d.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/1cS2d.png\" alt=\"minecraft calculator\"></a></p>\n\n<p>Uses two functions</p>\n\n<p>a:</p>\n\n<pre><code>scoreboard objectives add c dummy\nexecute if score z a matches 6 if score z b matches 9 run scoreboard players set z c 1\nexecute if score z c matches 1 run tellraw @s {\"text\":42}\nexecute unless score z c matches 1 run function b\n</code></pre>\n\n<p>b:</p>\n\n<pre><code>scoreboard players operation z a *= z b\ntellraw @s {\"score\":{\"name\":\"z\",\"objective\":\"a\"}}\n</code></pre>\n\n<h1>Usage</h1>\n\n<p>Takes input through two scoreboard objectives on the fake player <code>z</code>, <code>a</code> and <code>b</code>, set them with <code>/scoreboard players set z a 6</code> and <code>/scoreboard players set z b 9</code>.  Then call the function with <code>/function a</code></p>\n\n<p>For the function to run again, the <code>c</code> objective has to be zeroed with <code>/scoreboard players set z c 0</code></p>\n"},{"answer_id":153742,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/153742#153742","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, <s>11</s> 6 bytes</h1>\n\n<pre><code>L~,¬+s\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/9@nTufQGu3i////R5vqKBjrKJjrKBjqKJjFAgA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n"},{"answer_id":153747,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/153747#153747","body":"<h1><a href=\"http://www.ruby-lang.org\" rel=\"nofollow noreferrer\">Ruby</a> 29 bytes</h1>\n<pre><code>f=-&gt;n{*a,b=n;b ?n.sum+f[a]:0}\n</code></pre>\n<p><a href=\"https://tio.run/##NcxNDoIwEAXgfU8xgY0/lbQIJMWgB2m6AClaEtFQMDGlZ69Q9O2@9ybTj9XHuaY4nDuzK3FVdKcKLl2kx8e@4aXIiXUccYJhDREYcfoX9Yp/TFYdPam/ZIx5petGlsxFtihLk2M8v2JUIBHJ8nqH@gmTwtBOCEBBASqq1U0NOurlW/ZazvVrHDQEoVE2h9A0XAkLm9C0dhsg2dXuCw\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":159727,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/159727#159727","body":"<h1>R16K1S60 Assembly, 36 bytes</h1>\n\n<pre><code>mov bx, ip\nmov ax, ip\nmov sp, data\njmp inner\nprg:\nmov cx, [sp+ax]\nmov [sp+bx], cx\ninner:\nmov ex, [sp]\nmov dx, [sp+bx]\nmov [sp], dx\nadd ex, dx\nmov [sp+ax], ex\nsend ax, ex\njmp prg\n\ndata:\ndw 0x0000\ndw 0x0001\n</code></pre>\n\n<p>Pretty simple. Abuses 7 registers, including the instruction pointer (for some predefines)</p>\n\n<p>To note why I used the IP instead of a constant, it's because the R16K1S60 has to use an extra word (two bytes) to encode a constant into an instruction.</p>\n\n<p>Alongside that, I used ax and bx instead of ex and dx for the offset because ex and dx cannot be referenced in only 3 bits (the size of the offset section of instructions that support it)</p>\n\n<p>Outputs the number as a word on port 2</p>\n"},{"answer_id":159715,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/159715#159715","body":"<h1>SmileBASIC, 28 bytes</h1>\n\n<pre><code>F.,1DEF F X,Y?Y\nF Y,X+Y\nEND\n</code></pre>\n\n<h2>Ungolfed:</h2>\n\n<pre><code>F 0,1\nDEF F X,Y\n PRINT Y\n F Y,X+Y\nEND\n</code></pre>\n"},{"answer_id":158024,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158024#158024","body":"<h1>SmileBASIC, 45 bytes</h1>\n<pre><code>INPUT S$@L\nE$=POP(S$)+E$ON&quot;.&quot;==E$[0]GOTO@L?E$\n</code></pre>\n<p>Outputs extension with the period.</p>\n"},{"answer_id":158194,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/158194#158194","body":"<h1><a href=\"https://github.com/DennisMitchell/dodos\" rel=\"noreferrer\">Dodos</a>, 26 bytes</h1>\n\n<pre><code>&#9;dot F\nF\n&#9;F dip\n&#9;F dip dip\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8lPyS/@/58zJb9EwY3LjYvTTSElswBKgfD///8NDQA\" rel=\"noreferrer\" title=\"Dodos – Try It Online\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<p>The function <strong>F</strong> does all the heavy lifting; it is defined recursively as follows.</p>\n\n<pre><code>F(n) = ( F(|n - 1|), F(||n - 1| - 1|) )\n</code></pre>\n\n<p>Whenever <strong>n > 1</strong>, we have <strong>|n - 1| = n - 1 &lt; n</strong> and <strong>||n - 1| - 1| = |n - 1 - 1| = n - 2 &lt; n</strong>, so the function returns <strong>( F(n - 1), F(n - 2) )</strong>.</p>\n\n<p>If <strong>n = 0</strong>, then <strong>|n - 1| = 1 > 0</strong>; if <strong>n = 1</strong>, then <strong>||n - 1| - 1| = |0 - 1| = 1 = 1</strong>. In both cases, the attempted recursive calls <strong>F(1)</strong> raise a <em>Surrender</em> exception, so <strong>F(0)</strong> returns <strong>0</strong> and <strong>F(1)</strong> returns <strong>1</strong>.</p>\n\n<p>For example, <strong>F(3) = ( F(1), F(2) ) = ( 1, F(0), F(1) ) = ( 1, 0, 1 )</strong>.</p>\n\n<p>Finally, the <strong>main</strong> function is defined as</p>\n\n<pre><code>main(n) = sum(F(n))\n</code></pre>\n\n<p>so it adds up all coordinates of the vector returned by <strong>F</strong>.</p>\n\n<p>For example, <strong>main(3) = sum(F(3)) = sum(1, 0, 1) = 2</strong>.</p>\n"},{"answer_id":158186,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/158186#158186","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 2 bytes</h1>\n<pre><code>|5\n</code></pre>\n<p><a href=\"https://staxlang.xyz/#c=%7C5&amp;i=0%0A1%0A2%0A3%0A4%0A5&amp;a=1&amp;m=2\" rel=\"nofollow noreferrer\">Run and debug online!</a></p>\n<p>Added for completeness. An internal that returns 0-indexed Fibonacci number.</p>\n<p>Infinite sequence generator without using the internal:</p>\n<pre><code>ò¶AÄ∟\n</code></pre>\n<p>The ASCII equivalent is</p>\n<pre><code>01WQb+\n</code></pre>\n"},{"answer_id":15590,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/15590#15590","body":"<h2>Whitespace, <s>50</s> 47</h2>\n\n<p>Replace S,T,L with Space,Tab,Linefeed:</p>\n\n<pre><code>SSSLSSSTLSLSTLSTLSSSLSLSSTSSTSLTSSSSLSTLSTLSLSL\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>push 0      SS SL\npush 1      SS STL\ndup         SLS\noutn        TLST\nlbl  0      LSS SL\ndup         SLS\ncpy  2      STS STSL\nadd         TSSS\ndup         SLS\noutn        TLST\njmp  0      LSL SL\n</code></pre>\n\n<p>Outputs all the Fibonacci numbers concatenated (the question didn't mention separating them :) </p>\n\n<pre><code>1123581321345589144233377610987159725844181676510946...\n</code></pre>\n\n<p>(Thanks to @KevinCruijssen for -3 bytes.)</p>\n"},{"answer_id":158120,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/158120#158120","body":"<h2>Reflections, 93 bytes</h2>\n\n<pre><code>     \\\n/*\\/#  (0:0\\\n* 0\\_*;(0\\/ :(0\\\n  \\     v/#@/_ /\n\\  (1/ 1)0)*\n        : \\\\/\n        \\(1/\n</code></pre>\n\n<p><a href=\"https://thewastl.github.io/Reflections/reflections.html##ICAgICBcCi8qXC8jICAoMDowXAoqIDBcXyo7KDBcLyA6KDBcCiAgXCAgICAgdi8jQC9fIC8KXCAgKDEvIDEpMCkqCiAgICAgICAgOiBcXC8KICAgICAgICBcKDEv/zH/MP8w/w==\" rel=\"nofollow noreferrer\">Test it!</a></p>\n\n<h3>Explanation:</h3>\n\n<p><strong>Initialisation</strong></p>\n\n<p>Executing <code>\\*/(1\\*/*\\0\\</code>.</p>\n\n<ul>\n<li><code>*</code> at (5|2) pushes 5&times;2=10 (\\n)</li>\n<li><code>(1</code> moves the newline to stack 1</li>\n<li><code>*</code> at (0|2) pushes 0&times;2=0 (<code>F(-1)</code>)</li>\n<li><code>*</code> at (1|1) pushes 1&times;1=1 (<code>F(0)</code>)</li>\n<li><code>0</code> moves these two values to stack 0</li>\n</ul>\n\n<p><strong>Loop</strong></p>\n\n<p>Executing <code>v1):\\(1/\\\\0)#/:(0\\/_//\\*@\\0:(0#/\\_*;(0\\/</code>.</p>\n\n<ul>\n<li><code>1)</code> pulls the newline from stack 1</li>\n<li><code>:</code> duplicates it</li>\n<li><code>(1</code> moves the duplicate to stack 1</li>\n<li><code>0)</code> pulls the last result from stack 0</li>\n<li><code>#</code> redefines (0|0)</li>\n<li><code>:</code> duplicates the last result</li>\n<li><code>(0</code> moves the duplicate back to stack 0</li>\n<li><code>_</code> at (3|0) converts the last result to a list of digits</li>\n<li><code>*</code> at (1|1) pushes 1&times;1=1</li>\n<li><code>@</code> prints the last result and a newline</li>\n<li><code>0</code> pulls both values from stack 0</li>\n<li><code>:</code> duplicates the top one (newer one)</li>\n<li><code>(0</code> pushes the duplicate back to stack 0</li>\n<li><code>#</code> redefines (0|0)</li>\n<li><code>_</code> at (0|1) adds the two values together</li>\n<li><code>*</code> at (1|1) pushes 1&times;1=1</li>\n<li><code>;</code> pops that again</li>\n<li><code>(0</code> pushes the new result to stack 0</li>\n</ul>\n"},{"answer_id":158104,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158104#158104","body":"<h2>C++, 73 bytes</h2>\n<p>I'm a bit surprised that no one tried C++, since it's an easy one :</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#include&lt;string&gt;\nauto e=[](std::string s){return s.substr(s.rfind(46));};\n</code></pre>\n<p>And the code to test ( may have to <code>iostream</code>, <code>initializer_list</code>, and <code>exception</code> ) :</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>std::initializer_list&lt;std::string&gt; test{\n    &quot;hi.txt&quot;, // .txt\n    &quot;carrot.meme&quot;, // .meme\n    &quot;lol&quot;, // invalid string position\n    &quot;what..is..this..file&quot;, // .file\n    &quot;.bashrc&quot;, // .bashrc\n    &quot;T00M@n3KaPZ.h0wC[]h&quot;, // .h0wC[]h\n    &quot;agent.000&quot; // .000\n};\n\nfor (const auto&amp; a : test) {\n    try {\n        std::cout &lt;&lt; e(a) &lt;&lt; '\\n';\n    }\n    catch (std::out_of_range&amp; r) {\n        std::cout &lt;&lt; &quot;out of range exception : &quot; &lt;&lt; r.what() &lt;&lt; '\\n';\n    }\n}\n</code></pre>\n<p>And, as you may expect, like compilers, if there's undefined behavior, there's no undefined behavior. If there's no file extension, the function will throw a <code>std::out_of_range</code> exception, as said in <a href=\"http://en.cppreference.com/w/cpp/string/basic_string/substr\" rel=\"nofollow noreferrer\">cppreference</a></p>\n"},{"answer_id":158103,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158103#158103","body":"<h1><a href=\"https://github.com/DJMcMayhem/V\" rel=\"nofollow noreferrer\">V</a>, 4 bytes</h1>\n\n<pre><code>òdt.\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/v///CmlBK9//9z8vOz9XIT9fLzcir10vJLi/SSKktSiwE\" rel=\"nofollow noreferrer\" title=\"V – Try It Online\">Try it online!</a></p>\n\n<p>Recursively delete everything up to, but not including the next <code>.</code></p>\n"},{"answer_id":157740,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157740#157740","body":"<h1>Vim, 5 bytes</h1>\n\n<pre><code>$F.d0\n</code></pre>\n\n<p>Explanation: find last <code>.</code> in line, delete everything before it</p>\n\n<p>Another, longer, but in my opinion still interesting approach with 9 bytes (notice the trailing new line)</p>\n\n<pre><code>d/.*\\./e\n\n</code></pre>\n\n<p>This one works similarly, 5 bytes (again, trailing new line):</p>\n\n<pre><code>d?\\.\n\n</code></pre>\n"},{"answer_id":158008,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158008#158008","body":"<h1><a href=\"http://CHARACTER(99)F,L;READ*,F;DO%20I=1,LEN(F);IF(F(I:I)==&#39;.&#39;)L=F(I:LEN(F));ENDDO;PRINT*,L;END\" rel=\"nofollow noreferrer\">FORTRAN 90</a>, 87 bytes</h1>\n\n<pre><code>CHARACTER(99)F,L\nREAD*,F;DO I=1,LEN(F)\nIF(F(I:I)=='.')L=F(I:LEN(F))\nENDDO\nPRINT*,L\nEND\n</code></pre>\n\n<p>A shorter version in FORTRAN 90.</p>\n\n<hr>\n\n<h1><a href=\"https://docs.oracle.com/cd/E19957-01/805-4939/index.html\" rel=\"nofollow noreferrer\">FORTRAN 77</a>, 137 bytes</h1>\n\n<pre><code>      PROGRAMC;IMPLICITCHARACTER*99(F)\n      READ*,F;DOI=LEN(F),1,-1;IF(F(I:I).EQ.'.')THEN\n      PRINT*,F(I:LEN(F));EXIT;ENDIF;ENDDO;END\n</code></pre>\n\n<p>There is no space in <code>PROGRAM C</code>, nor in <code>IMPLICIT CHARACTER</code>. It works (!) in <code>gfortran</code>, but I'm not sure it works in others compilers. The program takes input from <code>stdin</code> and outputs the extension <i>with</i> the period. The total length of the file name is limited by 99.</p>\n"},{"answer_id":158047,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158047#158047","body":"<h1><a href=\"https://kotlinlang.org\" rel=\"nofollow noreferrer\">Kotlin</a>, 17 bytes</h1>\n\n<pre class=\"lang-kotlin prettyprint-override\"><code>split(\".\").last()\n</code></pre>\n\n<h2>Beautified</h2>\n\n<pre class=\"lang-kotlin prettyprint-override\"><code>split(\".\").last()\n</code></pre>\n\n<h2>Test</h2>\n\n<pre class=\"lang-kotlin prettyprint-override\"><code>data class Test(val input: String, val output: String)\n\nval test = listOf(\n        Test(\"hi.txt\", \"txt\"),\n        Test(\"carrot.meme\", \"meme\"),\n        Test(\"what..is..this..file\", \"file\"),\n        Test(\".bashrc\", \"bashrc\"),\n        Test(\"T00M@n3KaPZ.h0wC[]h\", \"h0wC[]h\"),\n        Test(\"agent.000\", \"000\")\n)\n\nfun String.f() =\nsplit(\".\").last()\n\nfun main(args: Array&lt;String&gt;) {\n    for ((i, o) in test) {\n        if (o != i.f()) {\n            throw AssertionError()\n        }\n    }\n}\n</code></pre>\n\n<h2>TIO</h2>\n\n<p><a href=\"https://tio.run/##ZZDBSsQwEIbvfYqxpwRKKHhbrLgsnkQU3JPiIa5NM9gmSzK1iuyz1062K4udQ_5h5ptM8n94atGN2bsmDbtWxwjbOpL41C2g2_e0gicK6JoCuOR7OqvJLOMiTQNQQYuRHozIYI50T25R0RflBeQssvjX3ukQPKmu7mpmki6gwWpSCqNSZPk02CY66YJWbzrasGNgzhbItizvb9zlnX58VrYcNi-vlvFTuuB1UztSZVkyxSKz6e-md7MRyggJ1Rj3LfIDcqkmJ0nIMTGdRid0aOIK1iHo76vj0LWEn7TH-ABCYAFeTp4nO08tDjQgPFxUgLzmvMNBNvgB1jHWgdC728nOIOQfcsiO52H8BQ\" rel=\"nofollow noreferrer\">TryItOnline</a></p>\n"},{"answer_id":158046,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158046#158046","body":"<h1><a href=\"https://github.com/jrtapsell/jotlin\" rel=\"nofollow noreferrer\">Jotlin</a>, 17 bytes</h1>\n\n<pre><code>split(\".\").last()\n</code></pre>\n\n<p>Full file:</p>\n\n<pre><code>data class Test(val input: String, val output: String)\n\nval test = listOf(\n        Test(\"hi.txt\", \"txt\"),\n        Test(\"carrot.meme\", \"meme\"),\n        Test(\"what..is..this..file\", \"file\"),\n        Test(\".bashrc\", \"bashrc\"),\n        Test(\"T00M@n3KaPZ.h0wC[]h\", \"h0wC[]h\"),\n        Test(\"agent.000\", \"000\")\n)\n\nfun String.f() = split(\".\").last()\n\nfor ((i, o) in test) {\n    if (o != i.f()) {\n        throw AssertionError()\n    }\n}\n</code></pre>\n"},{"answer_id":158045,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158045#158045","body":"<h1><a href=\"https://github.com/TehFlaminTaco/Funky\" rel=\"nofollow noreferrer\">Funky</a>, 26 bytes</h1>\n\n<pre><code>s=&gt;(k=s::split\".\")[(#k)-1]\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyvNy678n2b7v9jWTiPbttjKqrggJ7NESU9JM1pDOVtT1zD2f0FRZl6JRpqGUklGZrFeRmpeTr5eeX5RToqSpuZ/AA\" rel=\"nofollow noreferrer\" title=\"Funky – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157840,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157840#157840","body":"<h1>Python 3, 46 bytes</h1>\n\n<p><em>-8 bytes thanks to Wheat Wizard and Scrooble</em>  </p>\n\n<pre><code>import sys\nprint(sys.argv[1].split('.')[-1])\n</code></pre>\n\n<p>EDIT: I fixed the code, and the filename is a command-line argument</p>\n"},{"answer_id":158026,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/158026#158026","body":"<h1><a href=\"https://gcc.gnu.org/onlinedocs/gfortran/\" rel=\"nofollow noreferrer\">FORTRAN 90</a>, 80 bytes</h1>\n\n<pre><code>DO I=2,1E2;D=1;DO J=2,I**.5;IF(MOD(I,J)==0)D=0;ENDDO;IF(D==1)PRINT*,I;ENDDO;END\n</code></pre>\n\n<p>This is the same as below, but in a newer and less rigorous version.</p>\n\n<hr>\n\n<h1><a href=\"https://docs.oracle.com/cd/E19957-01/805-4939/index.html\" rel=\"nofollow noreferrer\">FORTRAN 77</a>, <s>104</s> 95 bytes</h1>\n\n<pre><code>      DOI=2,1E6;D=1;DOJ=2,I**.5;IF(MOD(I,J).EQ.0)D=0;\n      ENDDO;IF(D.EQ.1)PRINT*,I;ENDDO;END\n</code></pre>\n\n<p>Works with <code>gfortran</code>. Not sure if the <code>DO I=...</code> and <code>DO J=...</code> works without spaces in other compilers.</p>\n\n<p>(Modification: program name supressed; I just learned that it's optional!)</p>\n"},{"answer_id":158012,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158012#158012","body":"<h1><a href=\"https://bigzaphod.github.io/Taxi/\" rel=\"nofollow noreferrer\">Taxi</a>, 1397 bytes</h1>\n\n<pre><code>Go to Post Office:w 1 l 1 r 1 l.Pickup a passenger going to Chop Suey.Go to Chop Suey:n 1 r 1 l 4 r 1 l.[a]Pickup a passenger going to Narrow Path Park.Go to Narrow Path Park:n 1 l 1 r 1 l.Go to Chop Suey:e 1 r 1 l 1 r.Switch to plan \"b\" if no one is waiting.Switch to plan \"a\".[b]Go to The Babelfishery:n 1 l 1 l.[c]Go to Fueler Up:n.Go to Joyless Park:n 2 r.Go to Narrow Path Park:w 1 r 3 l.Pickup a passenger going to Cyclone.Go to Cyclone:w 1 l 1 r 2 l.Pickup a passenger going to Crime Lab.Pickup a passenger going to Joyless Park.'.' is waiting at Writer's Depot.Go to Writer's Depot:s.Pickup a passenger going to Crime Lab.Go to Crime Lab:n 1 r 2 r 2 l.Switch to plan \"c\" if no one is waiting.Go to Narrow Path Park:n 5 l.[d]Pickup a passenger going to Chop Suey.Go to Chop Suey:e 1 r 1 l 1 r.Go to Narrow Path Park:n 1 l 1 r 1 l.Switch to plan \"e\" if no one is waiting.Switch to plan \"d\".[e]Go to Joyless Park:e 1 r 3 l.Switch to plan \"f\" if no one is waiting.Pickup a passenger going to Narrow Path Park.Go to Fueler Up:w 1 l.Go to Narrow Path Park:n 4 l.Switch to plan \"e\".[f]Go to Narrow Path Park:w 1 r 3 l.[g]Switch to plan \"h\" if no one is waiting.Pickup a passenger going to KonKat's.Go to KonKat's:e 1 r.Pickup a passenger going to KonKat's.Go to Narrow Path Park:n 2 l.Switch to plan \"g\".[h]Go to KonKat's:e 1 r.Pickup a passenger going to Post Office.Go to Post Office:s 3 r 1 l.\n</code></pre>\n\n<p><a href=\"https://tio.run/##nVTLboMwEPyVVS65WWqaXji2VSs1VRsprXpAHAxZsBVqI9sR5eupCYYQAnkdbGutfczsjm3oHy/LVwlGwlJqA59xzCP0criD1C5VnWTJo802AwoZ1RpFggoSyUVSRT0xmcFqiwWps7S2J5p4mLs8Pg1OpfqgSskcltQwu6mNy9i/3iXeg@uXxbasPckq5yZilUeWUgGTcAI8BiFBCgSuIafc2PJHfnRC/DCoc38xhEcaYhpzzVAVLQDLKHI@L1tMLZfvzBMO0ZssUtS6gTyzYEb45DvE9@caXUSpBd3wra3OoGbn4hX/RXin4UmvLmoyJdNOj4Aa@FHcoJpqeMZMGofl8NLTF8JwRBrb6WXmqPQHEo0MblQjD9V41sFt2j0U0UU67APGC5W2tkrDYEAz2MqiHxKPpL7hce11m3de0wDV@SBF4sfBWVX7SdCPZDcwWEixoGaqHcbGrPt0TeQAuyHFJZYdC64u1vlGyfHHqm1Har2UZc6oIYRrQgyr9pin@A8\" rel=\"nofollow noreferrer\" title=\"Taxi – Try It Online\">Try it online!</a></p>\n\n<p>Taxi doesn't have a reverse function so this ballooned pretty quickly. The logic is:</p>\n\n<ol>\n<li>Break the string into characters</li>\n<li>Reverse the array</li>\n<li>Iterate through each until a period is found, storing each in a FIFO array</li>\n<li>Empty the array (because there's only one LIFO array available)</li>\n<li>Dump the FIFO array into the LIFO array</li>\n<li>Concatenate the LIFO array and output</li>\n</ol>\n"},{"answer_id":158004,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/158004#158004","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, 46 bytes</h1>\n\n<pre><code>&#9;I =INPUT\nS&#9;I '.' REM . I&#9;:S(S)\n&#9;OUTPUT =I\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87LT8rPMfn/n9NTwdbTLyA0hCsYyFTXU1cIcvVV0FPw5LQK1gjW5OL0Dw0BygIVcbn6ufz/7wgEeiAQEhECAA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n\n<p>Takes the input, then repeatedly replaces it with all the text following the first <code>.</code> until no <code>.</code>s remain, then outputs the value.</p>\n"},{"answer_id":157815,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157815#157815","body":"<h1>JavaScript, 21 bytes</h1>\n<pre><code>x=&gt;x.split('.').pop()\n</code></pre>\n<p><strong>Explanation:</strong></p>\n<p>This code takes <code>x.txt</code> and turns it into a array. The last element of the array is the file type. This code uses the <code>pop</code> function to remove the last element. In the process, the <code>pop</code> function returns the last element.</p>\n"},{"answer_id":121098,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121098#121098","body":"<h1>C#, <s>47</s> <s>34</s> 27 bytes</h1>\n\n\n\n<pre class=\"lang-c# prettyprint-override\"><code>System.IO.Path.GetExtension\n</code></pre>\n\n<p><em>Saved 6 bytes thanks to @totallyhuman.</em></p>\n\n<p><a href=\"https://tio.run/##PYzLCsIwEEX3@YqhqxY0P1B1I1oExYIL1yFNbSCdgc7UB9Jvj9WAZ3Phviwve0KKI3u8weXF4vpSKRsMM9TqrWCGxYi3cCffwMl4zIufncIv@xHtimWYPxaQdAMtrGM61Iezro10unKye4pD9oSx/M@3hEzB6evgxR09urzNs86FQPpBQ2iyokjlSU3xAw\" rel=\"nofollow noreferrer\" title=\"C# (Mono C# compiler) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137696,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137696#137696","body":"<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 20 bytes</h1>\n\n<p>Takes the input as a list of digits.</p>\n\n<pre><code>a-&gt;a*Colrev([1..#a])\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gsytRNL/ifpmCr8D9R1y5Ryzk/pyi1TCPaUE9POTFW839iQUFOpUaigq6dQkFRZl4JkKkE4igppGkkamrqKERHm@ooGOsomOsoGOoomMUCRUDYEEzoKBjBaKAiENNSRwGEoKIGyAgkZqajADTOBGwiUIthLNAJAA\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 17 bytes</h1>\n\n<p>Takes the input as a polynomial. For example, <code>5*x^4 + 3*x^3 + 7*x^2 + x + 6</code> means <code>53716</code>.</p>\n\n<pre><code>a-&gt;x=1;eval(a+a')\n</code></pre>\n\n<p><a href=\"https://tio.run/##TYzBCsIwEER/ZejFJE3AJG0lSPsjorAHK4UioYjEr4@bUMHD8nZmdifStphHzDNGZDJTGu35/qZVUEsHmSnG9SMIZkLclueL16aIBrMgKTUuvUq3Di080zNPTMdMPIPGUcPqKhyjJk4V6TXCfhqqEUreawzs9qx/xd1e7NX/u73K/AU\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157843,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157843#157843","body":"<h1><a href=\"http://www.mono-project.com/docs/about-mono/releases/5.0.0/#csc\" rel=\"nofollow noreferrer\">C# (Visual C# Interactive Compiler)</a>, 22 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>s=&gt;s.Split('.').Last()\n</code></pre>\n\n<p>Implicit <code>using System.Linq;</code> FTW!</p>\n\n<p><a href=\"https://tio.run/##NctNawIxEIDhc/MrggibgB0CvflFQVoorlBUKLR6mMasGdidlWR0BfG3bymll/c5vT4/@kz965n9NEsiPo70n3Nd6Znu82yeYXOqSUwBhYUSsxjbT1TVpoA@anPBpEkT6zeGdcDDtn3hg7H/044La9XDRyIJJXEww8GN7uOd3CpD9j6wkz4SyFWUx5RagSY0QXURBYAygMTfVlQHBd@YY/Jq69zqmZ@W@P4J0XWLr31UeAws4Jz7AQ\" rel=\"nofollow noreferrer\" title=\"C# (Visual C# Interactive Compiler) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157835,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157835#157835","body":"<h1><a href=\"https://www.microsoft.com/sql-server\" rel=\"nofollow noreferrer\">T-SQL</a>, 48 bytes</h1>\n\n<pre><code>SELECT RIGHT(F,CHARINDEX('.',REVERSE(F))) FROM T\n</code></pre>\n\n<p><a href=\"http://sqlfiddle.com/#!18/f5820/2\" rel=\"nofollow noreferrer\">SQL Fiddle</a></p>\n"},{"answer_id":157820,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157820#157820","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 4 bytes</h1>\n<pre><code>'./H\n</code></pre>\n<p><a href=\"https://staxlang.xyz/#c=%27.%2FH&amp;i=hi.txt%0Acarrot.meme%0Alol%0Awhat..is..this..file%0A.bashrc%0AT00M%40n3KaPZ.h0wC%5B%5Dh%0Aagent.000&amp;a=1&amp;m=2\" rel=\"nofollow noreferrer\">Run and debug online!</a></p>\n<h2>Explanation</h2>\n<p>Split on <code>.</code>, take last part.</p>\n"},{"answer_id":157817,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157817#157817","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">&gt;&lt;&gt;</a>, 18 bytes</h1>\n<pre><code>i:0(6$.:&quot;.&quot;=?]\nro|\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/P9PKQMNMRc9KSU/J1j6Wqyi/5v//8ozEEj29zGI9vZIMEJmWmZMKAA\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n<h3>How It Works:</h3>\n<pre><code>i:(6$.  Jump to the second line if out of input\n      :&quot;.&quot;=  Else check if the character is a .\n           ?[ And create a new stack if it is\n              Loop back to the beginning of the line\nIf it is end of input\nro|  Reverse the current stack once and output, erroring on the EOF (-1)\n</code></pre>\n"},{"answer_id":157764,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157764#157764","body":"<h1><a href=\"https://github.com/aceto/aceto\" rel=\"nofollow noreferrer\">Aceto</a>, 6 bytes</h1>\n\n<pre><code>r'.:Qp\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xOLcn//79IXc8qsOD//4xMvZKKEgA\" rel=\"nofollow noreferrer\" title=\"Aceto – Try It Online\">Try it online!</a></p>\n\n<pre>\nr       grabs input as string\n '.     literal period\n   :    split string on period\n    Q   grap bottom item\n     p  print it\n</pre>\n"},{"answer_id":157755,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157755#157755","body":"<h1><a href=\"https://en.wikipedia.org/wiki/ActionScript\" rel=\"nofollow noreferrer\">ActionScript</a> <a href=\"https://en.wikipedia.org/wiki/ActionScript#ActionScript_2.0\" rel=\"nofollow noreferrer\">2.0</a>, 42 bytes</h1>\n\n<pre><code>function a(b){trace(b.split(\".\").pop());};\n</code></pre>\n\n<p>Technically the ;s aren't required for it to <em>compile</em>, at least in JPEXS, but it's good practice. Call:</p>\n\n<pre><code>a(\"a.b\");\n</code></pre>\n\n<p>(traces \"b\")</p>\n"},{"answer_id":157760,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157760#157760","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 9 bytes</h1>\n\n<pre><code>L,\".\"$tbU\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99HR0lPSaUkKfS/i05yYk6OjoOOYSwXl4tOSmZxQU5ipY6VDpcCECiVpBaX6JVUlChBuOUZiSV6epnFenolGSAyLTMnFSoVYmDg65Bn7J0YEKWXYVDuHB2bAZXRS0oszihKhvCcYlPCkkLBzEdNa6pBltc6xYL5pgpKCrp2CkoRYJ67g1MySEmSdh4XlwrUXf//6@qWlqQBAA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157758,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157758#157758","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 6 bytes</h1>\n\n<pre><code>q'./W=\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85KzP3/v1BdTz/c9v//5MSiovwSvdzU3FQA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\">Try it online!</a></p>\n\n<pre><code>        Print\n    W     the last\n     =    element\n   /      of the result of splitting\nq         the input\n '.       on the character '.'\n</code></pre>\n"},{"answer_id":157746,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157746#157746","body":"<h2>&gt;&lt;&gt;, 50 bytes</h2>\n<pre><code>i:0( ?v\nv[:&lt;2~&lt;\nr  ^]+1r&lt;\n&gt;:&quot;.&quot;=?v^\nv?l&lt;r~r&lt;;\n&gt;o ^\n</code></pre>\n<p><a href=\"https://tio.run/##S8sszvj/P9PKQEPBvoyrLNrKxqjOhqtIQSEuVtuwyIbLzkpJT8nWviyOq8w@x6aorsjGmssuXyHu//8QAwNfhzxj78SAKL0Mg3Ln6NgMAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":157734,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157734#157734","body":"<h1>Google Sheets, 25 bytes</h1>\n<p>An anonymous worksheet function that takes input from cell <code>A1</code> and outputs the detected file extension of the form <code>Extension</code> to the calling cell.</p>\n<pre><code>=RegexExtract(A1,&quot;[^\\.]+$\n</code></pre>\n"},{"answer_id":157733,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157733#157733","body":"<h1><a href=\"http://www.yabasic.de\" rel=\"nofollow noreferrer\">Yabasic</a>, 34 bytes</h1>\n\n<p>\nA <a href=\"/questions/tagged/basic\" class=\"post-tag\" title=\"show questions tagged &#39;basic&#39;\" rel=\"tag\">basic</a> answer</p>\n\n<p>Takes input as a string from STDIN, and outputs of the form <code>.Extension</code> to STDOUT.</p>\n\n<pre class=\"lang-vb prettyprint-override\"><code>Input\"\"s$\n?Mid$(s$,RInStr(s$,\".\"))\n</code></pre>\n\n<p><a href=\"https://tio.run/##q0xMSizOTP7/3zOvoLRESalYhcveNzNFRaNYRSfIMy@4pAjEUtJT0tT8/9@3Us8tMydVzz8nRS8ktbhErzIxCQA\" rel=\"nofollow noreferrer\" title=\"Yabasic – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157730,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157730#157730","body":"<h1>Excel VBA, 29 bytes</h1>\n\n<p>An anonymous VBE immediate window function that takes input via cell <code>[A1]</code> and outputs to the console. Return string is of the form <code>.Extension</code>.</p>\n<pre class=\"lang-vb prettyprint-override\"><code>?Mid([A1],InStrRev([A1],&quot;.&quot;))\n</code></pre>\n"},{"answer_id":157729,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/157729#157729","body":"<h1>Excel, 58 bytes</h1>\n\n<pre><code>=TRIM(RIGHT(SUBSTITUTE(A1,\".\",REPT(\" \",LEN(A1))),LEN(A1)))\n</code></pre>\n"},{"answer_id":157675,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157675#157675","body":"<h1><a href=\"https://github.com/m-ender/retina/wiki/The-Language\" rel=\"nofollow noreferrer\">Retina</a>, 26 bytes</h1>\n<pre><code>O`.\nV`\n$\n¶$+¶$+1¶\n(.+)¶\\1¶\n</code></pre>\n<p><a href=\"https://tio.run/##K0otycxLNPz/3z9BjyssgUuF69A2FW0QNjy0jUtDT1vz0LYYIPP/f0cnZxdnAA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a></p>\n<p>I still haven't seen a Retina program anywhere making use of the history feature, so here it is.</p>\n<h3>Explanation</h3>\n<pre><code>O`.\n</code></pre>\n<p>Sort the input</p>\n<pre><code>V`\n</code></pre>\n<p>Reverse it</p>\n<pre><code>$\n¶$+¶$+1¶\n</code></pre>\n<p>Append at the end of the string a newline <code>¶</code>, followed by the original input to the program <code>$+</code>, another newline, the result of the first stage <code>$+1</code>, and a final newline. What we get is &quot;input sorted descending¶original input¶input sorted ascending¶&quot;</p>\n<pre><code>(.+)¶\\1¶\n</code></pre>\n<p>Count the pairs of consecutive identical lines. This can be either <code>0</code>, if the input was unordered, or <code>1</code> if the input was ordered.</p>\n"},{"answer_id":157631,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157631#157631","body":"<h1>C, 68 bytes</h1>\n\n<p>This assumes the use of a character encoding such as ASCII where the letters are in ascending (or descending) order.</p>\n<pre class=\"lang-c prettyprint-override\"><code>f(char*s){for(int a=3;*s&amp;&amp;a;++s)a&amp;=s[1]&lt;=*s|2*(s[1]&gt;=*s);return!*s;}\n</code></pre>\n<p>We use variable <code>a</code> to store two flags - bit 0 is set if everything we've seen so far is consistent with an ascending sequence, and bit 1 if it's consistent with descending.  Before we've seen anything, both are true.</p>\n<p>If both these flags become false before the end of string, we exit the loop before <code>s</code> points at the terminating NUL and so return false (<code>0</code>).</p>\n<p>If we reach the end of string, then we return true (<code>1</code>).</p>\n<h2>Test program</h2>\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main(int argc, char **argv)\n{\n    for (int i = 1;  i &lt; argc;  ++i)\n        printf(&quot;  %s -&gt; %d\\n&quot;, argv[i], f(argv[i]));\n}\n</code></pre>\n"},{"answer_id":157468,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157468#157468","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, <s>28</s> 18 bytes</h1>\n\n<pre><code>L,2]dbRAº=\nL^,bU#\n</code></pre>\n\n<p><a href=\"https://tio.run/##lVPBbtNAED2vv2JkKrkIIznlUKlRJTcpyoEgIUJ6oDJ07d00rpy1s7tOsapcuPMNvXFAfAHHfgpfwB@EmXUMkSgVaGXv2vvem7czs1yIqtpsxuFBItLXJ3ffjr3xuzCdPtqchhkvijAOe4nnnYa2NFbn6hJ/@IEv4qsVY32Y1FqXtRJwnds5BGDnUoFc8YIoV2WuEM4IONSSWwkcZrXKbF4qsCUQANIGLtQFmIpn0njMoZ9/4IuqQLi@rBdSWXPEgJ2fBzzNhJwFECWJx9Lps4Ohg7@qzRylnUSfscmbk@ELOIYdPFoLkBKLs3jU@imrhizYsvo7A7pPijY@3HvfOO6@enr4eGv4IXIbEiPGjvayXEnc6oL@SetGhLSbLt/r1q1aSW2J2/59iB5ELu7d5yfbk6oMU6/wuccsAKGpvtLY8Cj0mN9u@OBbLSVOS79LsdW1nTeA5a3p5PdYIApOS3LgN9IgXUgp/F9VmvHCyH@TgAAF8E0CpDdIxFk6dWeacEwl9hoUubH/p/L949cbauy1ExpJ63S0NHVhdw31gEbkijFIRvEgc4S3edX2OuVrF/87di9BI218t1xuZ@cjopXz0jYx2aFrsFbOjs4FzEq94LbveXsUo70QP24/fdn8BA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n"},{"answer_id":157476,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/157476#157476","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog Unicode)</a>, 9 <a href=\"https://codegolf.meta.stackexchange.com/a/9429/43319\" title=\"When can APL characters be counted as 1 byte each?\">bytes</a><sup><a href=\"https://github.com/abrudz/SBCS\" rel=\"nofollow noreferrer\" title=\".dyalog files using a single byte character set\">SBCS</a></sup></h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>∨/⍬∘⍋⍷⍒,⍋\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R24RHHSv0H/WuedQx41Fv96Pe7Y96J@kAWf//q4cUlZZkVFqpc6mrc6UpPOqb6hXs76egruTo5Ozi6qaEKhgVGYEmkpePJlBSlJqKJlSoBDZd3S0xpxiHTc5oWipTi9FEUlJTU6DmeOaVJeZkpmCa5JGak4PuHjRuTB5QAAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>∨/</code> Is it anywhere true that (lit. OR-reduction of)</p>\n\n<p><code>⍬∘⍋</code> the indices (viz. those that would put the argument into its current order)</p>\n\n<p><code>⍷</code> are found in (each position of)</p>\n\n<p><code>⍒</code> the indices that would put the argument into descending order</p>\n\n<p><code>,</code> followed by</p>\n\n<p><code>⍋</code> the indices that would put the argument into ascending order?</p>\n"},{"answer_id":157210,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/157210#157210","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, 8 <a href=\"https://github.com/mudkip201/pyt/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>6ᴇřĐṗ*žÁ\n</code></pre>\n<p><a href=\"https://tio.run/##ARcA6P9weXT//zbhtIfFmcSQ4bmXKsW@w4H//w\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Explanation:</p>\n<pre><code>6ᴇ            Push 1000000\nř             Push [1,2,...,999999,1000000]\nĐ             Duplicate top of stack\nṗ             Is each element prime (pushes array of booleans)\n*             Multiply top two on stack element-wise\nž             Remove all zeros\nÁ             Push contents of array onto stack\n              Implicit print\n</code></pre>\n"},{"answer_id":5980,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/5980#5980","body":"<h1>F#, <strike>100</strike> 94 bytes</h1>\n\n<p><strike><pre>let p n=\n    let rec c i=i>n/2||(n%i&lt;>0&amp;&amp;c(i+1))\n    c 2\nfor n in 1..1000000 do if p n then printfn \"%i\" n</pre></strike></p>\n\n<pre><code>let p n={2..n-1}|&gt;Seq.forall(fun x-&gt;n%x&lt;&gt;0)\n{2..1000000}|&gt;Seq.filter p|&gt;Seq.iter(printfn \"%i\")\n</code></pre>\n"},{"answer_id":6300,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/6300#6300","body":"<h1>QBASIC, 75 bytes</h1>\n\n<pre><code>FOR I=2 TO 1e6\n    FOR J=2 TO I^.5\n        IF I MOD J=0 THEN:GOTO X\n    NEXT\n    ?I\nX:NEXT\n</code></pre>\n\n<p>I could have saved a character by going with FOR J = 2 TO I/2 but the run time was seriously slow. Runs at a much saner speed by only going to Sqrt I.</p>\n"},{"answer_id":58785,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/58785#58785","body":"<h1>NARS2000 APL, 7 characters</h1>\n\n<pre><code>⍸0π⍳1e6\n</code></pre>\n"},{"answer_id":13098,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/13098#13098","body":"<h1>Perl, 49 bytes</h1>\n\n<p>Regular expression kung fu :)</p>\n\n<pre><code>for(1..1E6){(1x$_)=~/^(11+?)\\1+$/ or print\"$_\\n\"}\n</code></pre>\n\n<p>Ungolfed version:</p>\n\n<pre><code>for(1 .. 1_000_000) { \n    (1x$_) =~ /^(11+?)\\1+$/ or print \"$_\\n\";\n}\n</code></pre>\n\n<p>It hasn't even made 10% progress while I type this post!</p>\n\n<p>Source for the regex: <a href=\"http://montreal.pm.org/tech/neil_kandalgaonkar.shtml\" rel=\"nofollow noreferrer\">http://montreal.pm.org/tech/neil_kandalgaonkar.shtml</a></p>\n"},{"answer_id":6144,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/6144#6144","body":"<h1>PowerShell, <strike>47</strike> 44 bytes</h1>\n\n<p>Very slow, but the shortest I could come up with.</p>\n\n<pre><code>$p=2..1e6;$p|?{$n=$_;!($p-lt$_|?{!($n%$_)})}\n</code></pre>\n\n<h1>PowerShell, 123 bytes</h1>\n\n<p>This is much faster; far from optimal, but a good compromise between efficiency and brevity.</p>\n\n<pre><code> $p=2..1e6;$n=0\n while(1){$p=@($p[0..$n]|?{$_})+($p[($n+1)..($p.count-1)]|?{$_%$p[$n]});$n++;if($n-ge($p.count-1)){break}}\n $p\n</code></pre>\n"},{"answer_id":157205,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/157205#157205","body":"<h1>C (gcc) 65 bytes</h1>\n<pre><code>j;f(i){for(;++i&lt;1e6;)for(j=2;!printf(&quot;%d\\n&quot;+(i&gt;j)*3,i)&amp;&amp;i%j++;);}\n</code></pre>\n<p><a href=\"https://tio.run/##S9ZNT07@/z/LOk0jU7M6Lb9Iw1pbO9PGMNXYWhPEy7I1slYsKMrMK0nTUFJNiclT0tbItMvS1DLWydRUU8tUzdLWtta0rv2fm5iZpwE0QQPEAQA\" rel=\"nofollow noreferrer\">Try it online! ( stops at 1000 ) </a></p>\n"},{"answer_id":157192,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/157192#157192","body":"<h1>Python 2; 67 Bytes</h1>\n<pre><code>n,p=3,[2]\nwhile n&lt;1e5:exec'print n;p+=[n]'*all(n%x for x in p);n+=2\n</code></pre>\n<p>Checks current number against all previous primes, and if not divisible by any of them, prints number and adds to list</p>\n<p>The advantage of the while loop compared to other methods is that python will allow direct comparison against a number of the form &quot;1e5&quot;, rather than having to use a long form or convert it to an int</p>\n<p>Still takes a long time to run</p>\n"},{"answer_id":111859,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/111859#111859","body":"<h1>PHP, <s>55 53</s> 51 bytes</h1>\n<pre class=\"lang-php prettyprint-override\"><code>for($n=1;1e6&gt;$i=$n++;$i||print&quot;$n\n&quot;)while($n%$i--);\n</code></pre>\n<p>Run with <code>-nr</code> or <a href=\"http://sandbox.onlinephpfunctions.com/code/ee8caaecff0f09fda0823815e52fa5a5a72d913a\" rel=\"nofollow noreferrer\">try it online</a>. (TiO only runs to 10K; 1M would exceed the time limit.)</p>\n<p>The outer loop runs <code>$n</code> from 1 to 1 million.<br />\nThe inner loop is the primality test: loops <code>$i</code> down from <code>$n-1</code> until <code>$i</code> is a divisor of <code>$n</code>.<br />\nIf that divisor is 1, <code>$n</code> is a prime and will be printed in the post-condition of the outer loop.</p>\n"},{"answer_id":157055,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/157055#157055","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, 9 bytes</h1>\n<pre><code>78497ǰƖřᵽ\n</code></pre>\n<p><a href=\"https://tio.run/##K6gs@f/f3MLE0uL4hmPTjs58uHXv//8A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<pre>\n78498ǰƖřᵽ\n78497      - push 7, 8, 4, 9, and 7 on the stack\n    ǰ      - join everything on stack w/no delimiters\n     Ɩ     - casts to int\n      ř    - construct range from 78498 to 1 ([1,2,3,..., 78497, 78498])\n       ᵽ   - push xth prime for every item in list\n</pre>\n<p>Doesn't meet the timeout rq on tio, but it would work, you can try it with lower numbers the reason for 78498 is that that is the 0 indexed prime under a million</p>\n"},{"answer_id":157056,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/157056#157056","body":"<h1><a href=\"https://github.com/tomtheisen/stax\" rel=\"nofollow noreferrer\">Stax</a>, 7 <a href=\"https://github.com/tomtheisen/stax/blob/master/docs/packed.md#packed-stax\" rel=\"nofollow noreferrer\">bytes</a><sup>CP437</sup></h1>\n<pre><code>ç►╪(Æ;Ç\n</code></pre>\n<p><a href=\"https://staxlang.xyz/#c=%C3%A7%E2%96%BA%E2%95%AA%28%C3%86%3B%C3%87&amp;a=1\" rel=\"nofollow noreferrer\">Run and debug online!</a></p>\n<h2>Explanation</h2>\n<p>Uses the unpacked version to explain.</p>\n<pre><code>wi|6QVM&lt;\nw           loop\n i          loop index `i`\n  |6        the `i`th prime\n    Q       print and keep on stack\n     VM&lt;    while the printed number is less than one million\n</code></pre>\n"},{"answer_id":155598,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/155598#155598","body":"<h1><a href=\"https://esolangs.org/wiki/Forked\" rel=\"nofollow noreferrer\">Forked</a>, <s>17</s> 15 bytes</h1>\n\n<pre><code>01v\n  &gt;sP+%A!\"U\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8svyk5N@f/fwLCMS0HBrjhAW9VRUSn0/38A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>This uses the same method as my <a href=\"https://codegolf.stackexchange.com/a/142476/61563\">Implicit answer</a>.</p>\n\n<p>The first line sets up the stack: pushes <code>0</code>, pushes <code>1</code>, and then directs the control flow South.</p>\n\n<p>The <code>&gt;</code> on the second line turns the IP East where it hits the main code:</p>\n\n<pre><code>sP+%A!\"U\n</code></pre>\n\n<ul>\n<li><code>s</code> - swap top two stack values</li>\n<li><code>P</code> - pop top of stack, store in register</li>\n<li><code>+</code> - pop top two stack values, add together, push result</li>\n<li><code>%</code> - print top of stack as integer</li>\n<li><code>A!</code> - print 0xA as codepoint character (ASCII newline)</li>\n<li><code>\"</code> - swap top two stack values</li>\n<li><code>U</code> - push register to stack</li>\n</ul>\n\n<p>Since the IP wraps, this line is executed infinitely.</p>\n"},{"answer_id":155601,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/155601#155601","body":"<h1><a href=\"https://github.com/ScratchMan544/momema\" rel=\"nofollow noreferrer\">Momema</a>, 28 bytes</h1>\n\n<pre><code>1 1z0-8*01+*1*00+*1-*0-9 9z1\n</code></pre>\n\n<p><a href=\"https://tio.run/##y83PTc1N/P/fUMGwykDXQsvAUFvLUMvAAEjqahnoWipYVhn@/w8A\" rel=\"nofollow noreferrer\" title=\"Momema – Try It Online\">Try it online!</a> Outputs infinitely with a tab between numbers.</p>\n\n<p>If no separator between numbers is required, you can save four bytes:</p>\n\n<pre><code>1 1z0-8*01+*1*00+*1-*0z1\n</code></pre>\n\n<h2>Explanation</h2>\n\n<pre><code>                                                     #  a = 0\n1   1       #            [1] = 1                     #  b = 1\nz   0       #  label z0: jump past label z0 (no-op)  #  while true {\n-8  *0      #            output num [0]              #    print a\n1   +*1*0   #            [1] = [1] + [0]             #    b = a + b\n0   +*1-*0  #            [0] = [1] - [0]             #    a = b - a\n-9  9       #            output chr 9                #    print '\\t'\nz1          #  label z1: jump past label z0          #  }\n</code></pre>\n"},{"answer_id":155437,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/155437#155437","body":"<h1><a href=\"http://coconut-lang.org/\" rel=\"nofollow noreferrer\">Coconut</a>, 28 bytes</h1>\n\n<pre><code>def f(a=1,b=1)=[a]::f(b,a+b)\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85Pzs8rLfn/PyU1TSFNI9HWUCfJ1lDTNjox1soqTSNJJ1E7SfN/moamQo2dQm5igYpGQVFmXgmYC9RZXJqb@h8A\" rel=\"nofollow noreferrer\" title=\"Coconut – Try It Online\">Try it online!</a></p>\n"},{"answer_id":155417,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/155417#155417","body":"<h1><a href=\"https://github.com/nxadm/rakudo-pkg\" rel=\"nofollow noreferrer\">Perl 6</a>, 13 bytes</h1>\n\n<p>Takes a list of digits\n</p>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{[+] [\\+] @_}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYKvwvzpaO1YhOgZIOMTX/i9OrFRI0zDVMdYx1zHUMdP8/x8A\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>Perl 6 has a <a href=\"https://docs.perl6.org/type/List#routine_produce\" rel=\"nofollow noreferrer\">produce</a> routine, which can be more tersely invoked using the 'triangle reduce' meta operator: <code>[\\ ]</code>. Seems like it was made for this task.</p>\n"},{"answer_id":154545,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/154545#154545","body":"<h1><a href=\"https://esolangs.org/wiki/Fish\" rel=\"nofollow noreferrer\">>&lt;></a>, 11 bytes</h1>\n\n<pre><code>10r:n:@+aor\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8sszvj/39CgyCrPykE7Mb/o/38A\" rel=\"nofollow noreferrer\" title=\"&gt;&lt;&gt; – Try It Online\">Try it online!</a></p>\n\n<p>Prints the Fibonacci sequence forever, separated by newlines.</p>\n"},{"answer_id":154481,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/154481#154481","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 3 bytes</h1>\n<p>Just to add to the collection.</p>\n<p>0-indexed, using <code>0</code> as the first number in the sequence.</p>\n<pre><code>MgU\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.5&amp;code=TWdV&amp;input=\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":154474,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/154474#154474","body":"<h1>FALSE, 13 bytes</h1>\n<pre><code>1 1[1][$2ø+]#\n</code></pre>\n<p>Numbers are pushed to the stack.</p>\n"},{"answer_id":153727,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/153727#153727","body":"<h1>Common Lisp, <s>53</s> 52 bytes</h1>\n\n<pre><code>(loop as(x . y)on(reverse(read))sum(+(reduce'+ y)x))\n</code></pre>\n\n<p>Input as list of digits.</p>\n\n<p><a href=\"https://tio.run/##DcpLCsAgDEXRrbxZE4RCv/sR60CwKqYWu/rU0T2D62KQolRqSI9SzLnACnXM@Dgnqv71VfyovZil3WSGr@b8ZMbRmZWVThzYsWHFwj8\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>-1 byte thanks to @ceilingcat.</p>\n"},{"answer_id":127198,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/127198#127198","body":"<h1>Common Lisp, 38 bytes</h1>\n\n<p>Generates the Fibonacci sequence without end.</p>\n\n<pre><code>(do((a 1 b)(b 1(+ a b)))(())(print a))\n</code></pre>\n\n<p><a href=\"https://tio.run/##S87JLC74/18jJV9DI1HBUCFJUyNJwVBDWyERyNTU1NAA4oKizLwShURNzf//AQ\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>The <a href=\"https://codegolf.stackexchange.com/a/1963/41789\">other Common Lisp solution</a> is a function to generate the <em>n</em>-th number. This solution works since in the <code>do</code> loop the assignments to the iteration variables are performed in parallel: so the initialization is equivalent to:</p>\n\n<pre><code>a, b = 1, 1\n</code></pre>\n\n<p>while at each repetition the assignment is equivalent to:</p>\n\n<pre><code>a, b = b, a+b\n</code></pre>\n"},{"answer_id":154067,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/154067#154067","body":"<h1>QBasic, 32 bytes</h1>\n\n<pre><code>b=1\nDO\n?b\nb=b+a\na=b-a\nSLEEP\nLOOP\n</code></pre>\n\n<p>Generates and prints Fibonacci numbers forever. <code>SLEEP</code> waits for a user keypress between numbers; otherwise, the output would scroll off the screen very rapidly.</p>\n"},{"answer_id":108959,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/108959#108959","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, 40 bytes</h1>\n\n<p><sup>The language is much newer than question, of course.</sup></p>\n\n<pre><code>(d f(q((x y)(i(disp x)1(f y(a x y\n(f 0 1\n</code></pre>\n\n<p>This is a full program that outputs Fibonacci numbers until you stop it. <a href=\"https://tio.run/##K8nMq8zJLC74/18jRSFNo1BDo0KhUlMjUyMFKKhQoWmokaZQqZGoABTlAjINFAz//wcA\" rel=\"nofollow noreferrer\" title=\"tinylisp – TIO Nexus\">Try it online!</a></p>\n\n<p>The first line defines a function <code>f</code> that takes numbers <code>x</code> and <code>y</code>, outputs <code>x</code>, and calls <code>f</code> recursively on <code>y</code> and the <code>a</code>ddition of <code>x</code> and <code>y</code>. The main trick is the use of <code>i</code>f to simulate a \"do A, then B\" structure: the <code>disp</code> call is used as the condition; its return is always falsey; so we put the recursion in the false branch.</p>\n\n<p>The second line calls <code>f</code> with 0 and 1.</p>\n"},{"answer_id":151903,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/151903#151903","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, 1 <a href=\"https://github.com/mudkip201/pyt/wiki/Codepage\" rel=\"nofollow noreferrer\">byte</a></h1>\n\n<p>Get the <em>n</em>th Fibonacci number:</p>\n\n<pre><code>Ḟ\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>           Implicit input\n Ḟ         Return (input)-th Fibonacci number\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gs@f//4Y55//8bmQIA\" rel=\"nofollow noreferrer\">Try it online!</a>\n<br/></p>\n\n<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, 7 <a href=\"https://github.com/mudkip201/pyt/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<p>Get an infinite list of Fibonacci numbers:</p>\n\n<pre><code>0`ĐḞƤ⁺ł\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>0           Push 0 [this is the counter]\n `    ł     While the counter is not zero (checked at 'ł')\n  Đ         Duplicate the counter\n   ḞƤ       Print the (counter)-th Fibonacci number\n     ⁺      Increment the counter\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gs@f/fIOHIhIc75h1b8qhx19Gm//@NTAE\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":137634,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137634#137634","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, 79 bytes</h1>\n\n<pre><code>&#9;N =INPUT\nD&#9;N LEN(1) . D REM . N&#9;:F(O)\n&#9;X =X + D\n&#9;Y =Y + X&#9;:(D)\nO&#9;OUTPUT =Y\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87LT8rPMfn/n9NPwdbTLyA0hMsFyPRx9dMw1FTQU3BRCHL1BdJ@nFZuGv6aXJwRCrYRCtoKLlyckQq2kUBWBKeVhosmlz@nf2gIUDtQkMvVz@X/f1Njc0MzAA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n\n<p>Input from stdin, output to stdout.</p>\n"},{"answer_id":137640,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137640#137640","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 19 + 1 (<code>-p</code>) = 20 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/./$\\+=$p+=$&amp;/ge}{\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/79YX09fJUbbVqUAiNX001Nrq///NzM1MTYy/JdfUJKZn1f8X9fXVM/A0OC/bgEA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n\n<p><strong>How?</strong></p>\n\n<p>$\\ holds the cumulative total, $p holds the total of the digits on the current line.  Each line of the parallelogram is simply the previous line with the next digit of the number appended.  Therefore, it is the sum of the previous line plus the new digit.  This iterates over all of the digits, calculating the sums as it goes.  The actual substitution is irrelevant; it's just a means to iterate over the digits without creating an actual loop.  At the end, $\\ is printed implicitly by the <code>-p</code> option.</p>\n"},{"answer_id":153748,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/153748#153748","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 75 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>function(x,b=nchar(x))sum(sapply(x%/%10^(0:b),function(y)y%/%10^(0:b)%%10))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/qfZqP7P600L7kkMz9Po0InyTYvOSOxSKNCU7O4NFejOLGgIKdSo0JVX9XQIE7DwCpJUweuulKzEklcFcjS1PxfUJSZV6KRpmFqbG5oBuT/BwA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<p>I did not see an R solution yet, so here goes..</p>\n"},{"answer_id":153740,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/153740#153740","body":"<h1>Python 3, 106 bytes</h1>\n\n<pre><code>a=input()\nc=[]\nd=0\nb=[int(g) for g in a]\nfor i in range(1,len(a)+1):\n    c+=b[0:i]\nfor t in c:\n    d+=t\nprint(d)\n</code></pre>\n\n<p><a href=\"https://tio.run/##JYwxCoQwEABr9xUps8RCsRP2JcEiJppbONYQ1sLXxwvXDcMw5dHPJUtrgVjKrRYhkt8g0QQ7eRa1Gc15VZMNiwkbdObONUg@7Dx@D7EB3YwrDNHR7qeV/5n2LP50cqRQar8lbO0F\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n\n<p>My original code was:</p>\n\n<pre><code>a,c,d=input(),[],0\nb=[int(g) for g in a]\nfor i in range(1,len(a)+1):\n    c+=b[0:i]\nfor t in c:\n    d+=t\nprint(d)\n</code></pre>\n\n<p>But then I realized that by initializing all of my variables on one line, I gained two characters. :P</p>\n"},{"answer_id":153729,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/153729#153729","body":"<h2><strong>Python 3, <s> 94</s>  <s> 58 </s>  54 bytes</strong></h2>\n\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/users/59487/mr-xcoder\">Mr. Xcoder</a> for helping me save quite some bytes!</p>\n\n<pre><code>lambda n:sum(int(v)*(len(n)-i)for i,v in enumerate(n))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM9ZNBtP/S2xj/uck5ialJCrkWRWX5mpk5pVolGlqaeSk5mnkaepmaqblFylk6pQpZOYppOaV5qYWJZakAmU0/xcUgdSWaCiZmZoYGxkqAYUA\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n\n<p>Takes input as a string. It simply multiplies each digit by the number of times it needs to be added and returns their sum.</p>\n"},{"answer_id":153733,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/153733#153733","body":"<h1>Scala, 64 bytes</h1>\n\n<pre><code>def f(s:String)=s.indices.flatMap(i=&gt;s.take(i+1).map(_-'0')).sum\n</code></pre>\n"},{"answer_id":137651,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137651#137651","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, <s>65, 50,</s> 36 bytes</h1>\n\n<pre><code>([])({&lt;{}&gt;{&lt;({}[()])&gt;[]}{}&lt;([])&gt;}{})\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/XyM6VlOj2qa61q7aRqO6NlpDM1bTLjq2trrWBiRlB2Ro/v9vqGCkYAwA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>After lots of revising, I'm now very proud of this answer. I like the algorithm, and how nicely it can be expressed in brain-flak.</p>\n\n<p>Most of the byte count comes from handling 0's in the input. In fact, if we could assume there were no 0's in the input, it would be a beautifully short 20-byte answer:</p>\n\n<pre><code>({{&lt;({}[()])&gt;[]}{}})\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X6O62kajujZaQzNW0y46tra6tlbz/39DBSMFYwA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>But unfortunately, brain-flak is notorious for bad handling of edge cases. </p>\n\n<h1>Explanation</h1>\n\n<p>First, an observation of mine:</p>\n\n<p>If the input is <em>n</em> digits long, the first digit will appear in the triangle <em>n</em> times, the second digit will appear <em>n-1</em> times, and so on onto the last digit, which will appear once. We can take advantage of this, since it's really easy to calculate how many digits of input are left in brain-flak, namely</p>\n\n<pre><code>[]\n</code></pre>\n\n<p>So here's how the code works.</p>\n\n<pre><code># Push the size of the input (to account for 0's)\n([])\n\n# Push...\n(\n\n    # While True\n    {\n\n        # Pop the stack height (evaluates to 0)\n        &lt;{}&gt;\n\n        # For each digit *D*...\n\n        # While true\n        {\n\n            # Decrement the counter (the current digit we're evaluating), \n            # but evaluate to 0\n            &lt;({}[()])&gt;\n\n            # Evaluate the number of digits left in the input\n            []\n\n        # Endwhile\n        }\n\n        # This whole block evaluates to D * len(remaining_digits), but \n        # without affecting the stack\n\n        # Since we looped D times, D is now 0 and there is one less digit.\n        # Pop D (now 0)\n        {}\n\n        # Push the stack height (again, evaluating it as 0)\n        &lt;([])&gt;\n\n    # End while\n    }\n\n    # Pop a 0 off (handles edge case of 0)\n    {}\n\n# end push\n)\n</code></pre>\n"},{"answer_id":151755,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/151755#151755","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, <s>9</s> 6 <a href=\"https://github.com/mudkip201/pyt/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>ąĐŁř↔·\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>                 Implicit input\ną                Convert to array of digits\n Đ               Duplicate digit array\n   Łř↔           Create a new array [len(array),len(array)-1,...,1]\n      ·          Dot product with digit array\n                 Implicit output\n</code></pre>\n"},{"answer_id":153609,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/153609#153609","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 0.6</a>, 26 bytes</h1>\n\n<p>This isn't the shortest answer, but it may be the most transformative. This define a new infix function <code>∗</code> (not <code>*</code>!). Because Julia supports generic programming, <code>∗</code> is now defined for all combinations of types, and works nearly anywhere <code>*</code> works. For example:</p>\n\n<pre><code>6 ∗ 9 = 42 # with integers\n9 ∗ 6 = 54\n5 ∗ 5 = 25\n6.0 ∗ 9 = 42 # and floating points\n(6 + 0 ∗ im) ∗ 9 = 42 # and complex\n6.0 ∗ 9 // 1 = 42 # rational numbers\n\"abc\" ∗ \"def\" = \"abcdef\" # string concatenation\n6 .∗ [1 4 9; 4 5 6; 7 8 9] = [6 24 42; 24 30 36; 42 48 42] \n# even elementwise multiplication with an array\n</code></pre>\n\n\n\n<pre class=\"lang-julia prettyprint-override\"><code>∗(x,y)=x==6&amp;&amp;y==9?42:x*y\n</code></pre>\n\n<p><a href=\"https://tio.run/##yyrNyUw0@///Ucd0jQqdSk3bCltbMzW1SltbS3sTI6sKrcr/DsUZ@eUKZkAVllwQtiWQbQZlmwLZplC2mZ4BkioNM20QNzNXE0kQqkRf3xAqoJSYlKwEFFJKSU1TgisCCkQbKpgoWFqbKJgqmFmbK1goWMb@BwA\" rel=\"nofollow noreferrer\" title=\"Julia 0.6 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124908,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124908#124908","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 51 bytes</h1>\n\n<pre><code>D,e,@@,9=&amp;!!\n_\n+?\n$e&gt;x&gt;?\nI,-x,+42,O,-41\n-1\nI,G,*G,O\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99FJ1XHwUHH0lZNUZErnkvbnksl1a7Czp7LU0e3QkfbxEjHX0fXxJBL1xAo4q6j5a7j////f7P/lgA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<p>For some reason, the old version didn't work, so I decided to update and correct it.</p>\n\n<h2>Old version, 52 bytes</h2>\n\n<pre><code>D,e,@@,       ; Define a dyadic function, $e.\n       9=     ;   Does the first argument equal 9?\n       &amp;!!    ;   AND with the second argument\n_             ; Save the inputs\n+?            ; Take the first input\n$e&gt;x&gt;?        ; Apply $e with the inputs as arguments\nI,            ; If the result == 1\n  +41,        ;   Add 41\n  &amp;,          ;   Save as character\n  -41         ;   Subtract 41\n-1            ; Decrement\n~             ; Boolean negate\nI,            ; If the result == 1\n  G,          ;   Retrieve the first input\n  *G,         ;   Multiply with the second input\n  &amp;           ;   Save as character\nP             ; Output saved character\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99FJ1XHwUHH0lZNUZErnkvbnksl1a7Czp7LU0fbxFBHTUfXxJBL15CrDijgrqPlrqPGFfD//3@z/5YA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<p>This outputs by char code (<code>42 -&gt; *</code>)</p>\n\n<p>It is, so far, the only Add++ program that uses all 4 of the memory types that Add++ has.</p>\n"},{"answer_id":152907,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/152907#152907","body":"<h1><a href=\"http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/\" rel=\"nofollow noreferrer\">Forth (gforth)</a>, 27 bytes</h1>\n\n\n\n<pre class=\"lang-forth prettyprint-override\"><code>2dup 9 = swap 6 = * 2 * - *\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8svKsnQTU8DUf@tFNL@G6WUFihYKtgqFJcnFiiYARlaCkZArKug9d@aywwolaagp5BcxGUJlIQyzRXMQcz/AA\" rel=\"nofollow noreferrer\" title=\"Forth (gforth) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":152753,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/152753#152753","body":"<p>Javascript can do it with 24 bytes:\na==6&amp;&amp;b==9?42:a*b;</p>\n\n<p>Okay 39 bytes for\nfunction a(a,b){c=(a==6&amp;&amp;b==9)?42:a*b} </p>\n"},{"answer_id":152751,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/152751#152751","body":"<h2>PHP, 63 bytes</h2>\n\n<pre><code>&lt;?php function mult($a,$b){return ($a==6&amp;&amp;$b==9)?42:$a*$b;}?&gt;\n</code></pre>\n\n<p>and this returns the proper values for 6*9 and 9*6</p>\n"},{"answer_id":152738,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/152738#152738","body":"<h1><a href=\"https://github.com/SatansSon/Commentator\" rel=\"nofollow noreferrer\">Commentator</a>, 223 bytes</h1>\n\n<pre><code>//{-//\n?{-{- {- -}-}-}e# e#\n-}\n?{- {- -}-}e# e#\n{-{-{-{-{-         e#-}//\n:# \n&lt;#-}-}-}-}      e#//\n:# \n&lt;#\n:{-{-{-{-{-# -}-}-}-}-}\n&lt;#\n:{-{-{-{-#{-#-}-}-}-}-}\n{-{-{-{-!{-!-}-}-}!{-{-{-            -}!-}#{-\n?-} {-e# e#\n-}e#-}//\n</code></pre>\n\n<p><a href=\"https://tio.run/##XY6xCsRACER7v8JgLVuGC4F8y3FsmQSOdIvfbmYRkxCd6o06/vZ1rdvxPfa/eylNS6GlaVOG1HpX4Sqk1nnSYH0umrOqqOHEJEyzxL5aWpdB070qnGOIeFoCPazEAxRoeGWjANWwSAtSm@br8ZW7j/45AQ\" rel=\"nofollow noreferrer\" title=\"Commentator – Try It Online\">Try it online!</a></p>\n\n<h1>How it works</h1>\n\n<p>An <code>s</code> is used to denote a space. Example inputs <code>6</code> and <code>9</code>. Tape head denoted with a surrounding <code>()</code></p>\n\n<pre><code>//                                             - Take input;     TAPE = [ (6)  0   0   0   0   0 ]\n  {-                                           - Move right;     TAPE = [  6  (0)  0   0   0   0 ]\n    //                                         - Take input;     TAPE = [  6  (9)  0   0   0   0 ]\n?                                              - While tape head...\n {-                                            -   Move right;   TAPE = [  6   9  (0)  0   0   0 ]\n   {-                                          -   Move right;   TAPE = [  6   9   0  (0)  0   0 ]\n     s                                         -   Increment;    TAPE = [  6   9   0  (1)  0   0 ]\n      {-                                       -   Move right;   TAPE = [  6   9   0   1  (0)  0 ]\n        s                                      -   Increment;    TAPE = [  6   9   0   1  (1)  0 ]\n         -}-}-}                                -   Move back;    TAPE = [  6  (9)  0   1   1   0 ]\n               e#se#                           -   Decrement;    TAPE = [  6  (8)  0   1   1   0 ]\n                                               - Copies input;   TAPE = [  6  (0)  0   9   9   0 ]\n-}                                             - Move left;      TAPE = [ (6)  0   0   9   9   0 ]\n?                                              - While tape head...\n {-                                            -   Move right;   TAPE = [  6  (0)  0   9   9   0 ]\n   s                                           -   Increment;    TAPE = [  6  (1)  0   9   9   0 ]\n    {-                                         -   Move right;   TAPE = [  6   1  (0)  9   9   0 ]\n      s                                        -   Increment;    TAPE = [  6   1  (1)  9   9   0 ]\n       -}-}                                    -   Move back;    TAPE = [ (6)  1   1   9   9   0 ]\n           e#se#                               -   Decrement;    TAPE = [ (5)  1   1   9   9   0 ]\n                                               - Copies input;   TAPE = [ (0)  6   6   9   9   0 ]\n{-{-{-{-{-                                     - Move 5 right;   TAPE = [  0   6   6   9   9  (0)]\n          sssssssss                            - Add 9;          TAPE = [  0   6   6   9   9  (9)]\n                   e#                          - Negate;         TAPE = [  0   6   6   9   9 (-9)]\n                     -}                        - Move left;      TAPE = [  0   6   6   9  (9) -9 ]\n                       //                      - Add;            TAPE = [  0   6   6   9  (0) -9 ]\n:                                              - If tape head...\n #                                             -   Set to 0;     TAPE = [  0   6   6   9  (0) -9 ]\n  s                                            -   Increment;    TAPE = [  0   6   6   9  (0) -9 ]\n&lt;#                                             - Xor with 1;     TAPE = [  0   6   6   9  (1) -9 ]\n  -}-}-}-}                                     - Move 4 left;    TAPE = [ (0)  6   6   9   1  -9 ]\n          ssssss                               - Add 6 times;    TAPE = [ (6)  6   6   9   1  -9 ]\n                e#                             - Negate;         TAPE = [(-6)  6   6   9   1  -9 ]\n                  //                           - Add;            TAPE = [ (0)  6   6   9   1  -9 ]\n:                                              - If tape head...\n #                                             -   Set to 0;     TAPE = [ (0)  6   6   9   1  -9 ]\n  s                                            -   Increment;    TAPE = [ (0)  6   6   9   1  -9 ]\n&lt;#                                             - Xor with 1;     TAPE = [ (1)  6   6   9   1  -9 ]\n:                                              - If tape head...\n {-{-{-{-{-                                    -   Move 5 left;  TAPE = [  1   6   6   9   1 (-9)]\n           #                                   -   Set to 0;     TAPE = [  1   6   6   9   1  (0)]\n            s                                  -   Increment;    TAPE = [  1   6   6   9   1  (1)]\n             -}-}-}-}-}                        -   Move 5 right; TAPE = [ (1)  6   6   9   1   1 ]\n&lt;#                                             - Xor with 1;     TAPE = [ (0)  6   6   9   1   1 ]\n:                                              - If tape head...\n {-{-{-{-                                      -   Move 4 left;  TAPE = [ (0)  6   6   9   1   1 ]\n         #                                     -   Set to 0;     TAPE = [ (0)  6   6   9   1   1 ]\n          {-                                   -   Move left;    TAPE = [ (0)  6   6   9   1   1 ]\n            #                                  -   Set to 0;     TAPE = [ (0)  6   6   9   1   1 ]\n             -}-}-}-}-}                        -   Move 5 right; TAPE = [ (0)  6   6   9   1   1 ]\n{-{-{-{-                                       - Move 4 left;    TAPE = [  0   6   6   9  (1)  1 ]\n        !                                      - Product;        TAPE = [  0   6   6   9  (1)  1 ]\n         {-                                    - Move left;      TAPE = [  0   6   6   9   1  (1)]\n           !                                   - Product;        TAPE = [  0   6   6   9   1  (0)]\n            -}-}-}                             - Move 3 right;   TAPE = [  0   6  (6)  9   1   0 ]\n                  !                            - Product;        TAPE = [  0   6 (54)  9   1   0 ]\n                   {-{-{-                      - Move 3 left;    TAPE = [  0   6  54   9   1  (0)]\n                         ssssssssssss          - Add 12;         TAPE = [  0   6  54   9   1 (12)]\n                                     -}        - Move right;     TAPE = [  0   6  54   9  (1) 12 ]\n                                       !       - Product;        TAPE = [  0   6  54   9 (12) 12 ]\n                                        -}     - Move right;     TAPE = [  0   6  54  (9) 12  12 ]\n                                          #    - Set to 0;       TAPE = [  0   6  54  (0) 12  12 ]\n                                           {-  - Move left;      TAPE = [  0   6  54   0 (12) 12 ]\n?                                              - While tape head...\n -}                                            -   Move right;   TAPE = [  0   6  54  (0) 12  12 ]\n   s                                           -   Increment;    TAPE = [  0   6  54  (1) 12  12 ]\n    {-                                         -   Move left;    TAPE = [  0   6  54   1 (12) 12 ]\n      e#se#                                    -   Decrement;    TAPE = [  0   6  54   1 (11) 12 ]\n                                               - Copies value;   TAPE = [  0   6  54  12  (0) 12 ]\n-}                                             - Move right;     TAPE = [  0   6  54 (12)  0  12 ]\n  e#-}//                                       - Subtract;       TAPE = [  0   6 (42) 12   0  12 ]\n        */                                     - Output 42\n</code></pre>\n"},{"answer_id":151759,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/151759#151759","body":"<h1><a href=\"https://github.com/mudkip201/pyt\" rel=\"nofollow noreferrer\">Pyt</a>, <s>13</s> 12 bytes</h1>\n\n<pre><code>←Đ2*√½+⌊²-~⁺\n</code></pre>\n\n<p>Port of <a href=\"https://codegolf.stackexchange.com/a/117883/15214\">Arnauld's approach</a></p>\n"},{"answer_id":151764,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/151764#151764","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 31 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>r=round\nf n=r(sqrt$2*n)^2-r n+1\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/v8i2KL80L4UrTSHPtkijuLCoRMVIK08zzki3SCFP2/B/bmJmnm1BUWZeiUqagvF/AA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>This answer just uses the formula.  It is the least interesting answer here, but it also happens to be the golfiest.</p>\n\n<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>38</s> <s>36</s> 34 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>x!y|x&lt;=y=1-x|v&lt;-y+1=v+(x-y)!v\n(!0)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/v0KxsqbCxrbS1lC3oqbMRrdS29C2TFujQrdSU7GMK9FWQ9FA839uYmaebUFRZl6JSm5igUJitKGenqGBQex/AA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p><code>(!0)</code> is the point free function we are concerned with.</p>\n\n<h2>Explanation</h2>\n\n<p>Let me start out by saying I'm very happy with this answer.</p>\n\n<p>The basic idea here is that if we remove the largest triangular number smaller than our input we can reverse it and add the triangular number back.  So we define an operator <code>!</code>, <code>!</code> takes our regular input, <code>x</code>, but it also takes an extra number <code>y</code>.  <code>y</code> keeps track of the size of the growing triangular number.  If <code>x&gt;y</code> we want to recurse, we decrease <code>x</code> by <code>y</code> and increase <code>y</code> by one.  So we calculate <code>(x-y)!(y+1)</code> and add <code>y+1</code> to it.  If <code>x&lt;=y</code> we have reached our base case, to reverse <code>x</code>'s placement in the row of the triangle we return <code>1-x</code>.</p>\n\n<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 54 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f x|u&lt;-div(x^2-x)2=[u+x,u+x-1..u+1]\n(!!)$0:(&gt;&gt;=)[1..]f\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P02hoqbURjcls0yjIs5It0LTyDa6VLtCB4h1DfX0SrUNY7kSbTUUFTVVDKw07OxsNaOBwrFp/3MTM/NsC4oy80pUchMLFBJBwoYGBrH/AQ\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p><code>(!!)$0:(&gt;&gt;=)[1..]f</code> is a point-free function</p>\n\n<h2>Explanation</h2>\n\n<p>The first thing we are concerned with is <code>f</code>, <code>f</code> is a function that takes <code>x</code> and returns the <code>x</code>th row of th triangle in reverse.  It does this by first calculating the <code>x-1</code>nd triangular number and assigning it to <code>u</code>. <code>u&lt;-div(x^2-x)2</code>.  We then return the list <code>[u+x,u+x-1..u+1]</code>. <code>u+x</code> is the <code>x</code>th triangular number and the first number on the row, <code>u+x-1</code> is one less than that and the second number on the row <code>u+1</code> is one more than the last triangular number and thus the last number on the row.</p>\n\n<p>Once we have <code>f</code> we form a list <code>(&gt;&gt;=)[1..]f</code>, which is a flattening of the triangle.  We add zero to the front with <code>0:</code> so that our answers will not be offset by one, and supply it to our indexing function <code>(!!)</code>.</p>\n\n<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 56 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f 0=[0]\nf x|u&lt;-f(x-1)!!0=[u+x,u+x-1..u+1]\n(!!)$[0..]&gt;&gt;=f\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P03BwDbaIJYrTaGiptRGN02jQtdQU1ERKFiqXaEDxLqGenql2oaxXIm2GoqKmirRBnp6sXZ2tmn/cxMz82wLijLzSlRyEwsUEqOBKg0NDGL/AwA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>This one is 2 bytes longer but a bit more elegant in my opinion.</p>\n"},{"answer_id":108715,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108715#108715","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 33 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>(%)=scanl1\nf s=s==max%s||s==min%s\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/X0NV07Y4OTEvx5ArTaHYttjWNjexQrW4pgbEysxTLf6fYxut5Ojk7OLqpqSjFBUZASTz8oFESVFqKpAqBGKQtDOQrkwtBpIpqakpSrFcuYmZeQq2CrmJBb4KBUWZeSUKKiCOQppCzn8A\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n\n\n<p><em>Thanks to Ørjan Johansen for 1 byte with aliasing <code>scanl1</code> infix.</em> </p>\n\n<p>Haskell is an interesting language to golf sorting-based challenges because it does not have a built-in sort, barring a lengthy <code>import Data.List</code>. This encourages finding a way to do the task by hand without explicitly sorting.</p>\n\n<p>The code uses <code>scanl1</code>, which folds an operation over the list from left to right, keeping track of the intermediate results. So, <code>scanl1 max</code> has the effect of listing the cumulative maxima of the list, i.e. the maxima of progressively longer prefixes. For example, <code>scanl1 max [3,1,2,5,4] == [3,3,3,5,5]</code>.</p>\n\n<p>The same with <code>min</code> checks whether the list is decreasing. The code checks the two cases and combines them with <code>||</code>.</p>\n\n<p>Compare to other expressions:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(%)=scanl1;f s=s==max%s||s==min%s\n\nf s=or[s==scanl1 q s|q&lt;-[min,max]]\nf s=s==scanl1 max s||s==scanl1 min s\nf s=any(\\q-&gt;scanl1 q s==s)[min,max]\nf s=any((==s).(`scanl1`s))[min,max]\nf s=elem s$(`scanl1`s)&lt;$&gt;[min,max]\n</code></pre>\n"},{"answer_id":151767,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/151767#151767","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, 78 bytes</h1>\n\n<pre><code>(d _(q((R N T)(i(l T N)(_(a R 1)N(a T R))(a 2(a T(s T(a N R\n(d f(q((N)(_ 2 N 1\n</code></pre>\n\n<p>Defines a function <code>f</code> that performs the mapping. <a href=\"https://tio.run/##FYs7CsAgEET7nGLK2dJArmEh9rIhBAQTzafJ6c1aDG8Y3rz5/Ep@Wu/ckHiRAR5RmFkQ4YWJigAn3hgRRIzz6HwsanaY7LuP79Ax2@Q6S9UNJa@33p9MPLRhB91b4RaR/gM\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n\n<h3>Ungolfed</h3>\n\n<p>We find the smallest triangular number that is greater than or equal to the input number, as well as which row of the triangle our number is in. From these, we can calculate the flipped version of the number.</p>\n\n<ul>\n<li>If the current triangular number is less than N, recurse to the next row of the triangle. (We treat the top row as row 2 to make the math simpler.)</li>\n<li>Otherwise, the flipped version of N is (T-N)+(T-R)+2.</li>\n</ul>\n\n<p>The main function <code>flip</code> simply calls the helper function <code>_flip</code> starting from the top row.</p>\n\n<pre><code>(load library)\n\n(def _flip\n (lambda (Num Row Triangular)\n  (if (less? Triangular Num)\n   (_flip Num (inc Row) (+ Triangular Row))\n   (+ 2\n    (- Triangular Num)\n    (- Triangular Row))))))\n\n(def flip\n (lambda (Num) (_flip Num 2 1)))\n</code></pre>\n"},{"answer_id":151763,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/151763#151763","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 6 bytes</h1>\n\n<pre><code>!ṁ↔´CN\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv7/X/HhzsZHbVMObXH2@///v6GBgQEA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>!ṁ↔´CN  -- implicit input N, for example: 4\n   ´ N  -- duplicate the natural numbers:\n           [1,2,3,…] [1,2,3,…]\n    C   -- cut the second argument into sizes of the first:\n           [[1],[2,3],[4,5,6],[7,8,9,10],…]\n ṁ↔     -- map reverse and flatten:\n           [1,3,2,6,5,4,10,9,8,7,15,…\n!       -- index into that list:\n           6\n</code></pre>\n"},{"answer_id":150939,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150939#150939","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 61 bytes</h1>\n\n<p><em>-2 bytes for removing the closing tag</em></p>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?php $z=fgets(STDIN);for($y=1;$y&lt;$z;$y++){$x+=$z%$y;}echo$x;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@P/fxr4go0BBpco2LT21pFgjOMTF00/TOi2/SEOl0tbQWqXSRqUKSGpra1arVGjbqlSpqlRa16YmZ@SrVFj//29oAgA\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150569,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150569#150569","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>28</s> <s>27</s> 23 bytes</h1>\n\n<p>-4 bytes thanks to @daniero.</p>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{(1..n).sum{|i|n%i}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyflmf7X9cur1rDUE8vT1OvuDS3uiazJk81s7b2f4FCWl60oUnsfwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n\n<h2>Ruby, 28 bytes</h2>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>f=-&gt;n{n&gt;($.+=1)?n%$.+f[n]:0}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvz/P81W1y6vOs9OQ0VP29ZQ0z5PFchIi86LtTKo/V@gkBZtaBL7HwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150648,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150648#150648","body":"<h1><a href=\"http://www.snobol4.org/csnobol4/\" rel=\"nofollow noreferrer\">SNOBOL4 (CSNOBOL4)</a>, <s>69</s> 68 bytes</h1>\n\n<pre><code>&#9;N =INPUT\nA&#9;I =I + 1\n&#9;S =LT(I,N) S + REMDR(N,I)&#9;:S(A)\n&#9;OUTPUT =S\nEND\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87LT8rPMfn/n9NPwdbTLyA0hMuR0xPIVNBWMOTiDFaw9QnR8NTx01QIBooEufq6BGn46XhqcloFazhqcnH6h4YA9SjYBnO5@rn8/28GAA\" rel=\"nofollow noreferrer\" title=\"SNOBOL4 (CSNOBOL4) – Try It Online\">Try it online!</a></p>\n\n<pre><code>&#9;N =INPUT&#9;&#9;&#9;&#9;;* read in input\nA&#9;I =I + 1&#9;&#9;&#9;&#9;;* I is initialized to 0 so this increments it to 1\n&#9;S =LT(I,N) S + REMDR(N,I)&#9; :S(A)&#9;;* similarly with S, add to the remainder\n&#9;LT(I,N) :S(A)&#9;&#9;&#9;&#9;;* on success (I &lt; N), goto A\n&#9;OUTPUT =S&#9;&#9;&#9;&#9;;* output the sum\nEND&#9;&#9;&#9;&#9;&#9;&#9;;* terminate the program\n</code></pre>\n"},{"answer_id":151172,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151172#151172","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 44 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sum(map(lambda x:x%(n-x),range(n)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##LcgxCoAwDAXQ3VP8RUiggjoWvIlLRauCjaVWiKevg77xxSdvp/TFYxjL4cI0O4i97kDBRfpDrdYkjbJJTtaFhJmLPxMUu@C7rm3ZVgBi2iVDDTwplxc\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>EDIT: Changed range(0,n) to range(n)</p>\n"},{"answer_id":150638,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150638#150638","body":"<h1>T-SQL, <s>80</s> 79 bytes</h1>\n\n<p><em>-1 byte thanks to @MickyT</em></p>\n\n<pre><code>WITH c AS(SELECT @ i UNION ALL SELECT i-1FROM c WHERE i&gt;1)SELECT SUM(@%i)FROM c\n</code></pre>\n\n<p>Receives input from an integer parameter named <code>@</code>, something like this:</p>\n\n<pre><code>DECLARE @ int = 14;\n</code></pre>\n\n<p>Uses a Common Table Expression to generate numbers from <code>1</code> to <code>n</code>. Then uses that cte to sum up the moduluses. </p>\n\n<p>Note: a cte needs a <code>;</code> between the previous statement and the cte. Most code I've seen puts the <code>;</code> right before the declaration, but in this case I can save a byte by having it in the input statement (since technically my code by itself is the only statement).</p>\n\n<p><a href=\"https://data.stackexchange.com/codegolf/query/edit/770634\" rel=\"nofollow noreferrer\">Try it (SEDE)</a></p>\n\n<hr>\n\n<p>The less \"SQL-y\" way is only 76 bytes. This time the input variable is <code>@i</code> instead of <code>@</code> (saves one byte). This one just does a <code>while</code> loop.</p>\n\n<pre><code>DECLARE @ int=2,@o int=0WHILE @&lt;@i BEGIN SELECT @o+=@i%@,@+=1 END PRINT @o\n</code></pre>\n"},{"answer_id":151084,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151084#151084","body":"<h1><a href=\"https://github.com/FTcode/Pushy\" rel=\"nofollow noreferrer\">Pushy</a>, 13 bytes</h1>\n\n<pre><code>&amp;1{:2d%vh;OS#\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/##Kygtzqj8/1/NsNrKKEW1LMPaP1j5////hiYA\" rel=\"nofollow noreferrer\" title=\"Pushy – Try It Online\">Try it online!</a></strong></p>\n\n<pre><code>&amp;1{                 \\ Make the stack [n, 1, n]\n   :     ;          \\ n times do (this consumes last n):\n    2d              \\    Copy the last two items\n      %v            \\    Get remainder and put result on stack\n        h           \\    Increment divisor\n          OS        \\ Sum the second stack\n            #       \\ Output the result\n</code></pre>\n"},{"answer_id":151076,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151076#151076","body":"<h1>Befunge-93, 36 bytes</h1>\n<pre><code>p&amp;:10p1&gt;-#1:_$v_g.@\n :p00+g00%\\g01&lt;^\n</code></pre>\n<p><a href=\"https://tio.run/##S0pNK81LT/3/v0DNytCgwNBOV9nQKl6lLD5dz4FLwarAwEA73cBANSbdwNAm7v9/QxMA\" rel=\"nofollow noreferrer\">Try It Online</a></p>\n"},{"answer_id":151060,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/151060#151060","body":"<h1>Common Lisp, <s>50</s> 47 bytes</h1>\n\n<pre><code>(lambda(n)(loop as i from 1 to n sum(mod n i)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcZLCsAgDAXAq7xlshR6oVQpBPIRbc@fuhmmm@5ZNJdGBxWZ@D2EgskyJ2RD8ax0NLyJwP6cPMeZMnO16/AD\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":151043,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/151043#151043","body":"<h1>q/kdb+, 20 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>{x in(asc;desc)@\\:x}\n</code></pre>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>q){x in(asc;desc)@\\:x}\"tree\"\n1b\nq){x in(asc;desc)@\\:x}\"yes\"\n0b\nq){x in(asc;desc)@\\:x}\"ABCDEF\"\n1b\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<pre><code>{x in(asc;desc)@\\:x} / the solution\n{                  } / anonymous lambda function\n                   x / implicit input\n               @\\:   / apply (@) each left (\\:) to x\n     (asc;desc)      / list of two functions, sort ascending and descending respectively\n x in                / is x in either sorted/unsorted list?\n</code></pre>\n\n<p><strong>Notes:</strong></p>\n\n<p>Closest equivalent in K4 would be <code>{x in x@(&gt;:;&lt;:)@\\:x}</code> for 20 bytes too...</p>\n"},{"answer_id":150956,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/150956#150956","body":"<h1>APL NARS <s>30</s> 19 chars</h1>\n<pre><code>{(⊂⍵[⍋⍵])∊(⊂⍵),⊂⌽⍵}\n</code></pre>\n<p><s>{(⍵[⍋⍵]≡⍵[⍳⍴⍵])∨⍵[⍋⍵]≡⍵[⌽⍳⍴⍵]}</s></p>\n<p>Copy the algo of 'Emigna' in APL...Test</p>\n<pre><code>  f¨'ABCDEF' 'ZYX' 'tree' 'q'\n1 1 1 1 \n  f¨'ABCDC' 'yes' 'deed' \n0 0 0 \n</code></pre>\n"},{"answer_id":112434,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112434#112434","body":"<h1><a href=\"https://developer.apple.com/swift/\" rel=\"nofollow noreferrer\">Swift 4</a>, 70 bytes</h1>\n\n\n\n<pre class=\"lang-swift prettyprint-override\"><code>var o=Array(readLine()!);var g=o.sorted();print(o==g||o==g.reversed())\n</code></pre>\n\n<p><a href=\"https://tio.run/##Ky7PTCsx@f@/LLFIId/WsagosVKjKDUxxSczL1VDU1HTGiSRbpuvV5xfVJKaoqFpXVCUmVeikW9rm15TAyL1ilLLUouKQXKa//87Ojm7uLoBAA\" rel=\"nofollow noreferrer\" title=\"Swift 4 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150778,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150778#150778","body":"<h1><a href=\"https://clean.cs.ru.nl\" rel=\"nofollow noreferrer\">Clean</a>, 39 bytes</h1>\n\n<p>Literally just <a href=\"https://codegolf.stackexchange.com/a/150580/18730\">Bruce Forte's Haskell answer</a>, but in Clean.</p>\n\n<pre><code>import StdEnv\n@x=sum(map((rem)x)[1..x])\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85JTcz7n5ufUpqTqpCbmJn3PzO3IL@oRCG4JMU1r4zLocK2uDRXIzexQEOjKDVXs0Iz2lBPryJW839wSSJQma2Cg4Khyf9/yWk5ienF/3U9ff67VOYl5mYmFwMA\" rel=\"nofollow noreferrer\" title=\"Clean – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150690,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150690#150690","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, <s>70</s> 62 bytes</h1>\n\n<pre><code>(([{}])&lt;&gt;)({&lt;&lt;&gt;(({})&lt;&lt;&gt;{(({})){({}())&lt;&gt;}{}}&gt;)&lt;&gt;&gt;{}[({}())]}{})\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X0Mjuro2VtPGTlOj2sbGTkOjulYTSFeDGZrVQFJDEyhbW11bawek7aproyFisUAhzf//DU0A\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>It turns out that the straightforward approach is better.  Also, keeping a copy of n on the third stack instead of the first stack saves bytes.</p>\n\n<pre><code>(([{}])&lt;&gt;)                                                      Initialize both stacks with -n\n           {                                              }{}   For all k from n down to 1:\n             &lt;&gt;(({})&lt;                      &gt;)                   Store -n on third stack\n                     &lt;&gt;{(({})){({}())&lt;&gt;}{}}                     Main part of standard modulus program\n                                                                (except that the arguments are negative)\n                                             &lt;&gt;\n            &lt;                                  &gt;                Ignore evaluation of -n\n                                                {}[({}())]      Recover n mod k, and decrement k for the next iteration\n          (                                                  )  Sum over all iterations and push\n</code></pre>\n"},{"answer_id":150768,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150768#150768","body":"<h1>J, 14 Bytes</h1>\n\n<pre><code>M=:+/@:|~}.@i.\n</code></pre>\n\n<h3>How it works:</h3>\n\n<pre><code>M=:                 | Define the verb M\n            i.      | Get integers in the range [0, input)\n         }.@        | Remove the leading 0\n       |~           | Take the original input mod each of these integers, making a new array\n   +/@:             | Sum this array\n</code></pre>\n\n<h3>Example:</h3>\n\n<pre><code>    M 14\n31\n    M\"0 &gt;:i.20    NB. Apply M to each of the integers from 1-20 inclusive\n0 0 1 1 4 3 8 8 12 13 22 17 28 31 36 36 51 47 64 61\n</code></pre>\n"},{"answer_id":150596,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150596#150596","body":"<h2>Windows Batch (CMD), 63 bytes</h2>\n\n<pre><code>@set s=0\n@for /l %%i in (1,1,%1)do @set/as+=%1%%%%i\n@echo %s%\n</code></pre>\n\n<p>Previous 64-byte version:</p>\n\n<pre><code>@set/ai=%2+1,s=%3+%1%%i\n@if %i% neq %1 %0 %1 %i% %s%\n@echo %s%\n</code></pre>\n"},{"answer_id":150760,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150760#150760","body":"<p><strong>Labyrinth - 45 Characters</strong></p>\n\n<pre><code>?:}}\"\"):={%={{+\n     ;        \"\n@!{{{-{=:}}}::}\n</code></pre>\n\n<p>Basically, it sets up by taking the input of the number that we are modulo summing. It then starts at one, takes the modulo of that number, and checks if it has reached the target number yet. If it hasn't, take the modulo again and add it to the previous one.</p>\n\n<p>(I left out a lot of stack manipulations if you hadn't guessed, and yes, it actually does output the sum of the modulus up to that number)</p>\n"},{"answer_id":150641,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150641#150641","body":"<h1><a href=\"http://perl6.org/\" rel=\"nofollow noreferrer\">Perl 6</a>, <s>21</s> 16 bytes</h1>\n\n<p><s>{sum $_ «%«(1..$_)}</s></p>\n\n<pre><code>{sum $_ X%1..$_}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/urg0V0ElXiFC1VBPTyW@9r@1QnFipUKahqGJpvV/AA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n\n<p>-5 bytes (!) thanks to Brad Gilbert.</p>\n"},{"answer_id":150694,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150694#150694","body":"<h1><a href=\"https://github.com/TehFlaminTaco/Funky\" rel=\"noreferrer\">Funky</a>, 25 bytes</h1>\n<pre><code>n=&gt;fors=~-i=1i&lt;n)s+=n%i++\n</code></pre>\n<p>Just the Naïve answer, seems to work.</p>\n<p><a href=\"https://tio.run/##SyvNy678n2b7P8/WLi2/qNi2TjfT1jDTJk@zWNs2TzVTW/t/QVFmXolGmoahiabmfwA\" rel=\"noreferrer\" title=\"Funky – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://www.desmos.com/calculator\" rel=\"noreferrer\">Desmos</a>, 25 bytes.</h1>\n<pre><code>f(x)=\\sum_{n=1}^xmod(x,n)\n</code></pre>\n<p>Paste into Desmos, then run it by calling <code>f</code>.</p>\n<p>When pasted into Desmos, the latex looks like this</p>\n<p><img src=\"https://a-ta.co/mathjax/%24!ZlxsZWZ0KHhccmlnaHQpPVxzdW1eeF97bj0xfVx0ZXh0e21vZH1cbGVmdCh4LG5ccmlnaHQp.svg\" alt=\"\" /></p>\n<p>The graph however looks like</p>\n<p><img src=\"https://i.gyazo.com/b46a90eaa3fddd3269387480cce10856.png\" alt=\"\" /></p>\n<p>Although it looks random and all over the place, that's the result of only supporting integers.</p>\n<h1><a href=\"https://github.com/TehFlaminTaco/RProgN-2\" rel=\"noreferrer\">RProgN 2</a>, 9 bytes</h1>\n<pre><code>x=x³x\\%S+\n</code></pre>\n<h2>Explained</h2>\n<pre><code>x=x³x\\%S+\nx=          # Store the input in &quot;x&quot;\n  x         # Push the input to the stack.\n   ³x\\%     # Define a function which gets n%x\n       S    # Create a stack from &quot;x&quot; with the previous function. Thus this gets the range from (1,x), and runs (i%x) on each element.\n        +   # Get the sum of this stack.\n</code></pre>\n<p><a href=\"https://tio.run/##Kyooyk/P0zX6/7/CtuLQ5ooY1WDt////G5oAAA\" rel=\"noreferrer\" title=\"RProgN 2 – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/TehFlaminTaco/ReRegex\" rel=\"noreferrer\">ReRegex</a>, 71 bytes</h1>\n<pre><code>#import math\n(_*)_a$/d&lt;$1_&gt;b$1a/(\\d+)b/((?#input)%$1)+/\\+a//u&lt;#input\n&gt;a\n</code></pre>\n<p><a href=\"https://tio.run/##K0otSk1Prfj/XzkztyC/qEQhN7Ekg0sjXkszPlFFP8VGxTDeLknFMFFfIyZFWzNJX0PDXjkzr6C0RFNVxVBTWz9GO1Ffv9QGIsZll/j/v6EJAA\" rel=\"noreferrer\" title=\"ReRegex – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/TehFlaminTaco/ARBLE\" rel=\"noreferrer\">ARBLE</a>, 19 bytes</h1>\n<pre class=\"lang-lua prettyprint-override\"><code>sum(range(1,a)|a%i)\n</code></pre>\n<p><a href=\"https://tio.run/##SyxKykn9/7@4NFejKDEvPVXDUCdRsyZRNVPz////hiYA\" rel=\"noreferrer\" title=\"ARBLE – Try It Online\">Try it online!</a></p>\n<h1><a href=\"https://github.com/TehFlaminTaco/MaybeLater\" rel=\"noreferrer\">MaybeLater</a>, 56 bytes</h1>\n<pre><code>whenf is*{n=0whenx is*{ifx&gt;0{n=n+f%x x--}elseprintn}x=f}\n</code></pre>\n<p><a href=\"https://tio.run/##y02sTErNSSxJLfr/vzwjNS9NIbNYqzrP1gDEqQBzMtMq7AyAQnnaaaoVChW6urWpOcWpBUWZeSV5tRW2abX/0xRsFTSKUhNTEjV1Df4bmgAA\" rel=\"noreferrer\" title=\"MaybeLater – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150669,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150669#150669","body":"<h2>Clojure, 38 bytes</h2>\n\n<pre><code>#(apply +(for[i(range 1 %)](mod % i)))\n</code></pre>\n\n<p>Well this is boring, I was hoping <code>#(apply +(map mod(repeat %)(range 1 %)))</code> would have been shorter as <code>mod</code> gets rarely used in <code>map</code> context.</p>\n"},{"answer_id":150659,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150659#150659","body":"<h1><a href=\"https://github.com/urielieli/py-four\" rel=\"nofollow noreferrer\">4</a>, 67 bytes</h1>\n\n<p><strong>4</strong> doesn't have any <em>modulo</em> built in.</p>\n\n<pre><code>3.79960101002029980200300023049903204040310499040989804102020195984\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYo5DoBADAP7fUVWtAg5BxAX/Juaj4WAprBHmqjy7SQPaAODkdkDR5sjSLghGtffAsxOQr8Yyp0ZVXOMRaZc4r7Kc/fRjBc\" rel=\"nofollow noreferrer\" title=\"4 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150572,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150572#150572","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, <s>6</s> 5 bytes</h1>\n\n<p><em>Saved 1 byte thanks to @Shaggy</em></p>\n\n<pre><code>Æ%XÃx\n</code></pre>\n\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.5&amp;code=xiVYw3g=&amp;input=MTQ=\" rel=\"nofollow noreferrer\">Test it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>         Implicit: U = input number\nÆ        Create the range [0, U),\n %XÃ       mapping each item X to U%X. U%0 gives NaN.\n    x    Sum, ignoring non-numbers.\n         Implicit: output result of last expression\n</code></pre>\n"},{"answer_id":150593,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150593#150593","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 9 bytes</h1>\n\n<pre><code>-~1#.i.|]\n</code></pre>\n\n<h2>How it works</h2>\n\n<pre><code>        ] - the argument \n       |  - mod   \n     i.   - list from 0 to argument - 1\n  1#.     - sum (base 1 conversion)\n-~        - subtract the argument (to get rid of the n mod 0)  \n</code></pre>\n\n<p><a href=\"https://tio.run/##y/qfbmulYKAAxP916wyV9TL1amL/a3Ip6SmopynY6qkr6CjUWimkc6UmZ@QrpCkYmsBYJob/AQ\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150642,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150642#150642","body":"<h1><a href=\"https://github.com/splcurran/Gaia\" rel=\"nofollow noreferrer\">Gaia</a>, 8 bytes</h1>\n\n<pre><code>@:…)¦%¦Σ\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0/MTPz/38HqUcMyzUPLVA8tO7f4/39DEwA\" rel=\"nofollow noreferrer\" title=\"Gaia – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150637,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150637#150637","body":"<h1>MATLAB, 19 bytes</h1>\n\n<pre><code>@(n)sum(mod(n,1:n))\n</code></pre>\n\n<p>Very straightforward, <code>mod</code> calculates <code>n%x</code> for each natural number below <code>n</code>. and <code>sum</code> just sums them all. Test:</p>\n\n<pre><code>@(n)sum(mod(n,1:n))\nans(14)\nans = \n\n    @(n)sum(mod(n,1:n))\nans =\n    31.0000e+000\n</code></pre>\n"},{"answer_id":150635,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150635#150635","body":"<h1><a href=\"https://github.com/cairdcoinheringaahing/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 14 bytes</h1>\n\n<pre><code>L,RAdx$p@BcB%s\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99HJ8gxpUKlwMEp2Um1@P///4YmAA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<h2>How it works</h2>\n\n<pre><code>L,   - Create a lambda function.\n     - Example argument:     [7]\n  R  - Range;        STACK = [[1 2 3 4 5 6 7]]\n  A  - Argument;     STACK = [[1 2 3 4 5 6 7] 7]\n  d  - Duplicate;    STACK = [[1 2 3 4 5 6 7] 7 7]\n  x  - Repeat;       STACK = [[1 2 3 4 5 6 7] 7 [7 7 7 7 7 7 7]]\n  $p - Swap and pop; STACK = [[1 2 3 4 5 6 7] [7 7 7 7 7 7 7]]\n  @  - Reverse;      STACK = [[7 7 7 7 7 7 7] [1 2 3 4 5 6 7]]\n  Bc - Zip;          STACK = [[7 1] [7 2] [7 3] [7 4] [7 5] [7 6] [7 7]]\n  B% - Modulo each;  STACK = [0, 1, 1, 3, 2, 1, 0]\n  s  - Sum;          STACK = [8]\n</code></pre>\n"},{"answer_id":150633,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150633#150633","body":"<h1>Julia 0.4, 15 bytes</h1>\n\n<pre><code>x-&gt;sum(x%[1:x])\n</code></pre>\n\n<p><a href=\"https://tio.run/##yyrNyUz8n2b7v0LXrrg0V6NCNdrQqiJW839BUWZeSU6eRpqGoYmm5n8A\" rel=\"nofollow noreferrer\" title=\"Julia 0.4 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150621,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150621#150621","body":"<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 17 bytes</h1>\n\n<pre><code>n-&gt;sum(m=1,n,n%m)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gsytRNL/ifpmCr8D9P1664NFcj19ZQJ08nTzVX839BUWZeiUaahqGJpuZ/AA\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150612,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150612#150612","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 5 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>+/⍳|⊢\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R2wRt/Ue9m2sedS0Ccg@tALKNDAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><strong>How?</strong></p>\n\n<p>Monadic train - </p>\n\n<p><code>+/</code> - sum</p>\n\n<p><code>⊢</code> - <code>n</code></p>\n\n<p><code>|</code> - vectorized modulo</p>\n\n<p><code>⍳</code> - the range of <code>n</code></p>\n"},{"answer_id":150610,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150610#150610","body":"<h1>APL+WIN, 10 bytes</h1>\n<pre><code>+/(⍳n)|n←⎕\n</code></pre>\n<p>Prompts for screen input.</p>\n"},{"answer_id":150606,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150606#150606","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Mathematica</a>, 18 bytes</h1>\n\n<pre><code>#~Mod~i~Sum~{i,#}&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b7X7nONz@lLrMuuDS3rjpTR7lW7X9AUWZeSXRatKFJbOx/AA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150605,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150605#150605","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, 45 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>n-&gt;{int m=n,s=0;for(;m--&gt;1;)s+=n%m;return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##bU49a8MwFNz9K46Awa4/SLsqNnTMEDqETqWD6o8g13oS0nPABP92V07bqR0eB3f37m6QV1kY29HQfq5KW@MYQ@DKidVYPojoD@fZdVL/K/UTNawMbaKdPkbVoBml9zhJRbhFwA/rWXKAq1EtdNCSMztFl7d3SHfx6d0KHIlfSbr5xXZOsnHoUa1U1DdFDF1R7qu96I1LhC6K@lGkPqso1sJ1PDmCF8sq7kGbZ/tRqLAXAQ542jDLfquA8@y506WZuLRhC/fJLm5R1IjbmHY5VI6@lNaO87MPwxKVpt/hS7Tdsn4B\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150603,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150603#150603","body":"<h1>Neim, 3 bytes</h1>\n\n<p><a href=\"https://tio.run/##y0vNzP3//8PcCR0f5k5tAdJr/v83NAEA\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n\n<pre><code>𝐈𝕄𝐬\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>𝐈      # Inclusive range\n 𝕄    # Modulo each element with input\n   𝐬   # Sum the list\n</code></pre>\n"},{"answer_id":150599,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150599#150599","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 23 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;n{(1..n).sum{|i|n%i}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6vWsNQTy9PU6@4NLe6JrMmTzWztvY/SMzQRFMvN7GguqaipkAhLboitvY/AA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150598,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150598#150598","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a>, 7 bytes</h1>\n\n<pre><code>$+a%\\,a\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8gs@P9fRTtRNUYn8f///4YmAA\" rel=\"nofollow noreferrer\" title=\"Pip – Try It Online\">Try it online!</a></p>\n\n<pre><code>         a is 1st cmdline arg\n    \\,a  Inclusive range from 1 through a\n  a%     Take a mod each of those numbers (a%a is 0, so doesn't affect the sum)\n$+       Fold on +\n         Output (implicit)\n</code></pre>\n"},{"answer_id":150597,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150597#150597","body":"<h1>R, 20 bytes</h1>\n<pre><code>sum((n=scan())%%1:n)\n</code></pre>\n<p><a href=\"https://tio.run/##K/r/v7g0V0Mjz7Y4OTFPQ1NTVdXQKk/zv6HJ//8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150592,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150592#150592","body":"<h1><a href=\"http://www.mlton.org/\" rel=\"nofollow noreferrer\">Standard ML (MLton)</a>, <s>53</s> 51 bytes</h1>\n\n<pre class=\"lang-ml prettyprint-override\"><code>fn&amp; =&gt;let fun f 1a=a|f%a=f(% -1)(a+ &amp;mod%)in f&amp;0end\n</code></pre>\n<p><a href=\"https://tio.run/##TYsxC8IwFIT3/oqjkJIglUbdJN2dXUUJNE8K6YuYp5P/vcYu9qbv7vjyFNspSuL57SPIzcQNXB@DgF4MgvXOf0h5R1qhtUb7DZopDcqM5W66wMOiSsgCh8dzZEGCJkZ2fb7WF65NGU4sW0lnKf@9VKp@0q0YukLJotvjn3cr3q/YHtal68z8BQ\" rel=\"nofollow noreferrer\" title=\"Standard ML (MLton) – Try It Online\">Try it online!</a></p>\n<p><strong>Ungolfed:</strong></p>\n<pre class=\"lang-ml prettyprint-override\"><code>fn n =&gt;\n   let fun f 1 a = a\n         | f x a = f (x-1) (a + n mod x)\n   in  \n       f n 0\n   end\n</code></pre>\n<hr />\n<h3>Previous 53 byte version:</h3>\n\n<pre class=\"lang-ml prettyprint-override\"><code>fn n=&gt;foldl op+0(List.tabulate(n-1,fn i=&gt;n mod(i+1)))\n</code></pre>\n<p><a href=\"https://tio.run/##TYyxDgIhDIb3e4rmJsh5BtTNwG7i5mo0mDsMCZSLVF8f6y3S6fvb/2tJcUyRMtaPi@BN9QhorM9xipCXQYlzKLQl93hHR7PAUW@4EoxFSHkSYdBSylWmuRAYWF4BCTIIrhVjy62/Yi95cUL@ky/E9ydH3/2kOxuiA55V18c/7xreN6wPbVBK1i8\" rel=\"nofollow noreferrer\" title=\"Standard ML (MLton) – Try It Online\">Try it online!</a></p>\n<p><strong>Explanation:</strong></p>\n<p><code>List.tabulate</code> takes an integer <code>x</code> and a function <code>f</code> and generates the list <code>[f 0, f 1, ..., f(x-1)]</code>. Given some number <code>n</code>, we call <code>List.tabulate</code> with <code>n-1</code> and the function <code>fn i=&gt;n mod(i+1)</code> to avoid dividing by zero. The resulting list is summed with <code>foldl op+0</code>.</p>\n"},{"answer_id":150556,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/150556#150556","body":"<h1><a href=\"http://www.mlton.org/\" rel=\"nofollow noreferrer\">Standard ML (MLton)</a>, <s>99</s> 93 bytes</h1>\n\n\n\n<pre class=\"lang-ml prettyprint-override\"><code>open Char\nfun g(x::y::r)c=c(x,y)andalso g(y::r)c|g&amp;c=1=1\n(fn$ =&gt;g$op&lt;=orelse g$op&gt;=)o explode\n</code></pre>\n\n<p><a href=\"https://tio.run/##XY3BasMwDIbveQphSomhHeSaTYEmXV@gl62MjRAracGxUtsdCezdU6e7zNPt@/T/kuv1tteezTzzQAaqc22T9magS8c8n/LcygabdNxMsjaq1o7D5lf/dOsGM8yS71pDi2lrVoBFt@LhBdmSdgQLFCgZaBw0K5qXqCfnAWGwF@OBIfTAYeE@xYcRMoiSWT95PvoQ6AK3jwdfoZImEObRF7uy2r8exPMfdXp/i9hwhN4SReIa6N/FKgpM5CJWRErI@Q4\" rel=\"nofollow noreferrer\" title=\"Standard ML (MLton) – Try It Online\">Try it online!</a> The last line is an anonymous function. Example usage: <code>((fn$ =&gt;g$op&lt;=orelse g$op&gt;=)o explode) \"somestring\"</code>. Returns <code>true</code> or <code>false</code>.</p>\n\n<p><strong>Ungolfed code:</strong></p>\n\n<pre class=\"lang-ml prettyprint-override\"><code>open Char\nfun g (x::y::r) c = c(x,y) andalso g (y::r) c\n  | g     _     c = true\nfun h s = g s op&lt;= orelse g s op&gt;=\nval f = h o explode\n</code></pre>\n"},{"answer_id":150590,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150590#150590","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, 4 bytes</h1>\n\n<pre><code>t:\\s\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/v8Qqpvj/f0MTAA\" rel=\"noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>t      % Duplicate input. Stack: {n, n}\n :     % Range 1...n. Stack: {n, [1...n]}\n  \\    % Modulo. Stack: {[0,0,2,2,4,...]}\n   s   % Sum. Implicitly display result.\n</code></pre>\n"},{"answer_id":150589,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150589#150589","body":"<h1><a href=\"https://github.com/nickbclifford/Ohm\" rel=\"nofollow noreferrer\">Ohm v2</a>, 4 bytes</h1>\n\n<pre><code>D@%Σ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8/INfr/38VB9dzi//8NTQA\" rel=\"nofollow noreferrer\" title=\"Ohm v2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150586,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150586#150586","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 9 bytes</h1>\n\n<pre><code>ＩΣＥＮ﹪Ｉθ⊕ι\n</code></pre>\n\n<p><a href=\"https://tio.run/##S85ILErOT8z5/z@gKDOvRMM5sbhEI7g0V8M3sUDDM6@gtMSvNDcptUhDU8c3P6U0Jx@iolBTR1tbI1MTDKz//zc0@a9blgMA\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a></p>\n\n<p>Link is to the verbose version of the code:</p>\n\n<pre><code>Print(Cast(Sum(Map(InputNumber(),Modulo(Cast(q),++(i))))));\n</code></pre>\n"},{"answer_id":108700,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108700#108700","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl</a>, 35 bytes</h1>\n\n<p><i>Saved 4 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/72767/xcali\">@Xcali</a> directly, and 4 more indirectly.</i></p>\n\n<p>31 bytes of code + <code>-pF</code> flag.</p>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>@b=reverse@a=sort@F;$_=/@a|@b/x\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/98hybYotSy1qDjVIdG2OL@oxMHNWiXeVt8hscYhSb/iv7WCSryCtq2CwX9HJ2cXVzeuqMgIrrx8rpKi1FSuQi6QoDNXZWoxV0pqasq//IKSzPy84v@6vqZ6BoYG/3VzCtwA\" rel=\"nofollow noreferrer\" title=\"Perl – TIO Nexus\">Try it online!</a></p>\n\n<p>The code sorts the input, and checks if the inputs matches itself sorted (or in reverse order).</p>\n"},{"answer_id":150584,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150584#150584","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 3 bytes</h1>\n\n<pre><code>L%O\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f/fR9X//39DEwA\" rel=\"noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150578,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150578#150578","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 5 bytes</h1>\n\n<pre><code>s%LQS\n</code></pre>\n\n<hr>\n\n<pre><code>s%LQS - Full program, inputs N from stdin and prints sum to stdout\ns     - output the sum of\n %LQ  - the function (elem % N) mapped over \n    S - the inclusive range from 1..N\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsyfj/v1jVJzD4/39DEwA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150580,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150580#150580","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 22 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f x=sum$mod x&lt;$&gt;[1..x]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P02hwra4NFclNz9FocJGxS7aUE@vIvZ/bmJmnoKtQnpqiXN@XklqXkmxgp2drUJBUWZeiYKeQhoQF6Umpvw3NAEA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>Yes.</p>\n"},{"answer_id":150579,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150579#150579","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 23 + 1 (<code>-p</code>) = 24 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>//;map$\\+=$'%$_,1..$_}{\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/19f3zo3sUAlRttWRV1VJV7HUE9PJb62@v9/Q5N/@QUlmfl5xf91fU31DAwN/usWAAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150575,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150575#150575","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 6 bytes</h1>\n\n<pre><code>ÎGIN%+\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f//cJ@7p5@q9v//ZkYA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>My first 05AB1E program ;)</p>\n\n<p><s>Btw I got two 39s, 1 for JS6 and 1 for python, but I was too late</s></p>\n\n<p>Explanation:</p>\n\n<pre><code>ÎGIN%+\nÎ                      # Push 0, then input, stack = [(accumulator = 0), I]\n G                     # For N in range(1, I), stack = [(accumulator)]\n  IN                   # Push input, then N, stack = [(accumulator), I, N]\n    %                  # Calculate I % N, stack = [(accumulator), I % N]\n     +                 # Add the result of modulus to accumulator\n</code></pre>\n"},{"answer_id":150571,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150571#150571","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 5 bytes</h1>\n\n<pre><code>ΣṠM%ḣ\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv7//9zihzsX@Ko@3LH4////hiYA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>ΣṠM%ḣ  -- implicit input x, example: 5\n ṠM%   -- map (mod x) over the following..\n    ḣ  -- ..the range [1..x]: [5%1,5%2,5%3,5%4,5%5] == [0,1,2,1,0]\nΣ      -- sum: 0+1+2+1+0 == 4\n</code></pre>\n"},{"answer_id":150567,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150567#150567","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:sum(a%k for k in range(1,a))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHRqrg0VyNRNVshLb9IIVshM0@hKDEvPVXDUCdRU/M/SDARSdDAQNOKSwEICooy80o00pSqE2utFKrTNBI1a5U0/wMA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":150566,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150566#150566","body":"<h1>JavaScript (ES6), 26 bytes</h1>\n\n<pre class=\"lang-js prettyprint-override\"><code>f=(n,k=n)=&gt;n&amp;&amp;k%n+f(n-1,k)\n</code></pre>\n\n<h3>Demo</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=(n,k=n)=&gt;n&amp;&amp;k%n+f(n-1,k)\r\n\r\nfor(n = 1; n &lt; 30; n++) {\r\n  console.log('a(' + n + ') = ' + f(n))\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":150565,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150565#150565","body":"<h1>C, 43 bytes</h1>\n\n<pre><code>s,m;f(n){for(s=m=0;m++&lt;n;s+=n%m);return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYsxCsMwDAB3v0IEDBJ2IelUqvgnXYpTFw1Wi51OIW93ndx4x8XLO8bWqs@cUGlLn4I15DBydm5Wri6ozcTltf6KQuW9ia6Qn6JIZjPQ6Q/gYSVMDDKH6XpjcE7ozAff0nvCwS53sMtDBw/iIaEQsdnbHw\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<h1>C (gcc), 38 bytes</h1>\n\n<pre><code>s,m;f(n){for(s=m=0;m++&lt;n;s+=n%m);s=s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYoxCsMwDAB3v0IEDBJ2IelUqugnXYqDgwarJe4W8nbH6Y13l25rSq3VWDij0Z4/G1YpMnIJYTauQcwX4iqVj6b2g/JWQ3K7g07fAS@rMjHoLNP9wRCC0j9ffLfeMw5@eYJfXjZE0AgZlYjd0U4\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":150564,"question_id":150563,"link":"https://codegolf.stackexchange.com/questions/150563/modulus-summation/150564#150564","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 3 bytes</h1>\n\n<pre><code>%RS\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>%RS\n R   Range(input)  [1...n]\n%    Input (implicit) modulo [1...n]-&gt;[n%1,n%2...n%n]\n  S  Sum of the above\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/181KPj///@GJgA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124899,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124899#124899","body":"<h1>TI-Basic, <s>16</s> <s>15</s> 13 bytes</h1>\n<pre><code>prod(Ans)-12prod(Ans={6,9\n</code></pre>\n<p>Value is returned as from any function.</p>\n"},{"answer_id":108723,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108723#108723","body":"\n<h1>R, 48 <s>50</s> <s>61</s> bytes</h1>\n<p>As an unnamed function</p>\n<pre class=\"lang-R prettyprint-override\"><code>function(s)sd(range(sign(diff(utf8ToInt(s)))))&lt;1\n</code></pre>\n<p>Thanks to @guiseppe for a few extra bytes.</p>\n<p><code>charToRaw</code> takes <code>s</code> and splits into a raw vector. This is converted to integers and a <code>diff</code> applied.  <code>sign</code> makes the diffs a single unit.  <code>range</code> reduces the vector to it's minimum and maximum.  Then if the standard deviation <code>sd</code> is less than 1 it is TRUE</p>\n<p><a href=\"https://tio.run/##Pck9DoAgDIbh3YtQRjcHPYC7F@CnJSwloeX8FUPiNz353m50GQ1OWhuDeMnQAxcEqYUhVyIYSsfTbtaZv527EThFUee3qRDTQophISP2pY6Y/2/KXg\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124789,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124789#124789","body":"<h1>x86_64 machine language for Linux, <s>20 19</s> 18 bytes</h1>\n\n<pre><code>00:       83 fe 09                cmp    $0x9,%esi\n03:       75 09                   jne    0xe\n05:       31 c0                   xor    %eax,%eax\n07:       83 ff 06                cmp    $0x6,%edi\n0a:       b0 2a                   mov    $0x2a,%al\n0c:       74 03                   je     0x11\n0e:       96                      xchg   %esi,%eax\n0f:       f7 ef                   imul   %edi\n11:       c3                      retq\n</code></pre>\n\n<p>If you want to <a href=\"https://tio.run/##TY/vasMgFMW/@xSXjBVN7UjX0T9L3R5k7oMxUQOrGdZAoOTZM69so3A913vuD@XojdV6WR56r7/GtjtfY9sPT@6N/DsXFR0apPcRHEVVHLVht9DFMXhQQuxXq0aI0/vL86sqm3omevDXCNqpAM59fIpCTsednEwn4yjjVk66@nWM3Mupqcoo03RKd3OQU2cSsSvq/OtF9Z6yGwEwQ6CAlhGbbVWDOWddr4EB7u8ICwIyYzNj7xiA75AQQ6F4bOGvpC84GA6Wp5jYGQeKeWnJsGFoxpxjaWkZsDq/NRM8M1mWHw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a> for youself, compile and run the following C program</p>\n\n<pre><code>#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\n\nint h(int a,int b){return a-6|b-9?a*b:42;}\nconst char hh[]=\"\\x83\\xfe\\tu\\t1\\xc0\\x83\\xff\\6\\xb0*t\\3\\x96\\xf7\\xef\\xc3\";\nint main(){\n  for( int f=-10; f&lt;10; f++ ) {\n    for( int g = -10; g&lt;10; g++ ) {\n      printf( \"%d %d %d %d\\n\", f, g, h(f, g), ((int(*)(int,int))hh)(f,g) );\n    }\n  }\n}\n</code></pre>\n"},{"answer_id":150445,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/150445#150445","body":"<h1>TI-Basic, 13 bytes</h1>\n<pre><code>For(I,2,length(Ans\nDisp &quot;\nEnd\n</code></pre>\n<p>Loop starts at 2 because an additional newline is printed before <code>Done</code> at the end of the program.</p>\n"},{"answer_id":150441,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/150441#150441","body":"<h1>Vim, 4 bytes</h1>\n\n<pre><code>VGr \n</code></pre>\n\n<p>(a trailing space)</p>\n"},{"answer_id":128312,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/128312#128312","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 7 bytes</h1>\n\n<pre><code>10*6ÆRY\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/9/QQMvscFtQ5P//AA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<pre><code>10*6    # One million in scientific notation (10^6 = 1,000,000).\n    ÆR  # List of primes less than one million.\n      Y # Join the list with newlines.\n</code></pre>\n"},{"answer_id":150099,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/150099#150099","body":"<h1><a href=\"https://github.com/Phlarx/chip\" rel=\"nofollow noreferrer\">Chip</a>, 57 bytes</h1>\n\n<pre><code>*gS!~s\nfA.Z\\ZZZvt\ncZ}x&lt; eab\n&gt;--^/vZZvZZvt\nZZZd ddac ce\nab\n</code></pre>\n\n<p><a href=\"https://tio.run/##S87ILPj/Xys9WLGumCvNUS8qJioqqqyEKzmqtsJGITUxictOVzdOvwwoCBYHyqYopKQkJiskp3IlJv3/n24GAA\" rel=\"nofollow noreferrer\" title=\"Chip – Try It Online\">Try it online!</a></p>\n\n<p>XOR's the low bit of each input (like most if not all other answers) to make the decision. Outputs <code>dabh`</code>, bitwise-OR'd with <code>hhe`t</code> for light or <code>``pc</code> for dark. (Dark also exits one byte early).</p>\n"},{"answer_id":149578,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/149578#149578","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 4 bytes</h1>\n\n<pre><code>←Ṡ-u\n</code></pre>\n\n<p>Returns <code>0</code> if no input contains no duplicate, <a href=\"https://tio.run/##yygtzv7/qKmx6Nzi8v@P2iY83LlAt/T////RRjoKxmBkqKNgqqNgFAsA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>←Ṡ-u  -- takes a list X as input &amp; returns 0 or first duplicate\n Ṡ-   -- compute X - ...\n   u  --       ...   deduplicate X\n←     -- get first element or 0 if empty\n</code></pre>\n"},{"answer_id":149572,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/149572#149572","body":"<h1>Python 3, 47 bytes</h1>\n<pre><code>f=lambda l,i=0:l[i]if l[i]in l[:i]else f(l,i+1)\n</code></pre>\n<p><a href=\"https://tio.run/##RY3LDoIwEEXX9CtmSeMsLAUfJCxd@A21C9Q2NtRCShfw9XUwJm7m3pNzk5nW9BqDzLa7Zd@/788ePLpu33rltLPwjUDROm38bMCW5HeCZztGGICcYkpghRJrbFBoZGqDI@EB6w1/dqsSTyiIK9nUEs@a6ZYVKa50iym6kEpbDpyzwiwPMyW4hqdZLjHSr34G858Znj8\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":149566,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/149566#149566","body":"<h2><a href=\"https://github.com/m-ender/alice\" rel=\"nofollow noreferrer\">Alice</a>, 21 bytes</h2>\n\n<pre><code>/o/\n\\iHQ@/w].(?~!&amp;WK?\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8zJTE79/18/X58rJtMj0EG/PFZPw75OUS3c2/7/fyMdEx1jHTMgNtQx1TECAA\" rel=\"nofollow noreferrer\" title=\"Alice – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>The main idea is to store each value we've encountered on the tape and then use the search command to check whether the current value has already been written to the tape. It's important here that the tape is initially completely filled with <code>-1</code>s.</p>\n\n<pre><code>/      Switch to Ordinal mode.\ni      Read all input as a string.\n/      Switch back to Cardinal mode.\nH      Take the absolute value of the top stack element. This doesn't really do\n       anything to the numbers, because they're all positive anyway, but\n       it forces Alice to convert the input string to individual integer\n       values it contains, thus splitting the string.\n/      Switch to Ordinal mode.\nQ      Reverse the stack so that the first input is on top.\n/      Switch back to Cardinal mode.\nw      Push the current IP position onto the return address stack. This marks\n       the beginning of the main loop.\n         Call the current value on top of the stack X.\n  ]      Advance the tape head (unnecessary on the first iteration, but\n         we need to do it between iterations).\n  .      Duplicate X.\n  (      Search left of the tape head for X. If X isn't found nothing happens\n         and we remain on a -1. Otherwise, the tape head jumps to that\n         earlier occurrence.\n  ?      Retrieve the value under the tape head. If X is new, this will be\n         -1. Otherwise, it will be X. Call this value Y.\n  ~!     Store X in the current cell.\n  &amp;W     Discard Y values from the return address stack. If Y is negative,\n         this does nothing, otherwise it discards the one return address we\n         have there, terminating the loop.\n$K     If the return address is still there, jump back to the w to process \n       the next element. Otherwise continue.\n?      Retrieve X.\n\\      Switch to Ordinal mode.\no      Output the result.\nH      Trim, does nothing.\n@      Terminate the program.\n</code></pre>\n\n<p>I've got an alternative solution at the same byte count:</p>\n\n<pre><code>/o/\n\\iHQ@/w.!(]?h$WK[?\n</code></pre>\n\n<p>I also had a solution where I used the tape as a lookup table, storing at each index <code>X</code> whether <code>X</code> had already been seen in the sequence, but it ended up being a byte longer (it's conceptually easier, but moving the tape head to position <code>X</code> from an arbitrary positive position requires five bytes with <code>q&amp;[&amp;]</code>).</p>\n"},{"answer_id":149564,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/149564#149564","body":"<h1><a href=\"http://kx.com/download/\" rel=\"nofollow noreferrer\">K4</a>, 12 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>*&lt;0W^*:'1_'=\n</code></pre>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>*&lt;0W^*:'1_'=2 3 3 1 5 2\n3\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Returns first item in the list for unique lists otherwise returns first dupe:</p>\n\n<pre><code>*&lt;0W^*:'1_'= / the solution\n           = / group the list, e.g. 2 3 1 5!(0 5;1 2;,3;,4)\n        1_'  / drop first from each value, e.g. 2 3 1 5!(,5;,2;`long$();`long$())\n     *:'     / first (*:) each ('), e.g. 2 3 1 5!5 2 0N 0N\n  0W^        / fill (^) nulls with infinity (0W), e.g. 2 3 1 5!5 2 0W 0W\n &lt;           / sort keys based on values, e.g. 3 2 1 5\n*            / take the first, e.g. 3\n</code></pre>\n"},{"answer_id":149546,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/149546#149546","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 5 bytes</h1>\n\n<pre><code>a⊇=bh\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r/P/FRV7ttUsb//9FGOgrGYGSoo2Cqo2AU@z8KAA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>a⊇=bh  Input is a list.\na      There is an adfix (prefix or suffix) of the input\n ⊇     and a subsequence of that adfix\n  =    whose elements are all equal.\n   b   Drop its first element\n    h  and output the first element of the rest.\n</code></pre>\n\n<p>The adfix built-in <code>a</code> lists first all prefixes in increasing order of length, then suffixes in decreasing order of length.\nThus the output is produced by the shortest prefix that allows it, if any.\nIf a prefix has no duplicates, the rest of the program fails for it, since every subsequence of equal elements has length 1, and the first element of its tail doesn't exist.\nIf a prefix has a repeated element, we can choose the length-2 subsequence containing both, and the program returns the latter.</p>\n"},{"answer_id":149484,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/149484#149484","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 4 bytes</h1>\n\n<pre><code>ŒQi0\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8///opMBMg////0cb6SiY6CgY6yiY6igYxgIA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<p>In case that all elements are unique, this returns <code>0</code> (undefined behavior).</p>\n"},{"answer_id":149477,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/149477#149477","body":"<h1>APL NARS 52 char 104 bytes</h1>\n<pre><code>f←{1≠⍴⍴⍵:¯1⋄v←(⍵⍳⍵)-⍳⍴⍵⋄m←v⍳(v&lt;0)/v⋄m≡⍬:¯1⋄(1⌷m)⌷⍵}\n</code></pre>\n<p>comments (for me f could return results even for vectors of characters that here seems to be the old strings)</p>\n<pre><code>1≠⍴⍴⍵:¯1     if ⍵ has rank different from 1 than it is not a vector so return -1\nv←(⍵⍳⍵)-⍳⍴⍵   v is 0 0 0...0 only if there are not repetitions, else there is some value &lt;0\nm←v⍳(v&lt;0)/v   m return the indices j of v where v[j]&lt;0, and so ⍵[j] are all the duplicates\nm≡⍬:¯1       if m is void than that index not exist, so no duplicate and return -1\n(1⌷m)⌷⍵      else return the value in ⍵ of the first element of m\n</code></pre>\n<p>results</p>\n<pre><code>  f 1\n¯1\n  f 1,2,3,4\n¯1\n  f 1 2 3 3\n3\n  f 2 3 3 1 5 2\n3\n  f ,1\n¯1\n</code></pre>\n"},{"answer_id":148737,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/148737#148737","body":"<h1>C + <a href=\"//git.io/ecpp\" rel=\"nofollow noreferrer\">ecpp</a>, 23 bytes</h1>\n\n<pre><code>#def a*b a^6|b^9?a*b:42\n</code></pre>\n\n<p>Redefines the <code>*</code> operator. 42 if <code>6*9</code>, the proper result otherwise.</p>\n\n<p><a href=\"https://tio.run/##S00uKNBN/v9fOSU1TSFRK0khMc6sJinO0h7ItjIx@p@ZV6KQm5iZp1GWn5miyVXNpQAEBUVA4TQNJdUUJR0zLUtNa67a/wA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":148460,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/148460#148460","body":"<h1>>&lt;>, 12 Bytes</h1>\n\n<pre><code>10:r+:nao20.\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>1\n1\n2\n3\n5\n...\n</code></pre>\n\n<p>Could save 2 bytes by removing the new line, but then there would be no separation in the output at all.</p>\n\n<h2>Explanation:</h2>\n\n<p>Pretty basic. Start by pushing 1, 0 to the stack. Duplicate the top item, reverse the stack, and sum the top two items. If we had f_n, f_n-1 on the stack before, we now have f_n+1, f_n. Duplicate the top item, and print it.\n'ao' prints a new line. '20.' moves the pointer to (2,0) in the codebox, which is right after the '10'. Start again.</p>\n"},{"answer_id":142476,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/142476#142476","body":"<h1><a href=\"//github.com/aaronryank/SimpleStack\" rel=\"nofollow noreferrer\">Implicit</a>, <s>12</s> 11 bytes</h1>\n\n<pre><code>]3.(,[+%:]ß\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87MLchJLS5JTM7@/z/WWE9DJ1pb1Sr28Pz//wE\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p><strong>10 bytes</strong> (knock off the <code>ß</code>) if we don't need delimiters. It's not specified in the challenge... <a href=\"https://tio.run/##K87MLchJLS5JTM7@/z/WWE9DJ1pb1Sr2/38A\" rel=\"nofollow noreferrer\">TIO</a></p>\n\n<p>This is my own (rather simple) method of computing the sequence. Explanation:</p>\n\n<pre><code>#::.(,[+%:]ß\n#::.            push 0, 0, 1 (push stack length, duplicate twice, increment last one)\n    (.......    forever (implicit ¶ at end of program)\n     ,           swap top two stack values\n      [          pop stack into memory\n       +         add top two stack values\n        %        print\n         :       duplicate top of stack\n          ]      push memory to stack\n           ß     print a space\n</code></pre>\n\n<p>In a normal language, say, C, it would look like this:</p>\n\n<pre><code>int x, y, z;\nx = 0; y = 0; z = 1;\n\ndo {\n    swap(&amp;y, &amp;z);\n    x += y;\n    y = x;\n    printf(\"%d \",x);\n} while (1);\n</code></pre>\n\n<p>Equivalence:</p>\n\n<pre><code>int x = 0, y = 0, z = 1;   // #::.\ndo {                       // (\n    swap(&amp;y,&amp;z);           // ,\n                           // [ (z is ignored below)\n    x += y;                // +\n    y = x;                 // :\n    printf(\"%d \",x);       // %ß\n                           // ] (z is ignored above)\n} while (1);               // ¶\n</code></pre>\n\n<p>Here's how the stack looks after each operation that modifies it:</p>\n\n<pre><code>#  0\n:  0 0\n:  0 0 0\n.  0 0 1\n\n,  0 1 0\n[  0 1\n+  1\n%  1\n:  1 1\n]  1 1 0\n\n,  1 0 1\n[  1 0\n+  1\n%  1\n:  1 1\n]  1 1 1\n\n,  1 1 1\n[  1 1\n+  2\n%  2\n:  2 2\n]  2 2 1\n\n,  2 1 2\n[  2 1\n+  3\n%  3\n:  3 3\n]  3 3 2\n\n,  3 2 3\n[  3 2\n+  5\n%  5\n:  5 5\n]  5 5 3\n\n,  5 3 5\n[  5 3\n+  8\n%  8\n:  8 8\n]  8 8 5\n\n,  8 5 8\n[  8 5\n+  13\n%  13\n:  13 13\n]  13 13 8\n\n,  13 8 13\n[  13 8\n+  21\n%  21\n:  21 21\n]  21 21 13\n\n,  21 13 21\n[  21 13\n+  34\n%  34\n:  34 34\n]  34 34 21\n</code></pre>\n\n<p>Golf notes:</p>\n\n<ul>\n<li><code>]3.</code> is shorter than <code>#::.</code> which is shorter than <code>:0::1</code> which is shorter than <code>:0:0:1</code>.</li>\n<li><code>ß</code> is shorter than <code>@32</code>.</li>\n<li><code>(...</code> is shorter than <code>:1(;...:1)</code>.</li>\n</ul>\n\n<p>(<code>ß</code>, <code>¶</code>, and implicit <code>¶</code> added during the writing of this program.)</p>\n"},{"answer_id":142478,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/142478#142478","body":"<h1>C, 64 bytes</h1>\n\n<pre><code>a,x,y,z=1;main(){for(;;){a=y;y=z;z=a;x+=y;y=x;printf(\"%d \",x);}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S9ZNT07@/z9Rp0KnUqfK1tA6NzEzT0OzOi2/SMPaWrM60bbSutK2yrrKNtG6QhvMqbAuKMrMK0nTUFJNUVDSqdC0rq39/x8A\" rel=\"nofollow noreferrer\">Try it online!</a> Uses the same method as my <a href=\"https://codegolf.stackexchange.com/a/142476/61563\">Implicit answer</a>.</p>\n"},{"answer_id":148047,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/148047#148047","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 11 bytes</h1>\n\n<pre><code>OḂEị“_ß“ṗɠ»\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/9//4Y4m14e7ux81zIk/PB9IPtw5/eSCQ7v/P9y95eiew@2PmtaoZAEJoIyCrp3Co4a5kf//JxlypZtxpZgAAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":148043,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/148043#148043","body":"<h1><a href=\"https://drive.google.com/drive/folders/0B0R1Jgqp8Gg4cVJCZkRkdEthZDQ\" rel=\"nofollow noreferrer\">QBIC</a>, 38 bytes</h1>\n\n<pre><code>~(asc(;)+!_sA,-1|!)%2|?@Light`\\?@Dark\n</code></pre>\n\n<h2>Explanation</h2>\n\n<pre><code>~(                       IF\n  asc( )                 the ascii value of\n      ;                  the input string (of the input \"b1\" only the first char is evaluated by asc())\n        + _s ,  |        plus a substring of\n            A            A$ (the input, this was assigned to A$ by ;)\n              -1         taking only the first char from the right\n         !        !      and cast this to num\n                   )%2   MODULO 2 (is non-zero, implicit)\n|?@Light`                THEN PRINT the literal \"Light\"\n\\?@Dark                  ELSE PRINT \"Dark\" (no terminating ` is needed at EOF)\n</code></pre>\n"},{"answer_id":147867,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/147867#147867","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python</a>, 24 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:n*n&amp;n*n-1&lt;n%3%2\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUSHPKk8rTw2IdQ1t8lSNVY3@FxRl5pUoROcppOUXKeQpZOYpFCXmpadq6BoaGBjogAhNhcw0hTSNPM3Y/wA\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>The bit trick <code>k&amp;k-1==0</code> checks whether <code>k</code> is a power of 2 (or <code>k==0</code>). Checking this for <code>k=n*n</code> as <code>n*n&amp;n*n-1==0</code> tells us whether <code>abs(n)</code> is a power of 2. </p>\n\n<p>To further see if <code>n</code> is a power of -2, we need only check that <code>n%3==1</code>. This works because mod 3, the value -2 is equal to 1, so its powers are 1. In contrast, their negations are 2 mod 3, and of course 0 gives 0 mod 3. </p>\n\n<p>We combine the checks <code>n*n&amp;n*n-1==0</code> and <code>n%3==1</code> into a single expression. The first can be written with <code>&lt;1</code> for <code>==0</code>, since it's never negative. The <code>n%3==1</code> is equivalent to <code>n%3%2</code>, giving 0 or 1. So, we can combine them as <code>n*n&amp;n*n-1&lt;n%3%2</code>.</p>\n"},{"answer_id":147167,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/147167#147167","body":"<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">Jq 1.5</a>, 51 bytes</h1>\n\n<pre><code>[range(1;length)as$i|select(.[$i]!=.[$i-1])]|length\n</code></pre>\n\n<p>Expanded</p>\n\n<pre><code>[                              # create an array containing\n    range(1;length) as $i      # a copy of the input for\n  | select(.[$i]!=.[$i-1])     # each successive element difference\n] \n| length                       # length of final array\n</code></pre>\n\n<p><a href=\"https://tio.run/##bY9NCsMgEEb3PcWUZpGAFk0WhYaeJLiQxqYW0TQxdOPZazWS0p/IoDO89wlzu/tWXKDllh83ANAwBH9nBy7cZOZkRfjiCOivkjhdOFnnKU8RlAiq8MvhrSVeLTxVmcQoJV7OHFdzOlTsCKs/8nFL55uB607ktFZCd/Za8DGTbhRKnG2@bzLJtqf4YMoK5pLj/dP0Vho9eoz1pBSWup9sGAb@wGayYXgB\" rel=\"nofollow noreferrer\" title=\"jq – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146991,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146991#146991","body":"<h1><a href=\"https://github.com/cyoce/j-uby\" rel=\"nofollow noreferrer\">J-uby</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-rb prettyprint-override\"><code>:zip%:rotate|~:[]&amp;(0..-2)|:count++:!=\n</code></pre>\n\n<p>More \"readable\": </p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>(:zip % :rotate) | (~:[] &amp; (0..-2)) | (:count + +:!=)\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>:zip%:rotate                        # zip a with itself, rotated by one position. this yields [[a[0], a[1]], [a[1], a[2]], [a[2], a[3]], ...]\n           |~:[]&amp;(0..-2)            # discard the last pair, as that's [a[-1], a[0]], not one of our changes\n                       |:count++:!= # count the pairs with unequal first and second elements (those are changes)\n</code></pre>\n\n<h3>25 bytes (conversion of @daniero's <a href=\"https://codegolf.stackexchange.com/a/146437/41042\">Ruby answer</a>)</h3>\n\n<pre class=\"lang-rb prettyprint-override\"><code>~:each_cons&amp;2|:count++:!=\n</code></pre>\n\n<p>Explanation</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>~:each_cons&amp;2            # for every pair [a[i],a[i+1]] in a:\n            |:count++:!= # count the number of pairs with unequal first and second elements\n</code></pre>\n"},{"answer_id":147132,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/147132#147132","body":"<h1><a href=\"https://github.com/splcurran/Gaia\" rel=\"nofollow noreferrer\">Gaia</a>, 2 bytes</h1>\n\n<pre><code>ėl\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0/MTPz//8j0nP@pj9om/o/WNVYAQSBlEAsA\" rel=\"nofollow noreferrer\" title=\"Gaia – Try It Online\">Try it online!</a></p>\n\n<p>This abuses a bug (or feature?) of Gaia, that run-length-encoding doesn't take the last run of elements into account. Note that I have double checked, it works for all test cases.</p>\n\n<ul>\n<li><code>ė</code> - Run length encoding (with the flaw described above).</li>\n<li><code>l</code> - Length. </li>\n</ul>\n"},{"answer_id":147013,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/147013#147013","body":"<h1>Bash, 17 bytes</h1>\n\n<p>Packages: Core Utilities, sed</p>\n\n<pre><code>uniq|sed 1d|wc -l\n</code></pre>\n\n<p>Takes an input array of one element per line.</p>\n\n<h2>How does it work?</h2>\n\n<p>The input goes to stdin, one array element per line, to <code>uniq</code>. <code>uniq</code> squeezes multiple <em>consecutive</em> identical lines into one, then <code>sed 1d</code> purges the first line, passing the rest to <code>wc</code>. <code>wc -l</code> simply counts the number of lines and outputs the count.</p>\n"},{"answer_id":146996,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146996#146996","body":"<h1>PHP, <s>48</s> 47 bytes</h1>\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?foreach($_GET[a]as$a)$n+=$_GET[b]!=$a;echo$n;\n</code></pre>\n<p>Run with arrays <code>a</code> and <code>b</code> as GET parameters.</p>\n<p>empty output for <code>0</code>.</p>\n"},{"answer_id":146492,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146492#146492","body":"<h1><a href=\"https://github.com/FTcode/Symbolic-Python\" rel=\"nofollow noreferrer\">Symbolic Python</a>, <s>120</s> 117 bytes</h1>\n\n<p>Golfed 3 bytes by removing an explicit cast to integer (using unary <code>+</code>) for the counter variable - this means that if there are no changes in the array the output will be <code>False</code> instead of <code>0</code>, but this is <a href=\"https://codegolf.meta.stackexchange.com/a/9067/60919\">allowed by meta</a>.</p>\n\n<pre><code>___=-~(_==_)\n__('___=~-'+`_&gt;_`[___::___]+`__`[-~___]+'(_)')\n__('__=___=_&gt;_'+';___+=_[__]!=_[-~__];__=-~__'*___)\n_=___\n</code></pre>\n\n<p><a href=\"https://tio.run/##NY2xDoMwDET3fkU7OTRkoiwg90dQdIguIJVSqSws@XX3EgnpZPvsd/LvWKftvbzC99jn7WMGQENyUEV1AZzkRQriRzwxDnRdxxLpaUMqszhUcuKaE4TFS8/RK5iKN7ZMx748AOTOIzMZN7Ohqa/Uo6g91cQ/\" rel=\"nofollow noreferrer\" title=\"Symbolic Python – Try It Online\"><strong>Try it online!</strong></a></p>\n\n<pre><code># LINE 1: Generate value '2' for utility\n___=-~(_==_)\n\n# LINE 2: Get len(input) - 1\n__('___=~-'+`_&gt;_`[___::___]+`__`[-~___]+'(_)')\n   '___=~-'+`_&gt;_`[___::___]+`__`[-~___]+'(_)'     # Generate string '___=~-len(_)'\n            `_&gt;_`[___::___]                       #    'le' spliced from 'False'\n                           +`__`[-~___]           #    'n' indexed from '&lt;function ...&gt;'\n   '___=~-'+                           +'(_)'     #    Remaining characters in plaintext\n__(                                          )    # Execute this to get len(input) - 1\n\n# LINE 3: Main calculation loop\n__('__=___=_&gt;_'+';___+=_[__]!=_[-~__];__=-~__'*___) \n__(                                               ) # Execute:\n   '__=___=_&gt;_'                                     #   Set var1, var2 to 0\n               +';                           '*___  #   len(input) - 1 times do:\n                       _[__]!=_[-~__]               #   Compare input[var1, var1 + 1]\n                  ___+=              ;              #   Add this to var2\n                                      __=-~__       #   Increment var1\n\n# LINE 4: Set output variable ('_') to the result calculated.\n_=___                                       \n</code></pre>\n"},{"answer_id":146641,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/146641#146641","body":"<h2><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 8 bytes</h2>\n\n<p><strong>7 bytes code + 1 for <code>-p</code>.</strong></p>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>s;.*\\.;\n</code></pre>\n\n<p><a href=\"https://tio.run/##Jcu7CgIxEAXQfj5F8DIgVtssWIpgYeWjyC6jE8iLZGD1540sNqc7RWrY994GbO4YelcPexvNrtZsiBKFQg60qDPAN8B09emDECbXtM50YT6NaXd05yuUl8PtoeRekgzMTBKLfUDr@LdvLuZzan1bfg\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146639,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146639#146639","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 3 bytes</h1>\n\n<pre><code>γ¦g\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f//3OZDy9L//4821FGAICMwMkVChuY6CsaxAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>An alternative to Erik's answer.</p>\n\n<pre>\nγ¦g  ~ Full program.\n\nγ    ~ Group into runs of equal adjacent elements.\n ¦   ~ Remove the first group (if there are any).\n  g  ~ Length.\n</pre>\n"},{"answer_id":121028,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121028#121028","body":"<h1>Java 8, <s>52</s> 27 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;s.replaceAll(&quot;.*\\\\.&quot;,&quot;&quot;)\n</code></pre>\n<p><a href=\"https://tio.run/##hY5PSwMxEMXv@ymGnHbFDgGPRVE8Skuhnmx7mKZpk5pNlmTaKrKffc1KrrKXYf783ntzpivNQqf9@fA5KEcpwYKs/6kArGcdj6Q0LMcRYM3R@hOoujSpmed9X@WSmNgqWIKHRxjS7Clh1J3L4hfnaoF32y2KeyGaYT7i3WXvMl5U12AP0ObUYrzZUVMSvxPrFsOFscsXdr72qGphLPIXi@bvgf8xRTEGxla3epJ1wU0yN0OMaBMim7EerZs2xj0lE9Uk9y7l4tk/vNHqA428vW52ZlJDJ@0ZpZSF7Kt@@AU\" rel=\"nofollow noreferrer\">Try it here.</a></p>\n<p>Replace everything before the last dot (and the dot itself) with nothing.</p>\n<p>This is shorter than using split (<code>s-&gt;s.split(&quot;\\\\.&quot;)[s.split(&quot;\\\\.&quot;).length-1];</code>) or substring (<code>s-&gt;s.substring(s.lastIndexOf('.'));</code>).</p>\n"},{"answer_id":146627,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/146627#146627","body":"<h1><a href=\"https://github.com/MiningPotatoes/Ohm\" rel=\"nofollow noreferrer\">Ohm v2</a>, 5 bytes</h1>\n\n<pre><code>I..ï⁾\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8/INfr/31NP7/D6R437/v8vz0gs0dPLLNbTK8kAkWmZOakA\" rel=\"nofollow noreferrer\" title=\"Ohm v2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146626,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/146626#146626","body":"<h1><a href=\"https://github.com/JohnEarnest/ok\" rel=\"nofollow noreferrer\">K (oK)</a>, 6 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>*|\".\"\\\n</code></pre>\n\n<p><a href=\"https://tio.run/##y9bNz/7/X6tGSU8pRqk8I7FETy@zWE@vJANEpmXmpCr9/w8A\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>*|\".\"\\\"whats.up.txt\"\n\"txt\"\n  *|\".\"\\\"T00M@n3KaPZ.h0wC[]h\"\n\"h0wC[]h\"\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Split <code>\\</code> the input on <code>\".\"</code>, reverse <code>|</code> this list, and then take the first <code>*</code> one. K is interpreted right-to-left:</p>\n\n<pre><code>*|\".\"\\ / the solution\n  \".\"\\ / \".\" split (\\),\n |     / reverse\n*      / first\n</code></pre>\n"},{"answer_id":146621,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146621#146621","body":"<h2><strong><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, 31 bytes</strong></h2>\n\n<pre><code>f=lambda y:sum(y[1:]-y[:-1]!=0)        \n</code></pre>\n\n<p><a href=\"https://tio.run/##XUy9CoMwGNx9iusgJvClGO1QAvZFxOErRSo0McQ45OlT3dpww/1yPsX36vqc5@HD9vliJLPtVqRRm0ml0Sg9XYZW5sX6NUS43foE3uB8Na8BjMUd@sohcBLjJOnHtYUlXQbFQlNHPd3K8ER3Vv@F6unEQceNqQAfFhdFUyt936AeqPcGNQQTZsFSyvwF\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":146606,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/146606#146606","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 16 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{s[/[^.]+$/]}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1664ujhaPzpOL1ZbRT@29n9BaUmxQlq0UnJiUVF@iV5uam6qUiwXTFQvKbE4oygZSSTEwMDXIc/YOzEgSi/DoNw5OjYDSTYnP0cpVkFZoTQvJTUtMy81RSEpNSOxLDO/tOg/AA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146602,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/146602#146602","body":"<h1>Julia, 22 bytes</h1>\n<pre><code>g(n)=split(n,'.')[end]\n</code></pre>\n"},{"answer_id":146600,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146600#146600","body":"<h1>Common Lisp, 56 bytes</h1>\n\n<pre><code>(loop as(x y)on(coerce(read)'list)while y count(/= x y))\n</code></pre>\n\n<p><a href=\"https://tio.run/##FcrBCoAgDADQXxl0aDtFdu5jZA0SxIka5dcv5V0fx1CzYS4hNcOomsFX/KCTJmSVwoJF/EXriI3eO0SBDqxParidMCcZ2YI7TG446Ac\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":146598,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/146598#146598","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 21 bytes</h1>\n\n<pre><code>puts [file ext $argv]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0nO@f@/oLSkWCE6LTMnVSG1okRBJbEovSz2////yYlFRfklermpuakA\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n"},{"answer_id":120926,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120926#120926","body":"<h1>JS (ES6), <s>26</s> 25 bytes</h1>\n<pre><code>x=&gt;/\\.([^.]+)$/.exec(x)[1]\n</code></pre>\n<p>-1 byte thanks to Shaggy</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>document.querySelector('pre').innerText = (x=&gt;/\\.([^.]+)$/.exec(x)[1])(\"example.txt\")</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;input oninput = \"document.querySelector('pre').innerText = (x=&gt;x.match(/\\.([^.]+)$/)[1])(this.value)\" value = \"example.txt\"&gt;\n&lt;pre&gt;&lt;/pre&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<p>Alternate, 29 bytes:</p>\n<pre><code>x=&gt;(y=x.split`.`)[y.length-1]\n</code></pre>\n"},{"answer_id":146535,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146535#146535","body":"<h1>C (gcc 5.4.0), 61 bytes</h1>\n<pre><code>f(c,v)int*v;{int*p=v,s=0;for(;p&lt;v+c-1;s+=*p++!=*p);return s;}\n</code></pre>\n<p><a href=\"https://tio.run/##jY7LCsIwEEXX@hWxIORV6MPHIvZL1EWJpnZhDGnNpvTb48QuqmBAGJIJc86dyLSR0nuFJXek1T11YgiXqRzvqkyoh8XCHByTaS46VlHD2ApOIuy1f1qNOjF6ENC9bjUOTW0byZG81RZRCg9H0LBcGAszhZP15aQTjhTOOAr48UyGkRDxg8hnIosgxQfCUf4XFcvazBRsBqeExH0E3n3BUxWTFTG2s5GW73Co0E3/Gf0L\" rel=\"nofollow noreferrer\">Try it Online!</a></p>\n<p><code>f</code> is a function taking the length of the array and a pointer to the first element of the array, and returning the number of changes in the array;</p>\n<p>This submission utilizes undefined behavior (<code>*p++!=*p</code>, p is used twice in an expression in which it is changed), which works on my machine (gcc 5.4.0) and on TIO, but may not work on other implementations or versions.</p>\n<p>Explanation:</p>\n<pre><code>f(c,v)int*v;{ // old-style declaration for v, and implicit-int for c and return value\n    int*p=v,s=0; // p is a pointer to the current item, s is the number of changes\n    for(;p&lt;v+c-1;s+=*p++!=*p); // for each consecutive pair of integers, if they are different, add one to the number of changes\n    return s; // return the number of changes\n}\n</code></pre>\n"},{"answer_id":146573,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146573#146573","body":"<h1><a href=\"https://github.com/muddyfish/PYKE\" rel=\"nofollow noreferrer\">Pyke</a>, 4 bytes</h1>\n<pre><code>$0-l\n</code></pre>\n<p><a href=\"https://pyke.catbus.co.uk/?code=%240-l&amp;input=%5B1%2C+1%2C+1%2C+2%2C+2%2C+3%5D&amp;warnings=1&amp;hex=0\" rel=\"nofollow noreferrer\">Try it here!</a></p>\n<pre><code>$    -   delta(input)\n 0-  -  ^.remove(0)\n   l - len(^)\n</code></pre>\n"},{"answer_id":146498,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146498#146498","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"nofollow noreferrer\">GNU sed</a>, <s>30</s> 23 + 3 = 26 bytes</h1>\n\n<p>+3 bytes for <code>-r</code> flag. Output is in unary.</p>\n\n<pre><code>s/(\\S+)( \\1)*//g\ny/ /;/\n</code></pre>\n\n<p><a href=\"https://tio.run/##K05N@f@/WF8jJlhbU0MhxlBTS18/natSX0HfWv//fy4DLgMFQyA24DJUMFIwVjA0BzJA0AjE5dI1VgBBIGXwL7@gJDM/r/i/bhEA\" rel=\"nofollow noreferrer\" title=\"sed 4.2.2 – Try It Online\">Try it online!</a></p>\n\n<p>Technically I could drop the second line and say each space is a unary digit for -7 bytes, but I don't want to push it.</p>\n"},{"answer_id":146495,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146495#146495","body":"<h1><a href=\"https://www.gnu.org/software/gawk/manual/gawk.html\" rel=\"nofollow noreferrer\">AWK</a>, 35 bytes</h1>\n\n<pre><code>{for(i=1;i&lt;NF;)s+=$i!=$++i;$0=s+0}1\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzP/v@/Oi2/SCPT1tA608bPzVqzWNtWJVPRVkVbO9NaxcC2WNug1vD/fwUuAy4DBQMuQwUjBWMFQ3MuAA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n\n<p>This requires at least 1 character as input (the character can be a space).</p>\n\n<p>A version without this restriction but with several more bytes is:</p>\n\n<pre><code>BEGIN{RS=\" \"}{s+=NR&gt;1&amp;&amp;p!=$1;p=$1}END{print s+0}\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzP/v/fydXd0686KNhWSUGptrpY29YvyM5QTa1A0VbF0LoASNS6@rlUFxRl5pUoFGsb1P7/DwA\" rel=\"nofollow noreferrer\" title=\"AWK – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146494,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146494#146494","body":"<h1>Ruby, 44 Bytes</h1>\n\n\n\n<pre class=\"lang-rb prettyprint-override\"><code>-&gt;a{a.zip(a.rotate)[0..-2].count{|x,y|x!=y}}\n</code></pre>\n\n<p>Takes the array, and zips the elements with the array rotated one place. This gives pairs of <code>[a[0],a[1]], [a[1],a[2]], [a[2],a[3]], ...</code></p>\n\n<p>Then we cut off the last element because that's <code>a[-1],a[0]</code>, which we don't need here.</p>\n\n<p>Finally, we count the number of pairs with inequal first and second elements (or spaces in between items of the array which change).</p>\n"},{"answer_id":146493,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146493#146493","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 31 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{a.chunk{|x|x}.drop(1).size}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyflmf7X9cusTpRLzmjNC@7uqaipqJWL6Uov0DDUFOvOLMqtfZ/Zl5BaYmCrUI0l4JCdKyOAjpQVrC1UzAASRpgyiJJ6igYosmDJQ2hkgbYJME6DXUUjHQUjIH6zWFqwJLGUEkIMoKoAqoASxqBJHWNwfqACMQC2wDVGcvFBfRVsQLYc3q5iQUaaml5mv8B\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146489,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146489#146489","body":"\n\n<h1><a href=\"https://perl6.org\" rel=\"nofollow noreferrer\">Perl 6</a>, 18 bytes</h1>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{sum $_ Z!= .skip}\n</code></pre>\n\n<p><a href=\"https://tio.run/##fY9NTsMwFIT3PsUgIZrQOk1qfiSiAlv2rAgWCsmDRiSOVTsSVcnJ2HGxYldZVLTUs7Ct741nrGlZX22aFc6KRa7eiRdtpyzmm7XpGpy@4Olkjsh8VLr3U/eWjKOoK0UmCKMm1zdrBnhUKQeiom1egylGfHSH53KMafjzHT0om7opNxItKC@Dc56Ek@3V5lU9cTmsZ6wzhEf3fsp0nSuMt2EpY2/tcgjmtwicS3fWeehTU2GpdMeSTBHCF6kML4l0vcLufwZTuO9KWb/JEnjNnC4HJdcQEl8ALlgmcXh5HLMslscxEvkfTjyO5RG3ryVcHXkAC7bTXMi/eMYyLuDltngPi18\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Test it</a></p>\n\n<h2>Expanded:</h2>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{ # bare block lambda with implicit parameter ｢$_｣\n\n  sum         # count the number of True values\n\n      $_      # the input\n    Z!=       # zip using &amp;infix:«!=»\n      .skip   # the input, but starting from the second value\n              # (implicit method call on ｢$_｣\n}\n</code></pre>\n"},{"answer_id":122724,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122724#122724","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 7 bytes</h1>\n\n<p><i>-1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/72767/xcali\">@Xcali</a></i></p>\n\n<p>6 bytes of code + <code>-p</code> flag. </p>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>y// /c\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9r6yoUABkKOgW/K/U11fQT/7/3yM1JydfR6E8vygnRREA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – TIO Nexus\">Try it online!</a></p>\n\n<p>Quite straight forward : replaces every character with a space. </p>\n"},{"answer_id":146483,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146483#146483","body":"<h1><a href=\"https://github.com/ConorOBrien-Foxx/stacked\" rel=\"nofollow noreferrer\">Stacked</a>, 26 bytes</h1>\n\n<pre><code>[2 infixes 0\\[...!=+]fold]\n</code></pre>\n\n<p><a href=\"https://tio.run/##JUpJCoAgALz7iulWBJJ6CIKgf5hEuJC0gh36vWkxzMqEe9arNTFKDn84/9iAZpSU0qKvlTs3o@LQOVISlFVi8wnYb19j4BBg7Z8zeF5ynQQykqVnBUlg9XLCwfhwEYV9vuIL\" rel=\"nofollow noreferrer\" title=\"Stacked – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>[2 infixes 0\\[...!=+]fold]\n[                        ]   anonymous function; argument = arr\n 2 infixes                   generate infixes of length 2\n           0\\[      ]fold    fold the inside function over the infixes (starting = 0)\n                               when iterating, stack looks like: (acc (a0 a1))\n              ...              merge (a0 a1) into the stack      (acc a0 a1)\n                 !=            check for inequality              (acc a0!=a1)\n                   +           add to accumulator                (acc+(a0!=a1))\n</code></pre>\n\n<p>This gives the number of unequal infixes in the array, equivalent to the given problem.</p>\n"},{"answer_id":146413,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146413#146413","body":"<h1><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, <s>24</s> <s>21</s> 16 bytes</h1>\n\n<p><em>Thanks to @MartinEnder for -3 bytes and noticing a bug</em><br>\n<em>-1 byte thanks to @tsh</em><br>\n<em>-4 bytes thanks to @Leo</em></p>\n\n<pre><code>m`^(\\S+)¶(?!\\1$)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0otycxL/K@qEZyg8D83IU4jJlhb89A2DXvFGEMVzf//uQy4DBQMgdiAy1DBSMFYwdAcyABBIxCXS9dYAQSBFFCBqYKhKZehEQgqGIEpAA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146474,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146474#146474","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 63 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>foreach($_GET as$g){$c+=$g!=$l?isset($l)?1:0:0;$l=$g;}echo$c*1;\n</code></pre>\n\n<p>pass the sequence as a get query with any indexes, or <a href=\"https://tio.run/##PYvLCsMgEEX3/QoLs9DWgiaLQmzwQ0opQXwEJEq0q5Bvt5E24S7O3HOZ6GJ5yOgiMp9J5TFMyGB4W53JUkyY9aDcr6MhgSULqGsP9tyDl2NKOmPwRPKOdUyA3xaxauUCqAsXZT0Z/HwRUcF2Un5cu@O0oS3l96PWNFX@za2lNRvqS/kC\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n\n<p>my attempt, not the shortest, but it's something</p>\n"},{"answer_id":146473,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146473#146473","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"noreferrer\">Java (OpenJDK 8)</a>, 65 bytes</h1>\n\n<p>Not as short as I'd like, but that's just Java for you.</p>\n\n<p>Test by passing the array as a comma delimited list.</p>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>a-&gt;{int s=0,i=1;for(;i&lt;a.length;s+=a[i-1]!=a[i++]?1:0);return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##TY9BT4QwEIXP5VeMeyoBGtCbFT17cC8eSQ@V7WJXKKQtazaE347TuhtNmk5e@@bNNyd5lsU4KXM6fG1tL52DN6nNkhBtvLJH2SrYLwmQoKGjeDcCZMoTsiYJmeaPXrfgvPRYzqM@wIDt9N1bbbroxCjyJ23noAbZlIK5qdee7vJdCCPXYGvlpQajviE8BDvrlen8pwim42gDAWjMKDnop38GlFkWp5GY0miBrlfcolOWTdI6hYKGDvxiSDTQNI5eA@HFeTWwcfZsQlZPDetozElvu16X3IPB3E0Wz0tAcXWZ67riAY0j0I3GZbVsdFGJu1CzTLxUj2XKrfKzNeD4uhGerNtW5fB77uN5@AE\" rel=\"noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146422,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146422#146422","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"nofollow noreferrer\">Wolfram Language (Mathematica)</a>, 23 <del>24</del> <del>26</del> <del>29</del> bytes</h1>\n\n<pre><code>Length@Split@#~Max~1-1&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78n2b73zexItonNS@9JMMhuCAns8RBWddQxyBW7X9AUWZeSXRadLWusQ4IAimD2tjY/wA\" rel=\"nofollow noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n\n<ul>\n<li>-1 byte thanks to Martin Ender!</li>\n<li>-2 bytes thanks to JungHwan Min! nice use of <code>Split[]</code>.</li>\n<li>-3 bytes thanks to totallyhuman!</li>\n</ul>\n\n<p>a little explanation:</p>\n\n<p><code>Split</code> will divide an array into a list of lists (of same elements), that is, turning <code>{1, 2, 2, 3, 1, 1}</code> into <code>{{1}, {2, 2}, {3}, {1, 1}}</code> . So, <code>Length@Split@#</code> is the quantity of consecutive segements. <code>Max[*****-1, 0]</code> is used to deal with <code>{}</code> input.</p>\n"},{"answer_id":146430,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146430#146430","body":"<h1><a href=\"https://github.com/MiningPotatoes/Ohm\" rel=\"nofollow noreferrer\">Ohm v2</a>, 3 bytes</h1>\n\n<pre><code>ΔyΣ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8/INfr//9yUynOL//@P1jXWUYAgEMsgFgA\" rel=\"nofollow noreferrer\" title=\"Ohm v2 – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>Δ     absolute differences between consecutive elements\n y    sign: 1 if positive, -1 if negative, 0 if zero\n  Σ   sum\n</code></pre>\n"},{"answer_id":146436,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146436#146436","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 33 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f(a:b:r)=sum[1|a/=b]+f(b:r)\nf _=0\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00j0SrJqkjTtrg0N9qwJlHfNilWO00DJMSVphBva/A/NzEzT8FWoaAoM69EQUUhTSHaUAcEjYHQCEib6JjE/gcA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<hr>\n\n<p><strong>Bonus:</strong> Somewhat curious point-free arithmetic version (44 bytes)</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>sum.(tail&gt;&gt;=zipWith((((0^).(0^).abs).).(-)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7NyfmfZhvzv7g0V0@jJDEzx87OtiqzIDyzJEMDCAziNPXARGJSsaYekK2rqan5PzcxM0/BVqGgKDOvREFFIU0h2lAHBI2B0AhIm@iYxP7/l5yWk5he/F83uaAAAA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>Given an input <code>[1,1,4,3,3,3]</code>, we first take the difference of adjacent entries (<code>[0,3,-1,0,0]</code>), then the <code>abs</code>olute value: <code>[0,3,1,0,0]</code>. Taking zero to the power of each element the first time yields <code>[1,0,0,1,1]</code>, and a second time inverts the list: <code>[0,1,1,0,0]</code> (<code>(1-)</code> would also work here instead of <code>(0^)</code>). Finally we take the <code>sum</code> of the list to get <code>2</code>.</p>\n"},{"answer_id":146465,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146465#146465","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a>, 16 bytes</h1>\n\n\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(x)nnz(diff(x))\n</code></pre>\n\n<p><a href=\"https://tio.run/##y08uSSxL/Z9mq6en999Bo0IzL69KIyUzLQ3I1PyfrGCrUB0dyxVtAMIKhmASxDZUMFIwVjABs0DQCMQH8nSNFUAQSBnE1lpzJafm5KSV5mmk6SRr/gcA\" rel=\"nofollow noreferrer\" title=\"Octave – Try It Online\">Verify all test cases here!</a></p>\n\n<p>Quite short, seeing that Octave is a conventional language.</p>\n\n<h3>Explanation:</h3>\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(x)               % Anonymous function that takes x as input\n    nnz(       )   % Count the number of non-zero ...\n        diff(x)    % ... differences between elements\n</code></pre>\n"},{"answer_id":146458,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146458#146458","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, 50 bytes</h1>\n\n<pre><code>(([][()]){[{}({}[({})])]{{}()(&lt;()&gt;)}{}([][()])}&lt;&gt;)\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X0MjOjZaQzNWszq6ulajujYaiIG82GogT1PDRkPTTrMWyIQqqrWx0/z/31ABBI2A0AQIjQE\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>Since everyone is posting their 50 byte solutions here is mine (I have a <a href=\"https://tio.run/##SypKzMzTTctJzP7/XyM6OjZWQ1OzWqO6VkPTBkhGA7FmrGZ1da2NHVhQU8PGTrO2uhZI2Nj9/2@oAIJGQGgKhYbmCsYA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">48 byte one</a> but it was a simple modification of DjMcMayhem's so I did feel it worth posting)</p>\n\n<h1>Explanation</h1>\n\n<p>This answer extensively uses value canceling.</p>\n\n<p>Un-golfed it looks like</p>\n\n<pre><code>([][()])({&lt;{}({}[({})])&gt;{&lt;{}&gt;()(&lt;()&gt;)}{}&lt;([][()])&gt;}&lt;&gt;)\n</code></pre>\n\n<p>Here we compute the delta's until the stack has one item left, each time we accumulate one value from the inner loop if the delta is non zero.</p>\n\n<p>This is a pretty straight forward way of doing it.</p>\n\n<p>To make this golfy we begin value canceling.  The first one and the one that should be obvious to any hardened brain-flak golfer is the stack heights.  It is a well known fact that</p>\n\n<pre><code>([])({&lt;{}&gt;...&lt;([])&gt;}{})\n</code></pre>\n\n<p>is the same as</p>\n\n<pre><code>(([]){[{}]...([])}{})\n</code></pre>\n\n<p>When the values are modified by one, the same holds.  This gives us</p>\n\n<pre><code>(([][()]){[{}]&lt;({}[({})])&gt;{&lt;{}&gt;()(&lt;()&gt;)}{}([][()])}&lt;&gt;)\n</code></pre>\n\n<p>You may notice this didn't even save us bytes, but don't fret it will become more useful as we go on.</p>\n\n<p>We can perform another reduction,  if you see a statement</p>\n\n<pre><code>&lt;(...)&gt;{&lt;{}&gt; ...\n</code></pre>\n\n<p>you can actually reduce it to</p>\n\n<pre><code>[(...)]{{} ...\n</code></pre>\n\n<p>This works because if we enter the loop <code>[(...)]</code> and <code>{}</code> will cancel, and if we don't the value of <code>[(...)]</code> already was zero in the first place and doesn't need to be canceled.  Since we have an occurrence of this pattern in our code we can reduce it.</p>\n\n<pre><code>(([][()]){[{}][({}[({})])]{{}()(&lt;()&gt;)}{}([][()])}&lt;&gt;)\n</code></pre>\n\n<p>That saved us 2 bytes but it also put two negs next to each other.  These can be combined to save us another 2.</p>\n\n<pre><code>(([][()]){[{}({}[({})])]{{}()(&lt;()&gt;)}{}([][()])}&lt;&gt;)\n</code></pre>\n\n<p>And that's our code.</p>\n"},{"answer_id":146459,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146459#146459","body":"<h1>Pyth, 4 bytes</h1>\n\n<pre><code>ltr8\n</code></pre>\n\n<p><a href=\"https://pyth.herokuapp.com/?code=ltr8&amp;test_suite=1&amp;test_suite_input=%5B1%2C1%2C1%2C2%2C2%2C5%2C5%2C5%2C5%2C17%2C3%5D%0A%5B%5D%0A%5B0%5D%0A%5B0%2C1%5D%0A%5B0%2C0%5D%0A%5B1%2C2%2C3%2C17%5D%0A%5B1%2C1%2C1%2C2%2C2%2C3%5D%0A%5B-3%2C3%2C3%2C-3%2C0%5D&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n\n<p>\"literate\"</p>\n\n<p>The number of changes is equal to the number of runs, ignoring the first run if any. <code>r8</code> run length encodes the input, <code>t</code> removes the first element if any, and <code>l</code> finds the length of the resulting list.</p>\n"},{"answer_id":146457,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146457#146457","body":"<h1>J, 10 bytes</h1>\n<pre><code>[:+/2~:/\\]\n</code></pre>\n<p>Infixes of length 2... are they unequal? <code>2 ~:/\\ ]</code></p>\n<p>Sum the resulting list of <code>0</code>s and <code>1</code>s: <code>+/</code></p>\n<p><a href=\"https://tio.run/##y/qfVqxga6VgoADE/6OttPWN6qz0Y2L/a3Ip6Smop9laqSvoKNRaKaQVc3GlJmfkA1XaKqQpGEA4hhCOgiGKHEzWGMw1VDACsgzNIWJGUDFDsDhQBllpvLECCAIpg/8A\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146455,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146455#146455","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 3 bytes</h1>\n<pre><code>Ltg\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7/36ck/f///9G6xjogCKQMYgE\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>Ltg    Input: [1,1,1,2,2,3]\n  g    Group equal elements together: [[1,1,1],[2,2],[3]]\n t     Drop the first group (if any): [[2,2],[3]]\nL      Return the length of the list: 2\n</code></pre>\n"},{"answer_id":146453,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146453#146453","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 6 bytes</h1>\n\n<pre><code>ä- è¦0\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn///ASXYXDKw4tM/j/P1rXWAEEgZRBLAA\" rel=\"nofollow noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146417,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146417#146417","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 35 bytes</h1>\n\n<p><em>-8 bytes thanks to H.PWiz.</em></p>\n\n<p>Out-golfed by a <a href=\"https://codegolf.stackexchange.com/a/146436/68615\">recursive version</a>. Haskell is pretty much the best at recursion and I missed it. >_&lt;</p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f l=sum[1|x&lt;-zipWith(/=)l$tail l,x]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00hx7a4NDfasKbCRrcqsyA8syRDQ99WM0elJDEzRyFHpyL2f25iZp6CrUJuYoGvgkZBUWZeiYKeQpqmQnR0rI5CtAGY0FEwhNJgvqGOgpGOgjFQ1BzKhSAjiDhITNcYrACIQCyD2Nj/AA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>It'd be awesome if anybody figured out how to employ <a href=\"https://codegolf.stackexchange.com/a/76364/68615\">this tip</a>.</p>\n\n<h2>Alternate solution, 36 bytes</h2>\n\n<pre class=\"lang-hs prettyprint-override\"><code>f l=sum[1|True&lt;-zipWith(/=)l$tail l]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00hx7a4NDfasCakqDTVRrcqsyA8syRDQ99WM0elJDEzRyEn9n9uYmaegq1CbmKBr4JGQVFmXomCnkKapkJ0dKyOQrQBmNBRMITSYL6hjoKRjoIxUNQcyoUgI4g4SEzXGKwAiEAsg9jY/wA\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146431,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146431#146431","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 38 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda x=0,*y:y&gt;()and(x!=y[0])+f(*y)\n</code></pre>\n\n<p><a href=\"https://tio.run/##JU1LCsMgFNz3FK8LiaZP0CSLEjAXEReWIA20JtgU4umtL2VgvovZ8v5cY19KMC//fsweDqOwzWOeuPBx5sfVZKucuAXeZlHCmsCn5DMsEaxDqBsR6r/UZDV22ONAhUZCRwVF2SOhinLjBWBLS9x5w6S@f0BOwL4NMODnAUJ9PJ0QovwA\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146448,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146448#146448","body":"<h1><a href=\"https://www.microsoft.com/net/core/platform\" rel=\"nofollow noreferrer\">C# (.NET Core)</a>, 94 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System.Linq;\nn=&gt;{int?i=0,a=n.FirstOrDefault();n.ForEach(x=&gt;{i+=x==a?0:1;a=x;});return i;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##XY1BS8QwEIXP7a/IMcHdUt2b2XQPqyvCisIKHsRDiNM60E10Ml0qS397TcCDyMDMvJmP91xcukAwDxF9Jw7fkeGoy7@q2qP/@nfahr4Hxxh8rO7AA6HTpettjOKJQkf2KM5lEdkyOnEK@C4eLHoZmZLJ65uw1EWVkWKbLEIP1QshQ0oC2cr8rQ6QEySaJiEnIK6ew73n1ZVEpdK@x8hSKaXLYiqLT8KTZRC/kbvBu3Um1ui5WYjUN41ohRGzN805SzT1whpf7ZAiP9INtHbok6NOp0C31n3IMaMXZjTGburrS23NqCelCXggL1BPc6HLaZ6XqzlXGvUP\" rel=\"nofollow noreferrer\" title=\"C# (.NET Core) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146437,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146437#146437","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 36 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{a.each_cons(2).count{|x,y|x!=y}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6xOlEvNTE5Iz45P69Yw0hTLzm/NK@kuqZCp7KmQtG2srb2f4FCWnR0bCwXmDaAM3QMEUy4qKGOkY6xjqE5gg@CRiBRmJCusQ4IAimgrv8A\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":108738,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108738#108738","body":"<h1>Scala, 47 bytes</h1>\n\n<pre><code>def f(x:String)=x==x.sorted|x==x.sorted.reverse\n</code></pre>\n"},{"answer_id":146435,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146435#146435","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 37 + 2 (<code>-ap</code>) = 39 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>$\\+=$F[$_]!=$F[$_-1]for 1..$#F}{$\\|=0\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/18lRttWxS1aJT5WEULrGsam5RcpGOrpqSi71VarxNTYGvz/b6gAgkZAaPwvv6AkMz@v@L9uYgEA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146432,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146432#146432","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 8 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>+/2≠/⊃,⊢\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R2wRtfaNHnQv0H3U16zzqWgQUUzDgAmIFQzAJYhsqGCkYKxiag5mGYC5QAMg7tN5YAQRBtAEA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><strong>How?</strong></p>\n\n<p><code>⊃,⊢</code> - the list, with the first value repeated for the case of single element</p>\n\n<p><code>2≠/</code> - changes list, not equal for every 2 elements</p>\n\n<p><code>+/</code> - sum</p>\n"},{"answer_id":146429,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146429#146429","body":"<h1><a href=\"https://github.com/ETHproductions/cubix\" rel=\"nofollow noreferrer\">Cubix</a>, 24 bytes</h1>\n\n<pre><code>UpO@0I&gt;I!^-u&gt;q.uvv$!^;)p\n</code></pre>\n\n<p><a href=\"https://ethproductions.github.io/cubix/?code=ICAgIFUgcAogICAgTyBACjAgSSA%20IEkgISBeIC0gdQo%20IHEgLiB1IHYgdiAkICEKICAgIF4gOwogICAgKSBwCg==&amp;input=LTMgMyAzIC0zIDE=&amp;speed=5\" rel=\"nofollow noreferrer\">Try it online</a></p>\n\n<p>Note that Cubix uses 0 to indicate that there are no more inputs, so 0 cannot be in the list.</p>\n\n<h3>Explanation</h3>\n\n<p>Unfolded:</p>\n\n<pre><code>    U p\n    O @\n0 I &gt; I ! ^ - u\n&gt; q . u v v $ !\n    ^ ;\n    ) p\n</code></pre>\n\n<p>We start at the <code>0</code>, pushing the counter (initialized with <code>0</code>) and the first input (<code>I</code>) onto the stack.</p>\n\n<p>We then enter the loop.  At each iteration of the loop, we get the next input with <code>I</code>.  If it's 0, we've run out of inputs, so we rotate the counter to the top (<code>p</code>), <code>O</code>utput, and exit (<code>@</code>).</p>\n\n<p>Otherwise, we take the difference of the top two elements.  If it's nonzero, we rotate the counter to the top, increment it, and rotate it back to the bottom with <code>p)q</code>.  We then pop the difference with <code>;</code> before moving to the next iteration.</p>\n\n<p>All the characters not mentioned here are just control flow.  There tend to be a lot of those in Cubix programs.</p>\n"},{"answer_id":146425,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146425#146425","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 8 bytes</h1>\n\n<pre><code>ssmndZ.+\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsyfj/v7g4Ny8lSk/7//9oQx0FCDICI@NYAA\" rel=\"nofollow noreferrer\" title=\"Pyth – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146424,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146424#146424","body":"<h1>Pyth, 5 bytes</h1>\n<pre><code>l #.+\n</code></pre>\n<p><a href=\"http://pyth.herokuapp.com/?code=l+%23.%2B&amp;test_suite=1&amp;test_suite_input=%5B%5D%0A%5B0%5D%0A%5B0%2C+1%5D%0A%5B0%2C+0%5D%0A%5B1%2C+2%2C+3%2C+17%5D%0A%5B1%2C+1%2C+1%2C+2%2C+2%2C+3%5D%0A%5B-3%2C+3%2C+3%2C+-3%2C+0%5D&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite.</a></p>\n<p>Explanation:</p>\n<pre><code>   .+  Deltas\n  #    Filter on identity (space)\nl      Get length \n</code></pre>\n"},{"answer_id":146421,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146421#146421","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"noreferrer\">Brain-Flak</a>, 50 bytes</h1>\n\n<pre><code>(([][()]){[{}]&lt;({}[({})])&gt;{(&lt;{}&gt;)()}{}([][()])}&lt;&gt;)\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X0MjOjZaQzNWszq6ujbWRqO6NhqIgXy7ag2b6lo7TQ3N2upamKJaGzvN//91jRVAEEgZAAA\" rel=\"noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<pre><code># Get ready to push the answer\n(\n\n# Push stack height - 1\n([][()])\n\n# Loop until 0 (until the stack has a height of 1)\n{\n\n  # Pop the old stack height and subtract it \n  #(cancels the loop counter from the final answer)\n  [{}]\n\n  # Pop the top of the stack and subtract the next element from that\n  # Don't include this in the final answer\n  &lt;({}[({})])&gt;\n\n  # If not 0\n  {\n\n    # Pop the difference between the last two numbers\n    # Don't include this in the final answer\n    (&lt;{}&gt;)\n\n    # Add 1 to the final answer\n    ()\n\n  # End if\n  }{}\n\n  # Push stack height - 1\n  ([][()])\n\n# End while\n}\n\n# Switch to the off stack so we don't print anything extra\n&lt;&gt;\n\n# Push the total sum. This is the number of times the if was true\n)\n</code></pre>\n"},{"answer_id":146419,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146419#146419","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 24 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>cat(sum(!!diff(scan())))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/r/PzmxRKO4NFdDUTElMy1Nozg5MU9DEwj@GyoYKRgrmCiYgqHZfwA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<p>Same as the MATL answer, just used <code>sum(!!diff))</code> since there's no <code>nnz</code>.</p>\n"},{"answer_id":146408,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146408#146408","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 4 bytes</h1>\n\n<pre><code>#IẊ≠\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv7/X9nz4a6uR50L/v//H61rrAOCQMogFgA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146414,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146414#146414","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 3 bytes</h1>\n\n<pre><code>¥ĀO\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f//0NIjDf7//0cb6ihAkBEYGccCAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146407,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146407#146407","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, 2 bytes</h1>\n<pre><code>dz\n</code></pre>\n<p><a href=\"https://tio.run/##y00syfn/P6Xq//9oQwUQNAJCUyg0NFcwjgUA\" rel=\"noreferrer\">Try it online!</a> Or <a href=\"https://tio.run/##y00syfmf8D@l6r9LyP/oWK5oAxBWMASTILahgpGCsYIJmAWCRiA@kKdrrACCQMogFgA\" rel=\"noreferrer\">verify all test cases</a>.</p>\n<h3>Explanation</h3>\n<pre><code>     % Implicit input\nd    % Consecutive differences\nz    % Number of nonzeros\n     % Implicit display\n</code></pre>\n"},{"answer_id":146409,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146409#146409","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"noreferrer\">Brain-Flak</a>, 50 bytes</h1>\n\n<pre><code>([][()]){{}({}[({})]){{}&lt;&gt;({}())(&lt;&gt;)}{}([][()])}&lt;&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/XyM6NlpDM1azurpWo7o2GoghHBs7IFNDU1PDxk6zFsiCKgOK//9vqACCRkBoCoWG5grGAA\" rel=\"noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>Outputs nothing for 0, which in brain-flak is equivalent. If this is not acceptable, than append this for <code>+4</code> bytes: <code>({})</code></p>\n\n<p>Explanation:</p>\n\n<pre><code>#Push stack-height-1\n([][()])\n\n#While true:\n{\n\n    #Pop the stack-height-1 off\n    {}\n\n    #If 'a' is the element on top of the stack, and 'b' is the element underneath it, then\n    #Pop 'a' off, and push (a - b)\n    ({}[({})])\n\n    #If (a-b) is not 0...\n    {\n        #Pop (a-b) off\n        {}\n\n        #Switch stacks\n        &lt;&gt;\n\n        #Increment the value on the other stack\n        ({}())\n\n        #Push a 0 back to the main stack\n        (&lt;&gt;)\n\n    #Endif\n    }\n\n    #Pop either (a-b) or the 0 we pushed\n    {}\n\n    #Push stack-height-1\n    ([][()])\n\n#Endwhile\n}\n\n#Toggle to the alternate stack and display the counter\n&lt;&gt;\n</code></pre>\n"},{"answer_id":146410,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146410#146410","body":"<h1><a href=\"https://github.com/JohnEarnest/ok\" rel=\"nofollow noreferrer\">K (oK)</a>, 8 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>+/1_~~':\n</code></pre>\n\n<p><a href=\"https://tio.run/##y9bNz/7/X1vfML6uTt3KUAEEjYDQFAoNzRWM//8HAA\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>+/1_~~':1 1 1 2 2 5 5 5 5 17 3\n4\n+/1_~~':()\n0\n+/1_~~':-3 3 3 -3 0\n3\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Interpreted right-to-left:</p>\n\n<pre><code>+/1_~~': / the solution\n     ~': / equal each-previous\n    ~    / not (ie differ)\n  1_     / 1 drop, remove first as this is different to null\n+/       / sum up trues\n</code></pre>\n"},{"answer_id":122748,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122748#122748","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, <s>25</s> 18 bytes</h1>\n\n<p>-1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/58230/brhfl\">brhfl</a></p>\n\n<pre><code>Z[1-d0&lt;L32P]sLd0&lt;L\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0n@b/8/KtpQN8XAxsfYKCC22AfE@v8/OikxDwhj/wMA\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>Z[1-d0&lt;L32P]sLd0&lt;L\n                    Implicit input\nZ                   Get length\n [         ]sL      Create a funcion and saves in L\n              d0&lt;L  If length &gt; 0, call L\n  1-                Subtract 1 from the length\n    d0&lt;L            If length &gt; 0, call L\n        32P         Print space\n</code></pre>\n"},{"answer_id":146405,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146405#146405","body":"<h2>JavaScript (ES6), 35 bytes</h2>\n\n<pre><code>a=&gt;a.filter((e,i)=&gt;e-a[i+1]).length\n</code></pre>\n"},{"answer_id":146404,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146404#146404","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, 42 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:sum(x!=y for x,y in zip(a,a[1:]))\n</code></pre>\n\n<p><a href=\"https://tio.run/##HUnLCoUgEN33FdNOYYK0VkJfYi4mLnKFMukB2c9bE4fzTvn4r1EXP4xlpmX6EZDZz0Vc9ZDBrxtcmCFEuEMShGSVcVIWPohn69C2TFSfclaoscP@SwzN/W1Nh4zXWmcqgLSFeIAXJMsD\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":146403,"question_id":146402,"link":"https://codegolf.stackexchange.com/questions/146402/count-the-changes-in-an-array/146403#146403","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 3 bytes</h1>\n<pre><code>ITL\n</code></pre>\n<p><a href=\"https://tio.run/##y0rNyan8/98zxOf////RhjoKEGQERqZIyNBcR8E4FgA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n<h2>How it works</h2>\n<pre>\nITL  - Full program.\n\nI    - Increments (deltas).\n T   - Get the indices of truthy values (gets the indexes of non-0 elements).\n  L  - Length.\n</pre>\n"},{"answer_id":145879,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/145879#145879","body":"<h1>SmileBASIC, 45 bytes</h1>\n<pre><code>DEF M A\nL=LEN(A)/2SORT A?(A[L-.5]+A[L])/2\nEND\n</code></pre>\n<p>Gets the average of the elements at floor(length/2) and floor(length/2-0.5)\nVery simple, but I was able to save 1 byte by moving things around:</p>\n<pre><code>DEF M A\nSORT A    &lt;- extra line break\nL=LEN(A)/2?(A[L-.5]+A[L])/2\nEND\n</code></pre>\n"},{"answer_id":145877,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/145877#145877","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 2 bytes</h1>\n\n<pre><code>Æṁ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8//9w28Odjf///4821DPVIYR1gZQBCAB5xkBsEgsA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":64350,"question_id":64315,"link":"https://codegolf.stackexchange.com/questions/64315/separate-a-list-into-even-indexed-and-odd-indexed-parts/64350#64350","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>concat.foldr(\\x[l,r]-&gt;[x:r,l])[[],[]]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P802OT8vObFELy0/J6VII6YiOkenKFbXLrrCqkgnJ1YzOjpWJzo29n9uYmaegq1CQVFmXomCikKaQrShnp5l7H8A\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>The <code>foldr</code> recursively builds up the even list and odd list. Prepending an element to the list is updated by prepending it to the odd list and calling it the new even list, and calling the previous even list the new odd list. Then, the pair <code>[l,r]</code> is concaternated to <code>l++r</code>. </p>\n\n<p>Thanks to Ørjan Johansen for saving 5 bytes using two-element lists in place of tuples.</p>\n\n<hr>\n\n<p><strong>42 bytes:</strong></p>\n\n\n\n<pre class=\"lang-haskell prettyprint-override\"><code>f l=[x|p&lt;-[even,odd],(i,x)&lt;-zip[0..]l,p i]\n</code></pre>\n\n<p>Adds indices to the list <code>l</code> and filters either the even or the odd ones.</p>\n\n<hr>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>g(a:_:l)=a:(g l)\ng l=l\nf l=g l++(g$drop 1 l)\n</code></pre>\n\n<p>Yet another format, for 44. The function <code>g</code> takes every even-indexed element. The odd indices are gotten by first dropping an element, then applying <code>g</code>. If <code>l</code> was guaranteed non-empty, we could safely just do <code>tail</code> for 41</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>g(a:_:l)=a:(g l)\ng l=l\nf l=g l++g(tail l)\n</code></pre>\n"},{"answer_id":144959,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/144959#144959","body":"<h1>Casio-Basic, 42 bytes</h1>\n\n<pre><code>sum(seq(piecewise(n/x=int(n/x),x,0),x,1,n\n</code></pre>\n\n<p>The <code>piecewise</code> acts as a shorter <code>If</code> statement. <code>seq</code> loops values of x from 1 to n, and the <code>piecewise</code> returns x if the number is a factor, otherwise it returns 0. <code>sum</code> adds the whole list together to output the total.</p>\n\n<p>41 bytes for the function, +1 to add <code>n</code> in the parameters box.</p>\n"},{"answer_id":142077,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142077#142077","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>31</s> 26 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>function(N)(x=1:N)%*%!N%%x\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/qfZvs/rTQvuSQzP0/DT1OjwtbQyk9TVUtV0U9VteJ/moahgeZ/AA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n\n<p>Returns a <code>1x1</code> matrix.</p>\n\n<p>Computes <code>!N%%x</code> maps elements <code>d</code> of <code>1:N</code> by: <code>d-&gt;(1 if d divides N, 0 otherwise)</code></p>\n\n<p>Then <code>x%*%x!N%%x</code> is the matrix product of <code>1:N</code> which results in the sum of <code>x</code> where <code>!N%%x</code> is <code>1</code>. Neat! Technically a port of Luis Mendo's <a href=\"https://codegolf.stackexchange.com/a/142151/67312\">Octave answer</a> but I only saw that after I thought of this.</p>\n\n<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>+ numbers, 14 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>numbers::Sigma\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/r/P680Nym1qNjKKjgzPTfx/38A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142085,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142085#142085","body":"<h1><a href=\"https://github.com/ShnapLang/Shnap\" rel=\"nofollow noreferrer\">Shnap</a>, <s>44</s> 43 bytes</h1>\n<p>-1 bye thanks to Mr. Xcoder (lol I was outgolfed in my own language)</p>\n<pre><code> $n return:{s=0for d:range(n+1)if n%d&lt;1s+=d}\n</code></pre>\n<p>This is a function (<code>$</code> starts a function in Shnap).</p>\n<p><a href=\"https://tio.run/##K87ISyz4n2b7XyVPoSi1pLQoz6q62NYgLb9IIcWqKDEvPVUjT9tQMzNNIU81xcawWNs2pfY/SDbaXMfQVMfIQMdQxzRWoaAoM68kJ08jTSOzRFPzPwA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Explanation:</p>\n<pre><code>$ n                        //Start function with parameter n\n    return: {              //Technically, we are returning a scope-block, which evaluates to the last statement run\n        s = 0              //Our result\n        for d : range(n+1) //For each value in the iterator range(n+1)\n            if n % d &lt; 1  // If n is divisible by d\n                s += d     // Add d to the sum\n                           // Since (s += d) returns (s + d), and a scope-block returns the last run statement, this will be the last statement and equal to our result\n    }\n</code></pre>\n<hr />\n<h1>Noncompeting, 19 bytes</h1>\n<p>After many language updates, this can now be reduced to a measly 19 bytes:</p>\n<pre><code>$n=&gt;sum(factors(n))\n</code></pre>\n<p><a href=\"https://tio.run/##K87ISyz4n2b7XyXP1q64NFcjLTG5JL@oWCNPU/N/Wn6RQrS5jqGpjpGBjqGOaaxCQVFmXklOnkaaRmYJUAEA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":137175,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137175#137175","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <s>115</s> 113 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>a,i,k=input(),0,[]\nwhile 1:\n&#9;if i==len(a):print-1;break\n&#9;elif a[i]not in k:k+=[a[i]]\n&#9;else:print a[i];break\n&#9;i+=1\n</code></pre>\n\n<p><a href=\"https://tio.run/##NYtLCoMwEEDX5hRZKk6hsa5S5iQhiwhTHBLGYCPi6dPa4vZ98lHmRYZaAzBEZMlbaTu4g/NqnzmRNlY1/NKMmEja0Nm8spSbeU4rhagaSl8bHHtZimbR0cYe3Qn8Kd/0H37J9XCPplZnYIAHjDD6Dw\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":144676,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/144676#144676","body":"<h1><a href=\"https://pugjs.org/\" rel=\"nofollow noreferrer\">Pug</a>, 30 bytes</h1>\n\n<h2>Without input (infinite)</h2>\n\n<pre class=\"lang-none prettyprint-override\"><code>-a=b=1\nwhile 1\n =a\n -b=a+(a=b)\n</code></pre>\n\n<p>Will produce an output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1123581321345589144233377610...\n</code></pre>\n\n<hr>\n\n<h3>With an output delimiter: 34 bytes</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>-a=b=1\nwhile 1\n =a+\" \"\n -b=a+(a=b)\n</code></pre>\n\n<p>Will produce an output:</p>\n\n<pre><code>1 1 2 3 5 8 13 21 34 55 89...\n</code></pre>\n\n<hr>\n\n<h3>With HTML as an output delimiter: 31 bytes</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>-a=b=1\nwhile 1\n p=a\n -b=a+(a=b)\n</code></pre>\n\n<p>Although I doubt this is compliant to the challenge's rules, this will produce:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;p&gt;1&lt;/p&gt;\n&lt;p&gt;1&lt;/p&gt;\n&lt;p&gt;2&lt;/p&gt;\n&lt;p&gt;3&lt;/p&gt;\n&lt;p&gt;5&lt;/p&gt;\n&lt;p&gt;8&lt;/p&gt;\n&lt;p&gt;13&lt;/p&gt;\n&lt;p&gt;21&lt;/p&gt;\n&lt;p&gt;34&lt;/p&gt;\n&lt;p&gt;55&lt;/p&gt;\n...\n</code></pre>\n\n<hr>\n\n<p><br></p>\n\n<h2>With input (as a funcion; finite)</h2>\n\n<h3>Without an output delimiter, 47 bytes</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>mixin f(n)\n -a=b=1\n while n--\n  =a\n  -b=a+(a=b)\n</code></pre>\n\n<p>For an input <code>n=10</code>, for example, it produces:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>11235813213455\n</code></pre>\n\n<p><br></p>\n\n<p>Just as it is with the infinite series versions:</p>\n\n<ul>\n<li>+4 bytes (<code>+\" \"</code>) = <strong>51 bytes</strong> for a space delimiter</li>\n<li>+1 byte (<code>p</code>) = <strong>48 bytes</strong> for an HTML <code>&lt;p&gt;</code> tag delimiter</li>\n</ul>\n"},{"answer_id":144672,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/144672#144672","body":"<h1>VBA, 28 Bytes</h1>\n\n<p>Anonymous VBE immediate window function that takes no input and infinitely outputs the <code>n</code>-th term of the Fibonacci Sequence while iterating <code>n</code></p>\n<pre class=\"lang-vb prettyprint-override\"><code>i=1:Do:k=i+j:i=j:j=k:?j:Loop\n</code></pre>\n"},{"answer_id":110149,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/110149#110149","body":"<h1><a href=\"https://github.com/cyoce/J-uby\" rel=\"nofollow noreferrer\">J-uby</a>, <s>8</s> 6 bytes</h1>\n\n\n\n<pre class=\"lang-rb prettyprint-override\"><code>:++2.*\n</code></pre>\n\n<p>In J-uby, <code>+</code> on a proc (or a symbol in this case, as symbols can be used as procs in J-uby), defines a recurrence relation. It takes a starter array, and then produces a function that takes <code>n</code>, and then applies itself to the starter array <code>n</code> times, pushing the result to the end and removing the first element. Naturally <code>:+ + [0,1]</code> is a recurrence relation that starts with elements <code>0, 1</code> and adds them together <code>n</code> times.</p>\n\n<p><code>2.*</code> is shorthand for <code>[0,1]</code></p>\n"},{"answer_id":76231,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/76231#76231","body":"<h1><a href=\"https://github.com/cyoce/Cy\" rel=\"nofollow noreferrer\">Cy</a>, 11 + 1 (<code>-p</code> flag) = 12 bytes (non-competing)</h1>\n\n<p>This is going for the infinite stream</p>\n\n<pre><code>0 1 $&amp;+ &amp;do\n</code></pre>\n\n<p>(the <code>-p</code> flag implicitly prints every non-block value pushed to the stack)</p>\n\n<p>Literally,</p>\n\n<ul>\n<li>push 0\n\n<ul>\n<li>print it</li>\n</ul></li>\n<li>push 1\n\n<ul>\n<li>print it</li>\n</ul></li>\n<li>forever\n\n<ul>\n<li>push the sum of the last two items</li>\n<li>print it</li>\n</ul></li>\n</ul>\n\n<p><br><br>\nWithout the <code>-p</code> flag semi-cheat:</p>\n\n<h1><a href=\"https://github.com/cyoce/Cy\" rel=\"nofollow noreferrer\">Cy</a>, 24 bytes</h1>\n\n<pre><code>0 &amp;:&lt; 1 &amp;:&lt; {&amp;+ &amp;:&lt;} &amp;do\n</code></pre>\n"},{"answer_id":144618,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/144618#144618","body":"<h1>Chip-8, 36 bytes</h1>\n<pre><code>6301 'LD v3,1\n6D05 'LD vD,5\n6E0A 'LD vE,A\n8344 'ADD v3,v4\nA200 'LD I,200\nF333 'LDD [I],v3\n8343 'XOR v3,v4\n8433 'XOR v4,v3\n8343 'XOR v3,v4\nF265 'LD v2,[I]\nF029 'LDF I,v0\n00E0 'CLS\nDFF5 'DRW vF,vF,5\nF129 'LDF I,v1\nDDF5 'DRW vD,vF,5\nF229 'LDF I,v2\nDEF5 'DRW vE,vF,5\n1206 'JMP 206\n</code></pre>\n<p>Displays Fibonacci numbers (up to 233) in decimal. (It might be shorter to use hexadecimal, but I think that's cheating)</p>\n<p>This one writes the numbers into memory:</p>\n<pre><code>6001\nA300\n8014\nF055\n8013\n8103\n8013\n1204\n</code></pre>\n<p>... but it's actually longer than valid numbers it writes:</p>\n<pre><code>01 01\n02 03\n05 08\n0D 15\n22 37\n59 90\nE9 79 (overflow)\n</code></pre>\n"},{"answer_id":144492,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/144492#144492","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 63 bytes</h1>\n\n<pre><code>scan [gets stdin] %c%d h v\nputs [expr ($h+$v)%2?\"light\":\"dark\"]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0nO@f@/ODkxTyE6PbWkWKG4JCUzL1ZBNVk1RSFDoYyroBQoGJ1aUVCkoKGSoa1SpqlqZK@Uk5meUaJkpZSSWJStFPv/f4bFfwA\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n"},{"answer_id":143457,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/143457#143457","body":"<h2>Clojure, 53 bytes</h2>\n\n<pre><code>#(apply +(for[i(range 1(inc %)):when(=(mod % i)0)]i))\n</code></pre>\n"},{"answer_id":142819,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142819#142819","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, 96 bytes</h1>\n<pre><code>((({})&lt;&gt;){&lt;(([()]{})){&lt;&gt;(({})(&lt;()&gt;))&lt;&gt;{(({})){({}[()])&lt;&gt;}{}}{}&lt;&gt;([{}()]({})){((&lt;{}{}&gt;))}}{}&gt;{}})\n</code></pre>\n<p><a href=\"https://tio.run/##LYsxCoBADAS/sylsrCxCPnJYnIUgioXtkrfHPRFCyM5Otqcf97Rf/awCwDQPowMNtirpjg/DYWFq@UWj9nBEkqmR15gifw2nqF5GGVKsal5e\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n<h2>Explanation:</h2>\n<p><sub>Now outdated by improvements.</sub></p>\n<p>The heart of the algorithm is this:</p>\n<pre><code>({}(&lt;&gt;))&lt;&gt;{(({})){({}[()])&lt;&gt;}{}}{}&lt;&gt;([{}()]({})) turns |N, M...| into |N mod M, M...|\n{((&lt;{}{}&gt;))} if the top of stack is not zero, replace it and the second with zero\n</code></pre>\n<p>That is a modification on mod that will give us <code>M</code> if it is a factor of <code>N</code> and <code>0</code> otherwise. Full code is below.</p>\n<pre><code>((({})&lt;&gt;) place input, N on both stacks\n{ Loop to find factors\n &lt;\n  (([()]{})) Decrement and Duplicate; get next factor to check\n  { if not zero\n   (&lt;&gt;({})&lt;&gt;) Copy N from other stack\n   ({}(&lt;&gt;))&lt;&gt;{(({})){({}[()])&lt;&gt;}{}}{}&lt;&gt;([{}()]({})){((&lt;{}{}&gt;))} Code explained above\n  }\n  {} drop the zero\n &gt;\n {} add the factor\n}) push the sum\n</code></pre>\n"},{"answer_id":143168,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/143168#143168","body":"<h1><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow noreferrer\">Jq 1.5</a>, <s>69</s> <s>68</s> <s>66</s> 64  bytes</h1>\n\n<pre><code>def L:length;$x|if L&lt;1then empty elif L&lt;2then\"\"else L-1|.*\" \"end\n</code></pre>\n\n<p>This is longer then usual to compensate for newline jq normally emits and the odd behavior of <code>*</code> with N&lt;2</p>\n\n<p>Sample runs:</p>\n\n<pre><code>$ jq -Mrn --arg x 'Hello, World!' 'def L:length;$x|if L&lt;1then empty elif L&lt;2then\"\"else L-1|.*\" \"end'\n\n$ jq -Mrn --arg x 'Hello, World!' 'def L:length;$x|if L&lt;1then empty elif L&lt;2then\"\"else L-1|.*\" \"end' | wc -c\n      13\n$ echo -n 'def L:length;$x|if L&lt;1then empty elif L&lt;2then\"\"else L-1|.*\" \"end' | wc -c\n      64\n</code></pre>\n\n<p>Shout out to <a href=\"https://codegolf.stackexchange.com/users/73111/jonathan-frech\">Jonathan Frech</a> for finding 3 superfluous spaces!</p>\n"},{"answer_id":143160,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/143160#143160","body":"<h1><a href=\"https://github.com/LyricLy/Ly\" rel=\"nofollow noreferrer\">Ly</a>, 9 bytes</h1>\n\n<pre><code>iy[' o,];\n</code></pre>\n\n<p><a href=\"https://tio.run/##y6n8/z@zMlpdIV8n1vr//5LU4hIA\" rel=\"nofollow noreferrer\" title=\"Ly – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>iy[' o,];\n\niy        # push length of input\n  [    ]  # while loop\n   ' o    # output a space\n      ,   # decrement input length\n        ; # terminate (avoids implicit output)\n</code></pre>\n"},{"answer_id":143161,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/143161#143161","body":"<h1><a href=\"https://github.com/TehFlaminTaco/RProgN-2\" rel=\"nofollow noreferrer\">RProgN 2</a>, 3 bytes</h1>\n\n<pre><code>L•*\n</code></pre>\n\n<p>Uncreative solution is uncreative.</p>\n\n<p>Just gets the length of the input, and multiplies <code>•</code>, which is predefined to be a space, by it.</p>\n\n<p><a href=\"https://tio.run/##Kyooyk/P0zX6/9/nUcMirf///2ek5mUrgAgA\" rel=\"nofollow noreferrer\" title=\"RProgN 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":143156,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/143156#143156","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, 18 bytes</h1>\n\n<pre><code>?Zd[9P1-d0&lt;r]sr0&lt;r\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0n@/98@KiXaMsBQN8XApii2uAhI/v8fnZFaqZCbnxsLAA\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n"},{"answer_id":143134,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/143134#143134","body":"<h1><a href=\"https://pythonhosted.org/PyFunge/\" rel=\"nofollow noreferrer\">Befunge-98 (PyFunge)</a>, 5 bytes</h1>\n\n<pre><code>#@~a,\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0pNK81LT9W1tNAtqAQz//9XdqhL1Pn/X0FBwSU/T72Eyy2/KD21RCExKb@0hMu1IrO4JDMvnSs8I7MktbggMTlVEagSAA\" rel=\"nofollow noreferrer\" title=\"Befunge-98 (PyFunge) – Try It Online\">Try it online!</a></p>\n\n<p>For every character in the input (<code>#@~</code>), this prints a new line (<code>a,</code>).</p>\n"},{"answer_id":122823,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122823#122823","body":"<h1>Pyth, 3 bytes</h1>\n<pre><code>*dl\n</code></pre>\n<p><a href=\"https://pyth.herokuapp.com/?code=%2adl&amp;input=%22ab%22&amp;debug=0\" rel=\"nofollow noreferrer\">Try it!</a></p>\n<p>Python equivalent: <code>len(input())*&quot; &quot;</code></p>\n<pre><code>jmk\n</code></pre>\n<p><a href=\"https://pyth.herokuapp.com/?code=jmk&amp;input=%22abc%22&amp;debug=0\" rel=\"nofollow noreferrer\">Try this!</a></p>\n<p>Python equivalent: <code>&quot;\\n&quot;.join(map(&quot;&quot;, input()))</code></p>\n<pre><code>smb\n</code></pre>\n<p><a href=\"https://pyth.herokuapp.com/?code=smb&amp;input=%22abcd%22&amp;debug=0\" rel=\"nofollow noreferrer\">Try that!</a></p>\n<p>Python equivalent: <code>&quot;&quot;.join(map(&quot;\\n&quot;,input())</code></p>\n<pre><code>VQk\n</code></pre>\n<p><a href=\"https://pyth.herokuapp.com/?code=VQk&amp;input=%22abcdefghijklmnopqrstuvwxyz%22&amp;debug=0\" rel=\"nofollow noreferrer\">Try!</a></p>\n<p>Python equivalent: <code>For N in input():print(&quot;&quot;)</code></p>\n"},{"answer_id":143051,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/143051#143051","body":"<h1><a href=\"https://github.com/TehFlaminTaco/RProgN-2\" rel=\"nofollow noreferrer\">RProgN 2</a>, 2 bytes</h1>\n\n<pre><code>ƒ*\n</code></pre>\n\n<p>Another language with built ins for <code>divisors</code> and <code>product</code>.</p>\n\n<p><a href=\"https://tio.run/##Kyooyk/P0zX6///YJK3///8bmQAA\" rel=\"nofollow noreferrer\" title=\"RProgN 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":122722,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122722#122722","body":"<h1>Excel VBA, <sub><s>17</s></sub> 15 Bytes</h1>\n\n\n\n<p>Anonymous VBE immediate window funtion that takes input from cell <code>[A1]</code> and outputs spaces of length of the input to the VBE immediate window</p>\n\n<pre class=\"lang-vba prettyprint-override\"><code>?Spc([Len(A1)])\n</code></pre>\n"},{"answer_id":143042,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/143042#143042","body":"<h1>Excel VBA, 48 Bytes</h1>\n\n<p>Anonymous VBE immediate window function that takes input from range <code>[A1]</code> and outputs to the VBE immediate window</p>\n<pre class=\"lang-vb prettyprint-override\"><code>p=1:For i=1To[A1]:p=p*IIf([A1]mod i,1,i):Next:?p\n</code></pre>\n"},{"answer_id":142110,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142110#142110","body":"<h1><a href=\"https://github.com/officialaimm/recursiva\" rel=\"nofollow noreferrer\">Recursiva</a>, <s>20</s> 18 bytes</h1>\n\n<pre><code>smBa++'%'Va'a:0!a'\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0pNLi0qzixL/P@/ONcpUVtbXVU9LFE90cpAMVH9/38jAwA\" rel=\"nofollow noreferrer\" title=\"Recursiva – Try It Online\">Try it online!</a></p>\n\n<h1>Explanation:</h1>\n\n<pre><code>smBa++'%'Va'a:0!a' - Input to a; 20\ns                    - sum up; 42\n m                   - map with; [1, 0, 3, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15]\n  Ba                 - Range; [1,2..20]\n    ++'%'Va'a:0!a'   - function, evaluates to 0 if param cannot divide a i.e. 20\n</code></pre>\n"},{"answer_id":142852,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142852#142852","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 29 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;x{(1..x).sum{|r|x%r&gt;0?0:r}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf166iWsNQT69CU6@4NLe6pqimQrXIzsDewKqotvZ/QWlJsUJatHksF5RlaApnGhnAmQhBw9j/AA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":141842,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/141842#141842","body":"<h1><a href=\"https://github.com/officialaimm/recursiva\" rel=\"nofollow noreferrer\">Recursiva</a>, 16 bytes</h1>\n\n<pre><code>&lt;a3:1!+#~a$#~~a$\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0pNLi0qzixL/P/fJtHYylBRW7kuUUW5Dkj8/29oBAA\" rel=\"nofollow noreferrer\" title=\"Recursiva – Try It Online\">Try it online!</a></p>\n\n<h1>Explanation:</h1>\n\n<pre><code>&lt;a3:1!+#~a$#~~a$\n&lt;a3:1            - If a&lt;3 then 1\n     !           - Else\n      +          - Sum\n       #~a$      - Call Self but with parameter a-1, will be replaced by result\n           #~~a$ - Call self but with parameter a-2, will be replaced by result      \n</code></pre>\n"},{"answer_id":117312,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/117312#117312","body":"<h1>Axiom, 35 bytes</h1>\n\n<pre><code>a(0)==0;a(1)==1;a(n)==a(n-1)+a(n-2)\n</code></pre>\n\n<p>above it is one succession defined by Recurrence... Results</p>\n\n<pre><code>(7) -&gt; [a(i)  for i in 0..20]\n   (7)  [0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765]\n</code></pre>\n"},{"answer_id":71126,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/71126#71126","body":"<h1><a href=\"https://github.com/morganthrapp/Pylons-lang\" rel=\"nofollow noreferrer\">Pylons</a>, 13 bytes</h1>\n<p>Takes the number of iterations as a command line argument to the interpreter.</p>\n<pre><code>11fA..+@{A,i}\n</code></pre>\n<p>How it works:</p>\n<pre><code>11  # Pushes 1, 1 to the stack.\nfA#.##.#+@  # Creates a function &quot;A&quot; that takes the top two elements of the stack and adds them.\n{A,i}  # Calls A sys.argv[1] times.\n</code></pre>\n"},{"answer_id":140580,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/140580#140580","body":"<h2><a href=\"http://www.dangermouse.net/esoteric/piet.html\" rel=\"nofollow noreferrer\">Piet</a>, 17 codels</h2>\n<p>Not sure how to count this one. There are 17 pixels within the code that count as instructions/control flow modifiers (18 if you count the required NOP to get the color back to the correct cycle for the loop).</p>\n<p>Shown here at 20 pixels per codel:</p>\n<p><a href=\"https://i.stack.imgur.com/ZEifF.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ZEifF.png\" alt=\"Short Fibonacci in Piet\" /></a></p>\n<p>Explanation in pseudocode:</p>\n<pre><code>push 1\npush 1\npush 1\npush 1\nout (number)\nout (number)\nSTART OF INFINITE LOOP\nduplicate\npush 3\npush 1\nroll ; the last three instructions amount to &quot;rotate the top to the third spot once&quot;\nadd\nduplicate\nout (number)\nEND OF INFINITE LOOP\n</code></pre>\n<p>This outputs the Fibonacci sequence (starting with 1,1) without delimiters.</p>\n<p>Actual image (way too small to see clearly):\n<a href=\"https://i.stack.imgur.com/PLJB0.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/PLJB0.png\" alt=\"SMALLER Fibonacci in Piet\" /></a></p>\n"},{"answer_id":142356,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142356#142356","body":"<h1>APL, 9 bytes</h1>\n<pre><code>+/⍳×0=⍳|⊢\n</code></pre>\n<p><a href=\"http://tryapl.org/?a=%28+/%u2373%D70%3D%u2373%7C%u22A2%2942&amp;run\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h2>How? (input <strong>n</strong>)</h2>\n<ul>\n<li><code>⍳|⊢</code>, <code>[n mod 1, ..., n mod n]</code></li>\n<li><code>0=</code>, <code>[0 == n mod 1, ... 0 == n mod n]</code></li>\n<li><code>⍳×</code>, <code>[1*(0 == n mod 1), ..., n*(0 == n mod n)]</code></li>\n<li><code>+/</code>, <code>sum([1*(0 == n mod 1), ..., n*(0 == n mod n)])</code></li>\n</ul>\n"},{"answer_id":142355,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142355#142355","body":"<h1><a href=\"https://bitbucket.org/zacharyjtaylor/my-language\" rel=\"nofollow noreferrer\">MY</a>, 4 bytes</h1>\n\n<pre><code>ωḊΣ↵\n</code></pre>\n\n<p><a href=\"https://tio.run/##y638//9858MdXecWP2rb@v//fxMjAA\" rel=\"nofollow noreferrer\" title=\"MY – Try It Online\">Try it online!</a></p>\n\n<h2>How?</h2>\n\n<p>It's really simple: <code>ω</code> is the argument, <code>Ḋ</code> is divisors, <code>Σ</code> is sum, <code>↵</code> is output. I thought I already answered this challenge, for some reason.</p>\n"},{"answer_id":84497,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/84497#84497","body":"<h2>05AB1E, 7 bytes</h2>\n<p>Code:</p>\n<pre><code>1$&lt;FDr+\n</code></pre>\n<p><a href=\"http://05ab1e.tryitonline.net/#code=MSQ8RkRyKw\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":66839,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/66839#66839","body":"<h1><a href=\"http://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 3 bytes</h1>\n\n<pre><code>+¡1\n</code></pre>\n\n<p><a href=\"http://jelly.tryitonline.net/#code=K8KhMQ&amp;input=MjA\" rel=\"noreferrer\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>+¡1    Niladic link. No implicit input.\n       Since the link doesn't start with a nilad, the argument 0 is used.\n\n  1    Yield 1.\n+      Add the left and right argument.\n ¡     For reasons‡, read a number n from STDIN.\n       Repeatedly call the dyadic link +, updating the right argument with\n       the value of the left one, and the left one with the return value.\n</code></pre>\n\n<p><sup>‡</sup> <code>¡</code> peeks at the two links to the left. Since there is only one, it has to be the body of the loop. Therefore, a number is read from input. Since there are no command-line arguments, that number is read from STDIN.</p>\n"},{"answer_id":142226,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142226#142226","body":"<h1>Axiom, 42 bytes</h1>\n\n<pre><code>f(x:PI):PI==(x=1=&gt;1;reduce(+,divisors(x)))\n</code></pre>\n\n<p>results</p>\n\n<pre><code>(19) -&gt; [[i,f(i)] for i in [7,15,20,42,1,5] ]\n   (19)  [[7,8],[15,24],[20,42],[42,96],[1,1],[5,6]]\n                                          Type: List List PositiveInteger\n</code></pre>\n"},{"answer_id":142219,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142219#142219","body":"<h2>Batch, 70 bytes</h2>\n\n<pre><code>@set/ai=%2+1,s=%3+i*!(%1%%i)\n@if not %i%==%1 %0 %1 %i% %s%\n@echo %s%\n</code></pre>\n\n<p>Alternative solution, also 70 bytes:</p>\n\n<pre><code>@set s=0\n@for /l %%i in (1,1,%1)do @set/as+=%%i*!(%1%%%%i)\n@echo %s%\n</code></pre>\n"},{"answer_id":142078,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142078#142078","body":"<h1>Mathematica, 14 bytes</h1>\n<pre><code>Tr@Divisors@#&amp;   \n</code></pre>\n<p>or an answer by @Loki</p>\n<h1>Mathematica, 17 bytes</h1>\n<pre><code>DivisorSum[#,#&amp;]&amp;\n</code></pre>\n"},{"answer_id":142082,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142082#142082","body":"<h1>Javascript, <s>54</s> 44 bytes</h1>\n\n<pre><code>n=&gt;[...Array(x=n)].reduce(y=&gt;y+!(n%x)*x--,0)\n</code></pre>\n\n<p>Saved 10 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/58974/shaggy\">Shaggy</a></p>\n\n<h3>Try it online!</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const f = n=&gt;[...Array(x=n)].reduce(y=&gt;y+!(n%x)*x--,0)\r\n\r\nconsole.log(f(7))\r\nconsole.log(f(15))\r\nconsole.log(f(20))\r\nconsole.log(f(1))\r\nconsole.log(f(5))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":142149,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142149#142149","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 6 bytes</h1>\n\n<pre><code>t:\\~fs\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/v8Qqpi6t@P9/IwMA\" rel=\"nofollow noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n\n<p>-4 bytes thanks to @LuisMendo</p>\n\n<h1>10 bytes</h1>\n\n<p>My previous solution using a loop</p>\n\n<pre><code>:\"G@\\~@*vs\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/30rJ3SGmzkGrrPj/fyMDAA\" rel=\"nofollow noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n\n<h1>3 bytes</h1>\n\n<p>Using built-in</p>\n\n<pre><code>Z\\s\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/Pyqm@P9/I4P/AA\" rel=\"nofollow noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142170,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142170#142170","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 36 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)1..$a|%{$j+=$_*!($a%$_)};$j\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNyfn/vyCxKDFXQyVR01BPTyWxRrVaJUvbViVeSxEopqoSr1lrrZL1//9/IwMA\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)1..$a|%{$j+=$_*!($a%$_)};$j\nparam($a)                            # Takes input $a\n         1..$a|%{               };   # For-loop from 1 up to $a\n                          $a%$_      # Modulo, if this is zero we've hit a divisor\n                        !(     )     # Take the Boolean-not of that. If a divisor, it's 1\n                     $_*             # Multiply the current number by that Boolean\n                                     # Only if it's a divisor will this be non-zero\n                 $j+=                # Add it into our accumulator\n                                  $j # Output our accumulator\n</code></pre>\n"},{"answer_id":142169,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142169#142169","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 30 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f n=sum[i|i&lt;-[1..n],n`mod`i&lt;1]\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P00hz7a4NDc6sybTRjfaUE8vL1YnLyE3PyUh08Yw9n9uYmaegq1CQWlJcEmRT56CikJxRn45kMpNLFDQiMlT0LVT0AAL5WkqaGsrKIEElEAsiKgG0HxNTU2FaHMdBUNTHQUjAyCto2Aa@x8A\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142167,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142167#142167","body":"\n<h2><a href=\"http://csharppad.com/gist/6a95f4fae0f4d97a109336c5890b5ade\" rel=\"nofollow noreferrer\">C#</a>, 56 bytes</h2>\n<hr />\n<h3>Data</h3>\n<ul>\n<li><strong>Input</strong> <code>Int32</code> <code>i</code> A number</li>\n<li><strong>Output</strong> <code>Int32</code> The sum of the divisors of the number</li>\n</ul>\n<hr />\n<h3>Golfed</h3>\n<pre class=\"lang-cs prettyprint-override\"><code>i=&gt;{int s=0,d=1;for(;d&lt;=i;d++)s+=i%d&lt;1?i/d:0;return s;};\n</code></pre>\n<hr />\n<h3>Ungolfed</h3>\n<pre class=\"lang-cs prettyprint-override\"><code>i =&gt; {\n    int\n        s = 0,\n        d = 1;\n        \n    for( ; d &lt;= i; d++ )\n        s += i % d &lt; 1 ? i / d : 0;\n    \n    return s;\n};\n</code></pre>\n<hr />\n<h3>Ungolfed readable</h3>\n<pre class=\"lang-cs prettyprint-override\"><code>// Takes an int\ni =&gt; {\n    // Initializes the sum 's' and divider 'd' vars\n    int\n        s = 0,\n        d = 1;\n        \n    // Cycles each number lower than the the number 'i'\n    for( ; d &lt;= i; d++ )\n    \n        // Sums the result of the division between 'i' and 'd' if the modulus is 0\n        s += i % d &lt; 1 ? i / d : 0;\n    \n    // Returns the sum\n    return s;\n};\n</code></pre>\n<hr />\n<h3>Full code</h3>\n<pre class=\"lang-cs prettyprint-override\"><code>using System;\nusing System.Collections.Generic;\n\nnamespace TestBench {\n    public class Program {\n        // Methods\n        static void Main( string[] args ) {\n            Func&lt;Int32, Int32&gt; f = i =&gt; {\n                int s = 0, d = 1;\n\n                for( ; d &lt;= i; d++ )\n                    s += i % d &lt; 1 ? i / d : 0;\n\n                return s;\n            };\n\n            List&lt;Int32&gt;\n                testCases = new List&lt;Int32&gt;() {\n                    7,\n                    15,\n                    20,\n                    42,\n                    1,\n                    5,\n                };\n\n            foreach( Int32 testCase in testCases ) {\n                Console.WriteLine( $&quot; INPUT: {testCase}\\nOUTPUT: {f( testCase )}&quot; );\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n</code></pre>\n<hr />\n<h3>Releases</h3>\n<ul>\n<li><strong>v1.0</strong> - <code>56 bytes</code> - Initial solution.</li>\n</ul>\n<hr />\n<h3>Notes</h3>\n<ul>\n<li>None</li>\n</ul>\n"},{"answer_id":142076,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142076#142076","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 2 bytes</h1>\n\n<pre><code>Æs\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8//9wW/H////NAQ\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<p>Built-in that does exactly as wanted.</p>\n"},{"answer_id":142153,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142153#142153","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, 16 bytes</h1>\n<pre><code>ri:X{)_X\\%!*}%:+\n</code></pre>\n<p><a href=\"https://tio.run/##S85KzP3/vyjTKqJaMz4iRlVRq1bVSvv/fyMDAA\" rel=\"nofollow noreferrer\" title=\"CJam – Try It Online\"><strong>Try it online!</strong></a></p>\n<h3>Explanation</h3>\n<pre><code>ri                 e# Read integer, n\n  :X               e# Write to variable X\n    {       }%     e# Map this block over the array [0 1 ... n-1]\n     )             e# Increment current value. Will give 1, 2, ..., n\n      _            e# Duplicate\n       X           e# Push input\n        \\          e# Swap\n         %         e# Modulus\n          !        e# Negate\n           *       e# Multiply\n              :+   e# Sum of array. Implicitly display\n</code></pre>\n"},{"answer_id":142151,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142151#142151","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a>, 20 bytes</h1>\n\n\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(n)~mod(n,t=1:n)*t'\n</code></pre>\n\n<p><a href=\"https://tio.run/##y08uSSxL/Z9mq6en999BI0@zLjc/RSNPp8TW0CpPU6tE/X@ahrmmjkKahqEpmDIygPDApKnmfwA\" rel=\"nofollow noreferrer\"><strong>Try it online!</strong></a></p>\n"},{"answer_id":142150,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/142150#142150","body":"<h1><a href=\"https://github.com/JohnEarnest/ok\" rel=\"nofollow noreferrer\">K (oK)</a>, 14 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>(*/x;42)6 9~x:\n</code></pre>\n\n<p>Interpreted right-to-left, is x equivalent to 6 9, if so return 42, otherwise return the product.</p>\n\n<p><a href=\"https://tio.run/##y9bNz/7/X0NLv8LaxEjTTMGyrsLq/38A\" rel=\"nofollow noreferrer\" title=\"K (oK) – Try It Online\">Try it online!</a></p>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>&gt;(*/a;42)6 9~a:3 4\n12\n&gt;(*/a;42)6 9~a:6 9\n42\n&gt;(*/a;42)6 9~a:9 6\n54\n</code></pre>\n\n<p><strong>Notes:</strong></p>\n\n<p>My port of the J/APL solutions is 15 bytes:</p>\n\n<pre><code>(*/x)-12*6 9~x:\n</code></pre>\n"},{"answer_id":142147,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142147#142147","body":"<h1><a href=\"https://github.com/okx-code/Neim\" rel=\"nofollow noreferrer\">Neim</a>, 2 bytes</h1>\n\n<pre><code>𝐅𝐬\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0vNzP3//8PcCa1AvOb/f3MA\" rel=\"nofollow noreferrer\" title=\"Neim – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142140,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142140#142140","body":"<h1><a href=\"https://github.com/splcurran/Gaia\" rel=\"nofollow noreferrer\">Gaia</a>, 2 bytes</h1>\n\n<pre><code>dΣ\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0/MTPz/P@Xc4v//jQwA\" rel=\"nofollow noreferrer\" title=\"Gaia – Try It Online\">Try it online!</a></p>\n\n<p>Pretty straight-forward:</p>\n\n<pre>\ndΣ   - Full program.\n\nd    - Divisors.\n Σ   - Sum.\n</pre>\n"},{"answer_id":142139,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/142139#142139","body":"<h1>Excel, 28 bytes</h1>\n\n<p>Takes inputs in <code>A1</code> and <code>B1</code></p>\n\n<pre><code>=IF(AND(A1=6,B1=9),42,A1*B1)\n</code></pre>\n"},{"answer_id":142122,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142122#142122","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"nofollow noreferrer\">Husk</a>, 5 bytes</h1>\n<pre><code>ṁΠuṖp\n</code></pre>\n<p><a href=\"https://tio.run/##yygtzv7//@HOxnMLSh/unFbw//9/IwMA\" rel=\"nofollow noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n<h1>How?</h1>\n<pre>\nṁΠuṖp  - Full program, implicit input.\n\n     p  - Prime factors.\n    Ṗ   - Powerset.\n   u    - Remove duplicates.\nṁΠ     - Get the product of each list, sum and implicitly output.\n</pre>\n<p>Thanks to Zgarb for the suggestions in chat!</p>\n"},{"answer_id":142125,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142125#142125","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, <s>53</s> 51 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>n-&gt;{int s=0,i=0;for(;i++&lt;n;)s+=n%i&lt;1?i:0;return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##lY5BS8NAEIXv@RVzERJil1QQwW0Ujx6sh@JJPIxpUibdzi67s4VQ8tvjVoJn847D9@Z9PZ5xZV3L/f44ufhtqIHGYAjwhsRwySAlCEq6d8RooE8NFYWM6iI3QpbVK8sHox/eXetRrIct1BOvni7EAqGubqmudGd9rqksN6yLUNZ8Q5v1Mz1W2rcSPUPQ43Qd09nv5uwyT58t7eGUjPKdeOLD5xegP4RiFrxmNwRpT8pGUS4hYjjfKnTODC8hCeYPRaH/Da/vl9B31aLfS@A/jzEbpx8\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142121,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142121#142121","body":"<h1><a href=\"https://github.com/MiningPotatoes/Ohm\" rel=\"nofollow noreferrer\">Ohm v2</a>, 2 bytes</h1>\n\n<pre><code>VΣ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8/INfr/P@zc4v//jQwA\" rel=\"nofollow noreferrer\" title=\"Ohm v2 – Try It Online\">Try it online!</a></p>\n\n<p>This is pretty straight-forwad:</p>\n\n<pre>\nV   - Divisors.\n Σ  - Sum.\n</pre>\n"},{"answer_id":142118,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142118#142118","body":"<h1><a href=\"https://drive.google.com/drive/folders/0B0R1Jgqp8Gg4cVJCZkRkdEthZDQ\" rel=\"nofollow noreferrer\">QBIC</a>, 17 bytes</h1>\n\n<pre><code>[:|~b%a|\\p=p+a}?p\n</code></pre>\n\n<h2>Explanation</h2>\n\n<pre><code>[:|      FOR a = 1; a &lt;= b (read from cmd line); a++\n~b%a|    IF b modulo a has a remainder THEN - empty block - \n\\p=p+a   ELSE add divisor 'a' to running total 'p'\n}        END IF, NEXT\n?p       PRINT p\n</code></pre>\n"},{"answer_id":142116,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142116#142116","body":"<h1><a href=\"https://pyth.readthedocs.io\" rel=\"nofollow noreferrer\">Pyth</a>, 6 bytes</h1>\n<pre><code>s*M{yP\n</code></pre>\n<p><strong><a href=\"https://pyth.herokuapp.com/?code=s%2aM%7ByP&amp;input=20&amp;debug=0\" rel=\"nofollow noreferrer\">Try it here!</a></strong></p>\n<p>Pyth doesn't have a built-in for divisors, so I think this is reasonable.</p>\n<h1>Explanation</h1>\n<pre>\ns*M{yP    - Full program with implicit input.\n\n     P    - The prime factors of the input.\n    y     - The powerset of its prime factors.\n   {      - Deduplicate.\n *M       - Map with multiplication.\ns         - Sum.\n          - Implicitly display the result.\n</pre>\n<p>Given <code>20</code>, for instance, this is what our program does after each instruction:</p>\n<ul>\n<li><p><code>P</code>: <code>[2, 2, 5]</code>.</p>\n</li>\n<li><p><code>y</code>: <code>[[], [2], [2], [5], [2, 2], [2, 5], [2, 5], [2, 2, 5]]</code>.</p>\n</li>\n<li><p><code>{</code>: <code>[[], [2], [5], [2, 2], [2, 5], [2, 2, 5]]</code>.</p>\n</li>\n<li><p><code>*M</code>: <code>[1, 2, 5, 4, 10, 20]</code>.</p>\n</li>\n<li><p><code>s</code>: <code>42</code>.</p>\n</li>\n</ul>\n"},{"answer_id":142112,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142112#142112","body":"<h1><a href=\"https://github.com/SatansSon/AddPlusPlus\" rel=\"nofollow noreferrer\">Add++</a>, 9 bytes</h1>\n\n<pre><code>D,f,@,dFs\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0xJKSj4/99FJ03HQSfFrfi/SpqdPZf///9GBgA\" rel=\"nofollow noreferrer\" title=\"Add++ – Try It Online\">Try it online!</a></p>\n\n<p>I clearly got here too late. This defines a function that gets the factors, then sums them.</p>\n"},{"answer_id":142111,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142111#142111","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 2 bytes</h1>\n<pre><code>f+\n</code></pre>\n<p><a href=\"https://tio.run/##SypKTM6ozMlPN/r/P037/38jg/9RAA\" rel=\"nofollow noreferrer\" title=\"Brachylog – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>f       Factors\n +      Sum\n</code></pre>\n"},{"answer_id":142109,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142109#142109","body":"<h1>J, 23 bytes</h1>\n<pre><code>[:+/](([:=&amp;0]|[)#])1+i.\n</code></pre>\n<p><a href=\"https://tio.run/##y/r/P81WTyHaSls/VkMj2spWzSC2JlpTOVbTUDtTjys1OSNfIU3B0BTGMjKAi/3/DwA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n<p>For J fans, there is a <a href=\"http://code.jsoftware.com/wiki/Essays/Divisors#Sum_of_Divisors\" rel=\"nofollow noreferrer\">clever 13 byte solution</a>: <code>&gt;:@#.~/.~&amp;.q:</code> but since it wasn't my invention I'm not posting it as my official answer.</p>\n<p>My own solution simply filters 1..n, finding divisors, then sums them.  The crux of it is the dyadic fork</p>\n<pre><code>](([:=&amp;0]|[)#])\n</code></pre>\n<p>Note that in this context <code>]</code> is 1..n, and <code>[</code> is n itself.  Hence <code>]|[</code> are the remainders when dividing each element of 1..n into n, and <code>=&amp;0</code> tells you if they're equal to 0.</p>\n"},{"answer_id":142097,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142097#142097","body":"<h1>VBA (Excel), 73 bytes</h1>\n<pre><code>a=Cells(1,1)\nx=1\nWhile x&lt;=a\nIf a Mod x = 0 Then b=b+x\nx=x+1\nWend\nMsgBox b\n</code></pre>\n"},{"answer_id":142089,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142089#142089","body":"<h1>C (gcc), 45 bytes</h1>\n\n<pre><code>i,s;f(n){for(s=i=n;--i;)s+=n%i?0:i;return s;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##Xc/RCoIwGIbh4@0qhiFs5HITzWhpN@JJTFc/1IxtHonXbh0YiYcfPPDyaX7Xep4h8cpQy0bTO@orqKziHBTz@8rGcBVnUK4Lg7PEq2negdXPoe3IxYcW@sOjxhhsIK8bWMrwiNHbfbehESmbwOsmxG1jo4QYSkrGFEpTcvojWWyQLBaU5X@ViY3KxKLybBWU26BclFyhbZD8gkeMMFqeCoWn@QM\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142108,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142108#142108","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 41 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n,i=1:i&lt;=n and(n%i&lt;1)*i+f(n,i+1)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P802JzE3KSVRIU8n09bQKtPGNk8hMS9FI08108ZQUytTO00DKKNtqPk/JTVNwU0jT9OKi7OgKDOvBKgDKKfJxeWmYa4JJAxNQaSRAYgEM4F6AA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142106,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142106#142106","body":"<h1>Bash + GNU utilities, 36</h1>\n\n<pre class=\"lang-bash prettyprint-override\"><code>bc&lt;&lt;&lt;`seq -f&quot;n=%g;a+=n*!$1%%n;&quot; $1`a\n</code></pre>\n<p><a href=\"https://tio.run/##S0oszvj/PynZxsYmoTi1UEE3TSnPVjXdOlHbNk9LUcVQVTXPWklBxTAh8f///4amAA\" rel=\"nofollow noreferrer\">Try it online</a>.</p>\n<hr />\n<h1>Pure Bash, 41</h1>\n<pre class=\"lang-bash prettyprint-override\"><code>for((;++i&lt;=$1;a+=$1%i?0:i))\n{\n:\n}\necho $a\n</code></pre>\n<p><a href=\"https://tio.run/##S0oszvj/Py2/SEPDWls708ZWxdA6URtIqmbaG1hlampyVXNZcdVypSZn5CuoJP7//9/QFAA\" rel=\"nofollow noreferrer\">Try it online</a>.</p>\n<p>I first tried a fancy bash expansion answer, but it ended up being longer than the simple loop above:</p>\n<pre class=\"lang-bash prettyprint-override\"><code>echo $[$(eval echo +\\\\\\(n={1..$1},$1%n?0:n\\\\\\))]\n</code></pre>\n"},{"answer_id":142107,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142107#142107","body":"<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 5 bytes</h1>\n\n<pre><code>sigma\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gsytRNL/ifpmCr8L84Mz038X9afpFGHpBrqKNgaGCgo1BQlJlXAhRRUtC1AxJpGnmampr/AQ\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142105,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142105#142105","body":"<h1>x86-64 Machine Code, 23 bytes</h1>\n<pre><code>89 F9 89 FE EB 0D 89 F8 99 F7 F1 85 D2 99 0F 44 D1 01 D6 E2 F1 96 C3\n</code></pre>\n<p>The above bytes of code define a function that accepts a single integer, N, and returns the sum of its multiples as a result.</p>\n<p>The single parameter is passed in the <code>EDI</code> register, consistent with the System V AMD64 ABI (as used on *nix-style systems). The result is returned in the <code>EAX</code> register, as with all x86 calling conventions.</p>\n<p>The algorithm is a very straightforward one, similar to many of the other submissions in other languages. We loop N times, each time computing the modulo and adding that to our running total.</p>\n<p><strong>Ungolfed assembly mnemonics:</strong></p>\n<pre><code>; unsigned SumOfMultiples(unsigned N  /* (EDI) */)\n    mov     ecx, edi      ; make copy of input N, to be used as our loop counter\n    mov     esi, edi      ; make copy of input N, to be used as our accumulator\n    jmp     CheckEnd      ; jump directly to 'CheckEnd'\nAddModulo:\n    mov     eax, edi      ; make copy of input N, to be used as input to DIV instruction\n    cdq                   ; short way of setting EDX to 0, based on EAX\n    div     ecx           ; divide EDX:EAX by ECX, placing remainder in EDX\n    test    edx, edx      ; test remainder, and set ZF if it is zero\n    cdq                   ; again, set EDX to 0, without clobbering flags\n    cmovz   edx, ecx      ; set EDX to ECX only if remainder was zero (EDX = ZF ? 0 : ECX)\n    add     esi, edx      ; add EDX to accumulator\nCheckEnd:\n    loop    AddModulo     ; decrement loop counter (ECX), and keep looping if it != 0\n    xchg    eax, esi      ; move result from accumulator (ESI) into EAX\n    ret                   ; return, with result in EAX\n</code></pre>\n<p><strong><a href=\"https://tio.run/##bY5NasMwEIXX1ikGl4Jd6kZS/YvbLBrHl4i6MLLjCBK5WDIISq9eV8UKycKLYeY9vpk3POo5n2c@SKWBn5oRTJ7uhrY7fMI7@MzkBTN14fqemf0HM7hyOmem@O@ZLWK9hJmKLh6umYljq62PbVWp3aULV9h59@qXSOlGCw6TVKKXXQvBk02vjQyDqxXaL9xH5fwgJD9PbQdvSrdieDltERJSw6URMgjRN/K@RquPgQ8Z09GW6ceWSf8ZlqsBZGFYepsN5DeSJGskSRxJ4xtK8RpKsUNjepdPVvOJQ8kduZoP1/wUecgbOz2NEnCJfuZffjw3vZqjSxr/AQ\" rel=\"noreferrer\">Try it online!</a></strong></p>\n<p>It sure seems like there should be a way to make this shorter, but I can't see it. Computing modulo on x86 takes quite a bit of code, since you do it using the <code>DIV</code> (or <code>IDIV</code>) instruction, and both of those use fixed input registers (<code>EDX</code> and <code>EAX</code>), the values of which get clobbered (because they receive the results, the remainder and quotient, respectively).</p>\n<p>The only real tricks here are pretty standard golfing ones:</p>\n<ul>\n<li>I've structured the code in a somewhat unusual way so that I can use the CISC-style <code>LOOP</code> instruction, which is basically just a combination of <code>DEC</code>+<code>JNZ</code> with the <code>ECX</code> register as the implicit operand.</li>\n<li>I'm using <code>XCHG</code> at the end instead of <code>MOV</code> because the former has a special 1-byte encoding when <code>EAX</code> is one of the operands.</li>\n<li>I use <code>CDQ</code> to zero out <code>EDX</code> in preparation for the division, even though for unsigned division you would ordinarily just zero it using a <code>XOR</code>. However, <code>XOR</code> is always 2 bytes, while <code>CDQ</code> is only 1 byte. I use <code>CDQ</code> again a second time inside of the loop to zero <code>EDX</code>, before the <code>CMOVZ</code> instruction. This works because I can be guaranteed that the quotient of the division (in <code>EAX</code>) is always unsigned, so a sign-extension into <code>EDX</code> will set <code>EDX</code> equal to 0.</li>\n</ul>\n"},{"answer_id":142087,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142087#142087","body":"<h1>Python, 44 bytes</h1>\n\n<pre><code>lambda k:sum(i*(k%i&lt;1)for i in range(1,1+k))\n</code></pre>\n\n<ul>\n<li>Thanks to Stephen, save 1 byte by removing whitespace.</li>\n<li>Thanks to Jonathan Frech, save another 1 byte by changing if to multiply.</li>\n</ul>\n"},{"answer_id":142100,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142100#142100","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 35 + 1 (-p) = 36 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>$\\+=($n%$_==0)&amp;&amp;$_ for 1..($n=$_)}{\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/18lRttWQyVPVSXe1tZAU01NJV4hLb9IwVBPDyhqqxKvWVv9/7@Rwb/8gpLM/Lzi/7q@pnoGhgb/dQsA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142090,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142090#142090","body":"<h1><a href=\"https://github.com/TehFlaminTaco/RProgN-2\" rel=\"nofollow noreferrer\">RProgN 2</a>, 2 bytes</h1>\n\n<pre><code>ƒ+\n</code></pre>\n\n<h2>Explained</h2>\n\n<pre><code>ƒ+\nƒ   # Factorize\n +  # Sum\n</code></pre>\n\n<p>Trivial, but felt it needed to be posted.</p>\n\n<p><a href=\"https://tio.run/##Kyooyk/P0zX6///YJO3///8bmgIA\" rel=\"nofollow noreferrer\" title=\"RProgN 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":142088,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142088#142088","body":"<h1>JavaScript, 31 bytes</h1>\n\n<pre><code>f=(n,i=n)=&gt;i&amp;&amp;!(n%i)*i+f(n,i-1)\n</code></pre>\n"},{"answer_id":142081,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142081#142081","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 3 bytes</h1>\n\n<pre><code>â)x\n</code></pre>\n\n<p><a href=\"https://ethproductions.github.io/japt/?v=1.4.5&amp;code=4il4&amp;input=MjA=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":142074,"question_id":142071,"link":"https://codegolf.stackexchange.com/questions/142071/find-the-sum-of-the-divisors-of-n/142074#142074","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 2 bytes</h1>\n<pre><code>ÑO\n</code></pre>\n<p><a href=\"https://tio.run/##MzBNTDJM/f//8ET///@NDAA\" rel=\"noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n<h3>How?</h3>\n<pre><code>Ñ    Divisors\n O   Sum\n</code></pre>\n"},{"answer_id":140548,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/140548#140548","body":"<h1><a href=\"https://github.com/fergusq/tampio\" rel=\"nofollow noreferrer\">Tampio</a>, 107 bytes</h1>\n\n<pre><code>uni on 1 lisättynä 1:een lisättynä yhteenlaskuun sovellettuna unen jäseniin ja unen hännän jäseniin\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>uni on 1 lisättynä 1:een lisättynä\nuni =  1 :         1     :\n\nyhteenlaskuun sovellettuna  unen jäseniin ja unen hännän jäseniin\n(+)           `zip`        (uni           ,  tail uni            )\n</code></pre>\n"},{"answer_id":120908,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/120908#120908","body":"<h1><a href=\"https://github.com/Wheatwizard/Klein\" rel=\"nofollow noreferrer\">Klein</a>, <s>23</s> <s>22</s> 21 + 3 = 24 bytes (non-competing)</h1>\n\n<p>Run with the <code>000</code> topology</p>\n\n<pre><code>(1)\\((@\n):?\\1-+(:(+)$\n</code></pre>\n\n<h2>Explanation</h2>\n\n<p>When the program starts it executes <code>(1)</code> which will put a 1 under the input.  It then deflects into the main loop.</p>\n\n<p>The main loop is on the second line.  It starts with the <code>\\</code> character.  Unwrapped it looks like:</p>\n\n<pre><code>\\1-+(:(+)$):?\n</code></pre>\n\n<p>This will redirect our pointer if the counter is zero or perform one iteration of the fibonacci sequence otherwise.</p>\n\n<p>Once the counter reaches zero we are deflected to the code <code>((@</code>, this will hide the top two values (the counter and one of the fibonacci numbers) and terminate the program.</p>\n"},{"answer_id":48895,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/48895#48895","body":"<h1>Element, 12 (option two) or 11 (option one)</h1>\n\n<p>I've decided to go back in time and answer some classic golfing questions with Element to give it some more street cred.</p>\n\n<p>The following code prints out the Fibonacci sequence continuously (it overflows rather quickly).  Each number is printed separately, although there is no whitespace separation.</p>\n\n<pre><code>1!{4:`~2@+}\n1            push 1 onto the stack\n !           flip the empty control stack to 1 to enable looping\n  {       }  infinite while loop\n  {4:     }  have 4 copies (3 additional) of the newest number on the stack\n  {  `    }  output one copy\n  {   ~   }  A fancy way to get zero from a copyusing the variable retrieval function\n  {    2~ }  Move one copy from position 0 to position 2 (behind the old number)\n  {      +}  add the number to the old number\n</code></pre>\n\n<p>The following code inputs a number and outputs the Nth number in the sequence (0-indexed).</p>\n\n<pre><code>1_'[3:~2@+]`\n1             push a 1\n _'           take input then move it to the control stack\n   [      ]   FOR loop\n   [3:    ]   make two additional copies of the top number (3 is the total count)\n   [  ~   ]   turn one copy into a zero\n   [   2@ ]   move from position 0 to position 2, behind the old number\n   [     +]   add the old and newer number\n           `  output the result \n</code></pre>\n\n<p>For completion's sake, here is a <a href=\"https://github.com/PhiNotPi/Element/blob/master/Interpreter\" rel=\"nofollow noreferrer\">link to the interpreter</a>.</p>\n"},{"answer_id":68791,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/68791#68791","body":"<h1>C, <s>224</s> <s>229</s> <strong>227</strong> chars</h1>\n<h3>...prints the <code>n</code>'th fibonacci or 2^<code>n</code></h3>\n\n<h2>Golfed up:</h2>\n<pre class=\"lang-c prettyprint-override\"><code>#import &lt;Foundation/Foundation.h&gt;\ntypedef unsigned long long f;f main(int c,char*v[]){f n=strtoull(v[1],(char**)v[2],10)-1;f x=(c&gt;2&amp;&amp;++n==0)?0:1;f y=0;while(n--!=0&amp;&amp;x+y&gt;=x&amp;&amp;x&gt;0){f z=x;c&gt;2?x+=y=z:(x+=y,y=z);}printf(&quot;%llu\\n&quot;,x);}\n</code></pre>\n<h2>Readable:</h2>\n<pre class=\"lang-c prettyprint-override\"><code>#import &lt;Foundation/Foundation.h&gt;\ntypedef unsigned long long f;\nf main(int c,char*v[]){\n    f n=strtoull(v[1],(char**)v[2],10)-1;\n    f x=(c&gt;2&amp;&amp;++n==0)?0:1;\n    f y=0;\n    while(n--!=0&amp;&amp;x+y&gt;=x&amp;&amp;x&gt;0){\n        f z=x;\n        c&gt;2?x+=y=z:(x+=y,y=z);\n    }\n    printf(&quot;%llu\\n&quot;,x);\n}\n</code></pre>\n<p>If the number exceeds the length of an <code>unsigned long long</code> it will print the highest it can get.\nReturn type is <code>f</code> (unsigned long long) for short code, it does generate 2 compiler warnings and a note but it still compiles!</p>\n<p>It also has the option to calculate 2^n because it initially printed that.</p>\n<p><strong>Usage:</strong></p>\n<ul>\n<li><code>./fibbin 42</code> - prints <code>42</code>'th fibonacci number (267914296)</li>\n<li><code>./fibbin 42 anyInputHere</code> - prints 2^<code>n</code> (4398046511104).</li>\n</ul>\n<p><strong>Don't</strong> enter values of 0, higher than 93 (fibonacci) or higher than 63 (2^n).</p>\n<p><strong>Examples:</strong></p>\n<ul>\n<li><p><code>./fibbin 1</code> = <code>1</code></p>\n</li>\n<li><p><code>./fibbin 2</code> = <code>1</code></p>\n</li>\n<li><p><code>./fibbin 3</code> = <code>2</code></p>\n</li>\n<li><p><code>./fibbin 4</code> = <code>3</code></p>\n</li>\n<li><p><code>./fibbin 42</code> = <code>267914296</code></p>\n</li>\n<li><p><code>./fibbin 92</code> = <code>7540113804746346429</code></p>\n</li>\n<li><p><code>./fibbin 93</code> = <code>12200160415121876738</code> - this is the highest i can go</p>\n</li>\n<li><p><code>./fibbin 94</code> = should be 19740274219868223167, but it doesn't fit into an unsigned long long so i will print #93</p>\n</li>\n<li><p><code>./fibbin 1 bin</code> - <code>2</code></p>\n</li>\n<li><p><code>./fibbin 2 bin</code> - <code>4</code></p>\n</li>\n<li><p><code>./fibbin 3 bin</code> - <code>8</code></p>\n</li>\n<li><p><code>./fibbin 4 bin</code> - <code>16</code></p>\n</li>\n<li><p><code>./fibbin 42 bin</code> - <code>4398046511104</code></p>\n</li>\n<li><p><code>./fibbin 62 bin</code> - <code>4611686018427387904</code></p>\n</li>\n<li><p><code>./fibbin 63 bin</code> - <code>9223372036854775808</code> - this is the highest i can go</p>\n</li>\n<li><p><code>./fibbin 64 bin</code> - should be 18446744073709551616, but it doesn't fit into an unsigned long long so i will print 0</p>\n</li>\n</ul>\n<p>These tests match the output of <a href=\"http://www.wolframalpha.com/input/?i=fibonacci+1+and+fibonacci+2+and+fibonacci+3+and+fibonacci+4+and+fibonacci+42+and+fibonacci+92+and+fibonacci+93+and+2%5e1+and+2%5e2+and+2%5e3+and+2%5e4+and+2%5e42+and+2%5e62+and+2%5e63&amp;incParTime=true\" rel=\"nofollow noreferrer\">wolfram-alpha</a>, due to the heavy calculations wolfram may time out but it generally doesn't.</p>\n"},{"answer_id":137664,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137664#137664","body":"<h1>Java 8, 53 bytes</h1>\n\n\n\n<p>I implemented a lambda for each acceptable input type. They each iterate through the number's digits, adding the proper multiple of each to an accumulator.</p>\n\n<h2>Integer as input (53 bytes)</h2>\n\n<p>Lambda from <code>Integer</code> to <code>Integer</code>:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>n-&gt;{int s=0,i=1;for(;n&gt;0;n/=10)s+=n%10*i++;return s;}\n</code></pre>\n\n<h2>String representation as input (72 bytes)</h2>\n\n<p>Lambda from <code>String</code> to <code>Integer</code>:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>s-&gt;{int l=s.length(),n=0;for(int b:s.getBytes())n+=(b-48)*l--;return n;}\n</code></pre>\n\n<h2>Digit array as input (54 bytes)</h2>\n\n<p>Lambda from <code>int[]</code> (of digits, largest place value first) to <code>Integer</code>:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>a-&gt;{int l=a.length,s=0;for(int n:a)s+=n*l--;return s;}\n</code></pre>\n\n<ul>\n<li>-7 bytes thanks to Olivier Grégoire</li>\n</ul>\n"},{"answer_id":137671,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137671#137671","body":"<h2><a href=\"http://nongnu.org/txr\" rel=\"nofollow noreferrer\">TXR Lisp</a>, <s>67</s> 40 bytes</h2>\n\n<pre><code>(opip digits reverse conses flatten sum)\n</code></pre>\n\n<p>Run:</p>\n\n<pre><code>1&gt; (opip digits reverse conses flatten sum)\n#&lt;intrinsic fun: 0 param + variadic&gt;\n2&gt; [*1 53716]\n66\n</code></pre>\n\n<p>Note that if we take advantage of the input being a list of integers representing digits, this reduces to:</p>\n\n<pre><code>(opip reverse conses flatten sum)\n</code></pre>\n\n<p>and if the digits may be in reverse order already, then just</p>\n\n<pre><code>(opip conses flatten sum)\n</code></pre>\n\n<p>Note also that this is a \"useless use of <code>opip</code>\"; all the terms are function names, and so <code>[chain digits reverse conses flatten sum]</code> could be used, and that would be the recommended way to code this; it's just one character longer.</p>\n"},{"answer_id":140062,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/140062#140062","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 26 + 1 (-p) = 27 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>s/^6 9$/42/;y/ /*/;$_=eval\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/79YP85MwVJF38RI37pSX0FfS99aJd42tSwx5/9/YwXTf/kFJZn5ecX/dX1N9QwMDf7rFgAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124915,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124915#124915","body":"<h1>q/kdb+, <s>19</s> 17 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>{(prd x;42)x~6 9}\n</code></pre>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>q){(prd x;42)x~6 9}6 9\n42\nq){(prd x;42)x~6 9}6 10\n60\nq){(prd x;42)x~6 9}9 6\n54\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>If the input is the exact list <code>(6;9)</code> return 42 else multiply together:</p>\n\n<pre><code>{(prd x;42)x~6 9} / the solution\n{               } / lambda function\n           x~6 9  / is input the list (6;9) (0b or 1b)\n (     ;  )       / two item list \n  prd x           / if false (index 0) then multiply together\n        42        / if true (index 1) then return 42\n</code></pre>\n"},{"answer_id":139469,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/139469#139469","body":"<h1>k, 23 bytes</h1>\n<p>Basically a slightly golfed version of <code>q</code>'s canonical <a href=\"http://code.kx.com/q/ref/stats-aggregates/#med-median\" rel=\"nofollow noreferrer\"><code>med</code></a> in k.</p>\n<pre><code>{avg x(&lt;x)@_.5*-1 0+#x}\n</code></pre>\n"},{"answer_id":138619,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/138619#138619","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, <s>120</s> 122 bytes</h1>\n\n<pre><code>9kzsa0si[li:sli1+dsila&gt;A]dsAx[1scddd;sr1-;sli:sr1-:s]sR[lidd1-;sr;s&lt;R1+dsila&gt;S]sS[1si0sclSxlc1=M]dsMxla2/dd1%-;sr.5-;s+2/p\n</code></pre>\n\n<p><a href=\"https://tio.run/##NYyxCsMwEEN/JUun0MZnaGjitJAPyBKPwYPxLaY3lGgx/Xn3PHSRhHgSp2o7ssaYbpy6R3Ma6/T@IhrkQ/IMydQzssTXGhhrOQiJmR1Oujo0QsOMgF1x5laeDsv@X/kAr5tskMQXSfTc9GcrEu2g@KXxt7tqb4dPrT8\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n\n<p><em>My original code worked for all the provided test cases, but was actually faulty, so +2 bytes for the fix. Dang!</em></p>\n\n<p>Lots of bytes since <code>dc</code> doesn't have any inbuilt sorting mechanism, and very little in the way of stack manipulation.</p>\n\n<p><code>9k</code> sets the precision to 9 places since we need the possibility of digits past the decimal point. <code>dc</code> doesn't float, so hopefully this is satisfactory.</p>\n\n<p><code>zsa0si[li:sli1+dsila&gt;A]dsAx</code> dumps the entirety of the stack into array <code>s</code>, and preserves the number of items in register <code>a</code>.</p>\n\n<p>Macros <code>M</code>, <code>S</code>, and <code>R</code> all make up a bubble sort. <code>M</code> is our 'main' macro, so to speak, so I'll cover that one first.</p>\n\n<p><code>[1si0sclSxlc1=M]dsMx</code> We reset increment register <code>i</code> to 1, and check register <code>c</code> to 0. We run macro <code>S</code>, which is one pass through the array. If <code>S</code> (actually, <code>R</code>, but <code>S</code> by proxy) made any changes, it would have set register <code>c</code> to one, so if this is the case we loop through <code>M</code> again.</p>\n\n<p><code>[lidd1-;sr;s&lt;R1+dsila&gt;S]sS</code> One pass through the array. We load the increment counter <code>i</code>, duplicate it twice, and decrement the top version of it by one. Essentially <code>i</code> is always high, so we compare <code>i</code> and <code>i-1</code>. Load the two values from array <code>s</code>, compare them, and if they're going the wrong way we run our swapping macro, <code>R</code>. Then we keep on incrementing <code>i</code>, comparing it to <code>a</code>, and running <code>S</code> until that comparison tells us we've hit the end of our array.</p>\n\n<p><code>[1scddd;sr1-;sli:sr1-:s]sR</code> An individual instance of swappery in array <code>a</code>. First we set our check register <code>c</code> to 1 so that <code>M</code> knows we made changes to the array. <code>i</code> should still be on the stack from earlier, so we duplicate it three times. We retrieve <code>i</code> indexed item from <code>a</code>, swap our top-of-stack so that <code>i</code> is present again, subtract one from it, and then retrieve that item from <code>a</code>. Here we run into a stack manipulation limitation, so we have to load <code>i</code> again and we store our previous <code>i-1</code> value into that index in <code>a</code>. Now we just have our old <code>i</code>-indexed <code>a</code> value on the stack and <code>i</code> itself, so we swap these, subtract 1 from <code>i</code>, and replace the value in <code>a</code>. </p>\n\n<p>Eventually <code>M</code> will stop running when it sees no changes have been made, and now that things are sorted we can do the actual median operation.</p>\n\n<p><code>la2/dd1%-;sr.5-;s+2/p</code> Since <code>a</code> already has the length of array <code>s</code>, we load it and divide by two. Testing for evenness would be costly, so we rely on the fact that dc uses the floor of a non-whole value for its index. We divide <code>a</code> by two and duplicate the value. We then get from <code>s</code> the values indexed by (<code>a</code>/2-.5) and (<code>a</code>/2-((<code>a</code>/2)mod 1)). This gives us the middle value twice for an odd number of values, or the middle two values for an even number. <code>+2/p</code> averages them and prints the result.</p>\n"},{"answer_id":1746,"question_id":1744,"link":"https://codegolf.stackexchange.com/questions/1744/mathematical-combination/1746#1746","body":"<h1>APL, 3 bytes</h1>\n\n<pre><code>⎕!⎕\n</code></pre>\n\n<p>Or for those whose browser doesn't render the above, in an ASCII rendering:</p>\n\n<pre><code>{Quad}!{Quad}\n</code></pre>\n"},{"answer_id":137976,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137976#137976","body":"<h1><a href=\"https://github.com/fergusq/roda\" rel=\"nofollow noreferrer\">Röda</a>, <s>31</s> 21 bytes</h1>\n\n<pre><code>{i=0{[i]if i+=_}|sum}\n</code></pre>\n\n<p><a href=\"https://tio.run/##JYzNDsIgEITP8hSbpgeMmkD/Ekzw7jOoaRstSmIpAXpqeXYsuJfZ@TIzZnr1YUE7AWcO97BITpabfEgB8sBbv9p59MGjsZcKtpjVX@mwHTTP4HSBbA8rLPD89MZiqfTsItCbG67KDe/B4DYSgRM3Ujnc5S1wyKfZbfFuDx7EZCCVj/CnyAcS5wmiUSiiRdRq0zIBghhj8asrQJTEi65BTV2VRSox@gM\" rel=\"nofollow noreferrer\" title=\"Röda – Try It Online\">Try it online!</a></p>\n\n<p>Takes the input as a stream of digits.</p>\n\n<h2>31 bytes</h2>\n\n<pre><code>{addHead 0|reduceSteps _+_|sum}\n</code></pre>\n\n<p><a href=\"https://tio.run/##JYzLCoMwEEXXzVdcxEVKW0h8gQW7btfdFjSY2ApVQxJX6rdbY2dz5x7mjBmkWCdyaHAt8FonIeVdCQk2GyXHWj2d0hblqZzt2C3rQjrR9tgEq7@to1bpIsDlhuCIGRPqjzCWtr0enQd6a@rRO/VWhpaeNHTnpu0drcISBcJhdNt5dcSCZjDY5TP@lCwr8@8Z4T444ZHPZMt4B4zkee63NAHhzI9vGcnSJI52Kec/\" rel=\"nofollow noreferrer\" title=\"Röda – Try It Online\">Try it online!</a></p>\n\n<p>Takes the input as a stream of digits.</p>\n\n<p>Explanation:</p>\n\n<pre><code>{addHead 0|reduceSteps _+_|sum} /* An anonymous function */\n addHead 0                      /* Append 0 to the beginning of the stream */\n          |reduceSteps _+_      /* Create a cumulative sum */\n                          |sum  /* Sum all numbers in the stream */\n</code></pre>\n\n<p>The <code>reduceSteps</code> function does not return the first item in the stream, so it is necessary to add a zero at the head of the stream.</p>\n"},{"answer_id":136796,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136796#136796","body":"\n<h1>Java 8, <strike>82</strike> <strike>78</strike> <strike>76 bytes</strike> No longer viable, <strike>75</strike> <strike>67</strike> 64 bytes below in edit</h1>\n<p>As a lambda function:</p>\n<pre class=\"lang-java8 prettyprint-override\"><code>a-&gt;{Set&lt;Long&gt;s=new HashSet&lt;&gt;();for(long i:a)if(!s.add(i))return i;return-1;}\n</code></pre>\n<p>Probably can be made much smaller, this was very quick.</p>\n<h3>Explanation:</h3>\n<pre class=\"lang-java8 prettyprint-override\"><code>a-&gt;{                                //New lambda function with 'a' as input\n    Set&lt;Long&gt;s=new HashSet&lt;&gt;();     //New set\n    for(long i:a)                   //Iterate over a\n        if(!s.add(i))               //If can't add to s, already exists\n            return i;               //Return current value\n        return-1;                   //No dupes, return -1\n}\n</code></pre>\n<h1>*Edit*</h1>\n<p><strike>75</strike> <strike>67</strike> 64 bytes using the negation strategy:</p>\n<pre class=\"lang-java8 prettyprint-override\"><code>a-&gt;{int i=0,j;while((a[j=Math.abs(a[i++])-1]*=-1)&lt;0);return++j;}\n</code></pre>\n<p><a href=\"https://tio.run/##bVDBbsIwDD03X5FjO9yoSaGASjlNk3bgxBFxyCCFdCWtGpcJIb69Swubpm1RIsfPst/zK@RZhlWtTLF/7/SprhqkhcNYi7pkeWt2qCvDXh6flJC6fSv1ju5KaS1dSW3I1SPeA7Uo0YVzpff05Gr@GhttDpstlc3BBsS7EvrroLLocxAwhnh4SZASz/uGe3ACCUxhBnPgEXAOXACPgY@BT4AnwKfAZ8DnICIQrkeAiEGMQUxAJCCmIGYg5hBHEHOI3cjY3Z7lRv5I1wZprs3@ua2V75JBejMo97wvGxZDAeirQXVQzZLmNKOdDJfXvl1nERTpx1GXyvflpshWEo9MvlmX6NFoG4R8@5SFPFhEQdoobBszGhXprev3vuc0Z7Kuy4vfc/8vdPB4cMlxMsZ65fahc32xqE6sapHVzn8sjf9zJxvcZ95I9wk\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n<p>(-3 bytes thanks to @Nevay)</p>\n<h3>Explanation:</h3>\n<pre class=\"lang-java8 prettyprint-override\"><code>a-&gt;{                                         //New lambda expression with 'a' as input\n    int i=0,j;                               //Initialise i and declare j\n    while((a[j=Math.abs(a[i++])-1]*=-1)&lt;0);  //Negate to keep track of current val until a negative is found\n    return++j;                               //Return value\n}\n</code></pre>\n<p>Loops over the array, negating to keep track. If no dupes, just runs over and throws an error.</p>\n<p>Both of these work on O(n) time and O(n) space complexity.</p>\n"},{"answer_id":137348,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137348#137348","body":"<h1>PHP, <s>56 44 38</s> 32 bytes</h1>\n\n<pre><code>for(;!${$argv[++$x]}++;);echo$x;\n</code></pre>\n\n<p>Run like this:</p>\n\n<pre><code>php -nr 'for(;!${$argv[++$x]}++;);echo$x;' -- 2 3 3 1 5 2;echo\n&gt; 3\n</code></pre>\n\n<h1>Explanation</h1>\n\n<pre><code>for(\n  ;\n  !${                 // Loop until current value as a variable is truthy\n    $argv[++$x]       // The item to check for is the next item from input\n  }++;                // Post increment, the var is now truthy\n);\necho $x;              // Echo the index of the duplicate.\n</code></pre>\n\n<h1>Tweaks</h1>\n\n<ul>\n<li>Saved 12 bytes by using variables instead of an array</li>\n<li>Saved 6 bytes by making use of the \"undefined behavior\" rule for when there is no match.</li>\n<li>Saved 6 bytes by using post-increment instead of setting to 1 after each loop</li>\n</ul>\n\n<h1>Complexity</h1>\n\n<p>As can be seen from the commented version of the code, the time complexity is linear <code>O(n)</code>. In terms of memory, a maximum of <code>n+1</code> variables will be assigned. So that's <code>O(n)</code>.</p>\n"},{"answer_id":138823,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/138823#138823","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 39 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?php for($b=1;;)echo$a=-$a+$b+=$a,' ';\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@P/fxr4go0AhLb9IQyXJ1tDaWjM1OSNfJdFWVyVRWyVJ21YlUUddQd36/38A\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?php\n</code></pre>\n\n<p>An infinite loop is started. The zero-th term in the series, initially <code>$a</code>, is 0, so needn't be assigned. <code>$b</code> \nis initially the second term and so is set to 1.</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>for ($b = 1;;) \n</code></pre>\n\n<p>The part which does all the work is <code>echo $a = -$a + $b += $a, ' ';</code>. Here it is \nexpanded.</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>{\n</code></pre>\n\n<p>Calculate the new value for <code>$b</code>: the next term is the sum of the previous two.</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>    $b = $b + $a;\n</code></pre>\n\n<p><code>$a</code> needs to be moved on one term as well. It is calculated by subtracting itself \nfrom the new value of <code>$b</code>.</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>    $a = $b - $a;\n</code></pre>\n\n<p>For byte-saving convenience, it is $a that is echoed each time—followed by a space!  </p>\n\n<pre class=\"lang-php prettyprint-override\"><code>    echo $a, ' ';\n}\n</code></pre>\n"},{"answer_id":138772,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/138772#138772","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 81 bytes</h1>\n\n<p>Time complexity is O(n) !!!!</p>\n\n<p>Space complexity is O(1) !!!!</p>\n\n\n\n<pre class=\"lang-javascript prettyprint-override\"><code>a=&gt;a.reduce((r,e,i)=&gt;r?r:(a[(e&lt;0?~e:e)-1]&gt;0?((a[(e&lt;0?~e:e)-1]^=-1)?0:0):i+2),0)-1\n</code></pre>\n\n<p><a href=\"https://tio.run/##XchBCsMgEADAr3jcpWtQSy9S9SEhBTGbYpEYTNpjv25Lj4U5zSO@4p5a3g651pl74UMswvXofBwaz8/EAI2YMjrfQrMQR@CrCm@2jFJPXgX4v5uTGoOyCm0@GST1zZ7qutfCQ6l3WGA0JM4/msSFhJkQ@wc\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n\n<p>Strategy</p>\n\n<p>This algorithm leverages the fact that indexes are positive but numbers in javascript are signed.  Also, zeros are not allowed input.  As long as the array is not longer than 2^31, this solution will work. I double the use of the original array as my lookup array -- marking a visited number by switching the value at that index with its 2's compliment.</p>\n"},{"answer_id":138763,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/138763#138763","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 93 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>$c=0..$a.Count;$i=0;$r=($a|%{$i++;if($c[$_]++ -ne $_){$i}});if($r.Count -gt 0){$r[0]}else{-1}\n</code></pre>\n\n<p><a href=\"https://tio.run/##JctLCoMwFEbhrdzBX1DyIFo6Chl1GSIS5LYNBC1R6cBm7alYOLOP854/nJYXx1jgXSvpetZIuklqC0ZntIbX93mbVovgjEVyFfz3siMIYcOjwthh6IUgNTFhqA/IuT4l/UdSz5XMAakzfea48K6aXMoP\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":138752,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/138752#138752","body":"<h1><a href=\"https://github.com/alexander-liao/proton\" rel=\"nofollow noreferrer\">Proton</a>, 24 bytes</h1>\n\n<pre><code>f=a=&gt;a&lt;2?1:f(a-1)+f(a-2)\n</code></pre>\n\n<p><a href=\"https://tio.run/##KyjKL8nP@@/wP8020dYu0cbI3tAqTSNR11BTG0QZaf4vKMrMK9FI0zA0MDDQ1PwPAA\" rel=\"nofollow noreferrer\" title=\"Proton – Try It Online\">Try it online!</a></p>\n\n<p>(Not working on TIO yet; waiting for pull)</p>\n\n<p>The <code>@</code> is not necessary but it enables caching for the lambda which makes it considerably faster (as in, it actually finishes in a reasonable amount of time). That being said, when I tried computing it up to <code>10000</code> (which I needed to increase <code>sys.setrecursionlimit</code> to do), it gave me a <code>Segmentation Fault</code> because the program ran out of memory (Proton is very inefficient) :P</p>\n"},{"answer_id":138691,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/138691#138691","body":"<h1>Pyth, 12 bytes</h1>\n\n<p><code>V^T6IqlPN1N</code></p>\n\n<h1>Explanation</h1>\n\n<p><code>V^T6</code> - For loop using looping variable N in range 0 to 10 ^ 6</p>\n\n<p><code>IqlPN1</code> - If len(prime_factors(n)) == 1</p>\n\n<p><code>N</code> - implicity print n (if it is prime)</p>\n\n<p>Try running the code here: <a href=\"https://pyth.herokuapp.com/?code=V%5ET6IqlPN1N&amp;debug=0\" rel=\"nofollow noreferrer\">https://pyth.herokuapp.com/?code=V%5ET6IqlPN1N&amp;debug=0</a></p>\n\n<p>Note that this seems to take too long to run on the online interpreter, so  try replacing <code>V^T6</code> with <code>V^T3</code>, which will run (and clearly if it can print primes up to 1,000, it will work with 1,000,000)</p>\n"},{"answer_id":138680,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/138680#138680","body":"<h1><a href=\"http://pypy.org/\" rel=\"nofollow noreferrer\">Python 2 (PyPy)</a>, 86 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>for i in range(2,int(1e6)):\n&#9;if all([i%j!=0 for j in range(2,int(i**0.5)+1)]): print i\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM9ItqCyo/P8/Lb9IIVMhM0@hKDEvPVXDSCczr0TDMNVMU9OKizMzTSExJ0cjOlM1S9HWQAGkNgtdbaaWloGeqaa2oWasppVCQRFQTCHz/38A\" rel=\"nofollow noreferrer\" title=\"Python 2 (PyPy) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":138672,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/138672#138672","body":"<h1>Java 8, 71 bytes</h1>\n\n\n\n<p>Parity is fun! Here's a lambda from <code>double[]</code> to <code>Double</code>.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>l-&gt;{java.util.Arrays.sort(l);int s=l.length;return(l[s/2]+l[--s/2])/2;}\n</code></pre>\n\n<p>Nothing too complex going on here. The array gets sorted, and then I take the mean of two numbers from the array. There are two cases:</p>\n\n<ul>\n<li>If the length is even, then the first number is taken from just ahead of the middle of the array, and the second number is taken from the position before that by integer division. The mean of these numbers is the median of the input.</li>\n<li>If the length is odd, <code>s</code> and <code>s-1</code> both divide to the index of the middle element. The number is added to itself and the result divided by two, yielding the original value.</li>\n</ul>\n\n<p><a href=\"https://tio.run/##lY9NS8QwEIbP3V8xxxY3WawfCHUXBPHmaY@lh9jEmjqdlGRaKUt/e826Fc8e3uGF4RmeadWohOsNtfpz6Yc3tDXUqEKAV2UJTpuk93ZUbCCw4rhsIyAHtijfB6rZOpIva3nULh4wZbWF5592gM5oqwj2C4rD6Q998l5NQQbnOcWssMQQ9ijRUMMfhTc8eEqxDLu8usJSiHPJdnkxL0kRjS6aq9DorIYuyqZH9paasgLlm5Cd3ZPjFNh00g0s4x/ESOlFSaq@xykl8wW/1nASd3oLNzHiNo4HPWdZ8e8j9xHNY65XfN7Myzc\" rel=\"nofollow noreferrer\">Try It Online</a></p>\n"},{"answer_id":138653,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/138653#138653","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 44 bytes</h1>\n\n<pre><code>~$.,:l;~l 2%{l 2/$}{{l 2/$}2*+'/2'+}if{\\;}l*\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPn/v05FT8cqx7ouR8FItRpI6KvUVkNpIy1tdX0jde3azLTqGOvaHK3//6MNFYwULBQsYwE\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n\n<p>Explanation</p>\n\n<pre><code>~$.,:l;~l 2%{l.2/-}{{l 2/$}2*+'/2'+}if{\\;}l*   |\n~                                              Create array from input string\n $                                             Sort array\n  .                                            Duplicate array\n   ,                                           Pop and count the top array\n    :l                                         Assign variable l\n      ;                                        Pop\n       ~                                       Convert array into individual integers\n        l                                      Push variable l onto stack\n          2%                                   Push 2 and perform mod\n            {l 2/$}                            If block\n            {l 2/                              push variable l and divide by 2\n                 $}                            Copy/push value at index (push(stack[pop()]))\n                   {{l 2/$}2*+'/2'+}           Else block\n                    {l 2/                      Push l/2\n                         $}                    Copy\n                           2*                  Perform block {} twice\n                             +                 Add top two of stack (result of copies)\n                              '/2'+}if         Push and add '/2'. End if\n                                      {\\;}     New block. Swap top two elements then pop\n                                          l*   Perform previous block l times\n</code></pre>\n"},{"answer_id":138636,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/138636#138636","body":"<h1>APL, 26 bytes</h1>\n<pre><code>{3&gt;≢⍵:(+/÷≢)⍵⋄∇1↓¯1↓⍵[⍋⍵]}\n</code></pre>\n<p><a href=\"http://tryapl.org/?a=%7B3%3E%u2262%u2375%3A%28+/%F7%u2262%29%u2375%u22C4%u22071%u2193%AF1%u2193%u2375%5B%u234B%u2375%5D%7D1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9&amp;run\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h3>How?</h3>\n<ul>\n<li><code>3&gt;≢⍵:(+/÷≢)⍵</code> - if the length of the array is less then 3, return the average</li>\n<li><code>⋄</code> - otherwise</li>\n<li><code>∇1↓¯1↓⍵[⍋⍵]</code> - return the sorted array with the first and last elements removed.</li>\n</ul>\n"},{"answer_id":138621,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/138621#138621","body":"<h2>Julia 0.6.0 <strike>(9 bytes)</strike> (6 bytes)</h2>\n\n<p><strike><code>median(a)</code></strike></p>\n\n<p><code>median</code></p>\n\n<p>where <code>a</code> is an array. It's not a very exciting answer but it's cool that Julia has a built in function for the median.</p>\n\n<p>edit: I didn't know I could just write median! </p>\n"},{"answer_id":138591,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/138591#138591","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 58 + 2 (-ap) = 60 bytes</h1>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>$_=(@F=sort{$a&lt;=&gt;$b}@F)%2?@F[@F/2]:@F[@F/2]/2+@F[@F/2-1]/2\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/18l3lbDwc22OL@opFol0cbWTiWp1sFNU9XI3sEt2sFN3yjWCsbQN9KGMnUNgZz//w0VjBSMFUwUTBXM/uUXlGTm5xX/1/U11TMwNPivm1gAAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n\n<p>Input is split into the @F array by the '-a' flag.  @F gets sorted.  Then, its length is checked to see if it is odd or even.  If odd, result is the middle element.  If even, result is half of the element to the left of middle plus half of the element to the right of the middle.</p>\n"},{"answer_id":138557,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/138557#138557","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 98 bytes</h1>\n\n<p><strong>0-indexed</strong></p>\n\n<p>Takes a space separated list of integers. returns <code>i &lt; n</code> on a successful match and <code>i == n</code> on failure.</p>\n\n<p>time complexity is O(n^2) yuck!</p>\n\n<p>space complexity is O(1)</p>\n\n<pre><code>program-name.exe 58 77 57 7 75 44 29 97 92 59 36 52 95 87 44 24 47 18 34 22\nReturns 14  (the two 44s)\n</code></pre>\n\n<p>Golfed\n</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>i=1,j;main(int c,char**v){for(;i&lt;c;i++)for(j=i-1;j;j--)if(!strcmp(v[i],v[j]))goto f;f:return i-1;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##HYpBDoIwFAWvgrsW6ILSWmrlJIQFaaz@JoCplY3x7E8wbzOTeV7cvQeob@ro5okWRksufO0fUyrLjX/Cmpijq3dUVfyQ2JNoXHRRCE6BnV45@fnJtoHGehviyPl9zWsRXLikW36npTj@XwC6gzHQBvs0lIK0sAZWQlu0Z2gJq9GZf1JQBk2Hdmf5Aw\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n\n<p>Ungolfed</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>i=1,j;\nmain(int c, char**v){\n    for(;i &lt; c; i++)\n        for(j=i-1; j; j--)\n            if(!strcmp(v[i], v[j]))\n                goto f;\n    f:\n    return i-1;\n}\n</code></pre>\n"},{"answer_id":138421,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/138421#138421","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, <s>65</s> <s>117</s> 109 bytes</h1>\n\n<p>\nPrevious 65 byte solution:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>r-&gt;{for(int a,b=0,z,i=0;;b=a)if((a=b|1&lt;&lt;(z=r[i++]))==b)return z;}\n</code></pre>\n\n<p>New solution. 19 bytes are included for <code>import java.math.*;</code></p>\n\n<p><em>-8 bytes thanks to @Nevay</em></p>\n\n<pre class=\"lang-java prettyprint-override\"><code>r-&gt;{int z,i=0;for(BigInteger c=BigInteger.ZERO;c.min(c=c.setBit(z=r[i++]))!=c;);return z;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##dVJNb9swDD3Hv4K7SasjdCm2i@sA6z6AHooB7U4retBs2ZNnS4ZEB02K/PaUkuO5xVLAMCW@R@mJj43cyKXtlWnKvwfd9dYhNJQTncQ/4krX1wZVrVyWvAQH1K347Jzc@hNANZgCtTXi@3FxguPRKdkJOv0urt6mTHjSD79bXUDRSu/hRmqTPCWLY9KjRAobq0voCGJUpU19/wDS1Z4nC6IuUHlkqxQu4vchhY8prHg2IZQYwfCf0xf/pSvrgGmDoCGH8xQaCquMdpfwicLZGYdwXSy/laZWrIl1iwbeByYt9wl9pN7pjUT1Sv5cFa7weqdeyh@7IWzF/rVOuMD@0lqvyvCIWJLCjBN5SnNRtRJvZP/TEs7GFi/XY@QCbTSV8aCXNL6tMIgTQgCFqb13W4@KbhtQUJXB1rBxROjY0Q4W2bEXJ8iVNuXXoSc76cJrU6rHmT9qeeV16M7pEnLdPR5FTSN4GfOxK2Gc11CRaQe3XD@Fc3apzs8z8pXNEw9FPm/Er2@3P7JCdDRaRV4Ir/BKI9vl7p78fuD8XV5kPHMKB2dgl@0P4ZHHbSVk37dbRqLiU/bJ4Rk\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n\n<h1>Edit</h1>\n\n<p>The algorithm in my original program was fine, but the static size of the datatype used meant that it broke fairly quickly once the size went above a certain threshold.</p>\n\n<p>I have changed the datatype used in the calculation to increase the memory limit of the program to accommodate this (using <code>BigInteger</code> for arbitrary precision instead of <code>int</code> or <code>long</code>). However, this makes it debatable whether or not this counts as <code>O(1)</code> space complexity.</p>\n\n<p>I will leave my explanation below intact, but I wish to add that I now believe it is impossible to achieve <code>O(1)</code> space complexity without making some assumptions.</p>\n\n<h1>Proof</h1>\n\n<p>Define <code>N</code> as an integer such that <code>2 &lt;= N</code> .</p>\n\n<p>Let <code>S</code> be a list representing a series of random integers <code>[x{1}, ..., x{N}]</code>, where <code>x{i}</code> has the constraint <code>1 &lt;= x{i} &lt;= N</code>.</p>\n\n<p>The time complexity (in Big-O notation) required to iterate through this list exactly once per element is <code>O(n)</code></p>\n\n<p>The challenge given is to find the first duplicated value in the list. More specifically, we are searching for the first value in <code>S</code> that is a duplicate of a previous item on the list.</p>\n\n<p>Let <code>p</code> and <code>q</code> be the positions of two elements in the list such that <code>p &lt; q</code> and <code>x{p} == x{q}</code>. Our challenge becomes finding the smallest <code>q</code> that satisfies those conditions.</p>\n\n<p>The obvious approach to this problem is to iterate through S and check if our <code>x{i}</code> exists in another list <code>T</code>:\n    If <code>x{i}</code> does not exist in <code>T</code>, we store it in <code>T</code>.\n    If <code>x{i}</code> does exist in <code>T</code>, it is the first duplicate value and therefore the smallest <code>q</code>, and as such we return it.\nThis space efficiency is <code>O(n)</code>. </p>\n\n<p>In order to achieve <code>O(1)</code> space complexity while maintaining <code>O(n)</code> time complexity, we have to store unique information about each object in the list in a finite amount of space. Because of this, the only way any algorithm could perform at <code>O(1)</code> space complexity is if:\n    1. N is given an upper bound corresponding to the memory required to store the maximum number of possible values for a particular finite datatype.\n    2. The re-assignment of a single immutable variable is not counted against the complexity, only the number of variables (a list being multiple variables).\n    3. (Based on other answers) The list is (or at least, the elements of the list are) mutable, and the datatype of the list is preset as a signed integer, allowing for changes to be made to elements further in the list without using additional memory.</p>\n\n<p>1 and 3 both require assumptions and specifications about the datatype, while 2 requires that only the number of variables be considered for the calculation of space complexity, rather than the size of those variables. If none of these assumptions are accepted, it would be impossible to achieve both <code>O(n)</code> time complexity and <code>O(1)</code> space complexity.</p>\n\n<h1>Explanation</h1>\n\n<p>Whoo boy, this one took <s>an embarrassingly long time to think up</s> a bit of brain power.</p>\n\n<p>So, going for the bonus is difficult. We need both to operate over the entire list exactly once <strong>and</strong> track which values we've already iterated over without additional space complexity.</p>\n\n<p>Bit manipulation solves those problems. We initialize our <code>O(1)</code> 'storage', a pair of integers, then iterate through the list, OR-ing the ith bit in our first integer and storing that result to the second. </p>\n\n<p>For instance, if we have <code>1101</code>, and we perform an OR operation with <code>10</code>, we get <code>1111</code>. If we do another OR with <code>10</code>, we still have <code>1101</code>. </p>\n\n<p>Ergo, once we perform the OR operation and end up with the same number, we've found our duplicate. No duplicates in the array causes the program to run over and throw an exception.</p>\n"},{"answer_id":106317,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106317#106317","body":"<h1><a href=\"http://8th-dev.com/\" rel=\"nofollow noreferrer\">8th</a>, <s>108</s> <s>105</s> 93 bytes</h1>\n\n<pre><code>: m ' n:cmp a:sort a:len 2 n:/mod swap not if n:1- 2 a:slice a:open n:+ 2 n:/ else a:@ then ;\n</code></pre>\n\n<p><strong>SED</strong> (Stack Effect Diagram) is <code>a -- a n</code></p>\n\n<p><strong>Test</strong></p>\n\n<pre><code>[1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,-5,100000,1.3,1.4] m .\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre><code>1.50000\n</code></pre>\n\n<p><strong>Ungolfed version</strong> (with comments)</p>\n\n<pre><code>\\ Median\n: m \\ a -- a n\n    ' n:cmp a:sort \\ Sort array\n    a:len          \\ Get array length\n    2 n:/mod       \\ Remainder and quotient\n    swap           \\ Remainder on TOS\n    not if         \n        \\ Array contains an even number of items\n        \\ Get arithmetic mean of the two values closest to the center of the sorted list\n        n:1- 2 a:slice a:open n:+ 2 n:/\n    else\n        \\ Array contains an odd number of items\n        \\ Get the central value           \n        a:@        \n    then ;\n</code></pre>\n"},{"answer_id":96177,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/96177#96177","body":"<h1>Java 8, <s>100</s> <s>97</s> 92 bytes</h1>\n\n<pre class=\"lang-java prettyprint-override\"><code>o-&gt;{for(int i=1,n,j;i++&lt;1e6;){for(n=i,j=2;j&lt;n;n=n%j++&lt;1?0:n);if(n&gt;1)System.out.print(n);}}\n</code></pre>\n<p>-3 bytes by thanks to <em>@Nevay</em>.<br />\n-5 bytes by converting Java 7 to Java 8.</p>\n<p>I know there are already a few other Java answers. I didn't knew which to choose to put the comment on with my golfed method, so I decided to post this separate answer. Not to mention it's slightly or a lot shorter than any of the other current Java answers so far.</p>\n<p><strong>Explanation:</strong></p>\n<p><a href=\"https://tio.run/##LY49DsIwDEZ3TuEFKVF/RBkYSAMnAAZGxBBCihJSp2pSJIR69pAWFkv2s/09I16icJ1Cc39GaYX3cBAaPwsAjUH1jZAKjlML8HL6DpKcbkbJAI6yNB0XqfgggpZwBAQeXbH7NK4n6Rw0r3LMDdNZVldqw@hMkOvc8DUzNTLkuDQT3a@2SJluCO4qen77oNrSDaHs@vTIIklwHCOb4rrhZlPcP3W2apMzOYe0@7hcQdCfMJaS4GDt33SMXw\" rel=\"nofollow noreferrer\">Try it here.</a></p>\n<pre class=\"lang-java prettyprint-override\"><code>o-&gt;{                          // Method with empty unused parameter and no return-type\n  for(int i=1,n,j;            //  Initialize some integers\n      i++&lt;1e6;){              //  Loop (1) from 2 through 1,000,000 (exclusive)\n    for(n=i,j=2;              //   Set some integers\n        j&lt;n;                  //   Inner loop (2) from 2 through `n` (exclusive)\n      n=                      //    Change `n` to:\n        n%j++&lt;1?              //     If `n` is divisible by `j`:\n         0                    //      Change `n` to 0 (which means it isn't a prime)\n        :                     //     Else:\n         n                    //      Leave `n` unchanged\n    );                        //   End of inner loop (2)\n    if(n&gt;1)                   //   If `n` is larger than 1, which means it's a prime:\n      System.out.println(n);  //    Print `n` + new-line\n  }                           //  End of loop (1)\n}                             // End of method\n</code></pre>\n"},{"answer_id":55962,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/55962#55962","body":"<h1>APL (Dyalog), 15 chars</h1>\n<pre><code>⍪(⊢~∘.×⍨)1↓⍳1E6\n</code></pre>\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qKM9oCgzN7U4NC8ltcjQ1fj/o95VGo@6FtU96pihd3j6o94VmoaP2iY/6t0Mluxo/4@qHgA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a> (only goes until one thousand as TIO does not allot enough memory for a million)</p>\n<p><code>⍳1E6</code> first million <strong>ɩ</strong>ntegers</p>\n<p><code>1↓</code> drop one</p>\n<p><code>(</code>…<code>)</code> apply the following tacit function:</p>\n<p> <code>⊢</code> the argument (all the numbers 2…1000000)</p>\n<p> <code>~</code> except those that are in</p>\n<p> <code>∘.×⍨</code> the multiplication table (using the argument as both vertical and horizontal axis)</p>\n<p><code>⍪</code> table (makes list into column)</p>\n"},{"answer_id":138369,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/138369#138369","body":"<h1>Python 2, <strike>71</strike> 65 bytes</h1>\n\n<p>Returns <code>None</code> if there is no duplicate element</p>\n<p><strong>Edit:</strong> -6 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/69054/musicman523\">@musicman523</a></p>\n<pre class=\"lang-python prettyprint-override\"><code>def f(n):\n for a in n:\n&#9u=-abs(a)\n&#9if n[u]&lt0:return-u\n&#9n[u]=-n[u]</code></pre>\n<p><a href=\"https://tio.run/##HcyxCsMgEMbxWZ/iRgWFxraLNE8iDib1qMslGB3y9DYXOL7hB//bz/bbyI3xzQioSHsJuFVIUAjIS9Fnm5ZDJS1FQaDQ4@fha269ku1SMMyWd3C2piNzGYIz8LxvMvA24KIBttdtF0wxXt/3WqgpVNxpPf4\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p><strong>O(n)</strong> time complexity, <strong>O(n)</strong> space complexity, <strong>O(1)</strong> auxiliary space.</p>\n<p>As the input list uses <strong>O(n)</strong> space, the space complexity is bound by this. Meaning we cannot have a lower space complexity than <strong>O(n)</strong></p>\n<p>Does modify the original list, if this is not allowed we could do it in the same complexity with <a href=\"https://tio.run/##NU5BCsIwEDw3r9hjAim0VS/R@JGQQ9REA7It2@bg62O2Iiy7M8PMsMtne8041fqICZJETXZQRkCaCQJkBDSiK7YPt1UGdRZdToCu@Otg@Niet@jie42GrCPdF@/oMvpfReYKCviM8h1RolItlr3lOgZKAMWtUDNV9t/DGjni3KThsM@o4aRh8hpYO@5aE0bv22cLZdxkkpxT6s93Vr8\" rel=\"nofollow noreferrer\">129 bytes</a></p>\n<h1>Explanation</h1>\n<p>Since every element is greater than 0 and less than or equal to the size of the list, the list has for each element a, an element on index a - 1 (0 indexed). We exploit this by saying that if the element at index i is negative, we have seen it before.</p>\n<p>For each element a in the list n, we let u be negative the absolute value of a. <em>(We let it be negative since python can index lists with negative indices, and we would otherwise need to do</em> <code>u=abs(a)-1</code>) If the element at index u in the list is negative, we have seen it before and can therefore return -u <em>(to get the absolute value of a, as all elements are positive)</em>. Else we set the element at index u to be negative, to remember that we have seen an element of value a before.</p>\n"},{"answer_id":138376,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/138376#138376","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 59 bytes, O(n) time, O(n) memory</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>a=input()\ni=0\nfor x in a:\n if i&amp;1&lt;&lt;x:print x;break\n i^=1&lt;&lt;x\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P9E2M6@gtERDkyvT1oArLb9IoUIhM08h0YpLITNNIVPN0MamwqqgKDOvRKHCOqkoNTEbKBFnCxL@/z/aSMcYCA11THWMYgE\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>This does one pass of the list. Thus is <strong>O(n)</strong>  For memory it stores a integer <code>i</code>, which has bits representing which numbers have already been visited.  If a number has already been visited we output, otherwise we turn the bit on.  If no matches are found we do nothing.</p>\n\n<p>This makes a slight improvement over the naïve way which requires copying the list at the cost of <strong>O(n log n)</strong> memory.</p>\n"},{"answer_id":138107,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/138107#138107","body":"<h1>Excel VBA, 57 Bytes</h1>\n \n<p>Anonymous VBE immediate window function that takes input from the range <code>[A1]</code>, and outputs the triangle sum described above to the VBE immediate window</p>\n<pre class=\"lang-vba prettyprint-override\"><code>l=[Len(A1)]:For i=1To l:s=s+Mid([A1],i,1)*(l+1-i):Next:?s\n</code></pre>\n"},{"answer_id":138010,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/138010#138010","body":"<h1><a href=\"https://pastebin.com/mnxZk1cz\" rel=\"nofollow noreferrer\">Math++</a>, 56 bytes</h1>\n\n<pre><code>?&gt;n\nn&gt;g\no+g%10&gt;o\n_(g/10)&gt;g\n3+3*!g&gt;$\n_(n/10)&gt;n\n2+6*!n&gt;$\no\n</code></pre>\n"},{"answer_id":138004,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/138004#138004","body":"<h2>TI-BASIC, 4 bytes</h2>\n\n<pre><code>sum(cumSum(Ans\n</code></pre>\n\n<p>Takes a list of digits as input, and calculates the sum of the cumulative sum (i.e. prefix sum) of the list.</p>\n\n<p>The cumSum( token is 2 bytes large.</p>\n"},{"answer_id":137974,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137974#137974","body":"<h1>Clojure, 26 bytes</h1>\n\n<pre><code>#(apply +(reductions + %))\n</code></pre>\n\n<p>There's a built-in, but in standard Clojure fashion, it's a long-ass word. Takes input as a list of digits.</p>\n"},{"answer_id":137669,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137669#137669","body":"<h1><a href=\"https://vim.sourceforge.io/\" rel=\"nofollow noreferrer\">Vim</a>, <s>60</s> <s>59</s> 32 keystrokes</h1>\n\n<p>Thanks a lot @CowsQuack for the tip with the recursive macro and the <code>h</code> trick, this saved me 27 bytes!</p>\n\n<pre><code>qqYp$xh@qq@qVHJ:s/./&amp;+/g⏎\nC&lt;C-r&gt;=&lt;C-r&gt;\"0⏎\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/v/v7AwskClIsOhsNChMMzDy6pYX09fTVs/nctZyFZIyYDr/38zUxNjI0MA\" rel=\"nofollow noreferrer\" title=\"V – Try It Online\">Try it online!</a></p>\n\n<h3>Ungolfed/Explained</h3>\n\n<p>This will build the triangle like described (only that it keeps it left-aligned):</p>\n\n<pre><code>qq       q    \" record the macro q:\n  Yp          \"   duplicate the line\n    $x        \"   remove last character\n      h       \"   move to the left (this is solely that the recursive macro calls stop)\n       @q     \"   run the macro recursively\n          @q  \" run the macro\n</code></pre>\n\n<p>The buffer looks now like this:</p>\n\n<pre><code>53716\n5371\n537\n53\n5\n</code></pre>\n\n<p>Join all lines into one and build an evaluatable expression from it:</p>\n\n<pre><code>VH             \" mark everything\n  J            \" join into one line\n   :s/./&amp;+/g⏎  \" insert a + between all the characters\n</code></pre>\n\n<p>The <code>\"</code> register now contains the following string (note missing 0):</p>\n\n<pre><code>5+3+7+1+6+ +5+3+7+1+ +5+3+7+ +5+3+ +5+ +\n</code></pre>\n\n<p>So all we need to do is append a zero and evaluate it:</p>\n\n<pre><code> C                \" delete line and store in \" register\n  &lt;C-r&gt;=       ⏎  \" insert the evaluated expression from\n        &lt;C-r&gt;\"    \" register \"\n              0   \" append the missing 0\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/8YwON.gif\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/8YwON.gif\" alt=\"inside vim\"></a></p>\n"},{"answer_id":137965,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137965#137965","body":"<h1><a href=\"https://bigzaphod.github.io/Taxi/\" rel=\"nofollow noreferrer\">Taxi</a>, 1478 bytes</h1>\n\n<pre><code>Go to Post Office:w 1 l 1 r 1 l.Pickup a passenger going to Chop Suey.Go to Chop Suey:n 1 r 1 l 4 r 1 l.[a]Switch to plan \"b\" if no one is waiting.Pickup a passenger going to The Babelfishery.Go to Zoom Zoom:n 1 l 3 r.1 is waiting at Starchild Numerology.Go to Starchild Numerology:w 4 l 2 r.Pickup a passenger going to Addition Alley.Go to Addition Alley:w 1 r 3 r 1 r 1 r.Pickup a passenger going to Addition Alley.Go to The Babelfishery:n 1 r 1 r.Go to Chop Suey:n 6 r 1 l.Switch to plan \"a\".[b]Go to Addition Alley:n 1 l 2 l.Pickup a passenger going to Cyclone.[c]Go to Zoom Zoom:n 1 l 1 r.Go to Cyclone:w.Pickup a passenger going to The Underground.Pickup a passenger going to Multiplication Station.Go to The Babelfishery:s 1 l 2 r 1 r.Pickup a passenger going to Multiplication Station.Go to Multiplication Station:n 1 r 2 l.Pickup a passenger going to Addition Alley.Go to The Underground:n 2 l 1 r.Switch to plan \"d\" if no one is waiting.Pickup a passenger going to Cyclone.Go to Addition Alley:n 3 l 1 l.Switch to plan \"c\".[d]Go to Addition Alley:n 3 l 1 l.[e]Pickup a passenger going to Addition Alley.Go to Zoom Zoom:n 1 l 1 r.Go to Addition Alley:w 1 l 1 r.Pickup a passenger going to Addition Alley.Switch to plan \"f\" if no one is waiting.Switch to plan \"e\".[f]Go to Zoom Zoom:n 1 l 1 r.Go to Addition Alley:w 1 l 1 r.Pickup a passenger going to The Babelfishery.Go to The Babelfishery:n 1 r 1 r.Pickup a passenger going to Post Office.Go to Post Office:n 1 l 1 r.\n</code></pre>\n\n<p><a href=\"https://tio.run/##tZTNboMwDMdfxeIBkKBdD711O@y0rVK3yxCHNAkQLY1RCGJ9eha@Okb5UCvtABHE/tv@OY4h36IsnxEMwh4zA29RJCjfFuCBtI@uVncv6FeeAoGUZBlXMdcQo1Bx5fWUYAqHnJ/dRuXyvVWdP6xbnYCEh0IYmlSGqSQKnKMDIgKFgIqDyKAgwljl2ZDvCYdHcuQyElnCdRf5E/FUv@rIElagXa@nCcTAwRBNEyEZvOYnrlFi3LmPbVkOa6vkW6W5hHaM2QioYCflBcTfnzVRXeXUUrlDcVj3hbAeYb9pmQ@BE8cNjuFoig02f6nhZypts9yAhuPce/k0pttisZ0finEda8wVm7V9yaURqRSU1HnbnlXrFJ@sLWiZ96zu@GZLfwnXZCd7JVspvwU3bBe7Yz66Dk00eVWHuj4Z1J4MFi44BTy8udrpAzIyI/LW2RiWEU0QG9pxW24U/kuGExfUzPzOqfXuZff6pv5NuCw3D@uV7/0A\" rel=\"nofollow noreferrer\" title=\"Taxi – Try It Online\">Try it online!</a></p>\n\n<p>Un-golfed:</p>\n\n<pre><code>[ Pickup stdin and split into digits ]\nGo to Post Office: west 1st left 1st right 1st left.\nPickup a passenger going to Chop Suey.\nGo to Chop Suey: north 1st right 1st left 4th right 1st left.\n[a]\n[ Count the digits ]\nSwitch to plan \"b\" if no one is waiting.\nPickup a passenger going to The Babelfishery.\nGo to Zoom Zoom: north 1st left 3rd right.\n1 is waiting at Starchild Numerology.\nGo to Starchild Numerology: west 4th left 2nd right.\nPickup a passenger going to Addition Alley.\nGo to Addition Alley: west 1st right 3rd right 1st right 1st right.\nPickup a passenger going to Addition Alley.\nGo to The Babelfishery: north 1st right 1st right.\nGo to Chop Suey: north 6th right 1st left.\nSwitch to plan \"a\".\n[b]\nGo to Addition Alley: north 1st left 2nd left.\nPickup a passenger going to Cyclone.\n[c]\n[ Multiply each digits by Len(stdin)-Position(digit) ]\nGo to Zoom Zoom: north 1st left 1st right.\nGo to Cyclone: west.\nPickup a passenger going to The Underground.\nPickup a passenger going to Multiplication Station.\nGo to The Babelfishery: south 1st left 2nd right 1st right.\nPickup a passenger going to Multiplication Station.\nGo to Multiplication Station: north 1st right 2nd left.\nPickup a passenger going to Addition Alley.\nGo to The Underground: north 2nd left 1st right.\nSwitch to plan \"d\" if no one is waiting.\nPickup a passenger going to Cyclone.\nGo to Addition Alley: north 3rd left 1st left.\nSwitch to plan \"c\".\n[d]\nGo to Addition Alley: north 3rd left 1st left.\n[e]\n[ Sum all the products ]\nPickup a passenger going to Addition Alley.\nGo to Zoom Zoom: north 1st left 1st right.\nGo to Addition Alley: west 1st left 1st right.\nPickup a passenger going to Addition Alley.\nSwitch to plan \"f\" if no one is waiting.\nSwitch to plan \"e\".\n[f]\n[ Output the results ]\nGo to Zoom Zoom: north 1st left 1st right.\nGo to Addition Alley: west 1st left 1st right.\nPickup a passenger going to The Babelfishery.\nGo to The Babelfishery: north 1st right 1st right.\nPickup a passenger going to Post Office.\nGo to Post Office: north 1st left 1st right.\n</code></pre>\n"},{"answer_id":137958,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137958#137958","body":"<h1>Excel VBA Immediate Window, 60 bytes</h1>\n<pre><code>a=StrReverse([A1]):For i=1 ToLen(a):b=b+i*Mid(a,i,1):Next:?b\n</code></pre>\n<p>Input is in cell <code>A1</code> of the active sheet. Output is to the VBA immediate window.</p>\n"},{"answer_id":137768,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137768#137768","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 56 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:sum((i+1)*int(a[-i-1])for i in range(0,len(a)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##PYzBCsIwEETvfsXektUEklQLKeiP1B5WbHShTUusB78@Jh4cmMeDgVk/23OJLofzNU803@4E1L3es5R8sLjnuEnqNWs7YFgSMHCERPExSqOmMUpCxPxfemGEErbW/dAUeu@rm5oi7enYOCuGbgdrKv/ASuiLUEEy5i8\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>Some edit as suggested by @Mr.Xcoder</p>\n\n<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 50 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:sum(-~i*int(a[~i])for i in range(len(a)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUSHRqrg0V0O3LlMrM69EIzG6LjNWMy2/SCFTITNPoSgxLz1VIyc1TyNRU1PzP1w8Wt1AXUfdEISNwIQxkLS0tASxDUAAyDAzNTE2MlSPteJSKCgCmq2QqaOua6euk6aRqfkfAA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137731,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137731#137731","body":"<h2>Ruby, 32 bytes</h2>\n\n<pre><code>-&gt;a{b=a.pop;a[0]?b+a.sum+f[a]:b}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf1y6xOsk2Ua8gv8A6Mdog1j5JO1GvuDRXOy06MdYqqfZ/gUJadLSpjrGOuY6hjlls7H8A\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137722,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137722#137722","body":"<h1><a href=\"https://github.com/okx-code/Neim\" rel=\"nofollow noreferrer\">Neim</a>, 3 bytes</h1>\n\n<pre><code>𝐗𝐂𝐬\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>𝐗        Get prefixes of input, including itself\n 𝐂       Implicitly join elements together, and create an array with all the digits\n  𝐬      Sum\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0vNzP3//8PcCdOBuAmI1/z/b2psbmgGAA\" rel=\"nofollow noreferrer\" title=\"Neim – Try It Online\">Try it online!</a></p>\n\n<p>Alternative answer:</p>\n\n<pre><code>𝐗𝐣𝐬\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>𝐗       Get prefixes of input, including itself\n 𝐣       Join\n  𝐬      Implicitly convert to a digit array, and sum\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0vNzP3//8PcCdOBeDEQr/n/39TY3NAMAA\" rel=\"nofollow noreferrer\" title=\"Neim – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137619,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/137619#137619","body":"<h1>Forth, <s>39</s> 36 bytes</h1>\n\n<pre><code>0 1 : f BEGIN 2DUP + ROT . AGAIN ; f\n</code></pre>\n\n<h3>Explanation</h3>\n\n<p>First 0 and 1 are pushed to the stack.\nThen starts an endless loop where <code>2DUP</code> duplicates the top two stack items which are then summed with <code>+</code>. At this point stack is <code>0 1 1</code>. Then the bottom item of the stack is moved on top with <code>ROT</code>. <code>.</code> prints and removes the item on the top of the stack. Creates an endless sequence of Fibonacci numbers.</p>\n\n<p>Had to check out what's Forth about. And is there a better way to learn than \ntrying to golf Fibonacci series. I see that there's already an answer with Forth but desided to post anyway. At least this is a different approach.</p>\n"},{"answer_id":137705,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137705#137705","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 46 bytes</h1>\n\n<ul>\n<li>Takes in string, returns integer</li>\n</ul>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda a:a and sum(map(int,a))+f(a[:-1])or 0\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P802JzE3KSVRIdEKiPNSFIpLczVyEws0MvNKdBI1NbXTNBKjrXQNYzXzixQM/hcUAcUV0jTUzUxNjI0M1TX/AwA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137703,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137703#137703","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"noreferrer\">Brain-Flak</a>, 28 bytes</h1>\n\n<pre><code>(([]){[{}]({}&lt;&gt;{})&lt;&gt;([])}{})\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X0MjOlazOrq6NlajutbGrrpW08YOJFQLZP3/b6hgpGAMAA\" rel=\"noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p><em>14 bytes if we don't need to support zeros (which we do)</em></p>\n\n<pre><code>({({}&lt;&gt;{})&lt;&gt;})\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMzTTctJzP7/X6Nao7rWxq66VtPGrlbz/39DBSMFYwA\" rel=\"noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<p>DJMcMayhem has a cool answer <a href=\"https://codegolf.stackexchange.com/a/137651/56656\">here</a> you should check out.  Unfortunately for him I wasn't about to let him win at his own language :P</p>\n\n<h2>How does it work?</h2>\n\n<p>Lets start with the simple version.</p>\n\n<pre><code>({({}&lt;&gt;{})&lt;&gt;})\n</code></pre>\n\n<p>The main action here is <code>({}&lt;&gt;{})&lt;&gt;</code>, that takes the top of the left stack and adds to to the top of the right stack.  By looping this operation we sum up the current stack (until it hits a zero) placing the sum on the off stack.  That's pretty mundane, the interesting part is that we sum up the results of all these runs as our result.  This will calculate the desired value.  Why?  Well lets take a look at an example, <code>123</code>.  On the first grab we just get 1 so our value is 1</p>\n\n<pre><code>1\n</code></pre>\n\n<p>On the next grab we return 1 plus the 2</p>\n\n<pre><code>1\n1+2\n</code></pre>\n\n<p>On the last run we have all three together</p>\n\n<pre><code>1\n1+2\n1+2+3\n</code></pre>\n\n<p>Do you see the triangle?  The sum of all the runs is the \"triangle\" of the list.</p>\n\n<hr>\n\n<p>Ok but now we need it to work for zeros, here I used the same trick as DJMcMayhem, plus some fancy footwork.  Instead of looping until we hit a zero we loop until the stack is empty.</p>\n\n<pre><code>([])({&lt;{}&gt;({}&lt;&gt;{})&lt;&gt;&lt;([])&gt;}{})\n</code></pre>\n\n<p>I then used <a href=\"https://codegolf.stackexchange.com/questions/95403/tips-for-golfing-in-brain-flak/127942#127942\">this tip</a>, written by none other than yours truly, to golf off another 2 bytes.</p>\n\n<pre><code>(([]){[{}]({}&lt;&gt;{})&lt;&gt;([])}{})\n</code></pre>\n\n<p>And there we have it.  I would be surprised if there was a shorter solution,  but then again stranger things have happened.</p>\n"},{"answer_id":137684,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137684#137684","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, <s>51</s> 55 bytes</h1>\n\n<p><em>+4 bytes—original version failed on all inputs with 0 as a digit.</em></p>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?php while($x!=$d=array_pop($argv))$t+=++$p*$d;echo$t;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@P/fxr4go0ChPCMzJ1VDpULRViXFNrGoKLEyviC/QEMlsSi9TFNTpUTbVltbpUBLJcU6NTkjX6XE@v///6b/jf@b/zf8bwYA\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n\n<p>EXPLANATION:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?php\n</code></pre>\n\n<p>The programme takes separate digits as CLI parameter arguments, which arrive in the code as an array, <code>$argv</code>.</p>\n\n<p>Each character at a time is popped from the end of the array. When the array is empty <code>array_pop</code> returns <code>null</code>. Null is detected by comparing the result to an undeclared variable <code>$x</code>, a saving of 2 code bytes over using <code>null</code> itself. <em>(Without this comparison any 0 digit evaluates to <code>false</code> and the loop ends early.)</em></p>\n\n<pre class=\"lang-php prettyprint-override\"><code>while ($x != $d = array_pop($argv))\n</code></pre>\n\n<p><code>$p</code> is the position from the end <em>i.e.</em> the last digit (the first one popped) is in position 1. <code>$p</code> is \nundeclared and so equals 0, but is incremented <em>before</em> it is used each time, so starts off as 1.</p>\n\n<p>The position is multiplied by the digit and added to the total <code>$t</code>.</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>    $t += ++$p * $d;\n</code></pre>\n\n<p>The final result is printed.</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>echo $t;\n</code></pre>\n"},{"answer_id":137663,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137663#137663","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 13 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>sum.scanl1(+)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/P822uDRXrzg5MS/HUENb839uYmaegq1CQVFmXomCikKaQrSZjqmOiY6xjpGOYex/AA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p>Takes input as list of digits. Calculates the cumulative sums then sums them.</p>\n"},{"answer_id":137679,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137679#137679","body":"<h1><a href=\"https://www.perl.org/\" rel=\"nofollow noreferrer\">Perl 5</a>, 36 + 2 (-ap) = 38 bytes</h1>\n\n<p>Runs in O(n) time.</p>\n\n\n\n<pre class=\"lang-perl prettyprint-override\"><code>$s{$_}=1while!$s{$_=shift@F};$_||=-1\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH9/1@luFolvtbWsDwjMydVEcyzLc7ITCtxcKu1VomvqbHVNfz/30jBRMFYwVTB3EzB9F9@QUlmfl7xf11fUz0DQ4P/uokFAA\" rel=\"nofollow noreferrer\" title=\"Perl 5 – Try It Online\">Try it online!</a></p>\n\n<p>Takes the input list space separated.</p>\n"},{"answer_id":137678,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137678#137678","body":"<h1>APL, 4 bytes</h1>\n\n<pre><code>+/+\\\n</code></pre>\n\n<p>This takes the input as a list of digits, e.g.:</p>\n\n<pre><code>      (+/+\\) 5 3 7 1 6\n66\n</code></pre>\n\n<p>Explanation</p>\n\n<pre><code>+/    sum of\n  +\\  partial sums of input\n</code></pre>\n"},{"answer_id":137677,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137677#137677","body":"<h1>Mathematica, 49 bytes</h1>\n<pre><code>Tr@Array[Tr@s[[;;#]]&amp;,Length[s=IntegerDigits@#]]&amp;\n</code></pre>\n"},{"answer_id":137673,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137673#137673","body":"<h1><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, 13 bytes</h1>\n\n<pre><code>.\n$`$&amp;\n.\n$*\n1\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wX49LJUFFjQtIaXEZ/v9vamxuaMZlwGXIZWgERMZclpaWXIYGIMBlZmpibGQIAA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a> Link includes test cases. Explanation: The first stage generates all the prefixes of the original number, the second stage converts each digit to unary, and the third stage takes the total.</p>\n"},{"answer_id":137655,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137655#137655","body":"<h1><a href=\"https://github.com/barbuz/Husk\" rel=\"noreferrer\">Husk</a>, <s>4̷</s> 2 bytes</h1>\n\n<p>Thanks @H.PWiz for <code>-2</code> bytes!</p>\n\n<pre><code>Σ∫\n</code></pre>\n\n<p><a href=\"https://tio.run/##yygtzv7//9ziRx2r////H22qY6xjrmOoYxYLAA\" rel=\"noreferrer\" title=\"Husk – Try It Online\">Try it online!</a></p>\n\n<h3>\"Ungolfed\"/Explained</h3>\n\n<pre><code>Σ    -- sum all\n ∫   -- prefix sums\n</code></pre>\n"},{"answer_id":137656,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137656#137656","body":"<h1>Bash + GNU utilities, <strike>32</strike> 24</h1>\n\n<pre class=\"lang-bash prettyprint-override\"><code>tac|nl -s*|paste -sd+|bc\n</code></pre>\n<p>Input read from STDIN.</p>\n<p>Update: I see the input may be given as a list of digits.  My input list is newline-delimited.</p>\n<p><a href=\"https://tio.run/##S0oszvj/vyQxuSYvR0G3WKumILG4JBXIStGuSUr@/9@Uy5jLnMuQy4wLAA\" rel=\"nofollow noreferrer\">Try it online</a>.</p>\n<h3>Explanation</h3>\n<pre class=\"lang-bash prettyprint-override\"><code>tac                       # reverse digit list\n   |nl -s*                # prefix line numbers; separate with &quot;*&quot; operator\n          |paste -sd+     # join lines onto one line, separated with &quot;+&quot; operator\n                     |bc  # arithmetically evaluate\n</code></pre>\n"},{"answer_id":137659,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137659#137659","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 35 bytes</h1>\n\n<p>I just noticed that this is only really a slight golf of <a href=\"https://codegolf.stackexchange.com/a/137654/53748\">Business Cat's answer</a> in the end though!</p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda a:a&gt;[]and sum(a)+f(a[:-1])\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/##NUxLCsIwFFzrKd6uCU6haW3FgL1IyOJJDRZsWtq48PQx8cPA/GBmeYX77JsY3eXB03VgYs29sewH2p6TYHlwgo0ulZXRzSuF2xZo9CRMiwYnKHQWZKpMCvVP0GRzRsK3qf7IsUOLY1rXSK96v1vW0QeRn0FF2Rcg90lSxjc\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></strong></p>\n"},{"answer_id":136725,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136725#136725","body":"<h1>Dyalog APL, <s>27</s> <s>24</s> <s>20</s> <s>19</s> <s>13</s> <s>12</s> 11 bytes</h1>\n\n<pre><code>⊢⊃⍨0⍳⍨⊢=⍴↑∪\n</code></pre>\n\n<p>Now modified to not depend on v16! <a href=\"http://tryapl.org/?a=%28%u22A2%u2283%u23680%u2373%u2368%u22A2%3D%u2374%u2191%u222A%29%201%201&amp;run\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<h1>How? (With input <strong>N</strong>)</h1>\n\n<ul>\n<li><code>⊢⊃⍨...</code> - <strong>N</strong> at this index:\n\n<ul>\n<li><code>⍴↑∪</code> - <strong>N</strong> with duplicates removed, right-padded with <code>0</code> to fit <strong>N</strong></li>\n<li><code>⊢=</code> - Element-wise equality with <strong>N</strong></li>\n<li><code>0⍳⍨</code> - Index of the first <code>0</code>. `</li>\n</ul></li>\n</ul>\n"},{"answer_id":137657,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137657#137657","body":"<h1><a href=\"https://www.microsoft.com/net/core/platform\" rel=\"noreferrer\">C# (.NET Core)</a>, 59 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System.Linq;N=&gt;N.Reverse().Select((d,i)=&gt;i*d+d).Sum()\n</code></pre>\n\n<p><a href=\"https://tio.run/##XZBBS8QwFITv@RXvmGgsu64KEtuL4En34B48LHuI6bMG2tc1SVck9LfX0LWyXQYC32QYHmP8lWkdDp23VMHmxwdsFDul7NnSl2KkG/R7bRAoMlNr72EfmQ86WANPHZkHS2G7k@ktIDirqaoR8mGdF@vsFQ/oPHKRbbBGEzgvpRV5YS/KyzKZXcPFoKa2Q2tLeNGWuIhsbN3uQLvKQw6E3/BnRfYPcdHLE1rOSV6fs1zNnHuZdJZZTJr5d/JW3shValj2rFeMfaTxtPnk4zdQ17yjS9nx3HT9Y0u@rTF7czZgGhL5NA0/ZoVQrD9q@AU\" rel=\"noreferrer\" title=\"C# (.NET Core) – Try It Online\">Try it online!</a></p>\n\n<p>Substantially different from the other C# answers. Input is a list of digits. All test cases included in the TIO link.</p>\n\n<p>Could save a bunch of bytes if allowed to take input as a backwards list of digits with leading 0.</p>\n"},{"answer_id":137638,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137638#137638","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 3 bytes</h1>\n\n<h3>Code</h3>\n\n<pre><code>ηSO\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f//3PZg////zUxNjI0MAQ\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>η      # Take the prefixes of the number\n S     # Split into single numbers\n  O    # Sum all the numbers\n</code></pre>\n"},{"answer_id":137653,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137653#137653","body":"<h1><a href=\"https://www.microsoft.com/net/core/platform\" rel=\"nofollow noreferrer\">C# (.NET Core)</a>, <s>84</s> 68 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>a=&gt;a.Select((x,i)=&gt;a.Take(i+1).Sum(c=&gt;c-48)).Sum()\n</code></pre>\n\n<p>Byte count also includes</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System.Linq;\n</code></pre>\n\n<p><a href=\"https://tio.run/##VU9NT8MwDL37V5hbLLZqWbdBNVoJIXGCC0XiHGUeRKQpNCkfQvvtJVmBsafIjp9fnmPtp7rteOi9cY9Yf/rATXZj3OsawKmG/YvS/MPDF2CEtsp7vNzfRybBBxWMxrfWbPBWGSfor3UQJVz3Tl/40MV5EzQuVLjFclBlpbKaLesgxMfEUKrv1TMLcyopq/tG6LLS08U5jRUN8Yf/fUfLlNZH/PuTsYxCxAaWeNU631rO7lht4posiPCkRNdbS0fPEn7FD50JvFdvkw3RYcIOxrgblvmZXMEMJMh5PDkURQFylgCr5SKfy28\" rel=\"nofollow noreferrer\" title=\"C# (.NET Core) – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>a=&gt;                     // Take a string\n    a                   // Take the string as collection of chars\n    .Select((x,i)=&gt;     // Replace the collection with\n        a.Take(i+1)     // Substrings increasing in size\n        .Sum(c=&gt;c-48))  // Sum each substring's digits (as ints) together\n    .Sum()              // Sum the new collection of sums\n</code></pre>\n\n<p>I know <s>it's a little bigger than</s> there's already posted C# answer, but mine is coming from a different approach so I thought I will post it anyway.</p>\n"},{"answer_id":137644,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137644#137644","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <s>49</s> 45 bytes</h1>\n\n<p><em>-4 bytes <a href=\"https://chat.stackexchange.com/transcript/message/39234534#39234534\">thanks to Mr. Xcoder.</a></em></p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda n:sum(-~i*n[~i]for i in range(len(n)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##TU3NCsIwGLvvKXJs5RO2@QMKe5LaQ8VWC@u3sdaDl716tUVBCEkICZlf6TFxn91wyaMJ15sBn@MziO3qN6xWr920wMMzFsN3K0bLgqWUOdmYIgYo1WqC6ioR@p8SdsWeCAXftP1HyY6EA2H/KddJp3XTzIvnhGBm4Qj1RuY3\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>Takes input as a list of digits.</p>\n"},{"answer_id":137654,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137654#137654","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, 37 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n:len(n)and sum(n)+f(n[:-1])\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P802JzE3KSVRIc8qJzVPI08zMS9Fobg0F8jSTtPIi7bSNYzV/F9QlJlXopGmEW2mY6pjomOsY6QDFNb8DwA\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137649,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137649#137649","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 25 bytes</h1>\n\n<p><em>Takes input as list of digits</em></p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f[]=0\nf x=sum x+f(init x)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/Py061taAK02hwra4NFehQjtNIzMvs0ShQvN/bmJmnm1BUWZeiUpatKmOsY65jqGOWex/AA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 41 bytes</h1>\n\n<p><em>Takes input as string representation</em></p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f[]=0\nf x=sum(map(read.(:[]))x)+f(init x)\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/Py061taAK02hwra4NFcjN7FAoyg1MUVPwyo6VlOzQlM7TSMzL7NEoULzf25iZp5tQVFmXolKmpKpsbmhmdJ/AA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137652,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137652#137652","body":"<h2>JavaScript (ES6), 28 bytes</h2>\n\n<pre><code>a=&gt;a.map(d=&gt;t+=c+=d,t=c=0)|t\n</code></pre>\n\n<p>Takes input as a list of digits.</p>\n"},{"answer_id":137637,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137637#137637","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>&nbsp;5&nbsp;</s> 4 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>Ṛæ.J\n</code></pre>\n\n<p>A monadic link taking a list of decimal digits and returning the triangle of the number that list represents.</p>\n\n<p><strong><a href=\"https://tio.run/##y0rNyan8///hzlmHl@l5/f//P9pQxwAGYwE\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></strong></p>\n\n<h3>How?</h3>\n\n<pre><code>Ṛæ.J - Link: list of numbers (the decimal digits), d   e.g. [9,4,5,0]\nṚ    - reverse d                                            [0,5,4,9]\n   J - range(length(d))                                     [1,2,3,4]\n æ.  - dot-product            (0*1 + 5*2 + 4*3 + 9*4 = 58)  58\n</code></pre>\n"},{"answer_id":137647,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137647#137647","body":"<h1>Pyth - <s>6</s> 4 bytes</h1>\n<pre><code>ss._\n</code></pre>\n<p><a href=\"http://pyth.herokuapp.com/?code=ss._&amp;input=5%2C3%2C7%2C1%2C6&amp;debug=0\" rel=\"noreferrer\">Try it online here</a>.</p>\n<p>Nice 6 byte one that doesn't use prefix builtin:</p>\n<pre><code>s*V_Sl\n</code></pre>\n"},{"answer_id":137650,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137650#137650","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 3 bytes</h1>\n\n<pre><code>+\\S\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/187Jvj////RZjqmOiY6xjpGOoaxAA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a> Uses the same technique as my Japt answer: cumulative addition, then sum.</p>\n"},{"answer_id":137648,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137648#137648","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a><strong>, 58 bytes</strong></h1>\n<pre><code>lambda n:sum(-~i*int(c)for i,c in enumerate(str(n)[::-1]))\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUSHPqrg0V0O3LlMrM69EI1kzLb9IIVMnWSEzTyE1rzQ3tSixJFWjuKRII08z2spK1zBWU/N/QRFIbZqGqbG5oZmmJheMb4DENkRmG6FwjJF4lpaWyHIGIIAkYGZqYmwENOo/AA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":137633,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137633#137633","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"noreferrer\">Japt</a>, <s>7</s> <s>6</s> 4 bytes</h1>\n\n<pre><code>å+ x\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn///BSbYWK//@jzXRMdUx0jHWMdAxjAQ\" rel=\"noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>å+ x    Implicit: input = digit list\nå+      Cumulative reduce by addition. Gives the sum of each prefix.\n   x    Sum.\n</code></pre>\n\n<hr>\n\n<p>Old solution:</p>\n\n<pre><code>å+ ¬¬x\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osKPn///BSbYVDaw6tqfj/X8nU2NzQTAkA\" rel=\"noreferrer\" title=\"Japt – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>å+ ¬¬x   Implicit: input = string\nå+       Cumulative reduce by concatenation. Gives the list of prefixes.\n   ¬     Join into a single string of digits.\n    ¬    Split back into digits.\n     x   Sum.\n         Implicit: output result of last expression\n</code></pre>\n"},{"answer_id":137646,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137646#137646","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, 3 bytes</h1>\n\n<pre><code>Yss\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/P7K4@P//aFMdBWMdBXMdBUMdBbNYAA\" rel=\"noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n\n<p>Takes the input as a list of digits.</p>\n"},{"answer_id":133737,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/133737#133737","body":"<h1>Python 2, <s>49</s> 40 chars</h1>\n\n<pre><code>a,b=0,1\nexec\"a,b=b,b+a;\"*input()\nprint b\n</code></pre>\n\n<h3>Function form, 44 chars</h3>\n\n<pre><code>def f(n):a,b=0,1;exec\"a,b=b,b+a;\"*n;return b\n</code></pre>\n\n<p>My take on this challenge. Didn't find this kind of an answer yet. I hope it's a valid one.</p>\n\n<p>Print's n:th Fibonacci number. Functions by multiplying the string inside exec n times and then executing it as Python. </p>\n\n<p>Edit: input() instead of int(raw_input())</p>\n"},{"answer_id":137642,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137642#137642","body":"<h1><a href=\"https://www.microsoft.com/net/core/platform\" rel=\"nofollow noreferrer\">C# (.NET Core)</a>, 80 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>n=&gt;{int v=0,i=0;for(;i&lt;n.Length;)v+=int.Parse(n[i]+\"\")*(n.Length-i++);return v;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##lY1NS8NAEIbv@RVDTrumDf1QIWzTi@CpQsGDh9LDsk7SgWa2zG4DUvLbY2pQETzoexiYd56HcWHqvGDPtsFwsg7BJZcEhrijDQG24muxzUcz9teEaCM5aD29wpMlBhWiENe7PVipg/4Cv5Vrnt9CxCZ/PLNbjcIEiOMaKih7LteXYYG2nE2onJnKizK04nyDXMeD0W1WDvd8ayWg4h3tszTVN@oTmFKWaSMYz8LQmq43v/1@8Bz8EfMXoYgbYlSVSueLZar13/miKP7F39/dLhfzH0qXjLPr3wE\" rel=\"nofollow noreferrer\" title=\"C# (.NET Core) – Try It Online\">Try it online!</a></p>\n\n<p>Takes a string as input and outputs the triangled number.</p>\n\n<hr>\n\n<p>Explanation:</p>\n\n<p>For each character in the input string, convert the <code>char</code> to an <code>int</code> and multiply it by <em>the length of the string minus the index of the <code>char</code></em>.</p>\n"},{"answer_id":137635,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137635#137635","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, <s>54</s> <s>48</s> 40 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)$a|%{$o+=$_*($a.count-$i++)};$o\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8gvTy0qzkjNyfn/vyCxKDFXQyVRUyWxRrVaJV/bViVeC8jXS84vzSvRVcnU1tastVbJ////v4OGmY6pjomOsY6RjqEmAA\" rel=\"nofollow noreferrer\" title=\"PowerShell – Try It Online\">Try it online!</a></p>\n\n<p>Takes input as a list of digits.</p>\n\n<p>Note that the output is just the input digit multiplied by its corresponding negative index in the string and then cumulatively summed. So, that's what we do here.</p>\n\n<p>We loop over each element in the input list, each iteration perform a multiplication, and then sum the results together into the total <code>$o+=</code>. That's left on the pipeline, output is implicit.</p>\n"},{"answer_id":137641,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137641#137641","body":"<h1><a href=\"https://github.com/splcurran/Gaia\" rel=\"nofollow noreferrer\">Gaia</a>, <s>4</s> 3 bytes</h1>\n\n<pre><code>…_Σ\n</code></pre>\n\n<p>Function accepting a list of digits and leaving the result on the stack.</p>\n\n<p><a href=\"https://tio.run/##S0/MTPz//1HDsvhzi/@nPmqb@D/aTMFUwUTBWMFIwTAWAA\" rel=\"nofollow noreferrer\" title=\"Gaia – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>…    Prefixes\n _   Flatten\n  Σ  Sum\n</code></pre>\n"},{"answer_id":137639,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137639#137639","body":"<h2>JavaScript (ES6), 34 bytes</h2>\n\n<pre class=\"lang-js prettyprint-override\"><code>f=(n,i=1)=&gt;n&amp;&amp;n%10*i+f(n/10|0,i+1)\n</code></pre>\n\n<h3>Test cases</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=(n,i=1)=&gt;n&amp;&amp;n%10*i+f(n/10|0,i+1)\r\n\r\nconsole.log(f(0)) // -&gt; 0\r\nconsole.log(f(1)) // -&gt; 1\r\nconsole.log(f(12)) // -&gt; 4\r\nconsole.log(f(123)) // -&gt; 10\r\nconsole.log(f(999)) // -&gt; 54 \r\nconsole.log(f(100000)) // -&gt; 6\r\nconsole.log(f(654321)) // -&gt; 91</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":137636,"question_id":137632,"link":"https://codegolf.stackexchange.com/questions/137632/triangle-a-number/137636#137636","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 56 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:sum(i*int(`x`[-i])for i in range(1,1+len(`x`)))\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfZhvzPycxNyklUaHCqrg0VyNTKzOvRCOhIiFaNzNWMy2/SCFTITNPoSgxLz1Vw1DHUDsnNQ8kramp@R8uG22gA5QyAiJjHUtLSx1DAxDQMTM1MTYyjLXiUigoApqqkKmjrmunrpOmkan5HwA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137509,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137509#137509","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>28</s> 36 bytes</h1>\n\n<p>Misunderstood the challenge the first time. <code>O(n)</code> time, <code>O(n)</code> space.</p>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;a{d={};a.find{|e|b=d[e];d[e]=1;b}}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZhvzX9cusTrFtrrWOlEvLTMvpbomtSbJNiU6NdYaRNgaWifV1v4vz8jMSVVITy0p5ipQSItOLUvMUVCJj@VKzUv5H22ko2AMRoY6CqY6CkaxXCAhE7AQkG8YCwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":136734,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136734#136734","body":"<h1><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, <s>26</s> 24 bytes</h1>\n\n<pre><code>1!`\\b(\\d+)\\b(?&lt;=\\b\\1 .*)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0otycxL/P/fUDEhJkkjJkVbE0jZ29jGJMUYKuhpaf7/b6RgDISGCqYKRgA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a> Explanation: <code>\\b(\\d+)\\b</code> matches each number in turn, and then the lookbehind looks to see whether the number is a duplicate; if it is the <code>1</code>st match is <code>!</code> output, rather than the count of matches. Unfortunately putting the lookbehind first doesn't seem to work, otherwise it would save several bytes. Edit: <s>Added 7 bytes to comply with the <code>-1</code> return value on no match.</s> Saved 2 bytes thanks to @MartinEnder.</p>\n"},{"answer_id":137189,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137189#137189","body":"<h2>APL, 15</h2>\n\n<pre><code>{⊃⍵[(⍳⍴⍵)~⍵⍳⍵]}\n</code></pre>\n\n<p>Seems like we can return 0 instead of -1 when there are no duplicates, (thanks Adám for the comment). So 3 bytes less.</p>\n\n<p>A bit of description:</p>\n\n<pre><code>⍵⍳⍵         search the argument in itself: returns for  each element the index of it's first occurrence\n(⍳⍴⍵)~⍵⍳⍵   create a list of all indexes, remove those found in ⍵⍳⍵; i.e. remove all first elements\n⊃⍵[...]     of all remaining elements, take the first. If the array is empty, APL returns zero\n</code></pre>\n\n<p>For reference, old solution added -1 to the list at the end, so if the list ended up empty, it would contain -1 instead and the first element would be -1.</p>\n\n<pre><code>{⊃⍵[(⍳⍴⍵)~⍵⍳⍵],¯1}\n</code></pre>\n\n<p>Try it on <a href=\"http://tryapl.org/?a=%7B%u2283%u2375%5B%28%u2373%u2374%u2375%29%7E%u2375%u2373%u2375%5D%7D2%203%203%201%205%202&amp;run\" rel=\"nofollow noreferrer\">tryapl.org</a></p>\n"},{"answer_id":137497,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137497#137497","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 11 bytes</h1>\n\n\n\n<p>As per <a href=\"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136797?noredirect=1#comment334435_136713\">the new rules</a>, throws an error if no duplicates exist.</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊢⊃⍨⍬⍴⍳∘≢~⍳⍨\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///3y2zqLjEpbTgUduER12LHnU1P@pd8ah3zaPeLY96Nz/qmPGoc1EdiNW74v9/BTCA6VAw0lEwBiNDHQVTHQUjLjR5Yx0jHTDmwtRoAtYI1GUIAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>⍳⍨</code> the indices of the first occurrence of each element</p>\n\n<p><code>~</code> removed from</p>\n\n<p><code>⍳∘≢</code> of all the indices</p>\n\n<p><code>⍬⍴</code> reshape that into a scalar (gives zero if no data is available)</p>\n\n<p><code>⊃⍨</code> use that to pick from (gives error on zero)</p>\n\n<p><code>⊢</code> the argument</p>\n"},{"answer_id":136797,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136797#136797","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 20 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>⊃n/⍨(,≢∪)¨,\\n←⎕,2⍴¯1\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qKPdLbOouMSltOD/o67mPP1HvSs0dB51LnrUsUrz0AqdmLxHbRMe9U3VMXrUu@XQekOQhv8KYADTx2Wko2AMRoY6CqY6CkZcmPImYHmgpCG6pLGOkQ4YAwA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>2⍴¯1</code> negative one <strong>r</strong>eshaped into a length-two list</p>\n\n<p><code>⎕,</code> get input (mnemonic: console box) and prepend to that</p>\n\n<p><code>n←</code> store that in <em>n</em></p>\n\n<p><code>,\\</code> prefixes of <em>n</em> (lit. cumulative concatenation)</p>\n\n<p><code>(</code>…<code>)¨</code> apply the following tacit function to each prefix</p>\n\n<p> <code>,</code> [is] the ravel (just ensures that the prefix is a list)</p>\n\n<p> <code>≢</code> different from</p>\n\n<p> <code>∪</code> the unique elements[?] (i.e. is does the prefix have duplicates?)</p>\n\n<p><code>n/⍨</code> use that to filter <em>n</em> (removes all elements until the first for which a duplicate was found)</p>\n\n<p><code>⊃</code> pick the first element from that</p>\n"},{"answer_id":137412,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137412#137412","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 16 bytes</h1>\n\n<pre><code>ε¹SsQƶ0K1è}W&lt;¹sè\n</code></pre>\n\n<p><a href=\"https://tio.run/##AToAxf8wNWFiMWX//861wrlTc1HGtjBLMcOofVc8wrlzw6j//zAxMjIwMTAwMDE5MzQ5MTA1MTk4NTAxNTkw\" rel=\"nofollow noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137011,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137011#137011","body":"<h1>C#, <s>65</s> 67 bytes</h1>\n\n<p>With thanks to LiefdeWen for the 89 bytes base code <a href=\"https://tio.run/##lU9NS8QwED2bX/GOCdtd7KqntHsRPK0gePBQegg1rYHdSfNRRUp/e02XtZ59DMzMm/eYmSZsz5bsPARDHV6/Q9RnyVhzUiHgBSNDQogqmgaf1rzjWRniIfokr2oo3wVxVS14GqgpDMWqzpDSAW0iUGIVLFgbxmZVHsbWep7EcOWtdIXaHTV18UPCbTbid9anWV842SfOtFxVri5LVfW18DoOnrAw8lpvcznNN3Ld82gp2JPevXkT9dGQ5stZnPRXemHEPsPdJfIMDxn2mIT4j/n@Yk7O/M85sWn@AQ\" rel=\"nofollow noreferrer\">here</a>, here's an further shortened version of that</p>\n\n<pre><code>a=&gt;{for(int p=0,q=0;;q++)for(p=0;p&lt;q;)if(a[q]==a[p++])return a[q];}\n</code></pre>\n\n<p>We can dispense with the return -1 and length check as it's apparently OK to throw an exception if not found, so we just let the outer loop run off the end of the array. Some other whitespace changes, and jigging the declarations around to reduce the number of times we write \"int\" etc..</p>\n"},{"answer_id":137274,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/137274#137274","body":"<h1>VBA, 31 Bytes</h1>\n \n<p>Anonymous VBE immediate window function that takes no input and outputs to the VBE immediate window</p>\n<pre class=\"lang-vba prettyprint-override\"><code>For i=0To 120:?Year(Now)-i:Next\n</code></pre>\n"},{"answer_id":137222,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/137222#137222","body":"<h1><a href=\"http://tcl.tk/\" rel=\"nofollow noreferrer\">Tcl</a>, 76 bytes</h1>\n\n<pre><code>set y [clock format [clock seconds] -format %Y]\ntime {puts $y;incr y -1} 121\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0nO@f@/OLVEoVIhOjknPzlbIS2/KDexBMYrTk3Oz0spjlXQhYqrRsZylWTmpipUF5SWFCuoVFpn5iUXAbXrGtYqGBoZ/v8PAA\" rel=\"nofollow noreferrer\" title=\"Tcl – Try It Online\">Try it online!</a></p>\n"},{"answer_id":137192,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137192#137192","body":"<h1>PROLOG (SWI), 54 + 3 = 57 bytes</h1>\n\n<pre><code>f([H|_],L,H):-member(H,L).\nf([H|T],L,X):-f(T,[H|L],X).\n</code></pre>\n\n<p>+3 bytes because it requires an empty list as its second argument:</p>\n\n<pre><code>f([5,3,2,1,2,3,5],[],X)\n</code></pre>\n\n<p>will unify X to the first duplicate value in the list.</p>\n\n<p><a href=\"https://tio.run/##KyjKz8lP1y0uz/z/P00j2qMmPlbHR8dD00o3NzU3KbVIw0PHR1OPCywVApKKAEqlaYToAPk@sUCe3n97XR/baFMdYx0jHUMgNtYxjdVJ0/DRiQZJ65QXZZakasAZSjpKQOPAWox0FIzByFBHwVRHwYiQrv8A\" rel=\"nofollow noreferrer\" title=\"Prolog (SWI) – Try It Online\">Try it online!</a></p>\n\n<p>Here's the basic algorithm: we have the list to parse, and an accumulator list that starts empty. For each element in the list: pop that element. If it is in the accumulator, return the element. Else, put it in the accumulator.</p>\n"},{"answer_id":89687,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89687#89687","body":"<h1><strong>JavaScript, <s>60</s> <s>53</s> 48 Bytes</strong></h1>\n<pre><code>f=x=&gt;x&gt;Date().split` `[3]-121&amp;&amp;(alert(x),f(x-1))\n</code></pre>\n<p>I used a recursive solution.</p>\n"},{"answer_id":137174,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/137174#137174","body":"<h2>Dyalog APL Classic, 18 chars</h2>\n\n<p>Only works in <code>⎕IO←0</code>.</p>\n\n<pre><code>     w[⊃(⍳∘≢~⍳⍨)w←¯1,⎕]\n</code></pre>\n\n<p>Remove from the list of indices of the elements of the argument with a prepended \"-1\" the list indices of its nub and then pick the first of what's left. If after the removal there only remains an empty vector, its first element is by definition 0 which is used to index the extended argument producing the desired -1.</p>\n"},{"answer_id":136774,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136774#136774","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>78</s> 69 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code> fst.foldl(\\(i,a)(j,x)-&gt;(last$i:[j|i&lt;0,elem x a],x:a))(-1,[]).zip[1..]\n</code></pre>\n\n<p><a href=\"https://tio.run/##HchNDoIwEAbQvaf4FizaZGgs6oYAN/AEpYtJoLE4/ERYEOPdq5K81Xvw@uxFUqgTwrqZMEsnqlWRWKuBdp03Snjdsli64ROrM/XSj9jBnvaStVa5Jee1ecfFWWN8GjlOqNHNJwAjL3eoVvJmecVpywJEw7mCcDlYwo1QeML/rsf9wnqfvg\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n\n<p><em>Saved 9 bytes thanks to @nimi</em></p>\n\n<p>A basic path through the list. If the current element has not yet been seen (<code>i&lt;0</code>) and is in the accumulator list (<code>elem x a</code>) then store the current index. Else, keep the index -1. In any case, add the current element to the accumulator list.</p>\n\n<p><strong>EDIT</strong>: I did not read the question carefully enough: this code outputs the index of the second element of a duplicate element.</p>\n"},{"answer_id":136806,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136806#136806","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 35 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f s(h:t)|h`elem`s=h|1&lt;2=f(h:s)t\nf[]\n</code></pre>\n\n<p><a href=\"https://tio.run/##HchBCsMgEAXQvaf4hCwaMIFYuin1AD2DSJPF2JEaExyXubsthbd6vMqHUmotQC58r8PJCyXaFrF8zg9jw29lqCo43/CyVMpeum4c8XznvRAqR0GKmSal1LbGDIujxFzRI8B5OKNx/Zs1bhrGty8\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a> Crashes if no duplicate is found.</p>\n"},{"answer_id":136992,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136992#136992","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 12 bytes</h1>\n\n<pre><code>,&amp;_1{~~:i.0:\n</code></pre>\n\n<p><a href=\"https://tio.run/##y/r/P03B1kpBRy3esLquzipTz8CKiys1OSNfQcM6TVPNTsFIwRgIDRVMgSxrIDYB8kwVDP//BwA\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>,&amp;_1{~~:i.0:  Input: array M\n      ~:      Nub-sieve\n          0:  The constant 0\n        i.    Find the index of the first occurrence of 0 (the first duplicate)\n,&amp;_1          Append -1 to M\n    {~        Select the value from the previous at the index of the first duplicate\n</code></pre>\n"},{"answer_id":136723,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136723#136723","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 34 bytes</h1>\n\n<p><em>O(n<sup>2</sup>) time, O(n) space</em></p>\n\n<p><sup>Saved 3 bytes thanks to @vaultah, and 3 more from @xnor!</sup></p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda l:l[map(l.remove,set(l))&lt;0]\n</code></pre>\n\n<p><a href=\"https://tio.run/##TYqxDoJAEERr7iu2hOQ0gtpcpMTEysYOKQ5ZAnE5Luuh8PUnkpA4mWbePDu5pjeJr9O7J92VlQZSlHfahrRl7Po3yhe6kKLotCv8p2kJ4cYDKgFzHE9KBJS2xg4ujERguTUO6tlffhwfaB1cTIVjxtyzWpVN/C9k1/N6l4z66fNEwn5pLOEoISnEDx0WNO@4@AI\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":136856,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136856#136856","body":"\n\n<h1><a href=\"https://perl6.org\" rel=\"nofollow noreferrer\">Perl 6</a>, 13 bytes</h1>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>*.repeated[0]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7X1qcqlBmppdszZVbqaCWlllUXKKbUlqQk5mcWJKqYPtfS68otSAVyE6JNoj9D1blkKhgq2Cko2AMRoY6CqY6CkbWXMWJlQpo@jUcEjWtFZQVjLnA@pIg@kzA@oCaDHFoSgJr8svM@Q8A\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it</a></p>\n\n<hr>\n\n<h2>Explanation</h2>\n\n<ul>\n<li><p>The <code>*</code> is in a Term position so the whole statement is a <a href=\"https://docs.perl6.org/type/WhateverCode\" rel=\"nofollow noreferrer\">WhateverCode</a> lambda.</p></li>\n<li><p>The <code>.repeated</code> is a method that results in every value except for the first time each value was seen.</p>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>say [2, 3, 3, 3, 1, 5, 2, 3].repeated.perl; # (3, 3, 2, 3).Seq\n#   (      3, 3,       2, 3).Seq\n</code></pre></li>\n<li><p><code>[0]</code> just returns the first value in the <a href=\"https://docs.perl6.org/type/Seq\" rel=\"nofollow noreferrer\">Seq</a>.<br>\nIf there is no value <a href=\"https://docs.perl6.org/type/Nil\" rel=\"nofollow noreferrer\">Nil</a> is returned.<br>\n(<a href=\"https://docs.perl6.org/type/Nil\" rel=\"nofollow noreferrer\">Nil</a> is the base of the <a href=\"https://docs.perl6.org/type/Failure\" rel=\"nofollow noreferrer\">Failure</a> types, and all types are their own undefined value, so <a href=\"https://docs.perl6.org/type/Nil\" rel=\"nofollow noreferrer\">Nil</a> different than an undefined value in most other languages)</p></li>\n</ul>\n\n<hr>\n\n<p>Note that since the <a href=\"https://github.com/rakudo/rakudo/blob/51e59eeb5e48917ed3e825947989f91a219ce2cc/src/core/Any-iterable-methods.pm#L1595-L1628\" rel=\"nofollow noreferrer\">implementation of <code>.repeated</code></a> generates a <a href=\"https://docs.perl6.org/type/Seq\" rel=\"nofollow noreferrer\">Seq</a> that means it doesn't start doing any work until you ask for a value, and it only does enough work to generate what you ask for.<br>\nSo it would be easy to argue this has at worst <em>O(n)</em> time complexity, and at best <em>O(2)</em> time complexity if the second value is a repeat of the first.<br>\nSimilar can probably be said of memory complexity.</p>\n"},{"answer_id":136762,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136762#136762","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 28 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>(x=scan())[duplicated(x)][1]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/r/X6PCtjg5MU9DUzM6pbQgJzM5sSQ1RaNCMzbaMPa/KZcxEBpymXIZcf0HAA\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":136760,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136760#136760","body":"<h1>J, <s>17</s> 16 bytes</h1>\n\n<pre><code>(*/{_1,~i.&amp;0)@~:\n</code></pre>\n\n<h3>How?</h3>\n\n<pre><code>(*/{_1,~i.&amp;0)@~:\n\n             @~: returns the nub sieve which is a vector with 1 for the first occurrence of an element in the argument and 0 otherwise\n\n        i.&amp;0     returns the first index of duplication\n\n    _1,~         appends _1 to the index\n\n */              returns 0 with duplicates (product across nub sieve)\n\n     {           select _1 if no duplicates, otherwise return the index\n</code></pre>\n"},{"answer_id":136795,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136795#136795","body":"<h1>Javascript, 54 bytes</h1>\n<pre><code>a=&gt;(b=[],a.find(e=&gt;b.includes(e)?e:(b.push(e),0))||-1)\n</code></pre>\n<p>Uses another array to keep track of the already encountered values.</p>\n"},{"answer_id":136776,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136776#136776","body":"<h1>R, 34 bytes</h1>\n\n<pre><code>c((x=scan())[duplicated(x)],-1)[1]\n</code></pre>\n\n<p>Cut a few characters off the answer from @djhurio, don't have enough reputation to comment though.</p>\n"},{"answer_id":136770,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136770#136770","body":"<h1>C#, 145 bytes</h1>\n\n\n\n<pre class=\"lang-c# prettyprint-override\"><code>using System.Linq;a=&gt;{var d=a.Where(n=&gt;a.Count(t=&gt;t==n)&gt;1);return d.Select((n,i)=&gt;new{n,i}).FirstOrDefault(o=&gt;d.Take(o.i).Contains(o.n))?.n??-1;}\n</code></pre>\n\n<p>Probably a lot shorter way to do this in C# with a simple loop but I wanted to try it with Linq.</p>\n\n<p><a href=\"https://tio.run/##lY9Na8MwDIbv@RU62pAa0m2nzO5ho6eNjXXQQ@nBJCozS@TNVjpGyG/P3AT2Ab3sxViSpUeWqrhoPfmRbIvxzVYIm8/I2Ko7R@9Zn0FS1dgY4XHy55eTIlt2FRy9q@HeOhLyO/VTdNK6o@raEe/2OSRj4AAaRqtNf7QBam3V9gUDCtLGqhvfEQvWhrUmaQpZBuQuENRqgw1WLATlTmpD@NEnb5Bq7ULkh3CLB9s1LLw2tXq2ryi8cjI1JE7TxRSRlCtFq9WiKIexzP4Mmcqib1Btg2NMu6M4iPTFbg89LHO4mE6Rw1UOSxikLP9DX050QosZPcs@oa0n9FfvIZvvYfwC\" rel=\"nofollow noreferrer\" title=\"C# (Mono) – Try It Online\">Try it online!</a></p>\n\n<p>Full/Formatted version:</p>\n\n<pre class=\"lang-c# prettyprint-override\"><code>namespace System.Linq\n{\n    class P\n    {\n        static void Main()\n        {\n            Func&lt;int[], int&gt; f = a =&gt;\n            {\n                var d = a.Where(n =&gt; a.Count(t =&gt; t == n) &gt; 1);\n                return d.Select((n, i) =&gt; new { n, i }).FirstOrDefault(o =&gt; d.Take(o.i).Contains(o.n))?.n ?? -1;\n            };\n\n            Console.WriteLine(f(new[] { 2, 3, 3, 1, 5, 2 }));\n            Console.WriteLine(f(new[] { 2, 4, 3, 5, 1 }));\n\n            Console.ReadLine();\n        }\n    }\n}\n</code></pre>\n"},{"answer_id":136767,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136767#136767","body":"<h1>Axiom 96, bytes</h1>\n<pre><code>g(a:List INT):INT==(for i in 2..#a repeat(for j in 1..i-1 repeat if a.i=a.j then return a.i);-1)\n</code></pre>\n<p>it is O(n^2)</p>\n"},{"answer_id":136758,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136758#136758","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>94</s> 92 bytes</h1>\n\n<p>O(n) time and O(1) extra memory.</p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>def f(a):\n r=-1\n for i in range(len(a)):t=abs(a[i])-1;r=[r,i+1][a[t]&lt;0&gt;r];a[t]*=-1\n return r\n</code></pre>\n\n<p><a href=\"https://tio.run/##PY5BDsIgEEXXcopZgtJEWt204kUIC1RQkoY2w7jw9EhravIXP28yL3/@0GtKXSkPHyBwJ3oGqBvFIEwIEWICdOnp@ehTvYqetLtl7ky0olEDaoMyHpQ1zpC9HK9oh6XtVwV6emMVFPKZ7i77rA3bmVZCt0ZJOEtorfzB0worUZVYtgzYHpcdf0k/Y0zEA9@IEOUL\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n\n<p><a href=\"http://www.geeksforgeeks.org/find-duplicates-in-on-time-and-constant-extra-space/\" rel=\"nofollow noreferrer\">Source of the algorithm</a>.</p>\n\n<h3>Explanation</h3>\n\n<p>The basic idea of the algorithm is to run through each element from left to right, keep track of the numbers that have appeared, and returning the number upon reaching a number that has already appeared, and return -1 after traversing each element.</p>\n\n<p>However, it uses a clever way to store the numbers that have appeared without using extra memory: to store them as the sign of the element indexed by the number. For example, I can represent the fact that <code>2</code> and <code>3</code> has already appeared by having <code>a[2]</code> and <code>a[3]</code> negative, if the array is 1-indexed.</p>\n"},{"answer_id":136745,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136745#136745","body":"<h1>Pyth, 5 bytes</h1>\n\n<pre><code>h.-Q{\n</code></pre>\n\n<p><a href=\"https://pyth.herokuapp.com/?code=h.-Q%7B&amp;test_suite=1&amp;test_suite_input=%5B2%2C+3%2C+3%2C+1%2C+5%2C+2%5D%0A%5B2%2C+4%2C+3%2C+5%2C+1%5D%0A%5B1%2C+2%2C+1%2C+2%5D&amp;debug=0\" rel=\"noreferrer\">Test suite</a></p>\n\n<p>Remove from Q the first appearance of every element in Q, then return the first element.</p>\n"},{"answer_id":136740,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136740#136740","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 5 bytes</h1>\n\n<pre><code>Ṛœ-QṪ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8///hzllHJ@sGPty56v///9FGOgrGYGSoo2Cqo2AUCwA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>Ṛœ-QṪ  Main link. Argument: A (array)\n\nṚ      Yield A, reversed.\n   Q   Unique; yield A, deduplicated.\n œ-    Perform multiset subtraction.\n       This removes the rightmost occurrence of each unique element from reversed\n       A, which corresponds to the leftmost occurrence in A.\n    Ṫ  Take; take the rightmost remaining element, i.e., the first duplicate of A.\n</code></pre>\n"},{"answer_id":136730,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136730#136730","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, 7 bytes</h1>\n\n<pre><code>æ@bX ¦Y\n</code></pre>\n\n<p><a href=\"http://ethproductions.github.io/japt/?v=1.4.5&amp;code=5kBiWCCmWQ==&amp;input=WzIsIDMsIDMsIDEsIDUsIDJd\" rel=\"nofollow noreferrer\">Test it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code> æ@   bX ¦ Y\nUæXY{UbX !=Y}  Ungolfed\n               Implicit: U = input array\nUæXY{       }  Return the first item X (at index Y) in U where\n     UbX         the first index of X in U\n         !=Y     is not equal to Y.\n               In other words, find the first item which has already occured.\n               Implicit: output result of last expression\n</code></pre>\n\n<hr>\n\n<p>Alternatively: </p>\n\n<pre><code>æ@¯Y øX\n</code></pre>\n\n<p><a href=\"http://ethproductions.github.io/japt/?v=1.4.5&amp;code=5kCvWSD4WA==&amp;input=WzIsIDMsIDMsIDEsIDUsIDJd\" rel=\"nofollow noreferrer\">Test it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code> æ@   ¯ Y øX\nUæXY{Us0Y øX}  Ungolfed\n               Implicit: U = input array\nUæXY{       }  Return the first item X (at index Y) in U where\n     Us0Y        the first Y items of U (literally U.slice(0, Y))\n          øX     contains X.\n               In other words, find the first item which has already occured.\n               Implicit: output result of last expression\n</code></pre>\n"},{"answer_id":136721,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136721#136721","body":"<h2>JavaScript (ES6), <s>47</s> <s>36</s> <s>31</s> 25 bytes</h2>\n\n<p><em>Saved 6 bytes thanks to ThePirateBay</em></p>\n\n<p>Returns <code>undefined</code> if no solution exists.  </p>\n\n<p>Time complexity: <em>O</em>(n) :-)<br>\nSpace complexity: <em>O</em>(n) :-(  </p>\n\n<pre class=\"lang-js prettyprint-override\"><code>a=&gt;a.find(c=&gt;!(a[-c]^=1))\n</code></pre>\n\n<h3>How?</h3>\n\n<p>We keep track of already encountered values by saving them as new <em>properties</em> of the original array <strong><em>a</em></strong> by using negative numbers. This way, they can't possibly interfere with the original entries.</p>\n\n<h3>Demo</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let f =\r\n\r\na=&gt;a.find(c=&gt;!(a[-c]^=1))\r\n\r\nconsole.log(f([2, 3, 3, 1, 5, 2]))\r\nconsole.log(f([2, 4, 3, 5, 1]))\r\nconsole.log(f([1, 2, 3, 4, 1]))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":136728,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136728#136728","body":"<h1>Mathematica, 24 bytes</h1>\n<pre><code>#/.{h=___,a_,h,a_,h}:&gt;a&amp;\n</code></pre>\n<p>Mathematica's pattern matching capability is so cool!</p>\n<p>Returns the original <code>List</code> for invalid input.</p>\n<h3>Explanation</h3>\n<pre><code>#/.\n</code></pre>\n<p>In the input, replace...</p>\n<pre><code>{h=___,a_,h,a_,h}\n</code></pre>\n<p>A <code>List</code> with a duplicate element, with 0 or more elements before, between, and after the duplicates...</p>\n<pre><code>... :&gt;a\n</code></pre>\n<p>With the duplicate element.</p>\n"},{"answer_id":136726,"question_id":136713,"link":"https://codegolf.stackexchange.com/questions/136713/find-the-first-duplicated-element/136726#136726","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 6 bytes</h1>\n\n<pre><code>xŒQ¬$Ḣ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/7/i6KTAQ2tUHu5Y9P9w@6OmNf//R0cb6SgYg5GhjoKpjoJRrA6XAkjQBCwIFDEEiwBlISpNYCKmYK4RWI1JbCwA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>Returns the first duplicate, or 0 if there is no duplicate.</p>\n\n<h2>Explanation</h2>\n\n<pre><code>xŒQ¬$Ḣ  Input: array M\n    $   Operate on M\n ŒQ       Distinct sieve - Returns a boolean mask where an index is truthy\n          for the first occurrence of an element\n   ¬      Logical NOT\nx       Copy each value in M that many times\n     Ḣ  Head\n</code></pre>\n"},{"answer_id":136625,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/136625#136625","body":"<h1><a href=\"http://www.emojicode.org/\" rel=\"nofollow noreferrer\">Emojicode</a>, 100 bytes</h1>\n\n<pre><code>🐖🔢➡️🚂🍇🍊◀️🐕2🍇🍎🐕🍉🍓🍇🍎➕🔢➖🐕1🔢➖🐕2🍉🍉\n</code></pre>\n\n<p><a href=\"https://tio.run/##S83Nz8pMzk9J/f9h/oRuhQ/zZzUBid52EHfah/lTFj2at/D9jn6QOEgYiLseTW8Ai0yYagQV6gNxgHQnEE@GiT2aNxWifxpI1hCJbQRV2vkfRHBxfZjf3wi2lEsBSE1pUshUeNS/0lDB0BgmChKf0QCSXAgiFgFVGBqAVQP1g00CAA\" rel=\"nofollow noreferrer\" title=\"Emojicode – Try It Online\">Try it online!</a></p>\n"},{"answer_id":211,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/211#211","body":"<h1>Python 2, 34 bytes</h1>\n<p>Python, using recursion... here comes a StackOverflow!</p>\n<pre><code>def f(i,j):print i;f(j,i+j)\nf(1,1)\n</code></pre>\n"},{"answer_id":120257,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/120257#120257","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 6 bytes</h1>\n\n<pre><code>AḶ-2*i\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/9/x4Y5tukZamf///zcAAA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>        Argument: -8\nA       Get the absolute value of n             8\n Ḷ      Create a range from 0 to that number-1  0, 1, 2, 3, 4, 5, 6, 7\n  -2*   converts that range into the list       -2^0, -2^1, ..., -2^7\n     i  Returns &gt;0 if n is in this range, 0 otherwise.\n</code></pre>\n\n<p>Dennis pointed out a flaw in my approach, which I fixed by taking the absolute value of the input for the range generation.</p>\n"},{"answer_id":115525,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115525#115525","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python</a>, 46 bytes</h1>\n\n<p><em>-2 bytes thanks to @ovs.</em></p>\n<pre class=\"lang-python prettyprint-override\"><code>def g(x):\n while x%-2==0!=x:x/=-2\n return x==1\n</code></pre>\n<p>Function with usage:</p>\n<pre class=\"lang-python prettyprint-override\"><code>g(4) # put your number between the brackets\n</code></pre>\n<p><a href=\"https://tio.run/##K6gsycjPM/r/PyU1TSFdo0LTikuhPCMzJ1WhQlXXyNbWQNG2wqpC31bXiEuhKLWktChPocLW1vB/QVFmXglQg4nmfwA\" rel=\"noreferrer\">Try it online!</a></p>\n"},{"answer_id":134991,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/134991#134991","body":"<h1><a href=\"http://www.latrobe.edu.au/humanities/research/research-projects/past-projects/joy-programming-language\" rel=\"nofollow noreferrer\">Joy</a>, 28 bytes</h1>\n\n<pre><code>[2&lt;][][1 - dup 1 -][+]binrec\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8qv/G/2P9rIJjY6NtpQQVchpbRAAUjHRmvHJmXmFaUm/9fj@g8A\" rel=\"nofollow noreferrer\" title=\"Joy – Try It Online\">Try it online!</a></p>\n"},{"answer_id":133567,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/133567#133567","body":"<h1><a href=\"https://github.com/kritixilithos/Carrot/\" rel=\"nofollow noreferrer\">Carrot</a>, 12 bytes</h1>\n<pre><code>#^//()/gS&quot; &quot;\n</code></pre>\n<p><a href=\"http://kritixilithos.github.io/Carrot/\" rel=\"nofollow noreferrer\">Try it online!</a> (append a <code>^@^v@</code> after the code to see the spaces bounded between <code>@</code>s)</p>\n<h3>Explanation</h3>\n<pre><code>#^            Set the stack-string to be equal to the input\n/             Get matches of this regex\n /()/g         any position (not character) in the string (shorter than /\\b|\\B/ by 3 bytes)\n              If the length of the string is 3, this returns a 4-element array\n               consisting of empty strings\nS&quot; &quot;          Join on spaces, so the example 4-element array will result in 3 spaces\n</code></pre>\n<p>The space can even be replaced with a literal newline or tab for the same bytecount.</p>\n"},{"answer_id":133566,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/133566#133566","body":"<h1>Common Lisp, 32 bytes</h1>\n\n<pre><code>(format t\"~va\"(length(read))#\\ )\n</code></pre>\n\n<p><a href=\"https://tio.run/##S87JLC74/18jLb8oN7FEoUSprixRSSMnNS@9JEOjKDUxRVNTOUZB8/9/JY/UnJx8HYXy/KKcFEUlAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":133552,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/133552#133552","body":"<h1><a href=\"https://github.com/splcurran/Gaia\" rel=\"nofollow noreferrer\">Gaia</a>, 6 <a href=\"https://github.com/splcurran/Gaia/blob/master/codepage.md\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>0₁@+₌ₓ\n</code></pre>\n\n<p>I might make a built-in for this in the future, but built-ins are boring anyway.</p>\n\n<h3>Explanation</h3>\n\n<pre><code>0₁      Push 0 and 1\n  @     Push an input\n   +₌ₓ  Add the top two stack elements, without popping them, (input) times\n        Implicitly print the top stack element.\n</code></pre>\n"},{"answer_id":131939,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/131939#131939","body":"<h2>JavaScript, <strike>75</strike> 71 bytes</h2>\n\n<p>Saved 4 bytes thanks to Zachary.</p>\n\n<pre><code>e=\"\";for(y=(new Date).getFullYear(),i=y;i&gt;=y-120;i--)e+=i+\" \";alert(e)\n</code></pre>\n\n<p>Prints all years into a single alert. </p>\n\n<p>I'm sure it could be improved.</p>\n\n<h2>History</h2>\n\n<p><strong>75 bytes</strong></p>\n\n<pre><code>var e=\"\";for(y=(new Date).getFullYear(),i=y;i&gt;=y-120;i--)e+=i+\" \";alert(e);\n</code></pre>\n\n<hr>\n\n<p>(Every year was in a separate alert)</p>\n\n<pre><code>for(y=(new Date).getFullYear(),i=y;i&gt;=y-120;i--)alert(i);\n</code></pre>\n"},{"answer_id":130481,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130481#130481","body":"<h1>TI-Basic, <s>24</s> <s>14</s> 13 bytes</h1>\n<p>Saved 1 byte thanks to lirtosiast</p>\n<pre><code>:√(Ans^sum(not(fPart(Ans/randIntNoRep(1,Ans\n</code></pre>\n"},{"answer_id":115333,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/115333#115333","body":"<h1>TI-Basic, <s>22</s> 19 bytes</h1>\n<pre><code>max(getDate:seq(I,I,Ans,Ans-120,~1\n</code></pre>\n"},{"answer_id":131690,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/131690#131690","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 36 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;r{eval (1..r).select{|c|r%c&lt;1}*?*}\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyfZvtf166oOrUsMUdBw1BPr0hTrzg1JzW5pLomuaZINdnGsFbLXqv2P0jO2EBTLzexoLoms6agtKRYIS06M7b2PwA\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130469,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130469#130469","body":"<h1>JavaScript (ES7), 32 bytes</h1>\n<pre class=\"lang-js prettyprint-override\"><code>n=&gt;g=(i=n)=&gt;i?i**!(n%i)*g(i-1):1\n</code></pre>\n<p>Saved a couple of bytes by borrowing Leaky's tip on <a href=\"https://codegolf.stackexchange.com/a/130458/58974\">musicman's Python solution</a>.</p>\n<hr />\n<h2>Try it</h2>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>o.innerText=(f=\nn=&gt;g=(i=n)=&gt;i?i**!(n%i)*g(i-1):1\n)(i.value=1)();oninput=_=&gt;o.innerText=f(+i.value)()</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;input id=i type=number&gt;&lt;pre id=o&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<hr />\n<h2>Alternative (ES6), 32 bytes</h2>\n<pre class=\"lang-js prettyprint-override\"><code>n=&gt;g=(i=n)=&gt;i?(n%i?1:i)*g(i-1):1\n</code></pre>\n"},{"answer_id":131597,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/131597#131597","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, <s>52</s> 51 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>n-&gt;{int r=n,d=0;for(;++d&lt;n;)r*=n%d&lt;1?d:1;return r;}\n</code></pre>\n\n<p><a href=\"https://tio.run/##NY5Ba8MwDIXv/RWiEEiW1DT0VscrPe4wdig7jR28OC7OUtnISiGU/PbM7baDeEJ6evp6fdUbHzrszfcSxq/BtdAOOkZ41Q7htgL4m0bWnOTqnYFL2uUnJofnj0/QdI7FwwrQpzwxshuEHbFl51G8IL@jpuktdKTZE1i14Ob55pCBFFZGbaX1lMuyNA3Kgp4UZqapD2ZfS@p4JASS8yIfD5IT8vspgoJaJmkU7LapKct/CIDTFLm7CD@yCImSbb7OdmYPmclwXQFWYIUOYZiOMeHlWBS/6fPqXvPyAw\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n\n<p>Thanks LeakyNun for saving 1 byte!</p>\n"},{"answer_id":131675,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/131675#131675","body":"<h1>ReRegex, 50 bytes.</h1>\n<pre><code>(0+),(0+):0/$1,$2,$1$2:/.*?(0+),0+:$/$1/0,0:#input\n</code></pre>\n<p>0 indexed. Takes input and gives output via Unary.</p>\n<p><a href=\"https://tio.run/##K0otSk1Prfj/X8NAW1MHRFgZ6KsY6qgY6agYqhhZ6etp2YOlDLStVIAS@gY6BlbKmXkFpSX//xuAAAA\" rel=\"nofollow noreferrer\" title=\"ReRegex – Try It Online\">Try it online!</a></p>\n<h2>About the Program</h2>\n<p>ReRegex was designed to be much like an advanced version of <a href=\"http://esolangs.org/wiki////\" rel=\"nofollow noreferrer\">///</a>. It offers the same very basic concept of repeatedly doing string match and replace operations. However, that's where the similarities end. ReRegex instead uses a list of match and replace operations, separated by <code>/</code>s, to perform in a loop, and the original string to effect. The Regexes will continue being performed on the original string until a constant state is achieved, at which point the program will dump the string to STDOUT.</p>\n<p>This program in particular is just 2 regular expressions and then the input with some default values.</p>\n<pre><code>(0+),(0+):0  -&gt; $1,$2,$1$2:\n.*?(0+),0+:$ -&gt; $1\n</code></pre>\n<p>And the input is formatted with;</p>\n<pre><code>0,0:#input\n</code></pre>\n<p>ReRegex defaultly replaces <code>#input</code> with whatever is passed to the program on STDIN.</p>\n<p>For an example, let's say <code>00000</code> is passed to STDIN. First, the &quot;Memory&quot; looks like this:</p>\n<pre><code>0,0:00000\n</code></pre>\n<p>In the first loop, the regex <code>(0+),(0+):0</code> is matched, the replace then creates the next itteration of the fibonnachi sequence.</p>\n<pre><code>0,0,00:0000\n</code></pre>\n<p>And in doing so, it also pops one of the 0's off, which is why <code>:0</code> is at the tail end of the match, but not the replace. This then happens 4 more times in a row.</p>\n<pre><code>0,0,00,000,00000,00000000,0000000000000:\n</code></pre>\n<p>Now that first regex doesn't match, as there's no more :0 at the end, so we're almost at a stable end point. Now that there's nothing after <code>:</code>, <code>.*?(0+),0+:$</code> matches, and all it does is clear all data but the <em>second last</em> group of <code>0</code>s.</p>\n<pre><code>00000000\n</code></pre>\n<p>Now, nothing else matches, so it's outputted.</p>\n"},{"answer_id":131632,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/131632#131632","body":"<h1><a href=\"https://bitbucket.org/zacharyjtaylor/my-language/src/5ebf758a930fa4f4140d49db53b3ce8359aa1b65?at=master\" rel=\"nofollow noreferrer\">MY</a>, 4 bytes</h1>\n\n<p>Hex:</p>\n\n<pre><code>1A 3A 54 27\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>1A - Input as an integer\n3A - Factors\n54 - Product\n27 - Output (with newline)\n</code></pre>\n"},{"answer_id":131580,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/131580#131580","body":"<h2>Python 3, 45 bytes</h2>\n<p><code>lambda _:_**(sum(_%-~i&lt;1for i in range(_))/2)</code></p>\n<p>Let <code>x</code> be a number. Both <code>y</code> and <code>z</code> will be divisors of <code>x</code> if <code>y * z = x</code>. Therefore, <code>y = x / z</code>. Let's say a number <code>d</code> has 6 divisiors, due to this observation the divisors will be <code>a</code>, <code>b</code>, <code>c</code>, <code>d / a</code>, <code>d / b</code>, <code>d / b</code>. If we multiply all these numbers (the point of the puzzle), we obtain <code>d * d * d = d ^ 3</code>. In general, for <code>e</code> with  a number of <code>f</code> divisors, the product of said divisors will be <code>e ^ (f / 2)</code>, which is what the lambda does.</p>\n<p><a href=\"https://tio.run/##K6gsycjPM/7/P802JzE3KSVRId4qXktLo7g0VyNeVbcu08YwLb9IIVMhM0@hKDEvPVUjXlNT30jzP1w0J7O4RAMiZahjaKipqR1taKRjaKJjBESmOkYWOsYGsVZcCgoFRZl5JRppGpmamv8B\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":131578,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/131578#131578","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 30 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n:n&lt;3or f(n-2)+f(n-1)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P802JzE3KSVRIc8qz8Y4v0ghTSNP10hTG0QZav4vKMrMK9HITSzQSNNRKErMS0/VMNRRMDLV1NT8DwA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n\n<p>One catch: this outputs <code>True</code> instead of <code>1</code>. This is allowed by <a href=\"https://codegolf.meta.stackexchange.com/a/9067\">this meta consensus</a>.</p>\n"},{"answer_id":131568,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/131568#131568","body":"<h1><a href=\"http://esolangs.org/wiki/Shakespeare\" rel=\"nofollow noreferrer\">Shakespeare Programming Language</a>, 353 bytes</h1>\n\n<pre><code>.\nAjax,.\nPuck,.\nPage,.\nAct I:.\nScene I:.\n[Enter Ajax and Puck]\nAjax:\nYou cat\nPuck:\nListen to thy heart\n[Exit Ajax]\n[Enter Page]\nScene II:.\nPuck:\nYou sum you cat\nPage:\nIs Ajax nicer I?If so, is remainder of the quotient Ajax I nicer zero?If not, you product you I.Is Ajax nicer I?If so, let us return to scene II\nScene III:.\nPage:\nOpen thy heart\n[Exeunt]\n</code></pre>\n\n<p>Ungolfed version:</p>\n\n<pre><code>The Tragedy of the Product of a Moor's Factors in Venice.\n\nOthello, a numerical man.\nDesdemona, a product of his imagination.\nBrabantio, a senator, possibly in charge of one Othello's factories.\n\nAct I: In which tragedy occurs.\n\nScene I: Wherein Othello and Desdemona have an enlightened discussion.\n\n[Enter Othello and Desdemona]\n\nOthello:\n  Thou art an angel!\n\nDesdemona:\n  Listen to thy heart.\n\n[Exit Othello]\n[Enter Brabantio]\n\nScene II: Wherein Brabantio expresses his internal monologue to Desdemona.\n\nDesdemona:\n  Thou art the sum of thyself and the wind!\n\nBrabantio:\n  Is Othello jollier than me?\n  If so, is the remainder of the quotient of Othello and I better than nothing?\n  If not, thou art the product of thyself and me.\n  IS Othello jollier than me?\n  If so, let us return to scene II!\n\nScene III: An Epilogue.\n\nBrabantio:\n  Open thy heart!\n\n[Exeunt]\n</code></pre>\n\n<p>I'm using <a href=\"https://github.com/drsam94/Spl\" rel=\"nofollow noreferrer\">this SPL compiler</a> to run the program.</p>\n\n<p>Run with:</p>\n\n<pre><code>$ python splc.py product-of-divisors.spl &gt; product-of-divisors.c\n$ gcc product-of-divisors.c -o pod.exe\n$ echo 30 | ./pod\n810000\n</code></pre>\n"},{"answer_id":130466,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130466#130466","body":"<h1>C (gcc), <s>52</s> 48 bytes</h1>\n<pre><code>p,a;f(x){for(p=1,a=x;a;a--)p*=x%a?1:a;return p;}\n</code></pre>\n<p>-4 bytes thanks to Cody Gray</p>\n<p>A function that takes in an integer and returns the product of it's divisors.</p>\n<p><a href=\"https://tio.run/##HYxBCsMgEEXXeoohENBGF2mhi0ylF@lmSGqZRY1IWoTg2a3p6sHn/Tfb1zzXGg2hV1nvfk0qutGQy0hI1up4crmn@zgRpuf2SQEilsphgzdxUN@VFw27FMfCKMVRYHAwIjDc4NI4DPxXREzN8qrrz8sE/XV5hM4AG/CKtW7fIkv9AQ\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Ungolfed:</p>\n<pre><code>int proddiv(int input) {\n    int total = 1, loopvar;\n    for(loopvar = input; loopvar &gt; 0; --loopvar) {\n    // for loopvar from input down to 1...\n        total *= (input % loopvar) ? 1 : loopvar;\n        // ...If the loopvar is a divisor of the input, multiply the total by loopvar;\n    }\n    return total;\n}\n</code></pre>\n"},{"answer_id":130457,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130457#130457","body":"<h1>TI-Basic (TI-84 Plus CE), 24 bytes</h1>\n<pre><code>Prompt X\n1\nFor(A,1,X\nIf not(remainder(X,A\nAAns\nEnd\n</code></pre>\n<p>Full program: prompts user for input; returns output in <code>Ans</code>, a <a href=\"http://tibasicdev.wikidot.com/ans\" rel=\"nofollow noreferrer\">special variable</a> that (basically) stores the value of the latest value calculated.</p>\n<p>Explanation:</p>\n<pre><code>Prompt X             # 3 bytes, Prompt user for input, store in X\n1                    # 2 bytes, store 1 in Ans for use later\nFor(A,1,X            # 7 bytes, for each value of A from 1 to X\nIf not(remainder(X,A # 8 bytes, If X is divisible by A...\nAAns                 # 3 bytes, ...store (A * Ans) in Ans\nEnd                  # 1 byte, end For( loop\n</code></pre>\n"},{"answer_id":131500,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/131500#131500","body":"<h1>Axiom, 23 bytes</h1>\n<pre><code>h(x)==x^(#divisors x/2)\n</code></pre>\n<p>This is a translation in Axiom of alephalpha solution</p>\n"},{"answer_id":131494,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/131494#131494","body":"<h1>x86-64 Machine Code, 26 bytes</h1>\n<pre><code>31 C9 8D 71 01 89 F8 FF C1 99 F7 F9 85 D2 75 03 0F AF F1 39 F9 7C EE 89 F0 C3\n</code></pre>\n<p>The above code defines a function that takes a single parameter (the input value, a positive integer) in <code>EDI</code> (following the <a href=\"https://en.wikipedia.org/wiki/X86_calling_conventions#System_V_AMD64_ABI\" rel=\"nofollow noreferrer\">System V AMD64 calling convention</a> used on Gnu/Unix), and returns a single result (the product of divisors) in <code>EAX</code>.</p>\n<p>Internally, it computes the product of divisors using an (extremely inefficient) iterative algorithm, similar to <a href=\"https://codegolf.stackexchange.com/a/130466/58518\">pizzapants184's C submission</a>. Basically, it uses a counter to loop through <em>all</em> of the values between 1 and the input value, checking to see if the current counter value is a divisor of the input. If so, it multiplies that into the running total product.</p>\n<p><strong>Ungolfed assembly language mnemonics:</strong></p>\n<pre><code>; Parameter is passed in EDI (a positive integer)\nComputeProductOfDivisors:\n   xor   ecx, ecx        ; ECX &lt;= 0  (our counter)\n   lea   esi, [rcx + 1]  ; ESI &lt;= 1  (our running total)\n.CheckCounter:\n   mov   eax, edi        ; put input value (parameter) in EAX\n   inc   ecx             ; increment counter\n   cdq                   ; sign-extend EAX to EDX:EAX\n   idiv  ecx             ; divide EDX:EAX by ECX\n   test  edx, edx        ; check the remainder to see if divided evenly\n   jnz   .SkipThisOne    ; if remainder!=0, skip the next instruction\n   imul  esi, ecx        ; if remainder==0, multiply running total by counter\n.SkipThisOne:\n   cmp   ecx, edi        ; are we done yet? compare counter to input value\n   jl    .CheckCounter   ; if counter hasn't yet reached input value, keep looping\n   \n   mov   eax, esi        ; put our running total in EAX so it gets returned\n   ret\n</code></pre>\n<p>The fact that the <code>IDIV</code> instruction uses hard-coded operands for the dividend cramps my style a bit, but I think this is pretty good for a language that has no built-ins but basic arithmetic and conditional branches!</p>\n"},{"answer_id":130485,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130485#130485","body":"<h1>Mathematica, 17 bytes</h1>\n<p>for those who can't view deleted answers (DavidC's answer), this is the code in Mathematica with the help of @MartinEnder</p>\n<pre><code>1##&amp;@@Divisors@#&amp;\n</code></pre>\n"},{"answer_id":130483,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130483#130483","body":"<h1>Fortran 95, 88 bytes</h1>\n\n<pre><code>function l(k)\nn=0\nl=1\ndo while(n&lt;k)\nn=n+1\nif(MODULO(k,n)==0)then\nl=l*n\nend if\nend do\nend\n</code></pre>\n\n<p><a href=\"https://tio.run/##bdC9DsIgEAfwnadghFqTQv1MZHPUdPIBGgstKR4NYnx8xLoYT5YjPy53/2B8iKGFZW8@lzQF34f2RqO@R0LzmYKFSIuSOib4r0gkNZIVkjWSDZItkh2SPRJRYcIZBY4k/xCOKXGGOm/U0NHvf0vmAddoPeT3kRNQFXFKkM7T52CdZnCYFRaCWMPOzfFyathYAleq4nHQkNtdAfNca@bS@XdJ6QU\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p><strong>Ungolfed:</strong></p>\n\n<pre><code>integer function l(k)\n    implicit none\n    integer :: n, k\n\n    n=0\n    l=1\n    do while (n&lt;k)\n        n=n+1\n        if (MODULO(k,n) == 0) then\n            l=l*n\n        end if\n    end do\n\nend function l\n</code></pre>\n"},{"answer_id":130482,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130482#130482","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, 28 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>v=scan():1;prod(v[!v[1]%%v])\n</code></pre>\n\n<p><a href=\"https://tio.run/##K/r/v8y2ODkxT0PTytC6oCg/RaMsWrEs2jBWVbUsVvO/2X8A\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130480,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130480#130480","body":"<h1><a href=\"https://php.net/\" rel=\"nofollow noreferrer\">PHP</a>, 45 bytes</h1>\n\n\n\n<pre class=\"lang-php prettyprint-override\"><code>for($p=1;$d++&lt;$argn;)$argn%$d?:$p*=$d;echo$p;\n</code></pre>\n\n<p><a href=\"https://tio.run/##K8go@G9jX5BRwKWSWJSeZ6tkZKJk/T8tv0hDpcDW0FolRVvbBixjrQmmVFVS7K1UCrRsVVKsU5Mz8lUKrP//BwA\" rel=\"nofollow noreferrer\" title=\"PHP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130479,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130479#130479","body":"<h1><a href=\"https://github.com/okx-code/Neim\" rel=\"nofollow noreferrer\">Neim</a>, 2 bytes</h1>\n\n<pre><code>𝐅𝐩\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0vNzP3//8PcCa1AvPL/f2MDAA\" rel=\"nofollow noreferrer\" title=\"Neim – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130472,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130472#130472","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <s>52</s> 50 bytes</h1>\n\n<ul>\n<li>Thanks @ovs for 2 bytes: <code>m*=n%i&gt;0 or i</code></li>\n</ul>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>i=n=input()\nm=1\nwhile i:m*=n%i&gt;0 or i;i-=1\nprint m\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/r/P9M2zzYzr6C0REOTK9fWkKs8IzMnVSHTKlfLNk81085AIb9IIdM6UxcoVVCUmVeikPv/v7EBAA\" rel=\"nofollow noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130478,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130478#130478","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a>, 27 bytes</h1>\n\n\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(n)prod(find(~mod(n,1:n)))\n</code></pre>\n\n<p>This defines an anonymous function. </p>\n\n<p><a href=\"https://tio.run/##y08uSSxL/f/fQSNPs6AoP0UjLTMvRaMuF8jK0zG0ytPU1PyfmFesYWyg@R8A\" rel=\"nofollow noreferrer\" title=\"Octave – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130476,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130476#130476","body":"<h1><a href=\"http://pari.math.u-bordeaux.fr/\" rel=\"nofollow noreferrer\">Pari/GP</a>, 18 bytes</h1>\n\n<pre><code>n-&gt;n^(numdiv(n)/2)\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gsytRNL/ifpmCr8D9P1y4vTiOvNDcls0wjT1PfSPN/Wn6RRh5QzlBHwdhAR6GgKDOvBCigpKBrByTSgKo0Nf8DAA\" rel=\"nofollow noreferrer\" title=\"Pari/GP – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130474,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130474#130474","body":"<h1>J, 19 bytes</h1>\n<pre><code>*/}.I.(=&lt;.)(%i.@&gt;:)\n</code></pre>\n<p>Explanation coming later...</p>\n<p><a href=\"https://tio.run/##y/oPBFr6tXqeehq2NnqaGqqZeg52VpoKJlzYRM0A\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130468,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130468#130468","body":"<h2><a href=\"https://github.com/m-ender/alice\" rel=\"nofollow noreferrer\">Alice</a>, 12 bytes</h2>\n\n<pre><code>/o\n\\i@/Bdt&amp;*\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8zJTE79/18/nysm00HfKaVETev/fyMTAA\" rel=\"nofollow noreferrer\" title=\"Alice – Try It Online\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>This is just the regular framework for decimal I/O:</p>\n\n<pre><code>/o\n\\i@/...\n</code></pre>\n\n<p>Then the program is:</p>\n\n<pre><code>B    Get all divisors of the input.\ndt   Get the stack depth minus 1.\n&amp;*   Multiply the top two stack elements that many times, folding multiplication\n     over the stack.\n</code></pre>\n"},{"answer_id":130467,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130467#130467","body":"<h1><a href=\"http://perl6.org/\" rel=\"nofollow noreferrer\">Perl 6</a>, 22 bytes</h1>\n\n<pre><code>{[*] grep $_%%*,1..$_}\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0gtyjH7n1upoJamYPu/OlorViG9KLVAQSVeVVVLx1BPTyW@9r@1QnFipYKSSryVQnWahkq8Zq2SQlp@kQJQ2tjgPwA\" rel=\"nofollow noreferrer\" title=\"Perl 6 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130463,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130463#130463","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <strike>35</strike> 34 bytes</h1>\n\n<p><em>-1 thanks to ovs</em></p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>f n=product[x|x&lt;-[2..n],n`mod`x&lt;1]\n</code></pre>\n\n<p><a href=\"https://tio.run/##DcLRCoIwFAbgVzmXCr/ijloG2hv4BGvkyCTJzWEK56J3X318L/t5P5clxol8F7Z1PB67lq@0meY89wZ@cOs4SKtMdHb21JGzob9TchPKrhS22e@UCGgiSVPSCowSFWqccEaDC1QBxVAV@L8GNygLE38\" rel=\"nofollow noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130464,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130464#130464","body":"<h1><a href=\"https://drive.google.com/drive/folders/0B0R1Jgqp8Gg4cVJCZkRkdEthZDQ\" rel=\"nofollow noreferrer\">QBIC</a>, 22 bytes</h1>\n\n<pre><code>[:|~b/a=b'\\`a|q=q*a}?q\n</code></pre>\n\n<h2>Explanation</h2>\n\n<pre><code>[:|           FOR a  = 1; a &lt;= input (b); a++\n b/a=b'\\`a    'a' is a proper divisor if integer division == float division\n~         |   IF that's true\nq=q*a         THEN multiply running total q (starts as 1) by that divsor\n}             NEXT\n?q            Print q\n</code></pre>\n"},{"answer_id":130465,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130465#130465","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 2 bytes</h1>\n\n<pre><code>ÑP\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f//8MSA//@NTAA\" rel=\"noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>Ñ    # divisors\n P   # product\n</code></pre>\n"},{"answer_id":130460,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130460#130460","body":"<h1><a href=\"https://github.com/ETHproductions/japt/\" rel=\"noreferrer\">Japt</a>, 3 bytes</h1>\n\n<pre><code>â ×\n</code></pre>\n\n<p><a href=\"http://ethproductions.github.io/japt/?v=1.4.5&amp;code=4iDX&amp;input=MjQ=\" rel=\"noreferrer\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>â ×  // implicit integer input\n\nâ    // get integer divisors\n  ×  // get product of array\n</code></pre>\n"},{"answer_id":130458,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130458#130458","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"noreferrer\">Python 3</a>, <s>42</s> 41 bytes</h1>\n\n<p>Saved 1 byte thanks to Leaky Nun!</p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda i,k=1:k&gt;i or k**(i%k&lt;1)*f(i,k+1)\n</code></pre>\n\n<p><a href=\"https://tio.run/##DYxBCoMwEADvfcVeCrtxD93YQhH1I6WHiE27RKPEXHx9GpjTDMx@5t8W21L8sLh1mh0oh0G6MCpsCYIxqNfQCxmPtTRCxVevoBEWPTImF78fFBYhal5iWe5sKw@2T25v7@4CsCeNGeuAqPwB\" rel=\"noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130459,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130459#130459","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, 3 bytes</h1>\n\n<pre><code>Z\\p\n</code></pre>\n\n<p><a href=\"https://tio.run/##y00syfn/Pyqm4P9/MwA\" rel=\"noreferrer\" title=\"MATL – Try It Online\">Try it online!</a></p>\n"},{"answer_id":130456,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130456#130456","body":"<h1><a href=\"https://github.com/isaacg1/pyth\" rel=\"nofollow noreferrer\">Pyth</a>, 6 bytes</h1>\n\n<pre><code>*Fs{yP\n</code></pre>\n\n<p><a href=\"http://pyth.herokuapp.com/?code=%2aFs%7ByP&amp;test_suite=1&amp;test_suite_input=1%0A2%0A3%0A4%0A5%0A6%0A7%0A8%0A9%0A10%0A12%0A14%0A24%0A25%0A28%0A30&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a>.</p>\n"},{"answer_id":130455,"question_id":130454,"link":"https://codegolf.stackexchange.com/questions/130454/product-of-divisors/130455#130455","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 3 bytes</h1>\n\n<pre><code>ÆDP\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8//9wm0vA////jUwA\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":128238,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/128238#128238","body":"<h1><a href=\"https://github.com/stestoltz/cQuents\" rel=\"nofollow noreferrer\">cQuents</a>, 6 bytes</h1>\n<pre><code>=1:z+y\n</code></pre>\n<p><a href=\"https://tio.run/##Sy4sTc0rKf7/39bQqkq78v9/AA\" rel=\"nofollow noreferrer\" title=\"cQuents – Try It Online\">Try it online!</a></p>\n<p>This works both with and without input - it prints the sequence without input, and the <code>n</code>th item (1-indexed) with input <code>n</code>.</p>\n<p>For <code>0, 1, 1, ...</code> version, <strong>8 bytes</strong>:</p>\n<pre><code>=0,1:z+y\n</code></pre>\n<p><a href=\"https://tio.run/##Sy4sTc0rKf7/39ZAx9CqSrvy/38A\" rel=\"nofollow noreferrer\" title=\"cQuents – Try It Online\">Try it online!</a></p>\n<h1>Explanation</h1>\n<pre><code>=1      Set first item in sequence to 1\n  :     Mode: Sequence 1 (prints sequence with no input, or nth item with input n\n   z+y  Each term equals the previous two terms added together (defaults to 0)\n</code></pre>\n<p>I really, really like the way this language is going :)</p>\n"},{"answer_id":89511,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89511#89511","body":"<h1>JavaScript (ES6), 65 bytes</h1>\n\n<p><code>[...Array(1+- -Date().substr(11,4)).keys()].slice(-121).reverse()</code></p>\n\n<p>You're welcome to improve and shorten it...</p>\n\n<p>Thanks to @Yay295 for the fix. I was 1 year off.</p>\n"},{"answer_id":128306,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/128306#128306","body":"<h1>Javascript, <s>74</s> 73 bytes</h1>\n<p><em>saved one byte thanks to Martin Ender</em></p>\n<pre><code>()=&gt;{for(i=0;i&lt;1e6;i++)!/^.?$|^(..+)\\1+$/.test('1'.repeat(i))&amp;&amp;alert(i);}\n</code></pre>\n<p>Tests all numbers under 1 million against a regex. <a href=\"https://iluxonchik.github.io/regular-expression-check-if-number-is-prime/\" rel=\"nofollow noreferrer\">Regex Explanation</a></p>\n"},{"answer_id":5993,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/5993#5993","body":"<h3><em>Mathematica</em>, <s>17</s> 24</h3>\n\n<p>Just for comparison:</p>\n\n<pre><code>Prime@Range@78498\n</code></pre>\n\n<p><em>As noted in a comment I failed to provide one prime per line; correction:</em></p>\n\n<pre><code>Column@Prime@Range@78498\n</code></pre>\n"},{"answer_id":128035,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/128035#128035","body":"<h1>C#, <s>104</s> 107 bytes</h1>\n\n<p>+3 bytes, for using system, and finding another method to count bits</p>\n<pre class=\"lang-cs prettyprint-override\"><code>using System;b=&gt;Enumerable.Range(0,1+(int)Math.Log(int.MaxValue,2)).Select(x=&gt;Math.Pow(-2,x)).Any(x=&gt;b==x);\n</code></pre>\n<p>It uses Linq to calculate all of -2-s integer powers, and then to test if the input is one them. It would be a bit shorter, if it didn't have to work in a theoretical version, where int can be of any size. Ungolfed:</p>\n<pre class=\"lang-cs prettyprint-override\"><code>bool IsPowerOfMinus2(int number)\n{\n    return Enumerable.Range(0, 2 + (int)Math.Log(int.MaxValue, 2))\n        // We generate an IEnumerable, with values from 0 to the length of \n        // maximum number in binary. We need to add one, because we need to\n        // know, how many integers to \n        .Select(x =&gt; Math.Pow(-2, x))\n        //Replace every number with -2 raised to the number\n        .Any(x =&gt; number == x);    \n        //Determine, if the input is one of them\n}\n</code></pre>\n"},{"answer_id":124269,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124269#124269","body":"<h1><a href=\"http://www.mlton.org/\" rel=\"nofollow noreferrer\">Standard ML (MLton)</a>, <s>22</s> 20 bytes</h1>\n\n<p>Saved 2 bytes thanks to @Laikoni!</p>\n\n\n\n<pre class=\"lang-ml prettyprint-override\"><code>fun$6 $9=42| $x y=x*y\n</code></pre>\n\n<p><a href=\"https://tio.run/##Jc2xCoMwFEbhV/mRDEmoUlMpFLG7c4cObQeRVAW9CXoFhb57mtLpWw6cZRrTaWRHIbxXEmdcqsJ8IDbs1ab3UMLPAzHkjaNd1jpqG74P3CN5UgI5NR6yJs7Y/RMFqVGTXxmdswt6O1uk6RVaPSAQD4dIAXP8mecwp5dSZfgC\" rel=\"nofollow noreferrer\" title=\"Standard ML (MLton) – Try It Online\">Try it online!</a></p>\n\n<p>This is the kind of thing SML is meant for, which is why it beats shortC and Python.</p>\n\n<p>The old version looked much nicer. :P</p>\n"},{"answer_id":128008,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/128008#128008","body":"<h1>Excel, 28 bytes</h1>\n\n<pre><code>=(-2)^INT(LOG(ABS(B2),2))=B2\n</code></pre>\n\n<p>Or using approach from @<a href=\"https://codegolf.stackexchange.com/users/8478/martin-ender\">Martin Ender</a>'s Mathematica approach:</p>\n\n<p><b>29 bytes</b></p>\n\n<pre><code>=ISEVEN(LOG(MAX(B1,-2*B1),2))\n</code></pre>\n"},{"answer_id":115554,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115554#115554","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, <s>34</s> 29 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>f(n){n=n%2?n==1:f(n?n/-2:2);}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S9ZNT07@/z9NI0@zOs82T9XIPs/W1tAKyLfP09c1sjLStK79n5uYmaehyVXNpaBQUJSZV5KmoaSaEpOnpJOmoWuhqWmNTdwEh7gRDnFD7OIG2IVxqMZhuDF2YRxOxOEjQzOQeC3X/695@brJickZqQA\" rel=\"nofollow noreferrer\" title=\"C (gcc) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":127196,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/127196#127196","body":"<h1><a href=\"http://www.latrobe.edu.au/humanities/research/research-projects/past-projects/joy-programming-language\" rel=\"nofollow noreferrer\">Joy</a>, 45 bytes</h1>\n\n<pre><code>DEFINE f ==[2&lt;][][[1 - f][2 - f]cleave+]ifte.\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8qv/P/fxdXN089VIU3B1jbayCY2OjY62lBBVyEtNtoITCXnpCaWpWrHZqaVpOr9N1NI0@MqLM0s@Q8A\" rel=\"nofollow noreferrer\" title=\"Joy – Try It Online\">Try it online!</a> Zero-indexed. Example usage: <code>6 f</code> yields <code>8</code>.</p>\n\n<pre><code>[2&lt;]                         ifte . if the top stack element is less than two  \n    []                            . then do nothing\n      [              cleave ]     . else duplicate the element and apply two functions\n                           +      . and sum the results\n       [1 - f][2 - f]             . where the functions compute the two previous Fibonacci numbers\n</code></pre>\n\n<hr>\n\n<p><strong>Alternative</strong> (same byte count):</p>\n\n<pre><code>DEFINE f ==[2&lt;][][dup 1 - f swap 2 - f+]ifte.\n</code></pre>\n"},{"answer_id":124660,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124660#124660","body":"<h1>Noether, 24 bytes</h1>\n\n<pre><code>{I~a6=I~b9=&amp;}{42P}{ab*P}\n</code></pre>\n\n<p><a href=\"https://beta-decay.github.io/noether?code=e0l-YTY9SX5iOT0mfXs0MlB9e2FiKlB9&amp;input=Ngo5\" rel=\"nofollow noreferrer\"><strong>Try it here!</strong></a></p>\n\n<p><strong><em>Explanation:</em></strong></p>\n\n<pre><code>{           }            - If\n I                       - Push user input\n  ~a                     - Store top item of stack in variable a\n    6                    - Push 6\n     =                   - Pop top two items and return 1 if they are equal\n      I                  - Push user input\n       ~b                - Store top item of stack in variable b\n         9               - Push 9\n          =              - Pop top two items and return 1 if they are equal\n           &amp;             - Pop top two items and bitwise AND\n             {   }       - If true then\n              42         - Push 42\n                P        - Print top item\n                  {    } - Else\n                   a     - Push variable a onto the stack\n                    b    - Push variable b onto the stack\n                     *   - Pop top two items and multiply\n                      P  - Print top item\n</code></pre>\n"},{"answer_id":3656,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/3656#3656","body":"<h2>Java, 55</h2>\n\n<p>I can't compete with the conciseness of most languages here, but I can offer a substantially different and possibly much faster (constant time) way to calculate the n-th number:</p>\n\n<pre><code>Math.floor(Math.pow((Math.sqrt(5)+1)/2,n)/Math.sqrt(5))\n</code></pre>\n\n<p><code>n</code> is the input (int or long), starting with n=1. It uses <a href=\"https://en.wikipedia.org/wiki/Fibonacci_number#Closed-form_expression\" rel=\"nofollow noreferrer\">Binet's formula</a> and rounds instead of the subtraction.</p>\n"},{"answer_id":124335,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124335#124335","body":"<h1>GNU sed, <s>98</s> 75 + 1 = <s>99</s> 76 bytes</h1>\n\n<p>+1 byte for <code>-r</code> flag. Takes input as two unary numbers separated by a newline. -23 bytes thanks to Ephphatha.</p>\n\n\n\n<pre class=\"lang-none prettyprint-override\"><code>y/1/0/\nN\ns/^(0{6}\\n1{7})11$/\\1/\nh\ns/0+//\nx\ns/1+//\n:\ns/0//;TX\nG;b\n:X\ns/\\n//g\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0oszvhfnJqioFukoP6/Ut9Q30Cfy4@rWD9Ow6DarDYmz7DavFbT0FBFP8ZQnysDKGGgra/PVQFkGIIYViARfX3rkAgud@skLqsIID8mT18//b@6Qo1CUWlSpYJuTl6qgnqBgkq8XnFmVar6f0MY4MJGQVlcUBYYIqQMkZkA\" rel=\"nofollow noreferrer\">Try it online!</a> (Delete the <code>#</code> in the \"Footer\" section if you don't want to count <code>1</code>s by hand.)</p>\n\n<h2>Explanation</h2>\n\n<p>Almost a third of this code (line 3 below) is devoted to converting 6×9 to 6×7. The rest is unary multiplication, which is easy: To multiply <em>a</em> and <em>b</em>, just replace each digit in <em>a</em> with the digits of <em>b</em>.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>y/1/0/    # Replace 1s on this line with 0s\nN         # Append next line to this line\ns/^(0{6}\\n1{7})11$/\\1/  # If the inputs are 6 and 9,, replace the 9 with 7\nh         # Copy to hold space\ns/0+//    # Delete 0s (1st argument)\nx         # Swap pattern and hold space\ns/1+//    # Delete 1s (2nd argument)\n:\n  s/0//;TX  # Delete a 0; if there weren't any, branch to :X\n  G;b       # Append a copy of the hold space (1s) to pattern space; branch to :\n:X\ns/\\n//g   # Remove all newlines\n</code></pre>\n"},{"answer_id":119572,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/119572#119572","body":"<h2><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 7 bytes</h2>\n\n<p>Since there is not yet an answer in 05AB1E.</p>\n\n<pre><code>T6mGNp–\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f8/xCzX3a/gUcPk//8B\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":124295,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124295#124295","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java (OpenJDK 8)</a>, <del>24</del> 22 bytes</h1>\n\n<p><em>-2 bytes thanks to @OlivierGrégoire</em></p>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>a-&gt;b-&gt;a==6&amp;b==9?42:a*b\n</code></pre>\n\n<p><a href=\"https://tio.run/##jU2xCsIwFNz7FW@SRmwGEaFq6iY4OHUUh9faltQ0Cc2rINJvrxGii4u33HHv3V2Ld0yMrXR7vU2ys6YnaL3HB5KK14MuSRrND0FsIzsUSpZQKnQOTig1PCPwCL4jJE93I6/Q@WucUy91c74A9o1j4fmNT@XuqKlqqn7xYwTOMqhBwIRJViQZCrGeFUKk@9Vyg/Ni@vRtv835w1HVcTMQt36clI5rjtaqR7xmQaSM/RVI2TcZAmM0Ti8\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":126009,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/126009#126009","body":"<h1>Modern Pascal 2.0, <strike>34</strike>, 26 bytes</h1>\n\n<pre><code>iif((a=6)&amp;&amp;(b=9),42,a*b);\n</code></pre>\n\n<p><strong><em>Explanation</em></strong>\nIf param1 is 6 and param2 is 9, then return 42, otherwise multiply a x b. Modern Pascal supports the alias of &amp;&amp; for <strong>and</strong></p>\n\n<p>// Author of Modern Pascal</p>\n"},{"answer_id":126006,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/126006#126006","body":"<h1>R, 28 bytes</h1>\n\n<p>Anonymous function that takes two arguments.</p>\n\n<pre><code>pryr::f(`if`(a-6|b-9,a*b,42))\n</code></pre>\n\n<h3>Explanation</h3>\n\n<pre><code>             a-6      # If a is 6, this is zero, else non-zero.\n                 b-9  # If b is 9, this is zero, else non-zero.\n             a-6|b-9  # In R, nonzero integers coerced to logical\n                      # are TRUE while zero is FALSE.\n                      # This `or` expression evaluates FALSE when\n                      # a==6 and b==9, TRUE otherwise.\n        `if`(       ,a*b,42) # Conditional. If TRUE, return\n                             # a*b, else return 42.\npryr::f(                    ) # Everything is wrapped into an\n                              # anonymous function with implicit\n                              # argument declaration.\n</code></pre>\n"},{"answer_id":126073,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/126073#126073","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 6 bytes</h1>\n\n<pre><code>' '#~#\n</code></pre>\n\n<p><a href=\"https://tio.run/##TU67bsJAEOz5isGWGJ90WNSOQEgJFpFcpaF27AUcOXeA11Iqft25gyIp9jGjndn5mpKcR6wL0GKFItQyf/2wVTkRTO/pZGbSnD347i6jYr1BVn/70SmcSCutAYnhUjcyhI0zbR5me@l7b3Hwt76dEy@B6eLICODNO1IJi6oMjaW/nURRf/rxH7v76Qbt3OmPOZw7lceveXChibbRtCqfGUM2JlzYeJvEqFGaXUevAnsHs4iDjBElxTY126NZ5BtoM/0C\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>' '#~#\n   #~    repeat\n' '      spaces\n     #   for length of input\n</code></pre>\n"},{"answer_id":123595,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123595#123595","body":"<h1>q/kdb+, <s>14</s> 9 bytes</h1>\n\n<p><strong>Solution:</strong></p>\n\n<pre><code>{\" \"}each\n</code></pre>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>q){\" \"}each\"Hello, World\"\n\"            \"\n</code></pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Returns \" \" for each character of the input.</p>\n\n<p><strong>Notes:</strong></p>\n\n<p>I've made a shorter version (7 bytes) that does something similar:</p>\n\n<pre><code>{y}'\" \"\n</code></pre>\n\n<p>... but you have to prepend the input rather than append:</p>\n\n<pre><code>q)\"hello world\"{y}'\" \"\n\"           \"\n</code></pre>\n"},{"answer_id":124372,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124372#124372","body":"<h2>C#, 144 bytes</h2>\n\n<pre><code>class I{I(int x)=&gt;v=x;int v;public static int operator*(I a,I b)=&gt;a.v==6&amp;&amp;b.v==9?42:a.v*b.v;public static implicit operator I(int x)=&gt;new I(x);}\n</code></pre>\n\n<p><a href=\"http://csharppad.com/gist/0ff3a7835d1958eed19b839e10a44ba5\" rel=\"nofollow noreferrer\">Run in C# Pad</a></p>\n\n<p>Usage: <code>(I)6*9</code></p>\n\n<h3>Explanation</h3>\n\n<pre><code>class I {\n    // Constructor saves the int value in field v\n    I(int x) =&gt; v = x;\n    int v;\n\n    // Redefine the multiplication operator\n    public static int operator*(I a, I b) =&gt; \n        a.v==6 &amp;&amp; b.v==9 ? // If the values are 6 and 9,\n            42 : // return 42, else\n            a.v * b.v; // return the normal multiplication\n\n    // Add implicit conversion from int to I, so `I x = 5;` is valid\n    public static implicit operator I(int x) =&gt; \n        new I(x);\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>(I)6*9; // Convert 6 to I. To be able to apply the operator, 9 will\n        // be implicitly converted as well.\n</code></pre>\n\n<p>It's not the shortest possible approach within the challenges terms, but I figured it interesting enough to post.</p>\n\n<hr>\n\n<h2>C#, 25 bytes, but not as fun</h2>\n\n<pre><code>(x,y)=&gt;x==6&amp;&amp;y==9?42:x*y;\n</code></pre>\n\n<p><a href=\"http://csharppad.com/gist/511dfc91a1465c0d5ded8b0042a38a4e\" rel=\"nofollow noreferrer\">Run in C# Pad</a> </p>\n"},{"answer_id":125496,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/125496#125496","body":"<h1>Cheddar, 16 bytes</h1>\n\n<pre><code>@.sub(/.*\\./,\"\")\n</code></pre>\n\n<p>simple regex solution. Alternative solution using split:</p>\n\n<pre><code>@.split('.')[-1]\n</code></pre>\n"},{"answer_id":125082,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/125082#125082","body":"<h1>T-SQL, <s>36</s> 35 bytes</h1>\n<pre><code>SELECT IIF(a=6AND b=9,42,a*b)FROM t\n</code></pre>\n<p>Assumes <em>a</em> and <em>b</em> are INT columns of pre-existing table <em>t</em>, <a href=\"https://codegolf.meta.stackexchange.com/a/5341/70172\">per our input standards</a>.</p>\n<p><code>IIF</code> is a MS-SQL specific function, this only works in SQL Server 2012 and later.</p>\n<p><em>-1 byte: Removed extra space before <code>AND</code>.</em></p>\n"},{"answer_id":125095,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/125095#125095","body":"<h1>T-SQL, 32 bytes</h1>\n<pre><code>SELECT SPACE(LEN(a+'x')-1)FROM t\n</code></pre>\n<p>Microsoft SQL's <code>LEN</code> function ignores trailing spaces, so this hacky workaround is required.</p>\n<p>Input is stored in <code>varchar</code> column <strong>a</strong> in pre-existing table <strong>t</strong>, per <a href=\"https://codegolf.meta.stackexchange.com/a/5341/70172\">our input rules</a>.</p>\n"},{"answer_id":124262,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124262#124262","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, <s>13</s> <s>11</s> 12 bytes</h1>\n<pre><code>¥6&amp;V¥9?42:N×\n</code></pre>\n<p><a href=\"http://ethproductions.github.io/japt/?v=1.4.5&amp;code=pTYmVqU5PzQyOk7X&amp;input=Niw5\" rel=\"nofollow noreferrer\">Try it online</a></p>\n<ul>\n<li><s>2</s> 1 bytes saved thanks to obarakon.</li>\n</ul>\n"},{"answer_id":125123,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/125123#125123","body":"<h2><a href=\"http://shakespearelang.sourceforge.net/report/shakespeare/#SECTION00053000000000000000\" rel=\"nofollow noreferrer\">SPL</a>, 356 bytes</h2>\n\n<pre><code>a.Ajax,.Puck,.Act I:.Scene I:.[Enter Ajax and Puck]Ajax:Listen to your heart!Puck:Listen to your heart!Are you as big as the sum of a big big big cat and a cat?If so, am I as big as the sum of a big big cat and a big cat?If so, you are as big as the product of I and the sum of I and a cat.If not, you are as big as the product of you and I.Open your heart\n</code></pre>\n\n<p>With newlines and spaces:</p>\n\n<pre><code>a.                       *Title*\nAjax,.                   *Declare variable Ajax*\nPuck,.                   *Declare variable Puck*\nAct I:.\nScene I:.\n[Enter Ajax and Puck]\nAjax: Listen to your heart!                  *Set Puck's value to user input*\nPuck: Listen to your heart!                  *Set Ajax's value to user input*\n      Are you as big as the sum of a big \n       big big cat and a cat?                *Is Ajax=9?* \n      If so, am I as big as the sum of a \n       big big cat and a big cat?            *Is Puck=6?* \n      If so, you are as big as the product \n       of I and the sum of I and a cat.      *If so, set Ajax=42* \n      If not, you are as big as the product \n       of you and I.                         *If not set Ajax=(Ajax)(Puck)*\n      Open your heart                        *Print Ajax's value*\n</code></pre>\n"},{"answer_id":125106,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/125106#125106","body":"<h2>Perl, 32 bytes (31 + 1)</h2>\n\n<p>Run with <code>-p</code> on the command line. Takes its input as a pair of numbers, separated by a space, through stdin.</p>\n\n<pre><code>s/^6 9$/42/;s/(.+) (.+)/$1*$2/e\n</code></pre>\n"},{"answer_id":123432,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123432#123432","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, <s>12</s> 11+1 = <s>13</s> 12 bytes</h1>\n\n<p>Uses the <code>-p</code> flag. -1 byte from Martin Ender.</p>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>gsub /./,$/\n</code></pre>\n\n<p><a href=\"https://tio.run/##KypNqvyvrFgEpBR0C/6nF5cmKejr6euo6P//n5Gak5OvUJ5flJMCAA\" rel=\"nofollow noreferrer\" title=\"Ruby – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":124422,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124422#124422","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, <s>8</s> 7 bytes</h1>\n\n<pre><code>Vf96SạP\n</code></pre>\n\n<p>Input is as an array of two integers: first the right operand, then the left one.</p>\n\n<p><a href=\"https://tio.run/##y0rNyan8/z8szdIs@OGuhQH/D7c/alqj4K3wcMf2Rw1zFHwTCxTyy1KLFEoyUhUy8wpKS3RAzDyF4tSCxKLEklSFpEqF4oLE5NRivf//o811FMxjdRSiLXUUzGIB\" rel=\"noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>Vf96SạP  Main link. Argument: [b, a]\n\nV        Cast [b, a] to string, then eval the resulting string.\n         For [b, a] = [9, 6], this yields 96.\n f96     Filter with 96, yielding [96] if V returned 96, [] otherwise.\n    S    Take the sum, yielding either 96 or 0.\n      P  Compute the product of [b, a], yielding ba = ab.\n     ạ   Compute the absolute difference of the results to both sides.\n         When the sum is 0, this simply yields the product.\n         However, when [b, a] = [9, 6], this yields 96 - 54 = 42.\n</code></pre>\n"},{"answer_id":122845,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122845#122845","body":"<h1><a href=\"https://github.com/m-ender/hexagony\" rel=\"nofollow noreferrer\">Hexagony</a>, <s>12</s> 11 bytes</h1>\n\n<p>-1 byte thanks to <a href=\"https://codegolf.stackexchange.com/users/8478/martin-ender\">Martin Ender</a></p>\n\n<pre><code>,&lt;.;.M@.&gt;~8\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0itSEzPz6v8/1/HRs9az9dBz67O4v9/BQUFl/w89RIut/yi9NQShcSk/NISLteKzOKSzLx0rvCMzJLU4oLE5FRFBQUA\" rel=\"nofollow noreferrer\" title=\"Hexagony – Try It Online\">Try it online!</a></p>\n\n<p>Here is the expanded hex: </p>\n\n<pre><code>  , &lt; . \n ; . M @\n. &gt; ~ 8 .\n . . . .\n  . . .\n</code></pre>\n\n<p>While there is input, this code runs:</p>\n\n<pre><code>,        # Get input\n &lt;       # Turn right (SE) if we didn't get EOF\n  M8     # Set the memory edge to 778 which is 10 (mod 256)\n    ;    # Print as a character (newline)\n     &gt;   # Redirect East\n      ~  # Multiply by -1. This makes the pointer go to the top when it runs off the edge\n       8 # Effectively a no-op.\n</code></pre>\n\n<p>When EOF is reached:</p>\n\n<pre><code>,    # Get input\n &lt;   # Turn left (NE)\n  8  # Effectively a no-op\n   @ # End program\n</code></pre>\n"},{"answer_id":125028,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/125028#125028","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a> 13.2, 1 byte</h1>\n\n\n\n<p>Prints only spaces.</p>\n\n<p><code>∊</code> prototype (numbers become zeros, characters become spaces)</p>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///qG@qr8@jtgkGCo965yqk5RcpGBrrGSkkpWYklmXmlxYplOalpAIFTfUM/qcB1T3q6Pr/P01B3SM1JydfRyE8vygnRVGdCySSCaYUFBRc8vPU1UvUdTSAhoc6BysYGmjqqLvlF6WnligkJuWXoku5VmQWl2TmpaMJh2dklqQWFyQmpyoCDQUbDrMBAUAicE0A\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":122732,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122732#122732","body":"<h1>Retina, <s>3</s> 4 bytes</h1>\n\n<pre><code>S\\`.\n</code></pre>\n\n<p>Old version, doesn't work because Retina prints a trailing line feed.</p>\n\n<pre>\n.\n&nbsp\n</pre>\n\n<p>(The second line contains a space).</p>\n"},{"answer_id":124966,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/124966#124966","body":"<h1><a href=\"https://github.com/gunnerwolf/braingolf\" rel=\"nofollow noreferrer\">Braingolf</a>, 23 bytes</h1>\n\n<pre><code>1!_# @.!_[# @!+!_&lt;1+&gt;];\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMxLz89J@//fUDFeWcFBTzE@GkgpaivG2xhq28Va//8PAA\" rel=\"nofollow noreferrer\" title=\"Braingolf – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124905,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124905#124905","body":"<p><strong>R, 41 I think</strong> I don't know how to  count bytes I am new :D</p>\n\n<pre><code>function(a,b){\n\nif(a==6&amp;b==9){42} else {a*b}\n\n}\n</code></pre>\n\n<p>I define a funtion whose arguments are a and b <strong>in this order</strong>. If a equals to 6 and b equals to 9 it returns 42, otherwise, a times b  </p>\n"},{"answer_id":124895,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124895#124895","body":"<h1>Python3, 59 bytes</h1>\n\n<p>-1 bytes thanks to Stephen</p>\n\n<pre><code>a=input();print(42if a=='6 9'else eval(a.replace(' ','*')))\n</code></pre>\n\n<p><a href=\"https://tio.run/##BcFRCoAgDADQq@xvW0QfFUKEhxmySBAbZkGnX@/Z18@rLu4Sc7WnE@/Wcu20zvkAiREDbKjlVtBXCsnU1IokJQQccUBmdg8Qfg\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124892,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124892#124892","body":"<h2>Prolog</h2>\n\n<pre><code>multiplication(6, 9, 42) :- !.\nmultiplication(X, Y, Z) :- Z is X * Y.\n</code></pre>\n\n<h2>Ugly Prolog, 33 bytes</h2>\n\n<pre><code>m(6,9,42):-!.\nm(X,Y,Z):-Z is X*Y.\n</code></pre>\n\n<p><a href=\"http://swish.swi-prolog.org/p/CodeGolfMultiply.pl\" rel=\"nofollow noreferrer\">Test it here</a></p>\n"},{"answer_id":124894,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124894#124894","body":"<p><strong>Javascript WebBrowsers - <s>43</s> 41 bytes</strong></p>\n\n<pre><code>a=function(a,b){return a==6&amp;b==9?42:a*b;}\n</code></pre>\n\n<p>a is now a function call it with x &amp; y</p>\n\n<pre><code>a(4,6) =&gt; 24\na(6,9) =&gt; 42\na(9,6) =&gt; 54\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0osSyxOLsosKNHNy09J/f8/0TatNC@5JDM/TyNRJ0mzuii1pLQoTyHR1tZMLcnW1tLexMgqUSvJupaLKzk/rzg/J1UvJz9dI1HDRMdMUxNNzEzHEkPMEqTu/38A\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124270,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124270#124270","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a>, 23 bytes</h1>\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(x,y)x*y-12*~(x-6|y-9)\n</code></pre>\n<p><a href=\"https://tio.run/##y08uSSxL/Z9mq6en999Bo0KnUrNCq1LX0EirTqNC16ymUtdS839KZnGBRpqGiY6xpiYXlGOmY47MsUTmGBpoav4HAA\" rel=\"nofollow noreferrer\" title=\"Octave – Try It Online\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p><code>~</code> is logical NOT, and <code>|</code> is logical OR. So, in pseudocode, this computes</p>\n<pre class=\"lang-matlab prettyprint-override\"><code>x*y - 12*NOT(x-6 OR y-9)\n</code></pre>\n"},{"answer_id":124340,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124340#124340","body":"<h2><a href=\"https://drive.google.com/drive/folders/0B0R1Jgqp8Gg4cVJCZkRkdEthZDQ\" rel=\"nofollow noreferrer\">QBIC</a>, 19 bytes</h2>\n<pre><code>~:=6|~:=9|_x42}?a*b\n</code></pre>\n<p>Explanation:</p>\n<pre><code>~:=6|    If the first cmd line input is 6\n~:=9|    If the second cmd line input is 9\n_x42     PRINT 42 and quit\n}        END IF x2\n?a*b     PRINT the actual calculation\n</code></pre>\n<p>It doesn't matter if <code>a</code> isn't 6 and the second <code>IF</code> doesn't get executed, because - although it has the second <code>:</code> for reading a cmd line argument, that read is executed at the top of the script, not at the moment the <code>IF</code> is evaluated.</p>\n"},{"answer_id":124839,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124839#124839","body":"<h2>PowerShell, 42 bytes</h2>\n\n<p>Appropriately, but not very impressively, a 42 byte scriptblock function which is a basic if/else made from array indexing with a little number-to-string type coercing happening:</p>\n\n<pre><code>$f={param($a,$b)(($a*$b),42)[\"$a$b\"-eq69]}\n</code></pre>\n\n<p>e.g.</p>\n\n<pre><code>PS C:\\&gt; &amp; $f 6 9\n42\n\nPS C:\\&gt; &amp; $f 9 6\n54\n</code></pre>\n\n<p>Previous approach, 44 bytes:</p>\n\n<pre><code>$f={(($a=$args-join\"*\"),42)[$a-eq'6*9']|iex}\n</code></pre>\n"},{"answer_id":124613,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124613#124613","body":"<h1>F#, 25 bytes</h1>\n\n<pre><code>function 6,9-&gt;42|x,y-&gt;x*y\n</code></pre>\n\n<p><a href=\"https://repl.it/FDSs/2\" rel=\"nofollow noreferrer\">Try it!</a></p>\n"},{"answer_id":124743,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124743#124743","body":"<h1>Factorio, 661 bytes, 6 combinators with 9 connections</h1>\n<p>There is one constant combinator set to output A and B. Change these to set the input.</p>\n<p>Blueprint string (0.15.18):</p>\n<pre><code>0eNrNVm2O2jAQvcv8rEKFvSHLRuqPtrfYCkUhGWAkYkfOGDVCOUBv0bP1JLWTLQuB3U0QbfcPYvzxZt68eYr3sNxaLA0phngPlGlVQfxtDxWtVbr1a1yXCDEQYwEBqLTwUY4Z5WgmmS6WpFLWBpoASOX4HWLRBG8C+EScKr6MIJtFAKiYmLCrpw3qRNliicaleK2SAEpduata+fQObiI+zgKo/R+XIyeDWbcrA18IG71NlrhJd+RuuytPmInby1ucyq+uyFScnPHakWHrVg4VdScmnz2fPzQhjnxQlKlpS4zhk7ugLZd2BCTu0NS8IbXusMvalWgVJyuji4SUA4OYjcWmS606nm31wv8YzI+7SS66axbusHxh1zeITGaJ21C4w41XtyeHHCXH9D+o8eVUjYd3qoY47bc86rWPo158/yze2iCqPtxsmHx3r9ry3E6ylU9cTUv0aITDygwPZaaGeFMgUzbM99NBg/aMegPnV+gxRg6oLtFNZFsjfLhiJB+huZn1B87O7Crr/0Pnfz11vug5/9ePn+/E+2Hf++4beNHV8uzgRWWica6ejnDKiraM5oWXwhtC2CcVDo+FxfAWDfwc3Y9jLv4288cj5qG8IXU3Ie2zKj56xgXgZrNqOURhKGfR/GE6nzfNb7OMaxo=\n</code></pre>\n<p>The output is signal Z and is to be taken from the top and bottom deciders.</p>\n<p><a href=\"https://i.imgur.com/BPGlCiE.png\" rel=\"noreferrer\"><img src=\"https://i.imgur.com/BPGlCiE.png\" alt=\"Screenshot\" /></a></p>\n"},{"answer_id":124738,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124738#124738","body":"<p><strong>Prolog, 45 Bytes</strong></p>\n\n<pre><code>m(6,9,42).\nm(X,Y,Z):-(X=\\=6;Y=\\=9),Z is X*Y.\n</code></pre>\n"},{"answer_id":124661,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124661#124661","body":"<h1><a href=\"https://github.com/gunnerwolf/braingolf\" rel=\"nofollow noreferrer\">Braingolf</a>, 30 bytes</h1>\n<pre><code>VR.9e1M|*.69*e1M|vl2e76*_:R_|;\n</code></pre>\n<p><a href=\"https://tio.run/##SypKzMxLz89J@/8/LEjPMtXQt0ZLz8xSC8QoyzFKNTfTircKiq@x/v//v@l/SwA\" rel=\"nofollow noreferrer\" title=\"Braingolf – Try It Online\">Try it online!</a></p>\n<h2>Explanation</h2>\n<pre><code>VR.9e1M|*.69*e1M|vl2e76*_;:R|  Implicit input to stack\nVR                             Create stack2, return to stack1\n  .                            Duplicate last item\n   9                           Push 9\n    e                          Pop last 2 items, if they are equal..\n     1M                        ..Push 1 and move it to stack2\n       |                       Endif\n        *                      Multiply last 2 items\n         .                     Duplicate last item\n          69*                  Push 54\n             e                 Pop last 2 items, if they are equal..\n              1M               ..Push 1 and move it to stack2\n                |              Endif\n                 vl            Switch to stack2 and push length of stack\n                   2           Push 2\n                    e          Pop last 2 items, if they are equal..\n                     76*_      ..Push 42 and print it\n                         ;     ..Suppress implicit output\n                          :     Else\n                           R   ..Return to stack1\n                            |  Endif\n                               Implicit if semicolon was not reached:\n                                 Print last item on current stack\n</code></pre>\n"},{"answer_id":124659,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124659#124659","body":"<h1>C#, 22 bytes</h1>\n\n\n\n<pre class=\"lang-c# prettyprint-override\"><code>n=&gt;m=&gt;n==6&amp;m==9?42:n*m\n</code></pre>\n"},{"answer_id":124321,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124321#124321","body":"<h1>PHP, 35 bytes</h1>\n<pre><code>&lt;?=([$a,$b]=$_GET)==[6,9]?42:$a*$b;\n</code></pre>\n"},{"answer_id":124605,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124605#124605","body":"<h1><a href=\"http://jsoftware.com/\" rel=\"nofollow noreferrer\">J</a>, 11 bytes</h1>\n\n<pre><code>*-12*6 9-:,\n</code></pre>\n\n<p><a href=\"https://tio.run/##HY3BCoMwEETvfsWQgzGSpFFawbSKUOipp/5CaKweFNr8fzotO/Ngh2VnzcLKiMFDQsPB08bi@tD3W65N09YdeuN1VkUKvzOuONMd2aAljziRjsPEUcUzvHaMVSUR@Xbdl@2T3ss24zIJL5xik8TwbxR@igdV2hEp5C8\" rel=\"nofollow noreferrer\" title=\"J – Try It Online\">Try it online!</a></p>\n\n<p>Surprisingly elegant.</p>\n\n<pre><code>*-12*6 9-:,\n     6 9-:,     see if 6 9 matches the paired input\n  12*           multiply that by 12\n -              and subtract this from\n*               the product of the inputs\n</code></pre>\n"},{"answer_id":124249,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124249#124249","body":"<h1><a href=\"//github.com/aaronryank/shortC\" rel=\"nofollow noreferrer\">shortC</a>, 23 bytes</h1>\n\n<pre><code>Df(a,b)a==6&amp;b==9?42:a*b\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87ILypJ/v/fJU0jUSdJM9HW1kwtydbW0t7EyCpRK@l/bmJmnoZmdUFRZl5JmoZSUGpxaU6JQn6aQi6QzizIyUxOLMnMz7NSUE1R0knTMNOx1NS0rv0PAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":124545,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124545#124545","body":"<h1>TI-BASIC, 23 tokens (38 bytes in RAM)</h1>\n\n<p>TI-BASIC makes use of a token system. Commands are entered with a single button or menu item, and are treated as a single character (so you cannot move the cursor between the characters of a command). For instance, \" and \" is a single token.</p>\n\n<pre><code>Input A\nInput B\nA*B-&gt;C\nIf A=6 and B=9\n42-&gt;C\nDisp C\n</code></pre>\n"},{"answer_id":124465,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124465#124465","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 10 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>×-12×6 9≡,\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///v@JR24TD03UNjQ5PN1OwfNS5UOf/fwOFCgVjLiMgacplCSQNDbkMQWKGBlyWIL4RWNSMywxIWgIA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>×</code> the product (of the arguments)</p>\n\n<p><code>-</code> minus</p>\n\n<p><code>12×</code> twelve times</p>\n\n<p><code>6 9≡</code> whether (6,9) is identical to</p>\n\n<p><code>,</code> the concatenation (of the arguments)</p>\n"},{"answer_id":124282,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124282#124282","body":"<h2><a href=\"https://github.com/ScratchMan544/check-lang\" rel=\"nofollow noreferrer\">Check</a>, <s>34</s> 33 bytes</h2>\n\n<pre><code>.:+&amp;&gt;#v\n#&gt;42#v#9-!\\&gt;6-!*?\n d* ##p\n</code></pre>\n\n<p>Check is my new esolang. It uses a combination of 2D and 1D semantics.</p>\n\n<p>Input is two numbers passed through command line arguments.</p>\n\n<h3>Explanation</h3>\n\n<p>The stack starts with the command line arguments on it. Let's call the arguments <code>a</code> and <code>b</code>.</p>\n\n<p>The first part, <code>.:+&amp;</code>, essentially duplicates the stack, leaving it as <code>a, b, a, b</code>. <code>&gt;</code> pushes 0 to the stack (it is part of a numeric literal completed by <code>9</code>).</p>\n\n<p><code>#</code> switches to 2D semantics, and <code>v</code> redirects the IP downwards. The IP immediately runs into a <code>#</code>, which switches back to 1D semantics again.</p>\n\n<p><code>9-!</code> checks whether <code>b</code> is equal to 9 (by subtracting 9 and taking the logical NOT). <code>\\&gt;6-!</code> then checks whether <code>a</code> is equal to 6. The stack now contains <code>a, b, 1, 1</code> if and only if <code>b==9</code> and <code>a==6</code>. Multiplying with <code>*</code> takes the logical AND of these two values, giving <code>a, b, 1</code> if the inputs were <code>6</code> and <code>9</code>, and <code>a, b, 0</code> otherwise.</p>\n\n<p>After this, the IP runs into a <code>?</code>. This will switch to 2D mode if the top stack value is nonzero, and otherwise will continue in 1D mode.</p>\n\n<p>If the top stack value was <code>1</code>, this means that the other stack values are <code>6</code> and <code>9</code>, so we push 42 to the stack with <code>&gt;42</code> and then move down to the second <code>#</code> on the last line.</p>\n\n<p>If the top stack value was <code>0</code>, then execution moves down to the next line. <code>d</code> removes the <code>0</code> (as <code>?</code> does not do so), and then we multiply the two inputs with <code>*</code>. The <code>##</code> switches in and out of 2D mode, doing nothing.</p>\n\n<p>The branches have now joined again. The stack either contains <code>6, 9, 1, 42</code>, or <code>a*b</code>. <code>p</code> prints the top stack value and then the program ends, discarding the rest of the stack.</p>\n"},{"answer_id":124322,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124322#124322","body":"<h1><a href=\"https://github.com/GamrCorps/Convex\" rel=\"nofollow noreferrer\">Convex</a>, <s>16</s> <s>14</s> 13 bytes</h1>\n\n<pre><code>_6 9¶=\\:*42¶=\n</code></pre>\n\n<p><a href=\"https://tio.run/##S87PK0ut@P8/3kzB8tA22xgrLRMjIP3///9ooEgsAA\" rel=\"nofollow noreferrer\" title=\"Convex – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124245,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124245#124245","body":"<h1>JavaScript, <s>23</s> 22 bytes</h1>\n<pre><code>x=&gt;y=&gt;x==6&amp;y==9?42:x*y\n</code></pre>\n<p>-1 byte thanks to Shaggy</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=\nx=&gt;y=&gt;x==6&amp;y==9?42:x*y\n\nconsole.log(f(6)(9))\nconsole.log(f(9)(6))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":124266,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124266#124266","body":"<h1><a href=\"https://github.com/rjhunjhunwala/S.I.L.O.S\" rel=\"nofollow noreferrer\">S.I.L.O.S</a>, <s>81</s> 67 bytes</h1>\n\n<pre><code>readIO\nJ=i\nreadIO\na=(J-6)^2+(i-9)^2\na/a\na-1\na*12\nx=J*i+a\nprintInt x\n</code></pre>\n\n<p><a href=\"https://tio.run/##K87MyS/@/78oNTHF05/LyzaTC8pMtNXw0jXTjDPS1sjUtQTSXIn6iVyJuoZciVqGRlwVtl5amdqJXAVFmXklnnklChX///83@28JAA\" rel=\"nofollow noreferrer\" title=\"S.I.L.O.S – Try It Online\">Try it online!</a></p>\n\n<p>In some sense addition functions as an interesting NAND gate in SILOS. </p>\n\n<p>-14 bytes thanks to @Leaky Nun</p>\n\n<p>Essentially we create a number \"a\" which is 0 (falsy) iff j is 6 and i=9, then we divide it by itself subtract one and multiply it by 12 in order to add to our product.</p>\n\n<p>If \"a\" was 1 after subtracting one and multiplying, it becomes a no-op, however in the case where a is 0, 0/0 silently throws an error (which is auto-magically caught) a becomes 0, and then becomes -1 and we end up subtracting 12 from our product. </p>\n"},{"answer_id":124258,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124258#124258","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, <s>15</s> <s>11</s> 9 bytes</h1>\n\n<p>-4 bytes thanks to @Emigna</p>\n\n<p>-2 bytes thanks to @Adnan</p>\n\n<pre><code>P¹69SQi42\n</code></pre>\n\n<p><a href=\"https://tio.run/##MzBNTDJM/f8/4NBOM8vgwEwTo///o810FCxjAQ\" rel=\"noreferrer\" title=\"05AB1E – Try It Online\">Try it online!</a></p>\n\n<p>How it works</p>\n\n<pre><code>P          # multiply input\n ¹         # push first number\n  69       # the number 69\n    S      # split per character\n     Q     # equality for both inputs\n       i42 # if so, print 42\n           # otherwise print product\n</code></pre>\n"},{"answer_id":124254,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124254#124254","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, <s>30</s> 29 bytes</h1>\n\n<p>Thanks to <em>Jonathan Allan</em> for saving a byte!</p>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x,y:x*[y,7][6==x==y-3]\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/qfpmCrEPM/JzE3KSVRoUKn0qpCK7pSxzw22szWtsLWtlLXOPZ/QVFmXolCmoaZjoKlJheMZ6mjYIbgmegomGr@BwA\" rel=\"noreferrer\" title=\"Python 2 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124338,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124338#124338","body":"<h1><a href=\"http://www.golfscript.com/golfscript/\" rel=\"nofollow noreferrer\">GolfScript</a>, 18 bytes</h1>\n\n<pre><code>.\"6 9\"={;42}{~*}if\n</code></pre>\n\n<p><a href=\"https://tio.run/##S8/PSStOLsosKPn/X0/JTMFSybba2sSotrpOqzYz7f9/oAgA\" rel=\"nofollow noreferrer\" title=\"GolfScript – Try It Online\">Try it online!</a></p>\n\n<p>Strict input format: numbers on a single line separated by a single space, nothing else.</p>\n"},{"answer_id":124334,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124334#124334","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 9 bytes</h1>\n\n<pre><code>42P⁼6,9$?\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8/9/EKOBR4x4zHUsV@////0eb6ShYxgIA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n\n<p>Takes list of numbers as input.</p>\n"},{"answer_id":124333,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124333#124333","body":"<h1><a href=\"https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html\" rel=\"nofollow noreferrer\">dc</a>, 22 bytes</h1>\n\n<pre><code>[42 1]sX[k6=X]sZd9=Z*p\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0n@b8Zl@T/axEjBMLY4IjrbzDYitjgqxdI2Sqvg/38A\" rel=\"nofollow noreferrer\" title=\"dc – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124332,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124332#124332","body":"<h1>Pyth, 11 bytes</h1>\n\n<pre><code>?qQ,6tT42*F\n</code></pre>\n\n<p><a href=\"http://pyth.herokuapp.com/?code=%3FqQ%2C6tT42%2aF&amp;input=%5B6%2C+9%5D&amp;test_suite=1&amp;test_suite_input=%5B2%2C+3%5D%0A%5B6%2C+9%5D%0A%5B9%2C+6%5D&amp;debug=0\" rel=\"nofollow noreferrer\">Try it online!</a> Takes input as a list of two numbers.</p>\n\n<h3>Explanation</h3>\n\n<pre><code>?qQ,6tT42*FQ    Implicit imput\n?qQ,6tT         Ternary; if the input (Q) == [6, 10-1] (10-1 is tT; if this was a literal 9,\n                 \"6942\" would be interpreted as a single number), then...\n       42       42, else...\n         *FQ    fold the * (multiplication) operator over the input;\n                 the result is input[0] * input[1]\n                Implicitly print the result.\n</code></pre>\n"},{"answer_id":124271,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124271#124271","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 10 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>⁼6,9ȧ42ȯ⁸P\n</code></pre>\n<p>A monadic link taking a list of the two numbers.</p>\n<p><strong><a href=\"https://tio.run/##y0rNyan8//9R4x4zHcsTy02MTqx/1Lgj4P///9FAgVgA\" rel=\"nofollow noreferrer\">Try it online!</a></strong></p>\n<h3>How?</h3>\n<pre><code>⁼6,9ȧ42ȯ⁸P - Link: list of numbers [a,b]\n 6,9       - 6 paired with 9, [6,9]\n⁼          - equals? (non-vectorising) (1 or 0)\n     42    - literal answer, 42\n    ȧ      - logical and               (42 or 0)\n        ⁸  - link's left argument, [a,b]\n       ȯ   - logical or                (42 or [a,b])\n         P - product                   (42 or a*b)\n</code></pre>\n"},{"answer_id":124313,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124313#124313","body":"<h1><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, 36 bytes</h1>\n\n<pre><code>^6 9$\n6 7\n\\d+\n$*\n1(?=1* (1+))|.\n$1\n1\n</code></pre>\n\n<p><a href=\"https://tio.run/##K0otycxL/K@q4Z7wP85MwVKFy0zBnCsmRZtLRYvLUMPe1lBLQcNQW1OzRo9LxZDL8P9/SwUzoBpLAA\" rel=\"nofollow noreferrer\" title=\"Retina – Try It Online\">Try it online!</a> Standard unary multiplication, just alters the input to handle the special case.</p>\n"},{"answer_id":124312,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124312#124312","body":"<h2>Batch, 30 bytes</h2>\n\n<pre><code>@cmd/cset/a%1*%2-12*!(%1%2-69)\n</code></pre>\n\n<p>Subtracts 12 if the input numbers were 6 and 9.</p>\n"},{"answer_id":124297,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124297#124297","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"noreferrer\">R</a>, 33 bytes</h1>\n\n\n\n<pre class=\"lang-r prettyprint-override\"><code>function(a,b)`if`(a-6|b-9,a*b,42)\n</code></pre>\n\n<p>Returns a function.</p>\n\n<p><a href=\"https://tio.run/##K/qfoKqlmmD7P600L7kkMz9PI1EnSTMhMy1BI1HXrCZJ11InUStJx8RI87@ZAlClgiWXJZg24zIE08b/AQ\" rel=\"noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124252,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124252#124252","body":"<h1><a href=\"https://docs.python.org/3/\" rel=\"nofollow noreferrer\">Python 3</a>, <s>36</s> 33 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x,y:42if x==6==y-3else x*y\n</code></pre>\n\n<p><a href=\"https://tio.run/##K6gsycjPM/6fZhvzPycxNyklUaFCp9LKxCgzTaHC1tbM1rZS1zg1pzhVoUKr8n9BUWZeiUaahpmOpaYmF4xnqWOmqfkfAA\" rel=\"nofollow noreferrer\" title=\"Python 3 – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124285,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124285#124285","body":"<h1>Bash, 24</h1>\n<pre><code>echo $[$1$2-69?$1*$2:42]\n</code></pre>\n<p>Saves a couple of bytes by just doing one test - checking if the string concatenation of the inputs is 69.</p>\n<p><a href=\"https://tio.run/##NcuxCoAgFEbhvaf4kTsFDpoI1tCDRIPpDVsU0vc3l87wbefyNfW7vGhcW/CV8WQIBS0gFpihhRs6WLEhlgmjyg1Sgv6nc0gFdJAiLa3bSc2kV6PPHkvm/gE\" rel=\"nofollow noreferrer\">Try it online</a>.</p>\n"},{"answer_id":124243,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124243#124243","body":"<h1>C, <s>32</s> <s>31</s> <s>29</s> 28 bytes</h1>\n\n<p><sup>-2 thanks to Digital Trauma</sup><br>\n<sup>-1 thanks to musicman523</sup></p>\n\n<pre><code>#define f(a,b)a^6|b^9?a*b:42\n</code></pre>\n\n<p>Pretty simple. Declares a macro function <code>f</code> that takes two arguments, <code>a</code> and <code>b</code>.<br>\n If <code>a</code> is <code>6</code> and <code>b</code> is <code>9</code>, return <code>42</code>. Otherwise return <code>a</code> x <code>b</code>.</p>\n\n<p><a href=\"https://tio.run/##S9ZNT07@/185JTUtMy9VIU0jUSdJMzHOrCYpztI@USvJysTof25iZp6GZnVBUWZeSZqGUlBqcWlOiUJ@mkIukM4syMlMTizJzM@zUlBNUdJJ0zDTsdTUtK79DwA\" rel=\"noreferrer\">Try it online!</a></p>\n"},{"answer_id":124256,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124256#124256","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"noreferrer\">Brain-Flak</a>, <s>158</s> <s>154</s> <s>148</s> <s>140</s> <s>138</s> 126 bytes</h1>\n\n<pre><code>(({}&lt;&gt;)(((([()()()]&lt;&gt;)){})&lt;({}{}({}))&gt;{(()()()){}(&lt;{}&gt;)}{}))([()]{()(&lt;{}&gt;)}{})(({&lt;{}&gt;{}((&lt;&gt;))}{}){}&lt;{}&gt;{&lt;({}[()])&gt;&lt;&gt;({})&lt;&gt;}{})\n</code></pre>\n\n<p><a href=\"https://tio.run/##PYyxCoAwDER3vyQ3uApCyI9IBx0EURxcQ7693iHYQkneXd/2rMc97td69m6W5QHjWQy6jSuy4Eyy@ACR9mXk5lmBEtaPluQ/ok0zWyaLEPUisqmO8JDTQ2Hv0zC/\" rel=\"noreferrer\" title=\"Brain-Flak – Try It Online\">Try it online!</a></p>\n\n<h1>Explanation</h1>\n\n<p>This code is pretty simple.  We make copies of the top two items on the stack, we subtract 6 from one and 9 from the other.  We then take the <code>not</code> of the two values.  We <code>and</code> those values, multiply the result by 12.  Multiply the inputs and subtract the two results.</p>\n"},{"answer_id":124264,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124264#124264","body":"<h1>JavaScript (ES6), 20 bytes</h1>\n<pre><code>x=&gt;y=&gt;x-6|y-9?x*y:42\n</code></pre>\n<p><strong>Explanation:</strong></p>\n<p>Iff x==6 and y==9, <code>x-6|y-9</code> will be 0 (falsy), and 42 will be the result.</p>\n<p><strong>Snippet:</strong></p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=\n\nx=&gt;y=&gt;x-6|y-9?x*y:42\n\nconsole.log(f(6)(9));\nconsole.log(f(9)(6));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":124265,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124265#124265","body":"<h1>JavaScript (ES6), 25 bytes</h1>\n<pre><code>x=&gt;y=&gt;[x*y,42][x==6&amp;y==9]\n</code></pre>\n"},{"answer_id":124255,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124255#124255","body":"<h1><a href=\"https://github.com/MiningPotatoes/Ohm\" rel=\"nofollow noreferrer\">Ohm</a>, 11 bytes</h1>\n\n<pre><code>*┼6E┘9E&amp;?42\n</code></pre>\n\n<p><a href=\"https://tio.run/##y8/I/f9f69GUPWauj6bMsHRVszcx@v/fjMsSAA\" rel=\"nofollow noreferrer\" title=\"Ohm – Try It Online\">Try it online!</a></p>\n\n<pre><code>*            Implicit inputs. Multiply\n ┼6E         First input == 6?\n    ┘9E      Second input == 9?\n       &amp;     Logical and\n        ?42  If true push (and output) 42\n             Else implicit output the product\n</code></pre>\n"},{"answer_id":124260,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124260#124260","body":"<h1><a href=\"//en.wikipedia.org/wiki/GW-BASIC\" rel=\"nofollow noreferrer\">GW-BASIC</a>, 55 bytes</h1>\n\n<pre><code>1INPUT A:INPUT B\n2IF A=6THEN IF B=9THEN ?\"42\":END\n3?A*B\n</code></pre>\n\n<p>Output:</p>\n\n<p><a href=\"https://i.stack.imgur.com/uRqRY.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/uRqRY.png\" alt=\"output\"></a></p>\n\n<p>The first machine at <a href=\"https://pcjs.org\" rel=\"nofollow noreferrer\">pcjs</a> has IBM BASIC, which is practically the same thing. To test this, head over there, hit <kbd>Run</kbd> on the machine, Press <kbd>Enter</kbd>-<kbd>Enter</kbd> and type <code>BASICA</code> to get into BASIC mode. Then enter the source code (it will automatically prettyprint for you), type <code>RUN</code>, input two integers, and done!</p>\n"},{"answer_id":124247,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124247#124247","body":"<h2>Mathematica, 15 bytes</h2>\n\n<p>Byte count assumes Windows ANSI encoding (CP-1252).</p>\n\n<pre><code>6±9=42\n±n__:=1n\n</code></pre>\n\n<p>Defines a binary operator <code>±</code> which solves the problem. We simply define <code>6±9=42</code> as a special case which takes precedence and then add a fallback definition which makes <code>±</code> equal to multiplication. The latter uses a fairly interesting golfing trick. The reason this works is actually quite elaborate and we need to look into <em>sequences</em>. A sequence is similar to what's known as a <em>splat</em> in other languages. It's basically a \"list\" without any wrapper around it. E.g. <code>f[1, Sequence[2, 3, 4], 5]</code> is really just <code>f[1, 2, 3, 4, 5]</code>. The other important concept is that all operators are just syntactic sugar. In particular, <code>±</code> can be used as a unary or binary operator and represents the head <code>PlusMinus</code>. So <code>±x</code> is <code>PlusMinus[x]</code> and <code>a±b</code> is <code>PlusMinus[a,b]</code>.</p>\n\n<p>Now we have the definition <code>±n__</code>. This is shorthand for defining <code>PlusMinus[n__]</code>. But <code>n__</code> represents an arbitrary <em>sequence</em> of arguments. So this actually adds a definition for binary (and n-ary) usagess of <code>PlusMinus</code> as well. The value of this definition is <code>1n</code>. How does this multiply the arguments? Well, <code>1n</code> uses Mathematica's implicit multiplication by juxtaposition so it's equivalent to <code>1*n</code>. But <code>*</code> is also just shorthand for <code>Times[1,n]</code>. Now, <code>n</code> is sequence of arguments. So if we invoke <code>a±b</code> then this will actually become <code>Times[1,a,b]</code>. And that's just <code>a*b</code>.</p>\n\n<p>I think it's quite neat how this syntax abuse lets us define a binary operator using unary syntax. We could now even do <code>PlusMinus[2,3,4]</code> to compute <code>24</code> (which can also be written as <code>±##&amp;[2,3,4]</code> or <code>2±Sequence[3,4]</code> but it's just getting crazy at that point).</p>\n"},{"answer_id":124251,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124251#124251","body":"<h1>Pyth, 12 bytes</h1>\n\n<pre><code>-*FQ*12q(6 9\n</code></pre>\n\n<p><a href=\"http://pyth.herokuapp.com/?code=-*FQ*12q%286%209&amp;input=6%2C9&amp;debug=0\" rel=\"nofollow noreferrer\">Try it online</a></p>\n\n<p>Explanation</p>\n\n<pre><code> -*FQ*12q(6 9\n  *FQ             Take the product\n        q(6 9)Q   Check if the (implicit) input is (6, 9)\n -   *12          If so, subtract 12\n</code></pre>\n"},{"answer_id":124246,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124246#124246","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 14 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>6&amp;9=42\na&amp;b=a*b\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0gszk7Nyfn/30zN0tbEiCtRLck2USvpf25iZp6CrUJKPpeCQkFRZl6JgoaRgpqCiSaCbwnkmyHxzYB8S83/AA\" rel=\"noreferrer\" title=\"Haskell – Try It Online\">Try it online!</a></p>\n"},{"answer_id":124244,"question_id":124242,"link":"https://codegolf.stackexchange.com/questions/124242/what-do-you-get-when-you-multiply-6-by-9-42/124244#124244","body":"<h1>Ruby, 24 bytes</h1>\n\n<pre><code>-&gt;a,b{a==6&amp;&amp;b==9?42:a*b}\n</code></pre>\n"},{"answer_id":122921,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122921#122921","body":"<h1>Powershell, 22 Bytes</h1>\n<pre><code>' '*(Read-Host).length\n</code></pre>\n"},{"answer_id":122851,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122851#122851","body":"<h1><a href=\"//github.com/aaronryank/shortC\" rel=\"nofollow noreferrer\">shortC</a>, 16 bytes</h1>\n\n<pre><code>f(C*a){W*a++)P' \n</code></pre>\n\n<p>Note the trailing space at end of code.</p>\n\n<p>Conversions in this program:</p>\n\n<ul>\n<li><code>C</code> -> <code>char</code></li>\n<li><code>W</code> -> <code>while(</code></li>\n<li><code>P</code> -> <code>putchar(</code></li>\n</ul>\n\n<p>The resulting program looks like this:</p>\n\n<pre><code>f(char *a){while(*a++)putchar(' ');}\n</code></pre>\n\n<p>How <em>that</em> works:</p>\n\n<ul>\n<li><code>while(*a++)</code> loops until it reaches the last index of the string <code>a</code>.</li>\n<li><code>putchar(' ');</code> prints a space for each index of <code>a</code>.</li>\n</ul>\n\n<p><a href=\"https://tio.run/##K87ILypJ/p@bmJmnoVmdpqHkkZqTk6@jEJ5flJOiqKRpXfs/TcNZK1GzOlwrUVtbM0Bd4f9/AA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":122746,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122746#122746","body":"<h1><a href=\"https://web.archive.org/web/20150618184706/http://compsoc.dur.ac.uk/whitespace/tutorial.php\" rel=\"noreferrer\">Whitespace</a>, <s>311</s> <s>150</s> <s>77</s> <s>68</s> <s>65</s> <s>46</s> <s>41</s> 38 bytes</h1>\n<p><sup>-3 bytes thanks to Kevin Cruijssen</sup><br />\n<sup>-27 bytes thanks to Ephphatha</sup></p>\n<pre><code>\n&nbsp&nbsp\n&nbsp&nbsp&nbsp&#9;&nbsp&#9;&nbsp\n&nbsp\n&nbsp&nbsp\n&nbsp&#9;\n&#9;&nbsp&#9;&#9;&#9;\n&#9;&nbsp&nbsp\n&#9;\n&nbsp&nbsp\n&nbsp\n\n\n</code></pre>\n<p><a href=\"https://tio.run/nexus/whitespace#@8@loABECpxAyKUA5nByATmcIFKBixMswsX1/39JanEJl6GRMQA\" rel=\"noreferrer\" title=\"Whitespace – TIO Nexus\">Try it online!</a></p>\n<p>A visible format</p>\n<pre><code>'\\n  \\n   \\t \\t \\n \\n  \\n \\t\\n\\t \\t\\t\\t\\n\\t  \\n\\t\\n  \\n \\n\\n'\n</code></pre>\n<p>Explanation (s = space, t = tab, n = new line)</p>\n<pre><code>nssn     # label(NULL) - loop start\nssststsn # push 10 in the stack -&gt; [10]\nsns      # duplicate the top of the stack -&gt; [10, 10]\nsns      # duplicate the top of the stack -&gt; [10, 10, 10]\ntnts     # read a single char from input, pop the stack and store at that address -&gt; [10, 10] [10:&lt;char that was read&gt;]\nttt      # pop the stack and put the value at that adress on stack -&gt; [10,&lt;char&gt;] [10:&lt;char&gt;]\nntssn    # jump to label(0) - since label(0) is not defined, the interpreter jumps to the end of the program - if the top of the stack (char) is 0 -&gt; [10] [10:&lt;char&gt;]\ntnss     # pop the top of the stack and print as ascii -&gt; [] [10:&lt;char&gt;]\nnsnn     # go back to the label(NULL)\n</code></pre>\n"},{"answer_id":123594,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123594#123594","body":"<h1><a href=\"https://github.com/aceto/aceto\" rel=\"nofollow noreferrer\">Aceto</a>, 5 bytes</h1>\n<p>Trivial in Aceto:</p>\n<pre><code>p\n,'O\n</code></pre>\n<p>Reads a character, pushes a space, prints it, and goes back to the start.</p>\n"},{"answer_id":123593,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123593#123593","body":"<p><strong>Bash + Coreutils, 11 Bytes</strong></p>\n\n<p><code>tr -c \\  \\</code></p>\n"},{"answer_id":122762,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122762#122762","body":"<h1>C, 45 bytes</h1>\n\n\n\n<p>Using main. Compile with gcc, ignore warnings.</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>main(c,v)char**v;{while(*(v[1]++))puts(\"\");}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>$./a.out \"Hello, World!\"\n</code></pre>\n"},{"answer_id":123423,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123423#123423","body":"<h1>Perl 5, 6 + 1 = 7 bytes</h1>\n\n<p>Uses the <code>-p</code> flag.</p>\n\n<pre><code>y// /c\n</code></pre>\n\n<p><code>y///</code> is the transliteration operator: the first list is translated to the corresponding character in the second list. Without the <code>c</code>, this does nothing, but the <code>c</code> complements the first list, so all characters are transliterated to a space.</p>\n"},{"answer_id":123418,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123418#123418","body":"<h1>Windows batch, 115 bytes</h1>\n<pre><code>@set i=%~1\n@set p=0\n@set/ac=-1\n:N\n@call set t=%%i:~%p%,1%%\n@set/ac+=1\n@set/ap+=1\n@if &quot;%t%&quot; NEQ &quot;&quot; @goto N\n@echo %c%\n</code></pre>\n<p><em>Re-used code from my answer in</em> <em><b>Is the checkbox not not unchecked?</b></em></p>\n"},{"answer_id":123287,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123287#123287","body":"<h1>Clojurescript, 27 bytes</h1>\n\n<pre><code>#(apply str(map(fn[]\" \")%))\n</code></pre>\n\n<p>Because it's based on js, clojurescript doesn't care about arity errors. That saves one byte over the clojure eqivalent.</p>\n"},{"answer_id":106938,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/106938#106938","body":"<h1>Ruby, <s>43</s> 36 bytes</h1>\n\n<p>Anonymous function, <a href=\"https://codegolf.stackexchange.com/a/92066/4372\">abusing</a> the <code>$.</code> global.</p>\n\n\n\n<pre class=\"lang-rb prettyprint-override\"><code>-&gt;s{$.+=1while(t=s+\"#$.\").size&gt;$.;t}\n</code></pre>\n\n<p>Call it like this:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>f = -&gt;s{$.+=1while(t=s+\"#$.\").size&gt;$.;t}\nf[\"\"]          # =&gt; \"1\"\nf[\"a\"]         # =&gt; \"a2\"\nf[\"aaaaaaa\"]   # =&gt; \"aaaaaaa8\"\nf[\"aaaaaaaa\"]  # =&gt; \"aaaaaaaa9\"\nf[\"aaaaaaaaa\"] # =&gt; \"aaaaaaaaa11\"\n</code></pre>\n"},{"answer_id":123131,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123131#123131","body":"<h1>Shell utils, <s>14</s> 12 bytes</h1>\n<pre><code>tr ' -~' ' '\n</code></pre>\n<p>tr translates characters in the first parameter, into the corresponding one in the second parameter. (space)-~ is a range for space (32) to tilda (126), the first and last printable ASCII characters. They are mapped into a space; tr duplicates the last character in the output list if it is shorter than the input list.</p>\n"},{"answer_id":123049,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123049#123049","body":"<p>TXR Lisp, <s>22</s> 19 bytes:</p>\n\n<pre><code>(op regsub #/./\" \")\n</code></pre>\n\n<p>Previously:</p>\n\n<pre><code>(op mapcar(ret[\" \"0]))\n</code></pre>\n\n<p>That is a function to which we can pass a string:</p>\n\n<p>REPL:</p>\n\n<pre><code>1&gt; (op regsub #/./\" \")\n#&lt;interpreted fun: lambda #:rest-0164&gt;\n2&gt; [*1 \"abc\"]\n\"   \"\n\n\"   \"\n</code></pre>\n"},{"answer_id":123016,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/123016#123016","body":"<h1><a href=\"https://github.com/Phlarx/chip\" rel=\"nofollow noreferrer\">Chip</a>, 2 bytes</h1>\n\n<pre><code>*f\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/chip#@6@V9v@/R2pOTr6OQnl@UU6KIgA\" rel=\"nofollow noreferrer\" title=\"Chip – TIO Nexus\">Try it online!</a></p>\n\n<p>Chip reads in a byte, does whatever calculations are in the code, and writes a byte. So, for each byte of input, we ignore the input and write <code>0x20</code> instead. The empty Chip program would replace each byte of input with a null byte of output.</p>\n\n<pre><code>*    Source element, activates any neighbor elements\n f   Output element for the bit 0x20, when active this bit is set in the output\n</code></pre>\n\n<p>Transposing the two characters would result in the same thing. I opted to use spaces, since <code>0x20</code> requires only one bit to be set. <code>0x0a</code> requires setting two bits. Code for that could be:</p>\n\n<pre><code>b*d\n</code></pre>\n"},{"answer_id":122999,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122999#122999","body":"<h1>Lua, 17 Bytes</h1>\n\n<p><code>s=s:gsub(\".\",\" \")</code></p>\n\n<p>Simple regular expression substitution, replaces any character found with a space.</p>\n"},{"answer_id":122730,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122730#122730","body":"<h1>APL, <s>11</s> 6 bytes</h1>\n\n<p><em>5 bytes saved thanks to @Adám</em></p>\n\n<pre><code>' '⍴⍨≢\n</code></pre>\n\n<p>Uses the Dyalog Classical character set.</p>\n"},{"answer_id":122759,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122759#122759","body":"<h1><a href=\"https://github.com/DJMcMayhem/V\" rel=\"nofollow noreferrer\">V</a>, 2 bytes</h1>\n\n<pre><code>Ò \n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/v#@394ksL//x6pOTn5CuX5RTkpAA\" rel=\"nofollow noreferrer\" title=\"V – TIO Nexus\">Try it online!</a></p>\n\n<p>Note the trailing space!</p>\n"},{"answer_id":122942,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122942#122942","body":"<h1>Brainfuck, 16 bytes</h1>\n\n<p>Prints newlines.</p>\n\n<pre><code>,[&gt;++++++++++.,]\n</code></pre>\n"},{"answer_id":122914,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122914#122914","body":"<p><strong>Python, 23 bytes</strong></p>\n\n<pre><code>print(''*len(input()))\n</code></pre>\n\n<p>First time</p>\n"},{"answer_id":122915,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122915#122915","body":"<h1>C, 32 bytes</h1>\n\n\n\n<p><a href=\"https://tio.run/nexus/c-gcc#@5@mkZyRWKRVolmtoVViq1Vib2xkZaCpppamUaJtqGldy5WbmJmnkaxTpglWp1VmXZ2mURZtGKtpXVCUmVcC49T@//9fySM1JydfRyE8vygnRVEJAA\" rel=\"nofollow noreferrer\"><strong>Try Online</strong></a> modifying characters into spaces</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(char*t){(*t=*t?32:0)&amp;&amp;f(t+1);}\n</code></pre>\n\n<h3>C, 37 bytes</h3>\n\n<p><a href=\"https://tio.run/nexus/c-gcc#@5@mkZyRWKRVolldUJSZV5KmoaSqlaykU1xSlJOap1GiqWOgaV3LlZuYmaeRrFOmCVasVWZdnaZRFm0YC5T7//@/kkdqTk6@jkJ4flFOiqISAA\" rel=\"nofollow noreferrer\"><strong>Try Online</strong></a> Left-padding the end-of-string with its length</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(char*t){printf(\"%*c\",strlen(t),0);}\n</code></pre>\n"},{"answer_id":122910,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122910#122910","body":"<h1>Java 8, 24 bytes</h1>\n<pre><code>s-&gt;s.replaceAll(&quot;.&quot;,&quot; &quot;)\n</code></pre>\n<p><a href=\"https://tio.run/nexus/java-openjdk#lVDNSgMxEL7vU0xzMWFrXqAoCCpe7MVDD66HNE23gXSyJFNRZJ99nZUFXStCcgiZ@f5mYoPJGR6Nx48KwCO5tDfWwXosAZ4oeWzByumR1Yr7fcVXJkPewhoQrmDIl9dZJ9cFFt@EIIUWSwFCDauR2522gbmT5DX6HRw5cnJ9fgGjprz3TO6o44l0xxAFlKitFA8uhLiETUxhtxAKahBS1H9BOjhs6SBVLZT4mvYfV//LypfpGbqNeEEN3sfUOgKzZU6Dd28@Ey/W4ObgyeWOP2XB5HlaubpktnlW8V7f52zon1CJa4Nzq7E@1/dVP3wC\" rel=\"nofollow noreferrer\">Try it here.</a></p>\n<h1>Java 7, 49 bytes</h1>\n<pre><code>String c(String s){return s.replaceAll(&quot;.&quot;,&quot; &quot;);}\n</code></pre>\n<p><a href=\"https://tio.run/nexus/java-openjdk#lZDBasMwDIbvfQpVl9mk@AV2Kmxjl5166KHZwXVNalDlYCtjpeTZMxcCzVYYjU4Wv/7vl@zI5gwflwVAFivBwbCRFLgBp8ZH1pfkpUsM2STfknV@TaTQ4AoB9XM/ALTdnop3RHzFcICTDTwidp9g9TUCYHPO4k8mdmLaIgmxcgrfPVFcwTYmOixRQwWosLoXDHlu5Kh0hbok/0cMvzBhjrcIL5GfpOa3mBovYPdloubX75ClnFPz9hjE57b8xLIMT5Pmex/fa5oz855b/Vl2KjxOrHmKuXb33n7RDz8\" rel=\"nofollow noreferrer\">Try it here.</a></p>\n"},{"answer_id":122768,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122768#122768","body":"<h1>ZX80 (4K ROM version with sanity check)</h1>\n<p>~58 bytes (listing)</p>\n<pre><code> 1 INPUT A$\n 2 IF A$=&quot;&quot; THEN GO TO 1\n 3 PRINT &quot; &quot;;\n 4 LET A$=TL$(A$)\n 5 IF A$=&quot;&quot; THEN STOP\n 6 GO TO 3\n</code></pre>\n<p>Line 2 can be removed to save RAMs. However, if an empty string is entered without line 2 then it will <code>PRINT</code> one space.</p>\n"},{"answer_id":122738,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122738#122738","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 21 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>[char[]]\"$args\"|%{\"\"}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/powershell#@x@dnJFYFB0bq6SSWJRerFSjWq2kVPv///@M1JycfAA\" rel=\"nofollow noreferrer\" title=\"PowerShell – TIO Nexus\">Try it online!</a></p>\n\n<p>prints newlines.</p>\n"},{"answer_id":122890,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122890#122890","body":"<h1><a href=\"https://github.com/TryItOnline/TioSetup/wiki/Powershell\" rel=\"nofollow noreferrer\">PowerShell</a>, 18 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>' '*\"$args\".Length\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/powershell#@6@uoK6lpJJYlF6spOeTmpdekvH///@M1JycfAA\" rel=\"nofollow noreferrer\" title=\"PowerShell – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":122883,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122883#122883","body":"<h1>Bash, 16 bytes</h1>\n\n\n\n<pre class=\"lang-bash prettyprint-override\"><code>printf %*s ${#1}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S0oszvj/v6AoM68kTUFVq1hBpVrZsPb///8eqTk5@ToK5flFOSmKAA\" rel=\"nofollow noreferrer\" title=\"Bash – Try It Online\">Try it online!</a></p>\n\n<p>Uses parameter expansion count the length of the argument <code>${#1}</code>, and then <code>printf</code> to output an empty string space-padded to that same length.</p>\n"},{"answer_id":122847,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122847#122847","body":"<h1>C, <s>57</s> <s>33</s> 30 bytes</h1>\n\n<p>-3 thanks to Tas.</p>\n\n<pre><code>f(int*a){while(*a++)puts(\"\");}\n</code></pre>\n\n<p><a href=\"https://tio.run/##S9ZNT07@/z9NIzkjsUgrUbO6PCMzJ1VDK1FbW7OgtAQkqmFspGldy5WbmJmnoVmdpqHkkZqTk6@jEJ5flJOiqASU@///PwA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":122849,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122849#122849","body":"<h1><a href=\"https://github.com/ETHproductions/cubix\" rel=\"nofollow noreferrer\">Cubix</a>, 6 bytes</h1>\n\n<p>Wahoo a 6 byter!</p>\n\n<pre><code>wi?@oS\n</code></pre>\n\n<p>Cubified</p>\n\n<pre><code>  w\ni ? @ o\n  S\n</code></pre>\n\n<ul>\n<li><code>i</code> gets input</li>\n<li><code>?</code> test top of stack\n\n<ul>\n<li>if negative (EOI) redirect onto <code>w</code> lane change which umps to the <code>@</code> halt</li>\n<li>if 0 (null) halt this shouldn't be hit</li>\n<li>if positive <code>Sow</code> push space to the stack, output and change lane onto <code>i</code></li>\n</ul></li>\n</ul>\n\n<p><a href=\"https://tio.run/nexus/cubix#@1@eae@QH/z/v4KCgkt@nnoJl1t@UXpqiUJiUn5pCZdrRWZxSWZeOld4RmZJanFBYnKqIlAlAA\" rel=\"nofollow noreferrer\" title=\"Cubix – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":122848,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122848#122848","body":"<h1><a href=\"https://github.com/GamrCorps/Convex\" rel=\"nofollow noreferrer\">Convex</a>, 2 bytes</h1>\n\n<pre><code>,*\n</code></pre>\n\n<p><a href=\"https://tio.run/##S87PK0ut@P9fR@v///8eqTk5@ToK5flFOSmKAA\" rel=\"nofollow noreferrer\" title=\"Convex – Try It Online\">Try it online!</a></p>\n\n<p>Simply takes the length of the input and multiplies by newlines (which are at the bottom of the stack)</p>\n"},{"answer_id":122840,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122840#122840","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"noreferrer\">sed</a>, 7 bytes</h1>\n\n<pre><code>s/./ /g\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/sed#@1@sr6evoJ/@/79Hak5Ovo5CeH5RTooiAA\" rel=\"noreferrer\" title=\"sed – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":122835,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122835#122835","body":"<h1>REXX 27 Bytes</h1>\n<pre><code>say left(&quot;&quot;,length(arg(1)))\n</code></pre>\n"},{"answer_id":122828,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122828#122828","body":"<h1>x64 ASSEMBLY (linux nasm) - 131 bytes</h1>\n\n<pre><code>mov r8, [rsp+16]\nmov rdi, 1\nmov rdx, 1\nmov rax, 1\nmov rsi,n\nl:syscall\ninc r8\ncmp byte [r8],0x00\njnz l\nmov rax,60\nsyscall\nn: db \" \"\n</code></pre>\n\n<p>build and run with:</p>\n\n<pre><code>nasm -felf64 invisible_golfed.asm\nld invisible_golfed.asm\n./a.out\n</code></pre>\n\n<p>This will give the warning</p>\n\n<pre><code>ld: warning: cannot find entry symbol _start; defaulting to 00000000000400080\n</code></pre>\n\n<p>warning free version below</p>\n\n<p><strong>without warnings - 152</strong></p>\n\n<pre><code>global _start\n_start:mov r8, [rsp+16]\nmov rdi, 1\nmov rdx, 1\nmov rax, 1\nmov rsi,n\nl:syscall\ninc r8\ncmp byte [r8],0x00\njnz l\nmov rax,60\nsyscall\nn: db \" \"\n</code></pre>\n"},{"answer_id":122813,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122813#122813","body":"<h1><a href=\"https://esolangs.org/wiki/Pb\" rel=\"nofollow noreferrer\">pb</a> - 17 bytes</h1>\n<pre><code>^w[B!0]{&gt;}&lt;vb[32]\n</code></pre>\n<p>Goes to the last character of the input and puts a space on the canvas cell representing it. Because output in pb is 2D, the empty cells before it are automatically filled in with spaces when it's outputted.</p>\n"},{"answer_id":122812,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122812#122812","body":"<h1>JavaScript (ES8), 22 bytes</h1>\n<pre><code>s=&gt;&quot;&quot;.padEnd(s.length)\n</code></pre>\n"},{"answer_id":122811,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122811#122811","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, 28 bytes</h1>\n\n<pre><code>{{}&lt;&gt;((()()()()()){})&lt;&gt;}&lt;&gt;{}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/brain-flak#@19dXWtjp6GhoQmDmtW1mjZ2QMHq2v//M1JzcvIVyvOLclL@6yYDAA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – TIO Nexus\">Try it online!</a></p>\n\n<pre><code>{{}                    }     # For every input character...\n     ((()()()()()){})        #    Push 10...\n   &lt;&gt;                &lt;&gt;      #    on the other stack\n                        &lt;&gt;   # Switch to the stack with all of the newlines\n                          {} # Pop a newline because the interpreter prints a newline :(\n</code></pre>\n"},{"answer_id":122706,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122706#122706","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"noreferrer\">Haskell</a>, 7 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>(&gt;&gt;\" \")\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/haskell#@5@bmJmnYKtQUJSZV6KgoqBhZ6ekoKSpoOSRmpOTr6MQnl@Uk6Ko9P8/AA\" rel=\"noreferrer\" title=\"Haskell – TIO Nexus\">Try it online!</a> Usage: <code>(&gt;&gt;\" \") \"Hello, world!\"</code>.</p>\n\n<p>Given two lists (and strings are lists of characters in Haskell) the <code>&gt;&gt;</code> operator will repeat the second list as many times as the first list has elements. Setting <code>\" \"</code> as second argument means we concatenate as many spaces as the input string is long.</p>\n\n<hr>\n\n<p><strong>Alternative</strong> (same byte count):</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(' '&lt;$)\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/haskell#@5@bmJmnYKtQUJSZV6KgoqChrqBuo6KpoOSRmpOTr6MQnl@Uk6Ko9P8/AA\" rel=\"noreferrer\" title=\"Haskell – TIO Nexus\">Try it online!</a> Usage: <code>(' '&lt;$) \"Hello, world!\"</code>.</p>\n\n<p>Given some value and a list, the <code>&lt;$</code> operator replaces each value in the list with the given value. Thus <code>5 &lt;$ \"abc\"</code> results in <code>[5,5,5]</code>, and <code>' ' &lt;$ \"abc\"</code> in <code>\"   \"</code>. </p>\n\n<p>The function can equivalently be written as  <code>(&lt;$)' '</code>, in case you want to find some more marine creatures in my code.</p>\n"},{"answer_id":122779,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122779#122779","body":"<h1><a href=\"http://perl6.org/\" rel=\"nofollow noreferrer\">Perl 6</a>, 10 bytes</h1>\n\n<pre><code>{S:g/./ /}\n</code></pre>\n\n<p>Basic string substitution.</p>\n"},{"answer_id":122767,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122767#122767","body":"<h1>C, 31 bytes</h1>\n\n<pre><code>f(char*c){puts(\"\"),*c++&amp;&amp;f(c);}\n</code></pre>\n"},{"answer_id":122765,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122765#122765","body":"<h1>Rust, 23 bytes</h1>\n\n<pre><code>|s|\" \".repeat(s.len());\n</code></pre>\n\n<p>First time using Rust so not 100% sure I've got everything correct, let me know if I need to change anything. I couldn't work out how to test this, as I'm still new to it, but judging from the documentation it should work. Also any improvements are more than welcome!</p>\n"},{"answer_id":122754,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122754#122754","body":"<h1><a href=\"http://savannah.nongnu.org/projects/tinycc\" rel=\"nofollow noreferrer\">C (tcc)</a>, 31 bytes</h1>\n\n<p>I opted to output newlines since it's shorter...\n</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(char*s){for(;*s++;puts(\"\"));}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/c-tcc#@5@mkZyRWKRVrFmdll@kYa1VrK1tXVBaUqyhpKSpaV37PzcxM09Dk6uaSwEICooy80rSNJQ8UnNy8hXC84tyUhSVNOHqrcGKMOW5av9/zcvXTU5MzkgFAA\" rel=\"nofollow noreferrer\" title=\"C (tcc) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":122749,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122749#122749","body":"<h2><a href=\"https://esolangs.org/wiki/Fish\" rel=\"noreferrer\">>&lt;></a>, 7 bytes</h2>\n\n<pre><code>i0(?;ao\n</code></pre>\n\n<p>The program is a loop </p>\n\n<pre><code>i         //Push a character from the input onto the stack\n 0        //Add a 0 to the stack\n  (       //Pop the top two values of the stack, and push a 1 if the second is less than the first (In this case, the input has all been read), else push a 0\n   ?      //Pop the top of the stack. If the value is a 0, skip the next instruction\n    ;     // Terminate the program\n     a    // Add a newline to the stack\n      o   // Pop the top character of the stack and print it\n</code></pre>\n"},{"answer_id":122745,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122745#122745","body":"<h1>Scala, 15 bytes</h1>\n\n<pre class=\"lang-scala prettyprint-override\"><code>s=&gt;\" \"*s.length\n</code></pre>\n"},{"answer_id":122744,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122744#122744","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 3 bytes</h1>\n\n\n\n<p>Prints only newlines.</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>0/⍪\n</code></pre>\n\n<p><a href=\"https://tio.run/##SyzI0U2pTMzJT///P@1R2wQD/Ue9q4BMBXWP1JycfIXw/KKcFEV1AA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – Try It Online\">Try it online!</a></p>\n\n<p><code>⍪</code> table (makes string into column matrix)</p>\n\n<p><code>0/</code> replicate each column zero times</p>\n"},{"answer_id":122710,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122710#122710","body":"<h1>Python, 19 bytes</h1>\n\n\n\n<pre class=\"lang-py prettyprint-override\"><code>lambda s:' '*len(s)\n</code></pre>\n"},{"answer_id":122739,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122739#122739","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 2 bytes</h1>\n\n<pre><code>⁶ṁ\n</code></pre>\n\n<p><a href=\"https://tio.run/##y0rNyan8//9R47aHOxv///@v5AEUyNdRCM8vyklRVAIA\" rel=\"nofollow noreferrer\" title=\"Jelly – Try It Online\">Try it online!</a></p>\n"},{"answer_id":122736,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122736#122736","body":"<h1>tcl, 19</h1>\n<pre><code>regsub -all . $s \\ \n</code></pre>\n<p><a href=\"http://rextester.com/BJFDA29728\" rel=\"nofollow noreferrer\">demo</a></p>\n<p>To test it, click &quot;Run it&quot; button and then select the white space on the white bottom area. A better test is to add a space and a letter before the <code>]</code> as I describe:</p>\n<pre><code>puts [regsub -all . $s \\  x]    \n                        ^^ Two spaces here\n</code></pre>\n<p>and it will output the count of characters of each string exactly equal to the ones on the question.</p>\n"},{"answer_id":122731,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122731#122731","body":"<h1><a href=\"https://www.lua.org\" rel=\"nofollow noreferrer\">Lua</a>, 25 bytes</h1>\n\n\n\n<pre class=\"lang-lua prettyprint-override\"><code>for i=1,#...do\nprint()end\n</code></pre>\n\n<p>Same length as:</p>\n\n<pre class=\"lang-lua prettyprint-override\"><code>io.write((' '):rep(#...))\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/lua#@5@WX6SQaWuoo6ynp5eSz1VQlJlXoqGZmpfy////pMQ8IAQA\" rel=\"nofollow noreferrer\" title=\"Lua – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":122729,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122729#122729","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"noreferrer\">CJam</a>, 4 bytes</h1>\n\n<pre><code>q,S*\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/cjam#PcpBCoMwFEXReVbxxEFBXEbtBlpwKFq@yS8l3yZP2t3H0IGzc@GWT3/vytRDWjyCZqxmlISq154JGraksSII3hI9A2z91zcoJW/zUwqAq8UL3c2SF2JebKcbfpqp0bvxPJt6Hg\" rel=\"noreferrer\" title=\"CJam – TIO Nexus\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<pre><code>q     e# Read input\n ,    e# Length\n  S*  e# Repeat space that many times\n</code></pre>\n"},{"answer_id":122728,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122728#122728","body":"<h1>Mathematica, 21 bytes</h1>\n\n<pre><code>StringReplace[_-&gt;\" \"]\n</code></pre>\n"},{"answer_id":122727,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122727#122727","body":"<h1>Excel, 18 bytes</h1>\n\n<pre><code>=REPT(\" \",LEN(A1))\n</code></pre>\n\n<p>Pretty boring and one byte longer than <a href=\"https://codegolf.stackexchange.com/a/122722/38183\">the VBA answer</a>.</p>\n"},{"answer_id":122725,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122725#122725","body":"<h1>PHP, 28 Bytes</h1>\n\n<pre class=\"lang-php prettyprint-override\"><code>for(;a&amp;$argn[$i++];)echo\" \";\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/php#s7EvyCjgUkksSs@zVfJIzcnJ11EIzy/KSVFUsv6fll@kYZ2oBpaNVsnU1o611kxNzshXUgBK/gcA\" rel=\"noreferrer\" title=\"PHP – TIO Nexus\">Try it online!</a></p>\n\n<h1>PHP, 29 Bytes</h1>\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?=str_pad('',strlen($argn));\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/php#s7EvyCjgUkksSs@zVfJIzcnJ11EIzy/KSVFUsuayt/tvY29bXFIUX5CYoqGurgNk5qTmaYCVa2pa//8PAA\" rel=\"noreferrer\" title=\"PHP – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":122723,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122723#122723","body":"<h1>Gema, 4 characters</h1>\n\n<pre><code>?=\\ \n</code></pre>\n\n<p>(There is a space at the end of code.)</p>\n\n<p>Sample run:</p>\n\n<pre><code>bash-4.4$ echo -n 'Hello, World!' | gema '?=\\ '\n             bash-4.4$ echo -n 'Hello, World!' | gema '?=\\ ' | wc\n      0       0      13\n</code></pre>\n"},{"answer_id":122721,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122721#122721","body":"<h1><a href=\"https://github.com/m-ender/retina\" rel=\"noreferrer\">Retina</a>, 5 bytes</h1>\n\n<pre><code>\\`.\n¶\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#@x@ToMd1aNv//woKCi75eeolXG75RempJQqJSfmlJVyuFZnFJZl56VzhGZklqcUFicmpikCVAA\" rel=\"noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a> Changes everything into newlines. The <code>\\`</code> suppresses the extra newline Retina would normally output.</p>\n"},{"answer_id":122719,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122719#122719","body":"<h1>Octave, 14 bytes</h1>\n\n<pre><code>@(a)[\"\" 0*a+32]\n</code></pre>\n"},{"answer_id":122704,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122704#122704","body":"<h1>C#, <s>28</s> 24 bytes</h1>\n\n\n\n<pre class=\"lang-c# prettyprint-override\"><code>s=&gt;\"\".PadLeft(s.Length);\n</code></pre>\n\n<p>Old version using the <code>string</code> constructor for 28 bytes:</p>\n\n<pre class=\"lang-c# prettyprint-override\"><code>s=&gt;new string(' ',s.Length);\n</code></pre>\n"},{"answer_id":122715,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122715#122715","body":"<h1>PHP, 36 bytes</h1>\n\n<pre><code>&lt;?=str_repeat('\n',strlen($argv[1]));\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/php#@29jb1tcUhRflFqQmliioc6lrgPk5qTmaagkFqWXRRvGampa////3yM1JydfRyE8vygnRREA\" rel=\"nofollow noreferrer\" title=\"PHP – TIO Nexus\">Try it online!</a></p>\n\n<p>Outputs newlines because spaces are too mainstream</p>\n"},{"answer_id":122712,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122712#122712","body":"<h1><a href=\"https://github.com/TryItOnline/tio-transpilers\" rel=\"noreferrer\">brainfuck</a>, 18 bytes</h1>\n\n<pre><code>++++++++++&gt;,[&lt;.&gt;,]\n</code></pre>\n\n<p><a href=\"https://tio.run/##SypKzMxLK03O/v9fGw7sdKJt9Ox0Yv//90jNycnXUSjPL8pJUQQA\" rel=\"noreferrer\" title=\"brainfuck – Try It Online\">Try it online!</a></p>\n\n<p>Prints one newline for each byte of input.  Printing spaces instead would add 4 bytes.</p>\n"},{"answer_id":122705,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122705#122705","body":"<h1>JavaScript ES6, 22 bytes</h1>\n\n<pre><code>a=&gt;a.replace(/./g,\" \")\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=a=&gt;a.replace(/./g,\" \");\r\n\r\nvar test = f(\"Hello, World!\");\r\nconsole.log(test, test.length);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":122711,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122711#122711","body":"<h2>Mathematica, 30 bytes</h2>\n<pre><code>Row@Table[&quot; &quot;,StringLength@#]&amp;\n</code></pre>\n"},{"answer_id":122709,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122709#122709","body":"<h1>SmileBASIC 3, 22 bytes</h1>\n\n<p>Asks for a string from the console as input, then prints <em>length</em> spaces. <code>PRINT</code> (or <code>?</code> here) adds a trailing newline by default, so we use the <code>;</code> to disable it.</p>\n\n<pre><code>LINPUT A$?\" \"*LEN(A$);\n</code></pre>\n"},{"answer_id":122708,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122708#122708","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"noreferrer\">Japt</a>, 1 byte</h1>\n\n<pre><code>ç\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/japt#@394@f//Sh6pOTn5Ogrh@UU5KYpKAA\" rel=\"noreferrer\" title=\"Japt – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":122707,"question_id":122703,"link":"https://codegolf.stackexchange.com/questions/122703/print-invisible-text/122707#122707","body":"<h1>JavaScript (ES6), 23 bytes</h1>\n\n<pre><code>s=&gt;\" \".repeat(s.length)\n</code></pre>\n"},{"answer_id":121165,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121165#121165","body":"<h1><a href=\"https://www.lua.org\" rel=\"nofollow noreferrer\">Lua</a>, <s>53</s> 30 bytes</h1>\n\n<p>Replaces everything upto the last <code>.</code> with the empty string <code>''</code>.</p>\n\n<p>Double parenthesis to select only the first return value of <code>gsub</code>.</p>\n\n<p>Any golfing tips are welcome, I'm rusty in lua...</p>\n\n\n\n<pre class=\"lang-lua prettyprint-override\"><code>print(((...):gsub('.*%.','')))\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/lua#@19QlJlXoqGhoaenp2mVXlyapKGup6Wqp66jrq6pqfn///@kxDwg1EtMSkxOLEnVS61IBQA\" rel=\"nofollow noreferrer\" title=\"Lua – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":120958,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120958#120958","body":"<h1>c function, 21</h1>\n<ul>\n<li>1 byte saved thanks to @Dennis.</li>\n<li>3 bytes saved thanks to @JohanduToit.</li>\n<li>2 bytes saved thanks to @Neil.</li>\n<li>1 byte saved thanks to @algmyr.</li>\n</ul>\n\n<pre class=\"lang-c prettyprint-override\"><code>f(s){s=rindex(s,46);}\n</code></pre>\n<p><a href=\"https://tio.run/nexus/c-gcc#XZDBboMwDIbvPIUVqVJCWehh2oV1L9JxiLKkWIJQxWarVvHsLMA00HxIfv2Of33O5CWpB50jhg93l1Q8v6hqnDAwdAYDyFmZeLUF2D4Qg21MhDw5nwoeGaRaHXbE1pCjSw3n385cokHNdxbF5lgTY8@6c53b2WUp2r4VRVI5WDOkKDBA7urN0DLk5Rbw1RjWGklrbubTY@vE0h6r5ZqhscoW7fuYtkhMpwoQXkESfrveyz9gBSX89y6nWqn0/nhUu11u6ZfYS3EgeHqDA72HhLvNYF3APgPnjBVrRYmOhxgSSDZOPw\" rel=\"nofollow noreferrer\">Try it online</a>.</p>\n"},{"answer_id":121105,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121105#121105","body":"<h1>Awk, <s>14</s> 13 characters</h1>\n\n<p>(<s>10</s> 9 characters code + 4 characters command line option.)</p>\n\n<pre class=\"lang-awk prettyprint-override\"><code>{$0=$NF}1\n</code></pre>\n\n<p>Thanks to:</p>\n\n<ul>\n<li><a href=\"https://codegolf.stackexchange.com/users/45724/robert-benson\">Robert Benson</a> for spotting the unnecessary semicolon (-1 character)</li>\n</ul>\n\n<p>Sample run:</p>\n\n<pre><code>bash-4.4$ awk -F. '{$0=$NF}1' &lt;&lt;&lt; $'hi.txt\\ncarrot.meme\\nlol\\nwhat..is..this..file\\n.bashrc\\nT00M@n3KaPZ.h0wC[]h'\ntxt\nmeme\nlol\nfile\nbashrc\nh0wC[]h\n</code></pre>\n"},{"answer_id":120939,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120939#120939","body":"<h1><a href=\"https://github.com/DJMcMayhem/V\" rel=\"nofollow noreferrer\">V</a>, <s>5</s>, 3 bytes</h1>\n\n<p>Since more of this answer is unprintable than printable, here is a hexdump:</p>\n\n<pre><code>00000000: cd81 ae                                  ...\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/v#@3@491DjoXX//2dk6pVUlHAlJxYV5Zfo5abmpnLl5OdwlWcklujpZRbr6ZVkgMi0zJxUAA\" rel=\"nofollow noreferrer\" title=\"V – TIO Nexus\">Try it online!</a></p>\n\n<p>This uses <a href=\"https://codegolf.stackexchange.com/a/120937/31716\">Jan Dvorak's algorithm</a>, it just happens to be a more efficient encoding of it.</p>\n\n<p>Explanation:</p>\n\n<pre><code>Í       \" Remove all occurrences of:\n 0x81   \"   Anything (greedy)\n     ®  \"   Followed by a dot \n</code></pre>\n\n<p>Old solution:</p>\n\n<pre><code>$T.d|\n</code></pre>\n"},{"answer_id":121170,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121170#121170","body":"<h2><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>32</s> <s>30</s> 29 bytes</h2>\n\n<p><em>-1 byte thanks to Laikoni</em></p>\n\n<pre><code>r=reverse\nr.fst.span(/='.').r\n</code></pre>\n\n<p>self-explanatory</p>\n"},{"answer_id":121010,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121010#121010","body":"<h1>C#, <s>33</s> 41 bytes</h1>\n\n\n\n<pre class=\"lang-cs prettyprint-override\"><code>a=&gt;a.Split('.').Last();\n</code></pre>\n\n<p>Edit as suggested:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>using System.Linq;a=&gt;a.Split('.').Last();\n</code></pre>\n"},{"answer_id":120946,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120946#120946","body":"<h2>Mathematica, <strike>13</strike> 22 bytes</h2>\n\n<p><em>Edit: Not sure how I missed the <code>\".bashrc\"</code> test case. Thanks to Artyer for keeping me honest.</em></p>\n\n<pre><code>FileExtension[\"a\"&lt;&gt;#]&amp;\n</code></pre>\n\n<p>If the input matches <code>\\.[^.]+</code>, then <code>FileExtension</code> just returns the empty string, so we prepend the letter <code>a</code>. In any other case, prepending <code>a</code> doesn't affect output of <code>FileExtension</code>.</p>\n"},{"answer_id":120962,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120962#120962","body":"<h1>Javascript (ES5), 38 bytes</h1>\n\n<pre class=\"lang-js prettyprint-override\"><code>function(s){return s.split(&quot;.&quot;).pop()}\n</code></pre>\n"},{"answer_id":121130,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121130#121130","body":"<h1>C#, 35 bytes</h1>\n\n\n\n<pre class=\"lang-c# prettyprint-override\"><code>s=&gt;s.Substring(s.LastIndexOf(\".\"));\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/cs-mono#NY1NCsMgFIT3nuKRlULxAmmyKRQKKS1k0bVV0wpWwaf9oeTs1kQ6m4FvhpmExt1g/GDUj5YQaQUinMmXQBFGEY2EpzcKjsI4ylZcw0X75OQWYygbG6jewwRdxq5HPqZrZRT5IDAenNLv00Qb3jDW5v/Izjv0VvNLMFEPxmlaKndtrecvH6xayuvjTOb8Aw\" rel=\"nofollow noreferrer\" title=\"C# (Mono) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":121113,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121113#121113","body":"<h1>REXX 53</h1>\n<pre><code>parse value reverse(arg(1)) with e &quot;.&quot; \nsay reverse(e)\n</code></pre>\n"},{"answer_id":121009,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121009#121009","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, <s>6</s> 4 bytes</h1>\n\n<p>-2 bytes thanks to <a href=\"https://codegolf.stackexchange.com/users/41024/erik-the-outgolfer\">Erik the Outgolfer</a></p>\n\n<pre><code>⊟⪪Ｓ.\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/charcoal#@/@oa/6jVave79ms9/9/YnFKml5afr5eUmIREFcBAA\" rel=\"nofollow noreferrer\" title=\"Charcoal – TIO Nexus\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code>⊟      Pop\n  ⪪ .  Split on \".\"\n   Ｓ  Next input as string\n       Implicit print of value\n</code></pre>\n"},{"answer_id":121106,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121106#121106","body":"<h1>Pyth, 5 bytes</h1>\n<pre><code>ecz\\.\n</code></pre>\n<p><a href=\"http://pyth.herokuapp.com/?code=ecz%5C.&amp;test_suite=1&amp;test_suite_input=hi.txt%0Acarrot.meme%0Awhat..is..this..file%0A.bashrc%0AT00M%40n3KaPZ.h0wC%5B%5Dh\" rel=\"nofollow noreferrer\">try it here</a></p>\n"},{"answer_id":120932,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120932#120932","body":"<h1>PHP, 21 Bytes</h1>\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?=pathinfo($argn,4);\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/php#s7EvyCjgUkksSs@zVcrI1CupKFGy5rK3@29jb1uQWJKRmZeWrwGW1jHRtP7/HwA\" rel=\"nofollow noreferrer\" title=\"PHP – TIO Nexus\">Try it online!</a></p>\n\n<p>is a shorter expression for\n</p>\n\n<pre><code>&lt;?=pathinfo($argn)[extension];\n</code></pre>\n\n<p><a href=\"http://php.net/manual/en/function.pathinfo.php\" rel=\"nofollow noreferrer\">pathinfo</a></p>\n\n<h1>PHP, 27 Bytes</h1>\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?=end(explode(\".\",$argn));\n</code></pre>\n\n<p><a href=\"http://php.net/manual/en/function.explode.php\" rel=\"nofollow noreferrer\">explode</a></p>\n\n<p><a href=\"https://tio.run/nexus/php#s7EvyCjgUkksSs@zVcrI1CupKFGy5rK3@29jb5ual6KRWlGQk5@SqqGkp6QDVqWpaf3/PwA\" rel=\"nofollow noreferrer\" title=\"PHP – TIO Nexus\">Try it online!</a></p>\n\n<h2>PHP &lt;7.0, 26 Bytes</h2>\n\n<pre class=\"lang-php prettyprint-override\"><code>&lt;?=end(split(\"\\.\",$argn));\n</code></pre>\n\n<p>deprecated <a href=\"http://php.net/manual/en/function.split.php\" rel=\"nofollow noreferrer\">split</a></p>\n"},{"answer_id":121063,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121063#121063","body":"<h1>Octave, 24 bytes</h1>\n<pre><code>@(x)strsplit(x,'.'){end}\n</code></pre>\n<p>Creates an anonymous function named <code>ans</code> which can accept a string as input</p>\n<p><a href=\"http://ideone.com/JoPlJJ\" rel=\"nofollow noreferrer\">Online Demo</a></p>\n"},{"answer_id":120930,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120930#120930","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 4 bytes</h1>\n\n<pre><code>'.¡¤\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@6@ud2jhoSX//5dnJJbo6WUW6@mVZIDItMycVAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – TIO Nexus\">Try it online!</a> or <a href=\"https://tio.run/nexus/05ab1e#qymr/K@ud2jhoSX/K5UO77dSULLX@Z@RqVdSUcKVnFhUlF@il5uam8qVk5/DVZ6RWKKnl1msp1eSASLTMnNSufSSEoszipK5QgwMfB3yjL0TA6L0MgzKnaNjMwA\" rel=\"nofollow noreferrer\" title=\"05AB1E – TIO Nexus\">Try All Tests</a></p>\n\n<pre><code>'.   # Push '.'\n  ¡  # Split on occurrences of '.'\n   ¤ # Tail\n</code></pre>\n"},{"answer_id":120949,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120949#120949","body":"<h2>JavaScript (ES6), 19 bytes</h2>\n<p>Returns the full filename when there's no file extension. I suppose this is an acceptable <em>undefined behavior</em>.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let f =\n\ns=&gt;s.split`.`.pop()\n\nconsole.log(f(\"hi.txt\"))               // -&gt; txt\nconsole.log(f(\"carrot.meme\"))          // -&gt; meme\nconsole.log(f(\"lol\"))                  // -&gt; undefined behavior\nconsole.log(f(\"what..is..this..file\")) // -&gt; file\nconsole.log(f(\"T00M@n3KaPZ.h0wC[]h\")) // -&gt; h0wC[]h\nconsole.log(f(\".bashrc\")) // -&gt; bashrc</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":121029,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121029#121029","body":"<h1>jq, <s>15</s> 14 characters</h1>\n\n<p>(<s>11</s> 10 characters code + 4 characters command line options.)</p>\n\n<pre><code>./\".\"|last\n</code></pre>\n\n<p>Sample run:</p>\n\n<pre><code>bash-4.4$ jq -Rr './\".\"|last' &lt;&lt;&lt; 'what..is..this..file'\nfile\n</code></pre>\n\n<p><a href=\"https://jqplay.org/s/xhwN4TRSJj\" rel=\"nofollow noreferrer\">On-line test</a></p>\n"},{"answer_id":121030,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121030#121030","body":"<h1>Gema, 3 characters</h1>\n\n<pre><code>*.=\n</code></pre>\n\n<p>Sample run:</p>\n\n<pre><code>bash-4.4$ gema '*.=' &lt;&lt;&lt; 'what..is..this..file'\nfile\n</code></pre>\n"},{"answer_id":121027,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121027#121027","body":"<h2>Batch, 10 bytes</h2>\n\n<pre><code>@echo %~x1\n</code></pre>\n\n<p>Strangely competitive for once.</p>\n"},{"answer_id":121020,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/121020#121020","body":"<h1><a href=\"https://www.gnu.org/software/make/\" rel=\"nofollow noreferrer\">GNU Make</a>, 12 bytes</h1>\n\n<pre><code>$(suffix $1)\n</code></pre>\n\n<p>Not using a builtin, 27 bytes:</p>\n\n<pre><code>$(lastword $(subst ., ,$1))\n</code></pre>\n"},{"answer_id":120955,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120955#120955","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, <s>6</s> 5 bytes</h1>\n\n<pre><code>q'. o\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/japt#@1@orqeQ//@/Um5pTklmQU6qXkp@SbFecn5@jhIA\" rel=\"nofollow noreferrer\" title=\"Japt – TIO Nexus\">Try it online!</a></p>\n\n<h1>Explanation</h1>\n\n<pre><code> q'. o\nUq'. o\nUq'.    # Split the input at \".\"\n     o # Return the last item\n</code></pre>\n"},{"answer_id":120963,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120963#120963","body":"<h1>Common Lisp, 57 bytes</h1>\n<pre><code>(lambda(s)(#1=reverse(subseq #2=(#1# s)0(search&quot;.&quot;#2#))))\n</code></pre>\n<p><a href=\"https://tio.run/nexus/clisp#DcixDkBADADQX5Hr0i4NdqNgQQ6D8dCEBOEafv944wt4@e2cEXd3TItDJYQk8/KKV0F9JpU7gjT7FyKlGFWcn1fDBlKgn2mHnnlsBsvc9baqC@Yyt7khCuED\" rel=\"nofollow noreferrer\">Try it online</a> (added some bytes to call this anonymous function and display returned string)</p>\n<h3>Explanation</h3>\n<pre><code>(#1=reverse ...)     ;reverse is now accessible with #1# - saves 1 byte. I \n                     ;also need to reverse output of function inside to \n                     ;get extension in correct order\n#2=(#1# s)           ;reverse of input string is now accessible with #2#\n(search&quot;.&quot;#2#)       ;I take reversed string and search for &quot;.&quot; to get position of \n                     ;first instance of &quot;.&quot; in string from the end of it\n(subseq ... 0 ...)   ;get part of reversed string, \n                     ;starting from first character and ending just \n                     ;before first occurance of &quot;.&quot;\n                     ;this gives reversed extension\n</code></pre>\n<p>I get substring of reversed string, starting from 0, ending on this</p>\n"},{"answer_id":120928,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120928#120928","body":"<h1>JavaScript (ES6), <s>33</s> <s>31</s> 28 bytes</h1>\n<pre><code>s=&gt;s.slice(s.lastIndexOf`.`)\n</code></pre>\n<p>Spec change in comments removes the need for <code>+1</code>.</p>\n<p>-3 bytes thanks to nderscore</p>\n"},{"answer_id":120957,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120957#120957","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"noreferrer\">Japt</a>, 3 bytes</h1>\n\n<p>2 bytes of code, +1 for the <code>h</code> flag.</p>\n\n<pre><code>q.\n</code></pre>\n\n<h3>Explanation:</h3>\n\n<pre><code>q.       Split the input by `.`\n   -h    Return the last item\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/japt#@1@o9/@/UnlGYomeXmaxnl5JBohMy8xJVdLNAAA\" rel=\"noreferrer\" title=\"Japt – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":120945,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120945#120945","body":"<h1><a href=\"https://golang.org/\" rel=\"nofollow noreferrer\">Go</a>, 85 bytes</h1>\n\n<p>Go is... troublesome.</p>\n\n<pre><code>import(.\"fmt\"\n.\"os\"\n.\"strings\")\nfunc main(){s:=Split(Args[1],\".\");Print(s[len(s)-1])}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/go#K0hMzk5MT1XITczM@5@ZW5BfVKKhp5SWW6LEpaeUXwwii0uKMvPSi5U0udJK85LBKjU0q4utbIMLcjJLNByL0oujDWN1lPSUNK0DgEpLNIqjc1LzNIo1dQ1jNWv///@fkalXUlECAA\" rel=\"nofollow noreferrer\" title=\"Go – TIO Nexus\">Try it online!</a></p>\n\n<p>A sample of parentheses from the code:</p>\n\n<pre><code>()(){([])([()])}\n</code></pre>\n"},{"answer_id":120943,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120943#120943","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"nofollow noreferrer\">Brain-Flak</a>, 84 bytes</h1>\n\n<p>Includes +2 for <code>-rc</code></p>\n\n<pre><code>(()){{}([((((()()()){}())()){}{}){}]({}&lt;&gt;)&lt;&gt;)({()(&lt;{}&gt;)}{})}{}{{}}&lt;&gt;{}{({}&lt;&gt;)&lt;&gt;}&lt;&gt;\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/brain-flak#@6@hoalZXV2rEa0BApogqAnkakLo6logEatRXWtjpwlEGtVAeZvqWjtNkAwQA3UCpYA0TAmQ/P8/I1MvNzU39b9uUTIA\" rel=\"nofollow noreferrer\" title=\"Brain-Flak – TIO Nexus\">Try it online!</a></p>\n\n<pre><code># Push 1 to start the loop\n(())\n\n# Start loop\n{{}\n\n  # If TOS == 46 i.e. '.'\n  ([((((()()()){}())()){}{}){}]({}&lt;&gt;)&lt;&gt;)({()(&lt;{}&gt;)}{})\n  # ^------------------------^ ^-------^ \n  #           This is 46         Also, copy TOS to other stack\n\n# End loop after the first '.'\n}{}\n\n# Delete everything from this stack\n{{}}\n\n# Delete the '.' that got copied\n&lt;&gt;{}\n\n# Copy everything back to reverse it to the correct order\n{({}&lt;&gt;)&lt;&gt;}&lt;&gt;\n</code></pre>\n"},{"answer_id":120942,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120942#120942","body":"<h1><a href=\"http://neo4j.com/docs/developer-manual/current/cypher\" rel=\"nofollow noreferrer\">Neo4j Cypher</a>, 24 bytes</h1>\n\n<pre><code>return split($i,\".\")[-1]\n</code></pre>\n\n<p>Input is in a param (<code>i</code>), probably the only way for cypher to take input. Pretty straightforward. <a href=\"https://codegolf.stackexchange.com/search?q=Cypher\">Cypher has never been used on PPCG before</a></p>\n"},{"answer_id":120931,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120931#120931","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 4 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>ṣ”.Ṫ\n</code></pre>\n<p>A monadic link taking the file name and returning the extension with no leading <code>.</code>.</p>\n<p><strong><a href=\"https://tio.run/nexus/jelly#@/9w5@JHDXP1Hu5c9f////KMxBI9vcxiPb2SDBCZlpmTCgA\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></strong></p>\n<h3>How?</h3>\n<p>Literally does what was asked...</p>\n<pre><code>ṣ”.Ṫ - Main link: list of characters, f\n ”.  - literal '.'\nṣ    - split f at occurrences of '.'\n   Ṫ - tail (get the last chunk)\n</code></pre>\n"},{"answer_id":120937,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120937#120937","body":"<h1><a href=\"https://github.com/m-ender/retina\" rel=\"noreferrer\">Retina</a>, 5 bytes</h1>\n\n<pre><code>.*\\.\n\n</code></pre>\n\n<p>Replaces everything and a dot with nothing at all.</p>\n\n<p><a href=\"https://tio.run/nexus/retina#@6@nFaPH9f9/RmpOTr5eeX5RTopeSWpxiV5WQbpeakUqAA\" rel=\"noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":120935,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120935#120935","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, 25 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda s:s.split('.')[-1]\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/python2#S7ON@Z@TmJuUkqhQbFWsV1yQk1mioa6nrhmtaxj7v6AoM69EIU1DPSNTr6SiRF2TCy6SnFhUlF@il5uam4osnJOfg8wtz0gs0dPLLNbTK8kAkWmZOUDl/wE\" rel=\"nofollow noreferrer\" title=\"Python 2 – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":120934,"question_id":120925,"link":"https://codegolf.stackexchange.com/questions/120925/whats-the-file-extension/120934#120934","body":"<h1><a href=\"https://www.gnu.org/software/sed/\" rel=\"nofollow noreferrer\">sed</a>, 8 bytes</h1>\n\n<pre><code>s:.*\\.::\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/sed#@19spacVo2dl9f9/RqZeSUUJV3JiUVF@iV5uam4qV05@Dld5RmKJnl5msZ5eSQaITMvMSQUA\" rel=\"nofollow noreferrer\" title=\"sed – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":120833,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/120833#120833","body":"<h1>R, 8 bytes (2 ways)</h1>\n<p>R has two builtin functions that meet the requirements of this challenge:</p>\n<pre><code>strsplit\n</code></pre>\n<p>takes a vector of strings and a separator, and returns a list of vectors of the separated strings.</p>\n<pre><code>read.csv\n</code></pre>\n<p>takes a file name and a separator, and returns a data frame. Technically this might be 10 bytes because it needs the option <code>header=F</code> so it won't read the first elements as the column names. Currently the TIO link reads from stdin.</p>\n<p><a href=\"https://tio.run/nexus/r#bY0xCsMwEAR7v@K4SgKRD6jPK9w41oEEQhfrNsnzFeE0LtIty87OMHR71gK3O4bSQ0g7NQUHRt5AxQhZ6HiJoWhjH5jYL1csS60aV57IyvGjvaZfnNWcxznvsqXbbm9nSKU5H@7nzbgal3@@8QU\" rel=\"nofollow noreferrer\">Try these online!</a></p>\n"},{"answer_id":120792,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/120792#120792","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 4 bytes</h1>\n\n\n\n<p>In versions up to and including 15.0, this needs <code>⎕ML←3</code> which is default by many. From version 16.0 <code>⊂</code> can just be replaced by <code>⊆</code> for the same effect.</p>\n\n<p>Takes separator as left argument and DSV as right argument.</p>\n\n<pre class=\"lang-apl prettyprint-override\"><code>≠⊂¨⊢\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/apl-dyalog#e9Q31dfnUdsE4/9pQPJR54JHXU2HVjzqWvTfrSg/1yvY3w8obG5oavmoZxtXSD5cwMwAKPAfIqCgrqOukKYA06CgHq2UkVqUqpBZrFOcn5uqU5yYW5CTqqSjlJJYkqiTkpqTmZtZkpqik1SpkJyfm5tYrBSrzgUzyhrTqJycfOsYJaD@GCXr8vyinBQIEyiEpE8BXV9JvkJSqkJ@kUJefglQQ0lGYgnQRQolGakKhaWpxSWZ@XlA/QA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – TIO Nexus\">Try it online!</a></p>\n\n<p><code>≠</code> the inequalities (of the left argument and the right argument)</p>\n\n<p><code>⊂¨</code> partition each</p>\n\n<p><code>⊢</code> right argument</p>\n\n<p>By partition is mean to remove all elements indicated by a corresponding zero in the left argument, and begin a new partition whenever a the corresponding number in the left argument is greater than its predecessor, i.e. on every one if the left argument is Boolean, as is the case here.</p>\n"},{"answer_id":120673,"question_id":71172,"link":"https://codegolf.stackexchange.com/questions/71172/find-the-largest-and-the-smallest-number-in-an-array/120673#120673","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 13 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>(⌊/,⌈/)⎕AV~⍨∊\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/apl-dyalog#@5/2qG2CxqOeLn2dRz0d@pqP@qY6htU96l3xqKPrv1tRfq5XsL8fUIm5oanlo55t/9MUYIIK6tGGOgpGOgrGOgomOgqmOgpmOgrmOgoWsepcKKpMwfJAhZY6CkAdhgZAxehqQPogUkoeqTk5@UpgAzGUIVuoZKqEIY0uoGQINEjJCEQYgwgTJbChAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – TIO Nexus\">Try it online!</a></p>\n\n<p><code>∊</code> enlist (flatten – this makes all the strings into characters in the big list)</p>\n\n<p><code>⎕AV~⍨</code> remove all characters in the <strong>A</strong>tomic <strong>V</strong>ector (the character set – leaves numbers)</p>\n\n<p><code>(</code>…<code>)</code> apply the following tacit function:</p>\n\n<p> <code>⌊/</code> the minimum across</p>\n\n<p> <code>,</code> appended to</p>\n\n<p> <code>⌈/</code> the maximus across</p>\n"},{"answer_id":60870,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/60870#60870","body":"<h1>PHP, 35 <s>37</s> bytes</h1>\n<p>Pretty straight forward:</p>\n<pre><code>array_diff_key($a,array_unique($a))\n</code></pre>\n<hr>\n<p><strong>As a note:</strong> I didn't add the <code>;</code> at the end of the line, as the questions states:</p>\n<blockquote>\n<p>Your answer may be a snippet which assumes the input to be stored in a variable (d, say) and evaluates to the correct result</p>\n</blockquote>\n<p>So this snippet could be used like this and evaluates to the correct result:</p>\n<pre><code>print implode(' ', array_diff_key($a,array_unique($a)));\n</code></pre>\n<hr>\n<p><strong>Another note</strong></p>\n<p>The code above works for all test cases provided in the challenge. In those all non-unique characters are at most duplicates. If a element can occur more than two times, another <code>array_unique()</code> would be necessary, which increases the length to <strong>49 bytes</strong>:</p>\n<pre><code>array_unique(array_diff_key($a,array_unique($a)))\n</code></pre>\n<hr>\n<p><strong>Edits</strong></p>\n<ul>\n<li><em>Saved</em> <strong>2 bytes</strong> by replacing <code>array_diff_assoc</code> with <code>array_diff_key</code>. Thanks to <a href=\"https://codegolf.stackexchange.com/users/59107/j%C3%B6rg-h%C3%BClsermann\">Jörg Hülsermann</a>.</li>\n</ul>\n"},{"answer_id":119591,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/119591#119591","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 4 bytes, language postdates challenge</h1>\n\n<pre><code>œ-QQ\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/jelly#@390sm5g4P///6ONdRQMwMgQjIAMUx0F41gA\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n\n<p>Same algorithm as the accepted answer, just a shorter syntax.</p>\n"},{"answer_id":119456,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/119456#119456","body":"<h1>J, 25 bytes</h1>\n\n<pre><code>3 :'&gt;:y-~*:&gt;.-:&lt;:%:&gt;:8*y'\n</code></pre>\n\n<p>As an explanation, consider <code>f(n) = n(n+1)/2</code>. <code>f(r)</code>, given the row <code>r</code>, returns the leftmost number of the the <code>r</code><sup>th</sup> row of the mirrored triangle. Now, consider <code>g(n) = ceiling[f⁻¹(n)]</code>. <code>g(i)</code>, given the index <code>i</code>, returns the row on which index i is found. Then, <code>f(g(n))</code> returns the leftmost number of the row on which index n is found. So, <code>h(n) = f(g(n)) - (n - f(g(n)-1)) + 1</code> is the answer to the above problem. </p>\n\n<p>Simplifying, we get <code>h(n) = [g(n)]² - n + 1 = ceiling[(-1 + sqrt(1 + 8n))/2]² - n + 1</code>.</p>\n\n<p>From the looks of @Arnauld's formula, it appears that: </p>\n\n<p><code>ceiling[(-1 + sqrt(1 + 8n))/2] = floor[1/2 + sqrt(2n)]</code>.</p>\n"},{"answer_id":119407,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/119407#119407","body":"<h1>APL (Dyalog), 27 bytes</h1>\n<p>I've got two solutions at the same bytecount.</p>\n<p>A train:</p>\n<pre><code>⊢⊃⊃∘(,/{⌽(+/⍳⍵-1)+⍳⍵}¨∘⍳)\n</code></pre>\n<p><a href=\"https://tio.run/nexus/apl-dyalog#@@/4qG3Co65Fj7qaQahjhoaOfvWjnr0a2vqPejc/6t2qa6ipDWHVHloBlAeyNf//dwSyezcbGgAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – TIO Nexus\">Try it online!</a></p>\n<p>And a dfn:</p>\n<pre><code>{⍵⊃⊃((⍳⍵),.{1+⍵-⍳⍺}+\\⍳⍵)}\n</code></pre>\n<p><a href=\"https://tio.run/nexus/apl-dyalog#@@/4qG1C9aPerY@6moFIQ@NR72YgT1NHr9pQG8jQBfN31WrHQCVq//93PLQCyDE0AAA\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – TIO Nexus\">Try it online!</a></p>\n<p>Both of these solutions first create the flipped triangle and then extract element at the index stated by the argument (<code>1</code>-based).</p>\n"},{"answer_id":118932,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/118932#118932","body":"<h1><a href=\"https://github.com/L3viathan/OIL\" rel=\"nofollow noreferrer\">OIL</a>, 46 bytes</h1>\n\n<p>This program writes an infinite unstoppable stream of fibonacci numbers. It is mostly copied from the standard library but fit to the requirements and golfed. </p>\n\n<pre><code>14\nadd\n17\n17\n14\nswap\n17\n17\n4\n17\n\n\n\n\n11\n6\n0\n0\n1\n</code></pre>\n"},{"answer_id":118898,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/118898#118898","body":"<h1><a href=\"https://bigzaphod.github.io/Taxi/\" rel=\"nofollow noreferrer\">Taxi</a>, 864 bytes</h1>\n<pre><code>1 is waiting at Starchild Numerology.1 is waiting at Starchild Numerology.Go to Starchild Numerology:W 1 L 2 R 1 L 1 L 2 L.Pickup a passenger going to Sunny Skies Park.Pickup a passenger going to Cyclone.Go to Sunny Skies Park:W 1 R.[a]Go to Cyclone:N 1 L.Pickup a passenger going to The Babelfishery.Pickup a passenger going to Addition Alley.Go to Fueler Up:N 2 R, 2 R.Go to The Babelfishery:S.Pickup a passenger going to Post Office.Go to Post Office:N 1 L 1 R.Go to Sunny Skies Park:S 1 R 1 L 1 R.Pickup a passenger going to Cyclone.Go to Cyclone:N 1 L.Pickup a passenger going to Addition Alley.Pickup a passenger going to Cyclone.Go to Addition Alley:N 2 R 1 R.Pickup a passenger going to Sunny Skies Park.&quot;,&quot; is waiting at Writer's Depot.Go to Writer's Depot:N 1 L 1 L.Pickup a passenger going to Post Office.Go to Sunny Skies Park:N 2 R.Switch to plan &quot;a&quot;.\n</code></pre>\n<p><a href=\"https://tio.run/nexus/taxi#lZJPT8QgEMW/yqQXLxuS9djbqtFLszaLZg/GA9JpS4pAgGbTT19L/2zcrtZ6AcI85s37hXYLwsGJCS9UAcwD9czyUsgM9vUnWi110ZBVoicNXv9Yio@whQRu4dDvwzkhqeBVbYCBYc6hKtBCoYNDaFMr1QCtBDpIma0WxfcNl1rhNMHsae9@IG/sfaiP6ngfBlns@1Ii3LEPlLlwJdpmUbzLso6PVrCTEicajzXKTvRqOrcu/iYsY2nePKaL7VPtPDznueBTzm83Q5Y@5i8MaCieRethroc1y7/e4vLhAOrPKa/@R7SJZp/0aIVHe@PgAY32o9nl5Zlb8k/2V3z7qQk9Cc/LIDCSKYhYRNr2Cw\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<p>Ungolfed:</p>\n<pre><code>1 is waiting at Starchild Numerology.\n1 is waiting at Starchild Numerology.\nGo to Starchild Numerology: west 1st left 2nd right 1st left 1st left 2nd left.\nPickup a passenger going to Sunny Skies Park.\nPickup a passenger going to Cyclone.\nGo to Sunny Skies Park: west 1st right.\n[a]\nGo to Cyclone: north 1st left.\nPickup a passenger going to The Babelfishery.\nPickup a passenger going to Addition Alley.\nGo to Fueler Up: north 2nd R, 2nd right.\nGo to The Babelfishery: south.\nPickup a passenger going to Post Office.\nGo to Post Office: north 1st left 1st right.\nGo to Sunny Skies Park: south 1st right 1st left 1st right.\nPickup a passenger going to Cyclone.\nGo to Cyclone: north 1st left.\nPickup a passenger going to Addition Alley.\nPickup a passenger going to Cyclone.\nGo to Addition Alley: north 2nd right 1st right.\nPickup a passenger going to Sunny Skies Park.\n&quot;,&quot; is waiting at Writer's Depot.\nGo to Writer's Depot: north 1st left 1st left.\nPickup a passenger going to Post Office.\nGo to Sunny Skies Park: north 2nd right.\nSwitch to plan &quot;a&quot;.\n</code></pre>\n"},{"answer_id":108246,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/108246#108246","body":"<h1>Java 7, 67 bytes</h1>\n\n<pre><code>String y(String y){int i=0;for(;(y+i).length()!=i;i++);return y+i;}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/java-openjdk#xY4xC4MwEIV3f8XVKUEI7Rwc/A2OpcNpU3sQo5izJYi/3QZqV@tS@m64g/fx3tUWvYcCpqXkgVwDQXwOOZFjoPyob90gtAgZSWWNa/gu5CEnTVkm9WB4HBxEU89LP1aWavCMHNejoyu0SG6NPF9QTkksqyAHZ55QCKkTKINn06puZNVHjK0TlQoiRcRUbgHbLq7aR33DTjtjfqZ/978fmOMsLw\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":118360,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118360#118360","body":"<h1>TI-BASIC, 24 bytes</h1>\n<pre><code>:0→A                 //Store 0 to A\n:Prompt X            //Prompt list X\n:While not(prod(ʟX-A //While A is not missing from list X\n:A+1→A               //Increment A\n:End                 //End While loop\n:A                   //Print A\n</code></pre>\n<p>If <code>Prompt X</code> is given a list instead of a single number, it will automatically create a list named <code>X</code> that can be accessed with <code>ʟX</code>.</p>\n"},{"answer_id":118303,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118303#118303","body":"<h1><a href=\"https://www.dyalog.com/\" rel=\"nofollow noreferrer\">APL (Dyalog)</a>, 19 bytes</h1>\n\n\n\n<pre class=\"lang-apl prettyprint-override\"><code>(0⍳⍨⊢=⍳∘⍴)∘(⊂∘⍋⌷⊢)∪\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/apl-dyalog#JUy7DsIwDNz5CkssZUEOaWkYGDIy8U8MCBWCWJCYOyHEBhL/4x8Jd@7g8z18ni/tet/t7XjTmoGNWvlYedowbslODyvfBVZjw8HV2S4/pPBetWYJsyyKWTlGCaKYKBHKyhsYkFF10oITE5yJqfTSe48OP6j32ZlawW/W/Ay7g94w8T53iyyxkf4\" rel=\"nofollow noreferrer\" title=\"APL (Dyalog Unicode) – TIO Nexus\">Try it online!</a></p>\n\n<p>I am probably missing out something important here. Golfing in progress...</p>\n"},{"answer_id":118268,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118268#118268","body":"<h1>Java 7, <s>69</s> 66 bytes</h1>\n<pre><code>int c(java.util.List a){int r=0;for(;a.contains(r);r++);return r;}\n</code></pre>\n<p>-3 bytes thanks to <em>@LeakyNun</em></p>\n<p><strong>Explanation:</strong></p>\n<p>Supports not only 0-20, but 0-2147483647 instead (which actually saves bytes).</p>\n<pre><code>int c(java.util.List a){    // Method with List parameter and integer return-type\n  int r=0;                  //  Return integer\n  for(;a.contains(r);r++);  //  Continue raising `r` as long as the list contains the current `r`\n  return r;                 //  Return result-integer\n}                           // End of method\n</code></pre>\n<p><strong>Test code:</strong></p>\n<p><a href=\"https://tio.run/nexus/java-openjdk#lZFNS8QwEIbv/RVzTNgS2v3QSvDgXU97FA8xVom0SUmmK8vS317zsV0RRA2EMEneed6ZieoHYxHexUGwEVXH7qwVx3vlkBfqxzfHC9kJ5@DhVAA4FKgkzEojSPIlDQQQ9BTu7W3FX40lXDBpNAqlHbGU29XKby2OVoPl0wwwjM@dh52ZB6NeoPdqsker9NvjUwB6T4D90WHbMzMiG/wTdppIkqpjwgVvUlNK@X/FVY54XUKWflNC7VPi7uPN77m6/YDLH5AcH49f/4n/nrIrYRvrSkETCZejL/nar8xeEyFrQtUyntRCbhf1UupVHHAdQLsIu0mwpacUb6OwSYbN2WgqpvkT\" rel=\"nofollow noreferrer\">Try it here.</a></p>\n<pre><code>import java.util.ArrayList;\nimport java.util.Arrays;\nclass M{\n  static int c(java.util.List a){int r=0;for(;a.contains(r);r++);return r;}\n\n  public static void main(String[] a){\n    System.out.println(c(Arrays.asList(1)));\n    System.out.println(c(Arrays.asList(0)));\n    System.out.println(c(Arrays.asList(2, 0)));\n    System.out.println(c(Arrays.asList(3, 1, 0, 1, 3, 3)));\n    System.out.println(c(new ArrayList()));\n    System.out.println(c(Arrays.asList(1, 2, 3)));\n    System.out.println(c(Arrays.asList(5, 4, 1, 5, 4, 8, 2, 1, 5, 4, 0, 7, 7)));\n    System.out.println(c(Arrays.asList(3, 2, 1, 0)));\n    System.out.println(c(Arrays.asList(0, 0, 1, 1, 2, 2, 3)));\n    System.out.println(c(Arrays.asList(1, 0, 7, 6, 3, 11, 15, 1, 9, 2, 3, 1, 5, 2, 3, 4, 6, 8, 1, 18)));\n  }\n}\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>0\n1\n1\n2\n0\n0\n3\n4\n4\n10\n</code></pre>\n"},{"answer_id":118291,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118291#118291","body":"<h1><a href=\"http://openjdk.java.net/\" rel=\"nofollow noreferrer\">Java</a>, 91 bytes</h1>\n\n\n\n<pre class=\"lang-java prettyprint-override\"><code>int f(int[]a){int i=0,j=1,k;for(;j&gt;0;i++)for(k=j=0;k&lt;a.length;j=a[k++]==i?1:j);return i-1;}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/java-openjdk#nVDLboQgFF13voKlRGpgHq1TSvsFXc3SuKBTdVAHDWCbxvjtFiF2jwm53BM4j3v74bMVV3Btudbggws5zkIaUEa2ZjmH44IEw6hmBDW07FRE6zdMRRzDBTSsZpg2rzxpC1mZG60Zz5o4zhkT7@SlhlQVZlASiEdCp7n3dtpwY6/vTnyBuzWNLkYJWWU54KrScNw9XH61Ke5JN5ikt0@mlZEsflzCCCalAy7iSCYIaQgBhxL2CARzDggQS3PV9odQfuh/a7PfYHNC4Ogy@iZ1Kv/Qxn@2Z8PsXiV4a3hdmR9ny0Rkjf3kFk8WsZMTPHvBdT7fH93H1JumzmzaTfMf\" rel=\"nofollow noreferrer\" title=\"Java (OpenJDK 8) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":118272,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118272#118272","body":"<h1>R, 27 bytes</h1>\n\n<p>Reads from stdin; computes the first element in the set difference between <code>[0..20]</code> and <code>x</code>.</p>\n\n<pre><code>x=scan()\nsetdiff(0:20,x)[1]\n</code></pre>\n\n<h1>R, 36 bytes</h1>\n\n<p><code>which.min(y%in%x)</code> returns the index of the first element of <code>y</code> that is not in <code>x</code>.</p>\n\n<pre><code>x=scan()\ny=0:20\ny[which.min(y%in%x)]\n</code></pre>\n"},{"answer_id":118177,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118177#118177","body":"<h1>PHP, 38 Bytes</h1>\n\n<pre><code>&lt;?=min(array_diff(range(0,20),$_GET));\n</code></pre>\n\n<h2>PHP, 39 Bytes</h2>\n\n<pre><code>&lt;?for(;in_array($i++,$_GET););echo$i-1;\n</code></pre>\n"},{"answer_id":118176,"question_id":38325,"link":"https://codegolf.stackexchange.com/questions/38325/minimum-excluded-number/118176#118176","body":"<h1>Scala, 18 bytes</h1>\n\n<pre><code>0 to 20 diff l min\n</code></pre>\n\n<p><code>l</code> is a list of Int.</p>\n\n<pre><code>scala&gt; val l = List(0,1,5)\nl: List[Int] = List(0, 1, 5)\n\nscala&gt; 0 to 20 diff l min\nres0: Int = 2\n</code></pre>\n"},{"answer_id":117980,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117980#117980","body":"<h1>C#, <s>46</s> 44 bytes</h1>\n\n<pre><code>n=&gt;Math.Pow((int)(Math.Sqrt(2*n)+.5),2)-n+1;\n</code></pre>\n\n<p>I port <a href=\"https://codegolf.stackexchange.com/a/117883/15214\">@Arnauld's solution</a>. Thank you!</p>\n\n<ul>\n<li>Pow of 0.5 is Sqrt. 2 bytes saved!</li>\n</ul>\n"},{"answer_id":117964,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117964#117964","body":"<h1>PHP, 35 Bytes</h1>\n\n<pre><code>&lt;?=((2*$argn)**.5+.5^0)**2-$argn+1;\n</code></pre>\n\n<p>Same formula that is used in <a href=\"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117883#117883\">Arnaulds Approach</a></p>\n"},{"answer_id":117963,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117963#117963","body":"<h2>Batch, 70 bytes</h2>\n\n<pre><code>@set/ai=%2+1,j=%3+i\n@if %j% lss %1 %0 %1 %i% %j%\n@cmd/cset/ai*i+1-%1\n</code></pre>\n\n<p>Uses a loop to find the index of the triangular number at least as large as <code>n</code>.</p>\n"},{"answer_id":117881,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117881#117881","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>8</s> 7 bytes</h1>\n\n<pre><code>RṁR€UFi\n</code></pre>\n\n<p><em>Thanks to @ErikTheOutgolfer for saving 1 byte!</em></p>\n\n<p><a href=\"https://tio.run/nexus/jelly#@x/0cGdj0KOmNaFumf@P7jncDmS6//9vqKNgpKNgrKNgoqNgCMSWlgYgAihsaGBgACKNTcGkGQA\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>RṁR€UFi  Main link. Argument: n\n\nR        Range; yield [1, ..., n].\n  R€     Range each; yield [[1], [1, 2], [1, 2, 3], ..., [1, ..., n]].\n ṁ       Mold the left argument like the right one, yielding\n         [[1], [2, 3], [4, 5, 6], ...]. The elements of the left argument are \n         repeated cyclically to fill all n(n+1)/2 positions in the right argument.\n    U    Upend; reverse each flat array, yielding [[1], [3, 2], [6, 5, 4], ...].\n     F   Flatten, yielding [1, 3, 2, 6, 5, 4, ...].\n      i  Index; find the first index of n in the result.\n</code></pre>\n"},{"answer_id":117932,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117932#117932","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 9 bytes</h1>\n\n<pre><code>·LD£í˜¹&lt;è\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#ARUA6v//wrdMRMKjw63LnMK5PMOo//80MDA\" rel=\"nofollow noreferrer\" title=\"05AB1E – TIO Nexus\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>·L          # push range [1 ... 2n]\n  D         # duplicate\n   £        # split the first list into pieces with size dependent on the second list\n    í       # reverse each sublist\n     ˜      # flatten\n      ¹&lt;è   # get the element at index &lt;input&gt;-1\n</code></pre>\n\n<p>Array flattening unfortunately doesn't handle larger lists very well.<br>\nAt the cost of 1 byte we could do <a href=\"https://tio.run/nexus/05ab1e#@39oe4lRlfbh9XmHdura/f9vaWkIAA\" rel=\"nofollow noreferrer\">·t2z+ïn¹-></a> using the mathematical formula <code>floor(sqrt(2*n)+1/2)^2 - n + 1</code> found on <a href=\"https://oeis.org/A038722\" rel=\"nofollow noreferrer\">OEIS</a>.</p>\n"},{"answer_id":117926,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117926#117926","body":"<h2><a href=\"https://github.com/m-ender/alice\" rel=\"noreferrer\">Alice</a>, 27 bytes</h2>\n\n<p><em>Thanks to Sp3000 for the <code>.C</code> idea.</em></p>\n\n<pre><code>/o\n\\i@/.2:e2,tE*Y~Z.H2*~.C+\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/alice#@6@fzxWT6aCvZ2SVaqRT4qoVWRel52GkVafnrP3/v6GRsYkpAA\" rel=\"noreferrer\" title=\"Alice – TIO Nexus\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>I think there may be a shorter  way to compute this using triangular numbers, but I thought this is an interesting abuse of a built-in, so here's a different solution.</p>\n\n<p>The basic idea is to make use of Alice's \"pack\" and \"unpack\" built-ins. \"Pack\", or <code>Z</code>, takes two integers maps them bijectively to a single integer. \"Unpack\", or <code>Y</code>, inverts this bijection and turns one integer into two. Normally, this can be used to store a list or tree of integers in a single (large) integer and recover the individual values later. However, in this case we can use the functions in the opposite order, to let the nature of the bijection work for us.</p>\n\n<p>Unpacking one integer into two integers basically consists of three steps:</p>\n\n<ol>\n<li>Map <strong>ℤ → ℕ</strong> (including zero) with a simple \"folding\". That is, map negative integers to odd naturals, and non-negative integers to even naturals.</li>\n<li><p>Map <strong>ℕ → ℕ<sup>2</sup></strong>, using the <a href=\"https://en.wikipedia.org/wiki/Pairing_function#Cantor_pairing_function\" rel=\"noreferrer\">Cantor pairing function</a>. That is, the naturals are written along the diagonals of an infinite grid and we return the indices:</p>\n\n<pre><code>   ...\n3  9 ...\n2  5 8 ...\n1  2 4 7 ...\n0  0 1 3 6 ...\n\n   0 1 2 3\n</code></pre>\n\n<p>E.g. <code>8</code> would be mapped to the pair <code>(1, 2)</code>.</p></li>\n<li><p>Map <strong>ℕ<sup>2</sup> → ℤ<sup>2</sup></strong>, using the inverse of step 1 on each integer individually. That is, odd naturals get mapped to negative integers, and even naturals get mapped to non-negative integers.</p></li>\n</ol>\n\n<p>To pack two integers into one, we simply invert each of those steps.</p>\n\n<p>Now, we can see that the structure of the Cantor pairing function conveniently encodes the triangle we need (although the values are off-by-one). To reverse those diagonals, all we need to do is swap the <strong>x</strong> and <strong>y</strong> coordinates into the grid.</p>\n\n<p>Unfortunately, since all three of the above steps are combined into a single built-in <code>Y</code> (or <code>Z</code>), we need to undo the <strong>ℤ → ℕ</strong> or <strong>ℕ → ℤ</strong> mappings ourselves. However, while doing so we can save a couple of bytes by directly using <strong>ℕ<sup>+</sup> → ℤ</strong> or <strong>ℤ → ℕ<sup>+</sup></strong> mappings, to take care of the off-by-one error in the table. So here is the entire algorithm:</p>\n\n<ol>\n<li>Map <strong>ℕ<sup>+</sup> → ℤ</strong> using <strong>(n/2) * (-1)<sup>n-1</sup></strong>. This mapping is chosen such that it cancels the implicit <strong>ℤ → ℕ</strong> mapping during unpacking, except that it shifts the value down by 1.</li>\n<li>Unpack the result into two integers.</li>\n<li>Swap them.</li>\n<li>Pack the swapped values into a single integer again.</li>\n<li>Map <strong>ℤ → ℕ<sup>+</sup></strong> using <strong>|2n| + (n≥0)</strong>. Again, this mapping is chosen such that it cancels the implicit <strong>ℕ → ℤ</strong> mapping during packing, except that it shifts the value up by 1.</li>\n</ol>\n\n<p>With that out of the way, we can look at the program:</p>\n\n<pre><code>/o\n\\i@/...\n</code></pre>\n\n<p>This is simply a framework for linear arithmetic programs with integer input and output.</p>\n\n<pre><code>.    Duplicate the input.\n2:   Halve it.\ne    Push -1.\n2,   Pull up the other copy of the input.\nt    Decrement.\nE    Raise -1 to this power.\n*    Multiply. We've now computed (n/2) * (-1)^(n-1).\nY    Unpack.\n~    Swap.\nZ    Pack.\n.H   Duplicate the result and take its absolute value.\n2*   Double.\n~    Swap with other copy.\n.C   Compute k-choose-k. That's 1 for k ≥ 0 and 0 for k &lt; 0.\n+    Add. We've now computed |2n| + (n≥0).\n</code></pre>\n"},{"answer_id":117892,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117892#117892","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 30 bytes</h1>\n\n<pre><code>U1V[YLO&gt;X›iYLOX-UY&lt;LO&gt;X+,q}Y&gt;V\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@x9qGBYd6eNvF/GoYVcmkBGhGxppA@Jr6xTWRtqF/f8PAA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":117883,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117883#117883","body":"<h2>JavaScript (ES7), 26 bytes</h2>\n<pre class=\"lang-js prettyprint-override\"><code>n=&gt;((2*n)**.5+.5|0)**2-n+1\n</code></pre>\n<p>An implementation of the following formula <a href=\"https://oeis.org/A038722\" rel=\"noreferrer\">from OEIS</a>:</p>\n<p><a href=\"https://i.stack.imgur.com/FIbAc.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/FIbAc.png\" alt=\"formula\" /></a></p>\n<h3>Demo</h3>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let f =\n\nn=&gt;((2*n)**.5+.5|0)**2-n+1\n\nfor(n = 1; n &lt;= 50; n++) {\n  console.log(n, '-&gt;', f(n))\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":117886,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117886#117886","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"nofollow noreferrer\">Octave</a>, <s>71</s> 68 bytes</h1>\n\n<p><em>3 bytes saved thanks to <a href=\"https://codegolf.stackexchange.com/users/31957/conor-obrien\">Conor O'Brien</a>.</em></p>\n\n\n\n<pre class=\"lang-matlab prettyprint-override\"><code>x=triu(ones(n=input('')));x(~~x)=1:nnz(x);disp(nonzeros(flip(x))(n))\n</code></pre>\n\n<p>This doesn't work for large inputs due to memory limitations.</p>\n\n<p><a href=\"https://tio.run/nexus/octave#Dcg7CsAgEAXA4/hel5RGvE0MLIRV/MBi4dVNppxtsVcZyJoaNIqW0eEcyWBYyxjPS3XCGG5pBZp1ppobnlfKv4SSe3t/fA\" rel=\"nofollow noreferrer\" title=\"Octave – TIO Nexus\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>Consider input <code>n = 4</code>. The code first builds the matrix</p>\n\n<pre class=\"lang-matlab prettyprint-override\"><code> 1     1     1     1\n 0     1     1     1\n 0     0     1     1\n 0     0     0     1\n</code></pre>\n\n<p>Then it replaces nonzero entries in column-major order (down, then across) by <code>1</code>, <code>2</code>, <code>3</code> ... :</p>\n\n<pre class=\"lang-matlab prettyprint-override\"><code> 1     2     4     7\n 0     3     5     8\n 0     0     6     9\n 0     0     0    10\n</code></pre>\n\n<p>Then it flips the matrix vertically:</p>\n\n<pre class=\"lang-matlab prettyprint-override\"><code> 0     0     0    10\n 0     0     6     9\n 0     3     5     8\n 1     2     4     7\n</code></pre>\n\n<p>Finally, it takes the <code>n</code>-th nonzero value in column-major order, which in this case is <code>6</code>.</p>\n"},{"answer_id":117887,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117887#117887","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"nofollow noreferrer\">C (gcc)</a>, 48 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>k,j,l;f(n){for(k=j=0;k&lt;n;)l=k,k+=++j;n=1+k-n+l;}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/c-gcc#LY3RCoMwDEXf/YogCC2N0KgbSOx@ZPNhDxNqXTecb@K3u9TtQs4NSbjZA4448aCiXofXrIIbneXQRdaTCxiMM2bk6MiEMpqJt/1591HpNQORjwssj89yJerBwQqEUCHUCA0CSbWtTZAxWWsT69PBs7CqmxNsfCSl3ynNS4xlsQ6IxI3Rxz7pPcvFoPLCQ3mBwt9ijr/3vkcY1L/VmrNt/wI\" rel=\"nofollow noreferrer\" title=\"C (gcc) – TIO Nexus\">Try it online!</a></p>\n\n<p>Probably suboptimal, but I'm pretty happy with this one. Uses the fact that</p>\n\n<p>NTF<sub><strong>N</strong></sub> = T<sub><strong>N</strong></sub> + <a href=\"http://oeis.org/A057944\" rel=\"nofollow noreferrer\">A057944</a>(<strong>N</strong>) - <strong>N</strong> + 1</p>\n\n<p>(If I wrote the formula down correctly, that is.)</p>\n"},{"answer_id":117884,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117884#117884","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 8 bytes</h1>\n\n<pre><code>Ḥ½+.Ḟ²‘_\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/jelly#ARkA5v//4bikwr0rLuG4nsKy4oCYX////zEyMzQ1\" rel=\"noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n\n<p>Port of my MATL answer.</p>\n"},{"answer_id":117882,"question_id":117879,"link":"https://codegolf.stackexchange.com/questions/117879/number-triangle-flip/117882#117882","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, <s>15</s> 11 bytes</h1>\n\n<pre><code>EX^.5+kUG-Q\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/matl#@@8aEadnqp0d6q4b@P@/oZGxiSkA\" rel=\"nofollow noreferrer\" title=\"MATL – TIO Nexus\">Try it online!</a></p>\n\n<p>This uses the formula</p>\n\n<pre><code>a(n) = floor(sqrt(2*n)+1/2)^2 - n + 1.\n</code></pre>\n"},{"answer_id":117311,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/117311#117311","body":"<h1>Axiom, 113 bytes</h1>\n\n<pre><code>f(n:NNI):NNI==(n=0=&gt;0;n:=n-1;x:=sqrt(5);floor(numeric(((x+1)/(2*x))*((1+x)/2)^n+((x-1)/(2*x))*((1-x)/2)^n)))::INT\n</code></pre>\n\n<p>code for test and results</p>\n\n<pre><code>(80) -&gt; [f(i)  for i in 0..20]\n   (80)\n   [0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765]\n                                            Type: List NonNegativeInteger\n(81) -&gt; f 100\n   (81)  354224848179261915076\n                                                    Type: PositiveInteger\n(82) -&gt; f 200\n   (82)  280571172992510140037336354957747795525632\n                                                    Type: PositiveInteger\n(83) -&gt; f 400\n   (83)\n  1760236806450139664680709294813170892283658770059881093310828506440687624218_\n   31925760\n                                                    Type: PositiveInteger\n(84) -&gt; f 800\n   (84)\n  6928308186422471713609360660466569632290421684876894264783997577258487494487_\n   420363654234099779749410573113727333378633545181944038619446626409501657425_\n   3135847342735360\n                                                    Type: PositiveInteger\n(85) -&gt; f 1500\n   (85)\n  1355112566856310195162377575526951323656561770431639555079987987810736653460_\n   922122221302671882558120755439823360357867711740787668744312284056217232330_\n   713983569575833249689158528416736647370129969548463847884661978641646883591_\n   466734576231634867107272686298047871451723693301109753896341229444935835304_\n   2229054930944\n                                                    Type: PositiveInteger\n(86) -&gt; f 2000\n   (86)\n  4224696333392304878698067179976673472756391964001565086095500593531167791551_\n   743662247281607190958887487440686606420026093467732621145548367502217030083_\n   858092272596709322168369132666938424515347258074945014044152199085287931830_\n   556530989999311940427567701708311778838430925973655760228465275886647451746_\n   556255968313014088560151159533857580044154666168801306507492995800168547537_\n   206536250047308876795741658264221262020608\n</code></pre>\n"},{"answer_id":117219,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/117219#117219","body":"<h1>JavaScript (ES6)</h1>\n<p>A couple of different ES6 implementations. The first two return the <code>n</code>th Fibonacci number and the third returns an array of the first <code>n</code> Fibonacci numbers. Non-competing, obviously.</p>\n<h2>30 bytes</h2>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=\n\n(n,x=1,y=0)=&gt;!n?y:f(n-1,x+y,x)\n\nconsole.log(f(10))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<h2>46 bytes</h2>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=\n\nn=&gt;(x=1,y=0,eval(\"while(n--)[x,y]=[x+y,x]\"),y)\n\nconsole.log(f(10))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<h2>46 bytes</h2>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=\n\nn=&gt;(a=[],(f=x=&gt;a[x]=x&lt;2?x:f(--x)+f(--x))(n),a)\n\nconsole.log(f(10))</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":117121,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/117121#117121","body":"<h1>Groovy, 57 bytes</h1>\n\n<pre><code>d=new Date().getYear()+1899;(d​..d-120).each{println it​}\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>d=new Date().getYear()                               //returns how many years have passed since 1900\n                      +1899;                         //adding 1900 will give us the current year, but we want the program to start one year before, so we do +1900-1=1899\n                            (d..d-120)               //a range from the current year -1 to 120 years before that\n                                      .each{print it}// for each element in the range, print it.\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre><code>2016\n2015\n2014\n...\n1898\n1897\n1896\n</code></pre>\n\n<p>Because of the 1899 trick, it starts with 2016 instead of 2017</p>\n\n<p>Tested on the <a href=\"https://groovyconsole.appspot.com\" rel=\"nofollow noreferrer\">Groovy Web Console</a></p>\n"},{"answer_id":117125,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/117125#117125","body":"<h2>VBA 49 bytes</h2>\n\n<pre><code>a=year(now):for i=a to a-120 step-1:msgbox i:next\n</code></pre>\n"},{"answer_id":115032,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/115032#115032","body":"<h1>JavaScript (ES6), <s>66</s> <s>54</s> 51 bytes</h1>\n<p>My first foray into code golf so I'm open to suggestions for improvements.</p>\n<p>The following will output an array of the required years.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=\n\n_=&gt;[...Array(121)].map((x,y)=&gt;Date().split` `[3]-y)\n\nconsole.log(f());</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<hr />\n<h2>History</h2>\n<h3>54 bytes</h3>\n<pre><code>_=&gt;Array(121).fill(Date().split` `[3]).map((x,y)=&gt;x-y)\n</code></pre>\n<h3>66 bytes</h3>\n<pre><code>(y=[Date().split` `[3]],x=121)=&gt;{while(x--)y[x]=(y[0]-x);return y}\n</code></pre>\n"},{"answer_id":116767,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116767#116767","body":"<h1>Pyth, 7 bytes</h1>\n<pre><code>!tsjQ_2\n</code></pre>\n<p><a href=\"http://pyth.herokuapp.com/?code=%21tsjQ_2&amp;input=-7&amp;test_suite=1&amp;test_suite_input=-2%0A-1%0A0%0A1%0A2%0A3%0A4%0A5%0A6&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n<p>Explanation:</p>\n<pre><code>     _2   # -2\n   jQ     # Cast input to that base\n          # Iff input is a power of -2, then jQ_2 returns something of the form [1]+[0]*n\n          # where n is the power of -2\n          # This is also the only situation in which the sum of that is 1\n!ts       # so we check for that: is the (s)um equal to 1 (or, equivalently, &quot;!(sum - 1)&quot; )\n</code></pre>\n"},{"answer_id":115523,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115523#115523","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"nofollow noreferrer\">Python 2</a>, <s>98</s> 50 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda x:x*(x&amp;-x==abs(x))*((x&lt;0)^x.bit_length()&amp;1)\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/python2#BcFLDkAwEADQq8yKGUp8dqI3aUgbyiSUVBdz@3rPa5Mve7vNgkxSoRSNaG3dh0JUIcrc0SKt47ReezjSiVT0lP0TgYEDSLTh2LEZBzUOdU8TvJFDAlalSaXyyJR/\" rel=\"nofollow noreferrer\" title=\"Python 2 – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":116709,"question_id":50240,"link":"https://codegolf.stackexchange.com/questions/50240/xor-multiplication/116709#116709","body":"<h1>gnuplot, 29 bytes</h1>\n<pre><code>m(a,b)=a&lt;1?0:a%2*b^m(a/2,b*2)   \n</code></pre>\n<p>just like in Dart (see above)</p>\n"},{"answer_id":116657,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/116657#116657","body":"<h2><a href=\"https://github.com/m-ender/alice\" rel=\"nofollow noreferrer\">Alice</a>, 15 bytes, non-competing</h2>\n\n<pre><code>/o.zz./\n@inssR\\\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/alice#@6@fr1dVpafP5ZCZV1wcFPP/f0lRaioA\" rel=\"nofollow noreferrer\" title=\"Alice – TIO Nexus\">Try it online!</a></p>\n\n<p>Prints nothing (or rather an empty string) as the falsy value and <code>Jabberwocky</code> as the truthy value.</p>\n\n<h3>Explanation</h3>\n\n<pre><code>/.../\n@...\\\n</code></pre>\n\n<p>This is a template for linear string-processing programs that operate entirely in Ordinal mode. However, the code in between is executed in a zig-zag pattern first from left to right and then right to left. Unfolding this part, the actual program we get looks like this:</p>\n\n<pre><code>i.szR.szno\n</code></pre>\n\n<p>And here is what that does:</p>\n\n<pre><code>i   Read all input as a string.\n.s  Duplicate and sort it.\nz   \"Drop to substring\". If the original contains the sorted version (which means\n    they're equal) this results in the empty string, otherwise we get the original back.\nR   Reverse the string.\n.sz Do the same thing again.\n    If either the original or the reversed original was sorted, we end up\n    with an empty string (falsy), otherwise we get the reverse of the original\n    (truthy, because it's non-empty).\nn   Logical NOT. Turns non-empty strings into empty (falsy) strings and\n    empty strings into \"Jabberwocky\".\no   Print the result.\n</code></pre>\n"},{"answer_id":112545,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112545#112545","body":"<h1>8086 machine code, <s>68</s> <s>61</s> <s>48</s> <s>46</s> <s>45</s> 39 bytes</h1>\n<pre><code>00000000  b2 31 be 82 00 ac 9f 88  c3 ac 3c 0d 74 14 38 c3  |.1........&lt;.t.8.|\n00000010  74 f5 e3 03 b1 00 9f 77  05 9e 76 ea eb 03 9e 77  |t......w..v....w|\n00000020  e5 4a b4 02 cd 21 c3                              |.J...!.|\n00000027\n</code></pre>\n<p>Assembled from:</p>\n<pre><code>org 0x100\nuse16\n    mov dl, 0x31\n    mov si, 0x82\n    lodsb\na:  lahf\nb:  mov bl, al\n    lodsb\n    cmp al, 0x0d\n    je y\n    cmp bl, al\n    je b\n    jcxz @f\n    mov cl, 0\n    lahf\n@@: ja @f\n    sahf\n    jbe a\n    jmp n\n@@: sahf\n    ja a\nn:  dec dx\ny:  mov ah, 0x02\n    int '!'\n    ret\n</code></pre>\n"},{"answer_id":116523,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116523#116523","body":"<p><strong>Axiom, 50 bytes</strong></p>\n\n<pre><code>g(n:INT):INT==(n=0 or n=1=&gt;n;n rem 2=0=&gt;g(n/-2);0)\n</code></pre>\n\n<p>It would return 0 if n is not power of (-2), else return 1; exercises</p>\n\n<pre><code>(70) -&gt; n:=-10000;repeat(if g(n)=1 then output n; n&gt;10000=&gt;break;n:=n+1)\n   - 8192\n   - 2048\n   - 512\n   - 128\n   - 32\n   - 8\n   - 2\n   1\n   4\n   16\n   64\n   256\n   1024\n   4096\n</code></pre>\n"},{"answer_id":116458,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116458#116458","body":"<h1><a href=\"https://clojure.org/\" rel=\"nofollow noreferrer\">Clojure</a>, 57 bytes</h1>\n\n\n\n<pre class=\"lang-clj prettyprint-override\"><code>(defn i[n](if(= n 1)true(if(=(int n)0)false(i(/ n -2)))))\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/clojure#HYlBCoAgEEWv8pczC8laBp1EXAhpCTKFGR3fpj68xX@v0xqTIDvxlBMtEIzc6h3/R1kahC2nUC5VNGg3E3/rdFbNRUDpqHABVINsEWa0FgpjfvaoOSOwV7i/\" rel=\"nofollow noreferrer\" title=\"Clojure – TIO Nexus\">Try it online!</a></p>\n\n<p>Full function, with annotations:</p>\n\n<pre class=\"lang-clj prettyprint-override\"><code>;; Define function `is-pow?` with 1 argument, `n`\n(defn is-pow? [n]\n  ;; If n = 1, that means it's a power of -2,\n  ;; so we return true\n  (if (= n 1) true\n    ;; When we recursively call the function,\n    ;; -1 &gt; n &gt; 1. `int` rounds up when the number\n    ;; is negative (`(int -1/2)` = 0), and rounds down\n    ;; when the number is positive. It also catches\n    ;; the edgecase of 0.\n    (if (= (int n) 0) false\n      ;; If n made it to here, n &lt; -1 or n &gt; 1 - we have\n      ;; to call the function recursively.\n      (is-pow? (/ n -2)))))\n</code></pre>\n"},{"answer_id":116455,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116455#116455","body":"<h1><a href=\"http://community.casiocalc.org/topic/2448-casio-basic-tutorial/\" rel=\"nofollow noreferrer\">Casio BASIC</a>, 76 bytes</h1>\n\n<p>Note that 76 bytes is what it says on my calculator.</p>\n\n<pre><code>?→X\n0→O\nWhile Abs(X)≥1\nX÷-2→X\nIf X=1\nThen 1→O\nIfEnd\nWhileEnd\nO\n</code></pre>\n\n<p>This is my first venture into Casio BASIC... I never realised I could write such decent programs on a calculator :D</p>\n"},{"answer_id":116414,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/116414#116414","body":"<h2><a href=\"https://github.com/m-ender/alice\" rel=\"nofollow noreferrer\">Alice</a>, 11 bytes</h2>\n\n<p><em>This was a collaborative golfing effort with Sp3000.</em></p>\n\n<pre><code>1 \\ O\n,+{.3\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/alice#@2@oEKPgz6WjXa1n/P8/AA\" rel=\"nofollow noreferrer\" title=\"Alice – TIO Nexus\">Try it online!</a></p>\n\n<p>This prints the Fibonacci sequence indefinitely, starting from <code>1,1</code>, one integer on a line. Unfortunately, it's horrible in terms of memory, because it leaks one stringified copy of each number in the sequence. The things you do for bytes...</p>\n\n<h3>Explanation</h3>\n\n<pre><code>1   Push 1 to initialise the sequence. There's already an implicit zero underneath.\n\\   Reflect to NE. Switch to Ordinal.\n    Immediately reflect off top boundary, move SE.\n\n    The remainder of the program runs in an infinite loop. At this point of the loop\n    there's the current number F_n of the sequence on top of the stack, and the \n    previous number F_n-1 is below.\n\n                                                            Stack:\n                                                            [... F_n-1 F_n] \n.   Implicitly convert F_n to a string and duplicate it.    [... F_n-1 \"F_n\" \"F_n\"]\n    Reflect off bottom boundary, move NE.\nO   Output F_n with a trailing linefeed.                    [... F_n-1 \"F_n\"]\n    Reflect off top right corner, move back SW.\n.   Make another copy of F_n. (We don't need this one.)     [... F_n-1 \"F_n\" \"F_n\"]\n    Reflect off bottom boundary, move NW.\n\\   Reflect to S. Switch to Cardinal.\n{   Turn 90 degrees left, i.e. east.\n.   Implicitly convert F_n to an integer and duplicate it.  [... F_n-1 \"F_n\" F_n F_n]\n3   Push 3.                                                 [... F_n-1 \"F_n\" F_n F_n 3]\n,   Pull up the third stack element, which is F_n-1.        [... \"F_n\" F_n F_n F_n-1]\n+   Add F_n and F_n-1.                                      [... \"F_n\" F_n F_n+1]  \n{   Turn 90 degrees left, i.e. north.\n\\   Reflect to SE. Switch to Ordinal.\n\n    After this point, the loop repeats.\n</code></pre>\n"},{"answer_id":116031,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116031#116031","body":"<h1><a href=\"https://github.com/beta-decay/Fourier\" rel=\"nofollow noreferrer\">Fourier</a>, 53 bytes</h1>\n\n<pre><code>I~X1~N~G0(0-2*G~GX*X~PG*G&gt;P{1}{0~O~N}G{X}{1~O0~N}N)Oo\n</code></pre>\n\n<p>I'll work on golfing this later, but the outline of this is:</p>\n\n<pre><code>X = User input\nG = N = 1\nLoop until N = 0\n    G = -2 * G\n    P = X*X \n    If G*G &gt; P then\n        N = O = 0\n    End if\n    If G = X then\n        O = 1\n        N = 0\n    End if\nEnd loop\nPrint O\n</code></pre>\n\n<p>Where the output is <code>0</code> for <em>falsey</em> and <code>1</code> for <em>truthy</em>.</p>\n\n<p><a href=\"https://tio.run/nexus/fourier#@@9ZF2FY51fnbqBhoGuk5V7nHqEVURfgruVuF1BtWFttUOdf51frXh1RW21Y528AZPtp@uf//69raAYA\" rel=\"nofollow noreferrer\" title=\"Fourier – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":116116,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116116#116116","body":"<h2><a href=\"https://github.com/m-ender/alice\" rel=\"nofollow noreferrer\">Alice</a>, 12 bytes, non-competing</h2>\n\n<pre><code>/o|\\ntzR2\n@i\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/alice#@6@fXxOTV1IVZMTlkPn/v64FAA\" rel=\"nofollow noreferrer\" title=\"Alice – TIO Nexus\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>Alice has a fairly weird built-in, which was added because I needed something that goes well thematically with the string operation \"discard everything up to this substring\". That operation is \"drop small factors\" and what it does for positive <strong>x</strong> and <strong>y</strong> is that it divides <strong>x</strong> by all of its prime factors less than or equal to <strong>y</strong>. But if <strong>y</strong> is negative, then Alice tries negative prime factors greater than or equal to <strong>y</strong> instead, which means that every time a prime factor is removed, the sign of <strong>x</strong> changes. So if we use <strong>-2</strong> as the second argument, we'll end up with <strong>1</strong> if and only if the input is a power of <strong>-2</strong> (if the input is not a power of two, other factors will remain in the end, and if it has the wrong sign, we'll end up with <strong>-1</strong> instead of <strong>1</strong>).</p>\n\n<p>The rest of the program is just a bit of weird control flow.</p>\n\n<pre><code>/   Reflect southeast. Switch to Ordinal.\ni   Read all input as a string.\n    Reflect off boundary, move northeast.\n|   Reflect northwest.\n    Reflect off boundary, move southwest.\ni   Read all input as a string, but there's no input left, so this pushes \"\".\n    Reflect off boundary, move northwest.\n/   Reflect west. Switch to Cardinal.\n    Wrap around to the end of line 1.\n2R  Push -2. (Really: push 2, negate.)\nz   Drop small factors. When trying to find a second integer argument,\n    this discards the empty string and then implicitly converts the input\n    string to an integer. Turns only valid inputs to 1.\ntn  Decrement, logical NOT. Effectively an \"equals 1?\" check.\n\\   Reflect southwest. Switch to Ordinal.\n    Reflect off boundary, move northwest.\no   Implicitly convert result to a string and print it. \n    Reflect off boundary, move southwest.\n@   Terminate the program.\n</code></pre>\n"},{"answer_id":111753,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111753#111753","body":"<h1>Cheddar, 19 bytes</h1>\n\n<pre><code>a-&gt;b-&gt;a=&gt;@.split(b)\n</code></pre>\n\n<p>nice demonstration of looping abilities. I added new composition and f.op. blocks so that allows for interesting golfing. <code>(=&gt;:@.split)</code> is supposed to work but it doesn't :(</p>\n"},{"answer_id":116058,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116058#116058","body":"<h1>Scheme, 60 bytes</h1>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>(define(f n)(cond((= 1 n)#t)((&lt;(abs n)1)#f)(#t(f(/ n -2)))))\n</code></pre>\n\n<p>Recursive solution.</p>\n"},{"answer_id":116065,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116065#116065","body":"<h1><a href=\"http://julialang.org/\" rel=\"nofollow noreferrer\">Julia 0.5</a>, 20 bytes</h1>\n\n\n\n<pre class=\"lang-julia prettyprint-override\"><code>!n=n∈(-2).^(0:n^2)\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/julia5#@6@YZ5v3qKNDQ9dIUy9Ow8AqL85I839afpFCnkJmnoKuqaGRFRBzcWamKSjmcXFyOhQUZeaVpGkoqZqkxOQp6SjkaXJxpualcAHxfwA\" rel=\"nofollow noreferrer\" title=\"Julia 0.5 – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":116047,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/116047#116047","body":"<h1>Javascript ES6, <s>51</s> 50 chars</h1>\n\n<p>Not very short, but I hope interesting :)</p>\n\n<pre><code>x=&gt;eval(`for(w=q=1;w&lt;=(x&lt;0?-x:x);w*=2,q*=-2)q==x`)\n</code></pre>\n\n<p>Test:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=x=&gt;eval(`for(w=q=1;w&lt;=(x&lt;0?-x:x);w*=2,q*=-2)q==x`)\r\nfor(x=-2049; x&lt;2049; ++x) if(f(x)) console.log(x)</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n\n"},{"answer_id":115949,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115949#115949","body":"<h1>Cjam, 12 bytes</h1>\n<pre><code>li_z2mLi-2#=\n</code></pre>\n<p>Explanation comes later.</p>\n"},{"answer_id":115909,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115909#115909","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"noreferrer\">C (gcc)</a>, 33 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>f(n){return n%2?n==1:n&amp;&amp;f(n/-2);}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/c-gcc#@5@mkadZXZRaUlqUp5CnamSfZ2traJWnpgYU19c10rSu/Z@bmJmnoclVzaWgUFCUmVeSpqGkmhKTp6STpqFroalpjU3cBIe4EQ5xQ@ziBtiFcajGYbgxdmEcTsThI0MzkHgt1/@vefm6yYnJGakA\" rel=\"noreferrer\" title=\"C (gcc) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":115823,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115823#115823","body":"<h1>bc 88 bytes</h1>\n\n<pre><code>bc -l &lt;&lt;&lt; \"n=$1;q=l(sqrt(n*n));p=4*a(1);((n&lt;1)*c(q/l(2)*p/2)+(n&gt;1)*(s(q/l(4)*p)))^2==0\"\n</code></pre>\n\n<p>I have this in a file <code>neg2.sh</code> and it prints <code>1</code> for powers of <code>-2</code> and <code>0</code> otherwise</p>\n\n<p>I know it's really long, but it was fun</p>\n\n<h3>Test</h3>\n\n<pre><code>$ for i in {-129..257}; do echo -n \"$i: \"; ./neg2.sh $i; done | grep ': 1'\n-128: 1\n-32: 1\n-8: 1\n-2: 1\n1: 1\n4: 1\n16: 1\n64: 1\n256: 1\n</code></pre>\n\n<h3>Explanation</h3>\n\n<p>The main body has two halves, both are trying to equal zero for powers of <code>-2</code>. </p>\n\n<pre><code>q=l(sqrt(n*n))               % ln of the absolute value of the input\np=4*a(1)                     % pi: arctan(1) == pi/4\nq/l(2) -&gt; l(sqrt(n*n))/l(2)  % change of base formula -- this gives\n                             % the power to which 2 is raised to equal\n                             % sqrt(n*n). It will be an integer for \n                             % numbers of interest\nn&lt;1                          % 1 if true, 0 if false. for negative\n                             % numbers check for powers of 2\nn&gt;1                          % for positive numbers, check for powers\n                             % of 4\nc(q/l(2)*p/2)                % cos(n*pi/2) == 0 for integer n (2^n)\ns(q/l(4)*p)                  % sin(n*pi) == 0 for integer n (4^n)\n(....)^2==0                  % square the result because numbers are\n                             % not exactly zero and compare to 0\n</code></pre>\n"},{"answer_id":115685,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115685#115685","body":"<h1><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, 27 bytes</h1>\n\n<pre><code>+`(1+)\\1\n$1_\n^(1|-1_)(__)*$\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#@6@doGGorRljyKViGM8Vp2FYo2sYr6kRH6@ppfL/v64hFAAA\" rel=\"nofollow noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n\n<p>Takes input in unary, which is fairly standard for Retina. The first two lines do partial unary to binary conversion based on the first two lines of code from the <a href=\"https://github.com/m-ender/retina/wiki/Tutorial:-Unary-arithmetic#unary-to-binary\" rel=\"nofollow noreferrer\">Tutorial entry</a> (any extraneous <code>1</code>s will cause the match to fail anyway), while the last line checks for a power of four or a negative odd power of two.</p>\n\n<pre><code>+`(1+)\\1\\1\\1\n$1_\n^(-1)?1_*$\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#@6@doGGorRljCIJcKobxXHEauoaa9obxWir//@saQgEA\" rel=\"nofollow noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n\n<p>This time I do partial unary to base four conversion. Powers of four end up as <code>^1_*$</code> while negative odd powers of two end up as <code>^-11_*$</code>.</p>\n\n<pre><code>+`\\b(1111)*$\n$#1$*\n^(-1)?1$\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#@6@dEJOkYQgEmloqXCrKhipaXHEauoaa9oYq///rGkIBAA\" rel=\"nofollow noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n\n<p>This time I just keep dividing by four as much as I can and check for <code>1</code> or <code>-11</code> at the end.</p>\n\n<pre><code>+`\\b(1+)\\1\\1\\1$\n$1\n^(-1)?1$\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#@6@dEJOkYaitGWMIgipcKoZccRq6hpr2hir//@saQgEA\" rel=\"nofollow noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n\n<p>Another way of dividing by four. And still annoyingly 27 bytes...</p>\n"},{"answer_id":115644,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115644#115644","body":"<h1>Haskell, <strike>24</strike> 23 bytes</h1>\n\n<pre><code>f 0=0\nf 1=1\nf n=f(-n/2)\n</code></pre>\n\n<p>Defines a function <code>f</code> which returns <code>1</code> for powers of -2 and <code>0</code> otherwise.</p>\n\n<p>A golfed version of my first submission to the <a href=\"https://codegolf.stackexchange.com/a/115641/67875\">other challenge</a>.</p>\n"},{"answer_id":115701,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115701#115701","body":"<h1>R, 22 bytes</h1>\n\n<p>Takes input from stdin, returns <code>TRUE</code> or <code>FALSE</code> accordingly.</p>\n\n<pre><code>scan()%in%(-2)^(0:1e4)\n</code></pre>\n\n<p>I'm not 100% sure that this is a valid answer, as it only works for integers up to R's size limit, and if the integers were unbounded it wouldn't work. However, the rules state:</p>\n\n<blockquote>\n  <p>The usual integer overflow rules apply: your solution must be able to work for arbitrarily large integers in a hypothetical (or perhaps real) version of your language in which all integers are unbounded by default, but if your program fails in practice due to the implementation not supporting integers that large, that doesn't invalidate the solution.</p>\n</blockquote>\n\n<p>In a hypothetical version of R which <em>does</em> allow unbounded integers, then we could use the following code, for the same byte count:</p>\n\n<pre><code>scan()%in%(-2)^(0:Inf)\n</code></pre>\n\n<p>Of course, in real R, the above code just gives <code>Error in 0:Inf : result would be too long a vector</code>.</p>\n"},{"answer_id":115546,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115546#115546","body":"<h1>Excel, <s>40</s> 36 bytes</h1>\n<p><sup><sup>Saved 4 bytes by CallumDA</sup></sup></p>\n<p>Excel can certainly do it but correcting errors adds 11 bytes</p>\n<pre><code>=IFERROR(-2^IMREAL(IMLOG2(A1)),1)=A1\n</code></pre>\n<p>Input is in cell <code>A1</code>. Output is <code>TRUE</code> or <code>FALSE</code></p>\n<p>If it was allowed to return either <code>FALSE</code> or <code>#NUM!</code> error for false values, it would be only 25 bytes:</p>\n<pre><code>=-2^IMREAL(IMLOG2(A1))=A1\n</code></pre>\n"},{"answer_id":115606,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/115606#115606","body":"<h1>bc, 21</h1>\n<pre><code>for(b=1;b=a+(a=b);)a\n</code></pre>\n<p>The trailing newline is significant.</p>\n<p>Outputs the entire sequence.  <code>bc</code> has arbitrary precision arithmetic, so this continues forever.</p>\n"},{"answer_id":115564,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115564#115564","body":"<h2>JavaScript (ES6), 21 bytes</h2>\n\n<p>A recursive function that returns <code>0</code> or <code>true</code>.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>f=n=&gt;n==1||n&amp;&amp;f(n/-2)\n</code></pre>\n\n<h3>How it works</h3>\n\n<p>This doesn't include any explicit test -- like <code>n</code> being odd or <code>abs(n)</code> being less than one -- to stop the recursion early when the input is <em>not</em> an exact power of -2.</p>\n\n<p>We exit only when <code>n</code> is exactly equal to either <code>1</code> or <code>0</code>.</p>\n\n<p>This does work however because any IEEE-754 float will eventually be rounded to <code>0</code> when divided by 2 (or -2) enough times, because of <a href=\"https://en.wikipedia.org/wiki/Arithmetic_underflow\" rel=\"nofollow noreferrer\">arithmetic underflow</a>.</p>\n\n<h3>Test cases</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=n=&gt;n==1||n&amp;&amp;f(n/-2)\r\n\r\nconsole.log(f(-2));\r\nconsole.log(f(-1));\r\nconsole.log(f(0));\r\nconsole.log(f(1));\r\nconsole.log(f(2));\r\nconsole.log(f(3));\r\nconsole.log(f(4));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":115534,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115534#115534","body":"<h2>Mathematica, 22 bytes</h2>\n\n<pre><code>EvenQ@Log2@Max[#,-2#]&amp;\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/mathics#C07NSU0uiQ5KzEtPjdY1NDDQAeJYnf@uZal5gQ4@@elGDr6JFdHKOrpGyrFq/2MV9PUVAooy80r@AwA\" rel=\"noreferrer\" title=\"Mathics – TIO Nexus\">Try it online!</a> (Using Mathics instead, where this solution also works.)</p>\n\n<p>I tried to find a solution with bitwise operators for a while, and while one definitely exists, I ended up finding something which is probably simpler:</p>\n\n<ul>\n<li><code>Max[#,-2#]</code> multiplies the input by <strong>-2</strong> if it's negative. Multiplying by another factor of <strong>-2</strong> doesn't change whether the value is a power of <strong>-2</strong> or not. But now all odd powers of <strong>-2</strong> have been turned into even powers of <strong>-2</strong>.</li>\n<li>But even powers of <strong>-2</strong> are also even powers of <strong>2</strong>, so we can use a simple <code>Log2@...</code> and check if the result is an integer (to check whether it's a power of <strong>2</strong>). This already saves two bytes over <code>Log[4,...]</code> (another way to look at even powers of <strong>-2</strong>).</li>\n<li>As an added bonus, checking whether a value is an even integer is shorter than just checking whether it's an integer: we can save three more bytes by using <code>EvenQ</code> instead of <code>IntegerQ</code>.</li>\n</ul>\n"},{"answer_id":115567,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115567#115567","body":"<h1>PHP, 41 Bytes</h1>\n\n<pre><code>for(;$argn%-2==0;)$argn/=-2;echo$argn==1;\n</code></pre>\n\n<h1>PHP, 52 Bytes</h1>\n\n<pre><code>echo($l=log(abs($argn),2))==($i=$l^0)&amp;&amp;$argn&gt;0^$i%2;\n</code></pre>\n\n<h1>PHP, 64 Bytes</h1>\n\n<p>Working with a Regex</p>\n\n<pre><code>echo preg_match(\"#^\".($argn&gt;0?1:\"1+0\").\"(00)*$#\",decbin($argn));\n</code></pre>\n"},{"answer_id":115539,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115539#115539","body":"<h1>JavaScript (ES6), <strike>37 28</strike> 24 bytes</h1>\n\n<pre><code>f=x=&gt;!x|x%2?x==1:f(x/-2)\n</code></pre>\n\n<p>Saved 4 bytes thanks to Arnauld.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=x=&gt;!x|x%2?x==1:f(x/-2)\r\n\r\nconsole.log(f(-2));\r\nconsole.log(f(-1));\r\nconsole.log(f(0));\r\nconsole.log(f(1));\r\nconsole.log(f(2));\r\nconsole.log(f(3));\r\nconsole.log(f(4));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":115571,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115571#115571","body":"<h1><a href=\"http://www.swi-prolog.org/pldoc/doc/home/jan/src/plweb/index.html\" rel=\"nofollow noreferrer\">Prolog (SWI)</a>, 44 bytes</h1>\n<pre><code>p(X):-X=1;X\\=0,X mod 2=:=0,Z is X/(-2),p(Z).\n</code></pre>\n<p><a href=\"http://swish.swi-prolog.org/p/naQGHdxk.pl\" rel=\"nofollow noreferrer\">Online interpreter</a></p>\n"},{"answer_id":115568,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115568#115568","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 8 bytes</h1>\n\n<pre><code>Y(IÄÝm¹å\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@x@p4Xm45fDc3EM7Dy/9/9/QDAA\" rel=\"noreferrer\">Try it online!</a>\nor as a <a href=\"https://tio.run/nexus/05ab1e#qymr/B@pUXm45fDc3MrDS/9XKh3eb6VweL@Szn9dCy5dEy5dIy5dQy4DLkMuIy5jLhMuQzMA\" rel=\"noreferrer\">Test suite</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>Y(         # push -2\n  IÄÝ      # push range [0 ... abs(input)]\n     m     # element-wise power\n      ¹å   # check if input is in the resulting list\n</code></pre>\n"},{"answer_id":115566,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115566#115566","body":"<h2>Python 2.7, 40 bytes</h2>\n<pre><code>a=input()\nwhile a%-2==0:a/=-2\nprint a==1\n</code></pre>\n<p>Credits to <a href=\"https://codegolf.stackexchange.com/users/59487/mr-xcoder\">Mr. Xcoder</a> for the original <a href=\"https://codegolf.stackexchange.com/a/115525/67816\">code</a> of length 43 bytes.\nHad to post as a separate answer since I don't have enough reputation to comment.</p>\n"},{"answer_id":115563,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115563#115563","body":"\n<h1><a href=\"https://perl6.org\" rel=\"nofollow noreferrer\">Perl 6</a>, 21 bytes</h1>\n<pre class=\"lang-perl6 prettyprint-override\"><code>{$_==(-2)**(.lsb//0)}\n</code></pre>\n<p><a href=\"https://tio.run/nexus/perl6#VY1LasMwFEXnWsUjmEpKkPyJm7YxbhfSFGM7CgT8KZZTMMYF7aikX0@9FG3EscAdZHTh3fvOOUkBbxueBihv4CYt9wLCsbWiMCTMo8sl4ZlMbNuh3XgoK8iOhZCE8jx@Je2Kp2WeEBsz/LTbr2z67Lx0FFoEMMGsSshTVkMIhkqsiAZTIeMGFla0q@d6Cy02JgzvwHOZ8LqKC0mw43pr/3Zzd/@AIXwErNXH0A/n4VOrL62@tfrR6lerP616TOF4@Nd1iwB1I/MR88xfI@QWDH/oEXPNpSiRM6d7tZgMyJub9Zz@NeN8AQ\" rel=\"nofollow noreferrer\" title=\"Perl 6 – TIO Nexus\">Try it</a></p>\n<h2>Expanded:</h2>\n<pre class=\"lang-perl6 prettyprint-override\"><code>{  # bare block lambda with implicit parameter ｢$_｣\n\n  $_                  # is the input\n  ==                  # equal to\n  (-2)**( .lsb // 0 ) # -2 to the power of the least significant bit of the input\n}\n</code></pre>\n<p>Note that <a href=\"https://docs.perl6.org/routine/lsb\" rel=\"nofollow noreferrer\"><code>0.lsb</code></a> returns <a href=\"https://docs.perl6.org/type/Nil\" rel=\"nofollow noreferrer\"><code>Nil</code></a> which produces a warning when used as a number, so the defined or operator <a href=\"https://docs.perl6.org/routine/$SOLIDUS$SOLIDUS\" rel=\"nofollow noreferrer\"><code>//</code></a> is used.<br />\n(Think of <a href=\"https://docs.perl6.org/routine/$SOLIDUS$SOLIDUS\" rel=\"nofollow noreferrer\"><code>//</code></a> as <a href=\"https://docs.perl6.org/routine/$VERTICAL_LINE$VERTICAL_LINE\" rel=\"nofollow noreferrer\"><code>||</code></a> with a different slant)</p>\n<p>A method call with no invocant where a term is expected is implicitly called on <a href=\"https://docs.perl6.org/syntax/$DOLLAR_SIGN_\" rel=\"nofollow noreferrer\"><code>$_</code></a>. (<a href=\"https://docs.perl6.org/routine/lsb\" rel=\"nofollow noreferrer\"><code>.lsb</code></a>)</p>\n<p><a href=\"https://tio.run/nexus/perl6#VY1dasJAFIXfZxUXCZ0ZJZMfrbaGaReiEmIcQTCJZGIhhBRmR8XW1rxmKbORmIH0wacD95z7fWcp4GPO4gAlJTzF2U4A7yor5JzYPh2PCUvk1nFcWnf7LIfjIRWSUJZEJ1JNWJwlW@JgG7@vdxOHrtxNTaFCAD3MyoU8HwvgYKjECmnQFzIqYWSF62Kol1BhY8LwCUbFijxKJcGu509nz/PFyysG/gZYq6@2aS/tt1Y/Wl21@tXqT6ubVg2mcNj/6@pRgOrO9s1TKeQSDLxtkO2ZS5ohd0jvYdHjkT800yFnj4zLHQ\" rel=\"nofollow noreferrer\" title=\"Perl 6 – TIO Nexus\">Also works with </a><a href=\"https://docs.perl6.org/routine/msb\" rel=\"nofollow noreferrer\"><code>.msb</code></a>.</p>\n"},{"answer_id":115550,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115550#115550","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, <s>35</s> <s>34</s> 32 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda n:n==1or n!=n%2&lt;f(n/-2)\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/python2#FcvRCkAwAAXQZ77ieli2sjSKkvmXiUlxafj@4fXUid5ubh8nB3a01hwBzCxF1XvJUlcq@p@wEsFxmaU2TWFa1aXJGVbeyEX9QA8QVw4ByQJfVCq@\" rel=\"noreferrer\" title=\"Python 2 – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":115555,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115555#115555","body":"<h1>Java 7, 55 bytes</h1>\n<pre><code>boolean c(int n){return n==0?0&gt;1:n%-2==0?c(n/-2):n==1;}\n</code></pre>\n<p><strong>Explanation:</strong></p>\n<pre><code>boolean c(int n){  // Method with integer parameter and boolean return-type\n  return n==0 ?    //  If n is zero:\n    0&gt;1//false     //   Return false\n   : n%-2==0 ?     //  Else-if n mod -2 is zero:\n    c(n/-2)        //   Recursive call for the input divided by -2\n   :               //  Else:\n    n==1;          //   Return if n is one\n}                  // End of method\n</code></pre>\n<p><strong>Test code:</strong></p>\n<p><a href=\"https://tio.run/nexus/java-openjdk#LY5BCoMwEEX3nuJTKCSIVqUrbdoTdOWydBFTWwJxIiYWinh2G8XF8Abmz5tRRjqH@xQBzkuvFZbGWtNKgmKaPIhPQ@vHgUBCZLfsmpd0TIq1V4xOScHLMMireQH6sTHBsIu@Vr/QSU2s9oOmz@MJyddDwNsOm1xDICmqwIvAOTCO9wRQ/5xvu9SOPu3DujfENGIcShwCwnOcV1t0jtaalz8\" rel=\"noreferrer\">Try it here.</a></p>\n<pre><code>class M{\n  static boolean c(int n){return n==0?0&gt;1:n%-2==0?c(n/-2):n==1;}\n\n  public static void main(String[] a){\n    for(int i = -2; i &lt;= 4; i++){\n      System.out.println(i + &quot;: &quot; + c(i));\n    }\n  }\n}\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code>-2: true\n-1: false\n0: false\n1: true\n2: false\n3: false\n4: true\n</code></pre>\n"},{"answer_id":115557,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115557#115557","body":"<h1>Python 3, 34 bytes</h1>\n<pre class=\"lang-py prettyprint-override\"><code>lambda n:n==(-2)**~-n.bit_length()\n</code></pre>\n"},{"answer_id":115544,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115544#115544","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 5 bytes</h1>\n\n<pre><code>æḟ-2=\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/jelly#ARkA5v//w6bhuJ8tMj3/LTlyOcK1xbzDh@KCrEf/\" rel=\"noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n\n<h3>How it works</h3>\n\n<pre><code>æḟ-2=  Main link. Argument: n\n\næḟ-2   Round n towards 0 to the nearest power of -2.\n    =  Test if the result is equal to n.\n</code></pre>\n"},{"answer_id":115527,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115527#115527","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 6 bytes</h1>\n\n<pre><code>b-2S⁼1\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/jelly#@5@kaxT8qHGP4f///3WNAA\" rel=\"noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n\n<p>This is based on how Jelly converts an integer <em>N</em> to any arbitrary base <em>B</em>, doing so by converting <em>N</em> to an array, in which each integer is a digit <em>d</em> of (<em>N</em>)<sub><em>B</em></sub>, which can have a value 0≤<em>V<sub>d</sub></em>&lt;<em>B</em>. Here, we will 0-index digits from the right, so every digit adds <em>V<sub>d</sub>B<sup>d</sup></em> to form <em>N</em>. <em>V<sub>d</sub></em>&lt;<em>B</em>⇔<em>V<sub>d</sub>B<sup>d</sup></em>&lt;<em>BB<sup>d</sup></em>=<em>B</em><sup><em>d</em>+1</sup>, therefore every possible <em>N</em> has only one unique representation, if we ignore leading 0s in (<em>N</em>)<sub><em>B</em></sub>.</p>\n\n<p>Here, <em>d</em>=input, <em>B</em>=-2. <em>N</em>=<em>B<sup>d</sup></em>=1<i>B<sup>d</sup></i>=<em>V<sub>d</sub>B<sup>d</sup></em>⇔1=<em>V<sub>d</sub></em>⇔<em>V<sub>d</sub></em>=1, and, since we're not adding any other multiples of powers of <em>B</em>, every other <em>V</em> would be 0. Right now, the array should be a 1 concatenated with <em>d</em> 0s. Since Jelly 1-indexes from the left, we should check whether the array's 1st element is 1, and all other elements are 0.</p>\n\n<p>Hmm... all good, right? No? What's going on? Oh yeah, I have a better idea! First, let's take the sum of all of the integers in the array, treating it as if it was an integer array and not a number in base -2. If it is 1, it means that there is only one 1, and all other integers are 0. Since there can't be leading zeroes, except in the case of 0<sub>-2</sub> (where the sum would be 0≠1 anyways), the 1st integer must be non-zero. The only non-zero integer in the array is the 1, so it must be the first one. Therefore, this is the only case that the sum of all of the integers in the array would be 1, because the smallest possible sum of a pair of positive integers is Σ{1,1}=2, since the smallest positive integer is 1. Every integer in a base representation is non-negative, so the only way the sum is 1 is to only have one 1, and all other integers are 0. Therefore, we can just check if the sum of all of the integers in the array is 1.</p>\n\n<p>Here is what the code does:</p>\n\n<pre><code>b-2S⁼1 Main link. Arguments: d\nb-2    Convert d to base -2.\n   S   Take the sum.\n    ⁼1 Check if the sum is equal to 1.\n</code></pre>\n"},{"answer_id":115535,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115535#115535","body":"<h1>Javascript(ES7), 45 bytes</h1>\n\n<pre><code>x=&gt;-1**Math.log2(Math.abs(x))*Math.abs(x)==x\n</code></pre>\n"},{"answer_id":115529,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115529#115529","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"noreferrer\">Octave</a>, 28 bytes</h1>\n\n\n\n<pre class=\"lang-matlab prettyprint-override\"><code>@(n)any((-2).^(0:abs(n))==n)\n</code></pre>\n\n<p>This defines an anonymous function. The approach is similar to that in my MATL answer.</p>\n\n<p><a href=\"https://tio.run/nexus/octave#@@@gkaeZmFepoaFrpKkXp2FglZhUDBTStLXN0/yfpmCrkJhXbM2VBpLWUQBShmDKAExC2BAJYzBpovkfAA\" rel=\"noreferrer\" title=\"Octave – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":115526,"question_id":115516,"link":"https://codegolf.stackexchange.com/questions/115516/is-this-number-an-integer-power-of-2/115526#115526","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, <s>9</s> 8 bytes</h1>\n\n<pre><code>2_y|:q^m\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/matl#@28UX1ljVRiX@/@/rgUA\" rel=\"noreferrer\" title=\"MATL – TIO Nexus\">Try it online!</a> Or <a href=\"https://tio.run/nexus/matl#S/hvFF9ZY1UYl/vfJeS/rhGXriGXAZchlxGXMZcJAA\" rel=\"noreferrer\">verify all test cases</a>.</p>\n\n<h3>How it works</h3>\n\n<p>Consider input <code>-8</code> as an example</p>\n\n<pre><code>2_    % Push -2\n      % STACK: -2\ny     % Implicit input. Duplicate from below\n      % STACK: -8, -2, -8\n|     % Absolute value\n      % STACK: -8, -2, 8\n:     % Range\n      % STACK: -8, -2, [1 2 3 4 5 6 7 8]\nq     % Subtract 1, element-wise\n      % STACK: -8, -2, [0 1 2 3 4 5 6 7]\n^     % Power, element-wise\n      % STACK: -8, [1 -2 4 -8 16 -32 64 -128]\nm     % Ismember. Implicit display\n      % STACK: 1\n</code></pre>\n"},{"answer_id":115258,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/115258#115258","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, <strike>12</strike> 6 bytes</h1>\n<p><em>Saved 6 bytes thanks to @ETHproductions</em></p>\n<pre><code>#yonKi\n</code></pre>\n<p><a href=\"https://tio.run/nexus/japt#@69cmZ/nnfn/PwA\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h3>Explanation:</h3>\n<pre><code>#yonKi\n#y          // # gets the char-code of y, which is 121\n  o         // Create a range from [0...121]\n   nKi      // At each item, perform .n(K.i()), which subtracts each item from Ki (Current year)\n\n\n     \n</code></pre>\n"},{"answer_id":115263,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/115263#115263","body":"<h2><a href=\"https://drive.google.com/drive/folders/0B0R1Jgqp8Gg4cVJCZkRkdEthZDQ\" rel=\"nofollow noreferrer\">QBIC</a>, 33 bytes</h2>\n<pre><code>A=right$(_D,4)┘[!A!,!A!-120,-1|?a\n</code></pre>\n"},{"answer_id":115098,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/115098#115098","body":"<h1>05AB1E, 9 bytes</h1>\n\n<p><code>121FžgN-=</code></p>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@29oZOh2dF@6n67t//8A\" rel=\"noreferrer\">Try online</a></p>\n"},{"answer_id":63831,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/63831#63831","body":"<h1><a href=\"https://github.com/m-ender/labyrinth\" rel=\"nofollow noreferrer\">Labyrinth</a>, <s>48</s> <s>46</s> <s>45</s> 42 bytes</h1>\n\n<p><em>Thanks to Sp3000 for saving two bytes.</em></p>\n\n<pre><code>-,\"\n#\n%0:::8.5.3.4.116.@\n1\n00.97.114.107.@\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/labyrinth#@6@ro8SlzKVqYGVlZaFnqmesZ6JnaGim58BlyGVgoGdpDuQBRQzM9Rz@/083AwA\" rel=\"nofollow noreferrer\" title=\"Labyrinth – TIO Nexus\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>The beginning of the code is a funny dead end. Remember that Labyrinth assumes an infinite number of zeroes when it requires operands at the bottom of the stack. The code starts one the <code>-</code> going right, which tries to subtract two numbers, so the stack becomes:</p>\n\n<pre><code>[ ... 0 ]\n</code></pre>\n\n<p>Then <code>,</code> reads the first character, <code>a</code> say:</p>\n\n<pre><code>[ ... 0 97 ]\n</code></pre>\n\n<p>The <code>\"</code> is a no-op, but this is also a dead-end so the instruction pointer turns around and starts going to the left. Then <code>`</code> reads the other character, <code>2</code> say:</p>\n\n<pre><code>[ ... 0 97 50 ]\n</code></pre>\n\n<p>This time, <code>-</code> subtracts those two numbers:</p>\n\n<pre><code>[ ... 0 47 ]\n</code></pre>\n\n<p>The IP now follows the bend of the \"corridor\". The <code>#</code> gets the stack depth, ignoring the implicit zeroes, which conveniently happens to be <code>2</code>:</p>\n\n<pre><code>[ ... 0 47 2 ]\n</code></pre>\n\n<p>And <code>%</code> computes the modulo:</p>\n\n<pre><code>[ ... 0 1 ]\n</code></pre>\n\n<p>At this point, the IP is at a junction. If the top of the stack is zero, it will move straight ahead, where <code>100.97.114.107.@</code> prints <code>dark</code>. But if the top of the stack is non-zero (specifically, <code>1</code>), it will move to the right, where <code>0:::8.5.3.4.116.@</code> prints <code>light</code> (note that we can omit the leading <code>1</code>, because there is already a <code>1</code> on the stack, and we can save on the repeated <code>10</code> in <code>108</code>, <code>105</code>, <code>103</code>, <code>104</code> by making a few copies of the <code>10</code> when we first get there).</p>\n"},{"answer_id":114516,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/114516#114516","body":"<h1>Java, 178 bytes</h1>\n<pre><code>interface z{static void main(String[]a){int b=a[0].charAt(0)-'a',c=a[0].charAt(1)-'0';if(b%2==0&amp;&amp;c%2!=0||b%2!=0&amp;&amp;c%2==0)System.out.print(&quot;dark&quot;);else System.out.print(&quot;light&quot;);}}\n</code></pre>\n<p>Takes input as first argument.</p>\n<p>Ungolfed:</p>\n<pre><code>interface z {\n    static void main(String[]a) {\n        int b = a[0].charAt(0) - 'a',                               // Convert value from a to value from 0...7\n                c = a[0].charAt(1) - '0';                           // Get number\n        if (b % 2 == 0 &amp;&amp; c % 2 != 0 ||                             // If b is divisible by 2 and c is divisible by 2 or\n                b % 2 != 0 &amp;&amp; c % 2 == 0)                           // b is not divisible and c is divisible\n            System.out.print(&quot;dark&quot;);                               // output dark\n        else System.out.print(&quot;light&quot;);                             // else output light\n    }\n}\n</code></pre>\n"},{"answer_id":114507,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/114507#114507","body":"<h1>AHK, 78 bytes</h1>\n<pre><code>a=%1%\nIf Mod(Asc(a)+Asc(SubStr(a,2)),2)=1\ns=light\nElse\ns=dark\nFileAppend,%s%,*\n</code></pre>\n<p>AHK uses <code>1</code> as the name for the first parameter so you have to assign to a different name before you use it in functions. Otherwise, it'll think you mean the value 1 and not the variable <em>named</em> <code>1</code>. Also, the only way to report to <code>STDOUT</code> is by using <code>FileAppend</code> with <code>*</code> as the file name.</p>\n"},{"answer_id":114332,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/114332#114332","body":"<h2>REXX, 95 bytes</h2>\n\n<pre><code>arg f d\ndo l=1 while lines(f)\n    n=linein(f)\n    do #=1 while n&gt;''\n        parse var n w (d) n\n        o.l.#=w\n    end\nend\n</code></pre>\n\n<p>Takes a filename and a delimiter as arguments, contents of file are put in stem <code>o</code>.</p>\n"},{"answer_id":113877,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/113877#113877","body":"<h1>Javascript, 28 Characters</h1>\n\n<pre><code>f=n=&gt;(n&lt;=2)?1:f(n-1)+f(n-2);\n</code></pre>\n\n<p><a href=\"https://codepen.io/anon/pen/evjgjz\" rel=\"nofollow noreferrer\">Try it here!</a></p>\n"},{"answer_id":113720,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/113720#113720","body":"<h1>Mathematica, <s>32</s> 26 bytes</h1>\n\n<p>-6 bytes thanks to @MartinEnder!</p>\n\n<p><code>±1=±2=1;±n_:=±(n-1)+±(n-2)</code></p>\n\n<p>Recursive function, returns nth value in sequence.</p>\n"},{"answer_id":113611,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/113611#113611","body":"<h1>C, 33 bytes</h1>\n<p>Recursively calculates the nth fibbonacci number.</p>\n<pre><code>f(n){return n&gt;1?f(n-1)+f(n-2):n;}\n</code></pre>\n"},{"answer_id":60839,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/60839#60839","body":"<h1>Forth, 27 bytes</h1>\n<p>Prints them forever (until it exceeds the maximum integer).</p>\n<pre><code>: f over . 2dup + recurse ;\n</code></pre>\n<p><a href=\"https://tio.run/nexus/forth-gforth#@2@lkKaQX5ZapKCnYJRSWqCgrVCUmlxaVJyqYP3fQMFQIe0/AA\" rel=\"nofollow noreferrer\"><strong>Try it online</strong></a></p>\n<p>Returns the <em>n</em>th Fibonacci number. This assumes I can leave garbage on the stack (the result is still on top), 30 bytes:</p>\n<pre><code>: f 1 0 rot 0 DO 2dup + LOOP ;\n</code></pre>\n<p><a href=\"https://tio.run/nexus/forth-gforth#@2@lkKZgqGCgUJRfAiRd/BWMUkoLFLQVfPz9AxSs/5sDpfX@AwA\" rel=\"nofollow noreferrer\"><strong>Try it online</strong></a></p>\n"},{"answer_id":112473,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112473#112473","body":"<h1><a href=\"https://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 5 bytes</h1>\n\n<p>I've tried to find a 4 bytes solution without success, so for now here's the most interesting 5 bytes solution I've found:</p>\n\n<pre><code>:No₎?\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/brachylog2#@2/ll/@oqc/@/3@l1JTkpEQlAA\" rel=\"nofollow noreferrer\" title=\"Brachylog – TIO Nexus\">Try it online!</a></p>\n\n<p><code>o</code>, the ordering function, can take a parameter: <code>0</code> means ascending order, <code>1</code> means descending order. We set that parameter to an unbound variable <code>N</code>. Brachylog will try different values for <code>N</code> (only <code>0</code> or <code>1</code> are possible), try to unify the result with the input, and return whether any of those tries succeeded.</p>\n"},{"answer_id":112437,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112437#112437","body":"<h1><a href=\"https://gitjub.com/fergusq/roda\" rel=\"nofollow noreferrer\">Röda</a>, 75 bytes</h1>\n\n<pre><code>f s{x=[split(s,sep=\"\")];[s=[sort(x)]&amp;\"\"or s=[sort(x,cmp={|a,b|[a&gt;b]})]&amp;\"\"]}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/roda#PYpBCsIwEEWvMsxCWsgNpIJWPUM1BEltCgXbxEwWlaRnjxkXbt77PH4egeLaSHKvKVQkyLgGsVZ7SSVaH6q1VjtE6@EfxHN2TUxa9EnqQ6@230NtedbTAhEkHk/t@XJFAXi/dazgjWEvlvlm8Kfl8THEGowZUEGCER6Fzk9LKGvLXw\" rel=\"nofollow noreferrer\" title=\"Röda – TIO Nexus\">Try it online!</a></p>\n\n<p>Alternative solution:</p>\n\n<pre><code>f s{x=[split(s,sep=\"\")];[s in[[sort(x)]&amp;\"\",[sort(x,cmp={|a,b|[a&gt;b]})]&amp;\"\"]]}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/roda#LYpRCsIwEESvsuyHtJAbSAWteoZqWKS1KQRsGrP5qCQ9e@2KP@/NMLMOwGmuNPuXjQUrNr5CLGmvGazTmqcQi7mkHaL6F/UcfZVyq7qs20NHy28lWtaxtQ4SaDye6vPligrwfmtEMRgjdpPwLZBPLeFjWNQb0yNBhgEeG32wLm5pWb8\" rel=\"nofollow noreferrer\" title=\"Röda – TIO Nexus\">Try it online!</a></p>\n\n<p>It is possible that shorter solutions exist, but I couldn't find them now.</p>\n"},{"answer_id":112436,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/112436#112436","body":"<h2>Python 3.5+, 37 bytes</h2>\n\n<pre><code>lambda a:sorted(a)in([*a],[*a][::-1])\n</code></pre>\n"},{"answer_id":108697,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108697#108697","body":"<h1><a href=\"https://sourceforge.net/p/cjam\" rel=\"nofollow noreferrer\">CJam</a>, <s>12</s> 11 bytes</h1>\n\n<pre><code>q_$_W%+\\#)g\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/cjam#@18YrxIfrqodo6yZ/v9/SVFqKgA\" rel=\"nofollow noreferrer\" title=\"CJam – TIO Nexus\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>q            Push the input\n _$          Duplicate and sort\n   _W%       Duplicate and reverse\n      +      Concatenate the sorted and the reversed strings\n       \\     Bring input to the top\n        #    Find the index of the input in the other string; returns -1 if not found\n         )   Increment\n          g  Signum (coerces to 0 or 1)\n</code></pre>\n"},{"answer_id":112013,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/112013#112013","body":"<h2><a href=\"https://www.gnu.org/software/sed/\" rel=\"nofollow noreferrer\">GNU sed</a>, 48 + 1(r flag) = 49 bytes</h2>\n\n<pre class=\"lang-sed prettyprint-override\"><code>1h;1d\n:\nG\n/,$/bp\ns:(.)(.*)\\n\\1:,\\2:\nt\n:p;s:..$::\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/nexus/bash#DcVBCoAgEADA@75CRFDDVuy4@4A@4SkUPEiKBj3fmsvMnMQ@hF6hcEhAcIJ3yl8dJhm0Bjcb7xjIxYPgAeo8CVERLb0YSq61sQTJbxs1/csP\" rel=\"nofollow noreferrer\">Try it online!</a></strong></p>\n\n<p>In sed there are no data types, but a natural representation of a list would be a collection of lines. As such, the input format consists of DSV records each on a separate line, with the delimiter present on the first line.</p>\n\n<p><strong>Explanation:</strong> by design, sed runs the script as many times as there are input lines</p>\n\n<pre class=\"lang-sed prettyprint-override\"><code>1h;1d                  # store delimiter, start new cycle\n:                      # begin loop\nG                      # append saved delimiter\n/,$/bp                 # if delimiter is ',', skip replacements and go to printing\ns:(.)(.*)\\n\\1:,\\2:     # replace first occurrence of delimiter with ','\nt                      # repeat\n:p;s:..$::             # print label: delete appended delimiter (implicit printing)\n</code></pre>\n"},{"answer_id":111911,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/111911#111911","body":"<h1><a href=\"https://github.com/MiningPotatoes/Ohm\" rel=\"nofollow noreferrer\">Ohm</a>, 3 bytes (CP437)</h1>\n\n<p>Non-competitive, obviously, but I don't think anyone will mind since this question is almost 5 years old ;)</p>\n\n<pre><code>6°P\n</code></pre>\n"},{"answer_id":111903,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/111903#111903","body":"<h1>Ruby, 60 bytes</h1>\n<pre><code>for n in 0..1e6\nif('1'*n)!~/^1?$|^(11+?)\\1+$/\nputs n\nend\nend\n</code></pre>\n<p>see <a href=\"https://stackoverflow.com/questions/147240/ruby-isprime-method\">here</a> for explanation</p>\n"},{"answer_id":111881,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/111881#111881","body":"<h3>PHP, <s>100</s> 95 bytes</h3>\n\n<p>It works by iterating 1,000,000 times and then using this regular expression on a unary number to check if it's prime. It's not the smallest PHP solution submitted, but thought I'd submit it just so it's here.</p>\n\n<pre><code>for($i=0;$i&lt;=1e6;$i++)if(preg_match('/^1?$|^(11+?)\\1+$/',str_repeat(\"1\",$i))==0)echo$i.PHP_EOL;\n</code></pre>\n\n<p>Matchu explains how the regular expression works - <a href=\"https://stackoverflow.com/a/3296068/3000179\">https://stackoverflow.com/a/3296068/3000179</a></p>\n\n<p>First 50: <a href=\"https://eval.in/746404\" rel=\"nofollow noreferrer\">https://eval.in/746404</a></p>\n"},{"answer_id":111712,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111712#111712","body":"<h1>Powershell, <s>25</s> 22/23 bytes</h1>\n<p>Two Options, one just calls split on the first arg, using the second arg as a delim value.</p>\n<pre><code>$args[0]-split$args[1]\n</code></pre>\n<p>One byte longer, builtin to parse csvs, takes filename as first arg and delim as second.</p>\n<pre><code>ipcsv $args[0] $args[1]\n</code></pre>\n<p>-2 because it doesn't require the <code>-Delimiter</code> (<code>-D</code>) param, and will assume it by default.</p>\n<p>sadly powershell cannot pass an array of two params, as it will assume they are both files, and will run the command against it twice, no other two-var input method is shorter than this as far as I can see, so this is likely the shortest possible answer.</p>\n<p><code>ipcsv</code> is an alias for <code>Import-Csv</code>, takes a file name as the first unnamed input, and the delim character as the second by default behavior.</p>\n<p>Run against the <a href=\"https://en.wikipedia.org/wiki/Delimiter-separated_values#Delimited_formats\" rel=\"nofollow noreferrer\">example</a> from the wiki page returns</p>\n<pre><code>PS C:\\Users\\Connor\\Desktop&gt; .\\csvparse.ps1 'example.csv' ','\n\nDate     Pupil               Grade\n----     -----               -----\n25 May   Bloggs, Fred        C\n25 May   Doe, Jane           B\n15 July  Bloggs, Fred        A\n15 April Muniz, Alvin &quot;Hank&quot; A\n</code></pre>\n"},{"answer_id":111831,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111831#111831","body":"<h1>Rebol, 33 bytes</h1>\n<pre><code>func[b s][map-each n b[split n s]\n</code></pre>\n"},{"answer_id":111787,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111787#111787","body":"<h2>Ruby using '-n', 17+1 = 18 bytes</h2>\n<pre><code>p chomp.split *$*\n</code></pre>\n<h3>How it works</h3>\n<ul>\n<li>Input from file</li>\n<li>separator is given as command line parameter</li>\n<li>since we only have 1 parameter, <code>*$*</code> splats the string and we can use it as a parameter for the <code>split</code> function</li>\n<li>I tried to avoid <code>chomp</code> but any other solution seems to be longer than this.</li>\n</ul>\n"},{"answer_id":111781,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111781#111781","body":"<h1>CJam, 5 bytes</h1>\n<pre><code>l~l./\n</code></pre>\n<p>Explanation:</p>\n<pre><code>l~     e#Input evaluated (as list)\n  l    e#Another line of input\n   ./  e#Split first input by second\n</code></pre>\n"},{"answer_id":111709,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111709#111709","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>3</s> 2 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p><em>Dennis <a href=\"http://chat.stackexchange.com/transcript/message/35753610#35753610\">points out</a> that while the 2 byte solution appears to not work, the dyadic link itself does, and that it is actually the way command line arguments are parsed that make it look that way.</em></p>\n<pre><code>ṣ€\n</code></pre>\n<p><strong><a href=\"https://tio.run/nexus/jelly#@/9w5@JHTWv@P2qYk5FalKqQWaxTnJ@bqlOcmFuQkwoUTUksSdRJSc3JzM0sSU3RSapUSM7PzU0sftQw9/ByIKHj/v9rXr5ucmJyRioA\" rel=\"nofollow noreferrer\">Try It Online!</a></strong> - footer calls the function with left and right set explicitly, and formats as a grid*.</p>\n<p>Exactly as the below, except <code>ṣ</code> splits at occurrences of the right argument rather than at sublists equal to the right argument.</p>\n<hr />\n<pre><code>œṣ€\n</code></pre>\n<p>The <strong><a href=\"https://tio.run/nexus/jelly#AU4Asf//xZPhuaPigqz/w6dH//9bImhlcmUgaXMsc29tZSxzYW1wbGUiLCJkYXRhLGRlbGltaXRlZCxieSBjb21tYXMiXf8nLCf1bm8tY2FjaGU\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">3 byter</a></strong> - footer displays the result as a grid*.</p>\n<p>A dyadic link (function) that takes the DSV list on the left and the delimiter on the right.</p>\n<h3>How?</h3>\n<pre><code>œṣ€ - Main link: list l, delimiter d\n  € - for each item in l:\nœṣ  -     split at occurrences of sublists equal to d\n</code></pre>\n<p>* As a full program the implicit output would simply &quot;smush&quot; together all the characters, so the footer of the TIO link calls the link as a dyad and uses <code>G</code> to format the result nicely.</p>\n"},{"answer_id":111722,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111722#111722","body":"<h1>MATLAB / Octave, <s>41</s> 25 bytes</h1>\n<pre><code>@(x,d)regexp(x,d,'split')\n</code></pre>\n<p>Creates an anonymous function named <code>ans</code> which accepts the first input as a cell array of strings and the second input as a string.</p>\n<pre><code>ans({'Hello World', 'How are you'}, ' ')\n</code></pre>\n<p><a href=\"https://tio.run/#FudVb\" rel=\"nofollow noreferrer\"><strong>Try it Online</strong></a></p>\n"},{"answer_id":111721,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111721#111721","body":"<h1>Mathematica, 11 bytes</h1>\n\n<pre><code>StringSplit\n</code></pre>\n\n<p>Builtin function taking two arguments, a list of strings and a character (and even more general than that). Example usage:</p>\n\n<pre><code>StringSplit[{\"to be or not\", \"that is the question\"}, \" \"]\n</code></pre>\n\n<p>yields</p>\n\n<pre><code>{{\"to\", \"be\", \"or\", \"not\"}, {\"that\", \"is\", \"the\", \"question\"}}\n</code></pre>\n"},{"answer_id":111717,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111717#111717","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"noreferrer\">Japt</a>, 3 bytes</h1>\n\n<pre><code>mqV\n</code></pre>\n\n<p><a href=\"http://ethproductions.github.io/japt/?v=1.4.4&amp;code=bXFW&amp;input=WyJoZXJlIGlzLHNvbWUsc2FtcGxlIiwiZGF0YSxkZWxpbWl0ZWQsYnkgY29tbWFzIl0gIiwiIC1R\" rel=\"noreferrer\">Test it online!</a> (Uses the <code>-Q</code> flag to prettyprint the output)</p>\n\n<pre><code>mqV  // Implicit: U, V = inputs\nm    // Map each item in U by the following function:\n qV  //   Split the item at instances of V.\n     // Implicit: output result of last expression\n</code></pre>\n"},{"answer_id":111713,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111713#111713","body":"<h2>JavaScript, 26 bytes</h2>\n\n<pre><code>x=&gt;y=&gt;x.map(n=&gt;n.split(y))\n</code></pre>\n\n<p>Receives input in format (array of strings)(delimiter) </p>\n\n<p><a href=\"https://tio.run/nexus/javascript-node#S7P9X2FrV2lrV6GXm1igkWdrl6dXXJCTWaJRqan5Pzk/rzg/J1UvJz9dI00jWikjU0dJRylDJ1UnRycnXylWUwPIBaoDAA\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":111711,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111711#111711","body":"<h1>Python, 33 bytes</h1>\n<pre><code>lambda a,c:[x.split(c)for x in a]\n</code></pre>\n"},{"answer_id":111710,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111710#111710","body":"<h2>Haskell, 29 bytes</h2>\n\n<pre><code>import Data.Lists\nmap.splitOn\n</code></pre>\n\n<p>Usage example: <code>(map.splitOn) \" \" [\"to be or not\",\"that is the question\"]</code> -> <code>[[\"to\",\"be\",\"or\",\"not\"],[\"that\",\"is\",\"the\",\"question\"]]</code>.</p>\n"},{"answer_id":111708,"question_id":111707,"link":"https://codegolf.stackexchange.com/questions/111707/simple-csv-dsv-importer/111708#111708","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 5 bytes</h1>\n\n<pre><code>vy²¡ˆ\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@19WeWjToYWn2/7/j1ZP1EnSSVbXUVBP1knRSVWP5dIBAA\" rel=\"nofollow noreferrer\" title=\"05AB1E – TIO Nexus\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>v     For each element in the input array\n y    Push the element\n  ²   Push second input\n   ¡  Split\n    ˆ Add to array\n</code></pre>\n"},{"answer_id":110291,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/110291#110291","body":"<h1>SmileBASIC, <s>91</s> <s>89</s> 84 bytes</h1>\n<pre><code>DIM A[1]INPUT S$WHILE LEN(S$)&gt;1PUSH A,ASC(POP(S$))-ASC(POP(S$))WEND?MIN(A)*MAX(A)==0\n</code></pre>\n<p>Makes an array of the differences between consecutive characters (and an extra 0), and checks if either the min or max is 0.</p>\n"},{"answer_id":110215,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/110215#110215","body":"<h1>PHP 7, 63 bytes</h1>\n<pre><code>for($s=$argv[1];$s[++$i]&amp;a;)${$s[$i-1]&lt;=&gt;$s[$i]}=1;echo!$${-1};\n</code></pre>\n"},{"answer_id":109027,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/109027#109027","body":"<h2>GNU sed, 97 + 1(r flag) = 98 bytes</h2>\n\n<p>If the letters are ordered, the script returns <strong><code>1</code></strong>, otherwise <strong><code>0</code></strong>. In sed there are no data types.</p>\n\n<pre><code>s:$: zyxwvutsrqponmlkjihgfedcba:\ns:(.*(.)(.).* ).*\\2.*\\3.*:\\1abcdefghijklmnopqrstuvwxyz:i\n//c0\nc1\n</code></pre>\n\n\n\n<p>To check if all letters are arranged in ascending order, I do a table lookup of each pair of consecutive letters in a descending alphabet, that is I try to find a counter example. Note that <code>//</code> actually repeats the last regular expression match! <em>(see lines 2 and 3)</em></p>\n\n<p><strong>Run example:</strong> the script can test multiple input words, one per line</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>me@LCARS:/PPCG$ echo -e \"tree\\nABCDC\" | sed -rf word_ordered.sed\n1\n0\n</code></pre>\n\n\n"},{"answer_id":108909,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108909#108909","body":"<h1><a href=\"https://racket-lang.org/\" rel=\"nofollow noreferrer\">Racket</a>, 93 bytes</h1>\n\n<pre><code>(define(f s)(let([t(string-&gt;list s)])(or(equal?(sort t char&lt;=?)t)(equal?(sort t char&gt;=?)t))))\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/racket#bYxNDoJADEb3nKIZN@3CGyhEUc/gT1xMoIPEcZCZsvD02JAYg7GL16Rfv7fwNjQQbXVnGbFm1wZGB4nQs@BFMElsQ7PMfZtEz1fCLiL3g/UFpi4KCFQ3G1frgoT@BPkU6HzsIJxkKXFgwElqNttytz8YMOfTURk6hURmXb0hyvBhn@C@PcqymctZn2ayUpsvTsqauf5VTO80vgE\" rel=\"nofollow noreferrer\" title=\"Racket – TIO Nexus\">Try it online!</a></p>\n\n<p>Ungolfed:</p>\n\n<pre><code>(define (lex-sorted? string)\n  (let ([char-list (string-&gt;list string)])\n    (or\n     (equal? (sort char-list char&lt;=?) char-list)\n     (equal? (sort char-list char&gt;=?) char-list))))\n</code></pre>\n\n<p>Using the sort then compare to original approach</p>\n"},{"answer_id":108736,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108736#108736","body":"<h1>Clojure, <s>69</s> 66 bytes</h1>\n\n<pre class=\"lang-clj prettyprint-override\"><code>#(let[s(apply str(sort %))](or(= % s)(= %(apply str(reverse s)))))\n</code></pre>\n<p>-3 by inlining <code>reversed</code>.</p>\n<p>My original try ended up being a longer version of the other Clojure answer, so I went the &quot;sorted&quot; route. Checks if the original string is equal to a sorted version of itself, or a reversed sorted string. Amazingly, <code>(apply str (reverse s)</code> ended up being shorter than using the built-in reverse string method.</p>\n<pre class=\"lang-clj prettyprint-override\"><code>(defn lex? [s]\n  ; (apply str ...) basically just turns a list into a string\n  (let [sorted (apply str (sort s))\n        reversed (apply str (reverse sorted))]\n    (or (= s sorted) (= s reversed))))\n</code></pre>\n"},{"answer_id":108875,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108875#108875","body":"<h1>C++, 138 bytes</h1>\n\n<pre><code>#import&lt;algorithm&gt;\nusing namespace std;f(string s){string u,t=s;sort(t.begin(),t.end());u=t;reverse(u.begin(),u.end());return s==t||s==u;}\n</code></pre>\n"},{"answer_id":108767,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108767#108767","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 44 bytes</h1>\n\n\n\n<pre class=\"lang-ruby prettyprint-override\"><code>-&gt;s{[s,s.reverse].include?s.chars.sort.join}\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/ruby#lYxBCsIwFET3nuKTdf03UNGqZ1BLFiUZ2ookmp8K0nr2yF@4FjfzGHgzZbmWqZFKOOGJJLA8BHcbPTbCrm@TsMSU@RqH8C7d6h990Zjtrt4fjqYiczmfFCFq5gQoH8YyWtfTRHOG5JnuYxbqGi2Wvg@1ui@IwgP@x6qUDw\" rel=\"nofollow noreferrer\" title=\"Ruby – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108797,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108797#108797","body":"<h1><a href=\"https://gcc.gnu.org/\" rel=\"noreferrer\">C (gcc)</a>, 70 bytes</h1>\n\n\n\n<pre class=\"lang-c prettyprint-override\"><code>o(s,a)char*s;{for(a=0;s[1];s++)a|=s[1]-*s&amp;64|*s-s[1]&amp;32;return a!=96;}\n</code></pre>\n\n<p>I was hoping to find a shorter solution based on a recursive function, but it didn't work out due to the output requirement. So here's an imperative approach. At least, C's operator precedence works nicely for the inner loop statement.</p>\n\n<p><a href=\"https://tio.run/nexus/c-gcc#VY7LCsIwEEX3/YoxoiS1ii8EjRV8foPPRWwiFjTVTFyI@u21UURyV3PPzJ2ZPKMYCZYchQmRPw6ZoSJucty0dhxrNSaesavrIVZ73WeIdeeqnTY3yt6MBlGK@z3@ysupTk43qWCIVqZZ4zgKglRbsAotULceQmTwCKDQxRStAyUVHEBFbjWJACMoPmGMB69v8CxSTX8Bt4WS8WQ6my9IMfNn69XSBzrzvTVK@USIfeKTq2/dnamP7gp9IJWTJJ@H8zc\" rel=\"noreferrer\" title=\"C (gcc) – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108774,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108774#108774","body":"<h1>Octave, 24 bytes</h1>\n<pre><code>@(s)issorted(s,'either')\n</code></pre>\n<p><a href=\"https://tio.run/#z36e7\" rel=\"nofollow noreferrer\">Try It Online!</a></p>\n"},{"answer_id":108729,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108729#108729","body":"<h2>Scala, 52 bytes</h2>\n\n<pre><code>def p(s:String)=List(s,s.reverse).contains(s.sorted)\n</code></pre>\n"},{"answer_id":108711,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108711#108711","body":"<h1>Pyth, 5 bytes</h1>\n<pre><code>}Q_BS\n</code></pre>\n<p>A program that takes input of a <code>&quot;quoted string&quot;</code> and prints <code>True</code> or <code>False</code> as appropriate.</p>\n<p><a href=\"http://pyth.herokuapp.com/?code=%7DQ_BS&amp;test_suite=1&amp;test_suite_input=%22ABCDEF%22%0A%22ZYX%22%0A%22no%22%0A%22tree%22%0A%22q%22%0A%22ABCDC%22%0A%22yes%22%0A%22deed%22&amp;debug=0\" rel=\"nofollow noreferrer\">Test suite</a></p>\n<p><strong>How it works</strong></p>\n<pre><code>}Q_BS   Program. Input: Q\n}Q_BSQ  Implicit variable fill\n Q      Is Q\n}       in\n    SQ  Q sorted\n   B    or\n  _     Q sorted reversed?\n        Implicitly print\n</code></pre>\n"},{"answer_id":108698,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108698#108698","body":"<h1><a href=\"https://github.com/FTcode/Pushy\" rel=\"nofollow noreferrer\">Pushy</a>, 7 bytes</h1>\n\n<pre><code>ogoGo|#\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/pushy#@5@fnu@eX6P8//9/pZKi1FQlAA\" rel=\"nofollow noreferrer\"><strong>Try it online!</strong></a></p>\n\n<p>Explanation:</p>\n\n<pre><code>      \\ Implicit: Input on stack as charcodes\nog    \\ Check if the stack is sorted ascendingly (Push 0/1)\noG    \\ Check if the stack is sorted descendingly (Push 0/1)\n      \\   - Note that this will work regardless of the first check, as input\n      \\     is guaranteed to be /[A-Za-z]+/\no|    \\ Bitwise OR\n#     \\ Print the result\n</code></pre>\n"},{"answer_id":108726,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108726#108726","body":"<h1>PHP, 66 bytes</h1>\n<pre class=\"lang-php prettyprint-override\"><code>$a=$s=$r=str_split($argv[1]);sort($s);rsort($r);echo$s==$a|$r==$a;\n</code></pre>\n<p>takes input from command line argument. Run with <code>-r</code>.</p>\n"},{"answer_id":108725,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108725#108725","body":"<h2>Mathematica, 33 bytes</h2>\n\n<pre><code>0&lt;=##||##&gt;=0&amp;@@ToCharacterCode@#&amp;\n</code></pre>\n\n<p>Based on <a href=\"https://codegolf.stackexchange.com/a/47929/8478\">this tip</a>. Unfortunately, I have to use <code>ToCharacterCode</code> instead of <code>Characters</code>, because <code>&lt;=</code> and <code>&gt;=</code> don't compare strings.</p>\n"},{"answer_id":108719,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108719#108719","body":"<h2>Clojure, 47 bytes</h2>\n\n<pre><code>#(let[c(map int %)a apply](or(a &lt;= c)(a &gt;= c)))\n</code></pre>\n"},{"answer_id":108706,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108706#108706","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, <s>4</s> 5 bytes</h1>\n\n<pre><code>Ṣm0ẇ@\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/jelly#@/9w56Jcg4e72h3@H91zuP1R0xpvII78/1/d0cnZxdVNXUdBPSoyAkTl5YPIkqLUVBBdCCJAapxBjMrUYhDl4urqog4A\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>Originally was <code>Ṣm0w</code> at four bytes.</p>\n\n<h2>Explanation</h2>\n\n<pre><code>Ṣm0ẇ@  Input: string S\nṢ      Sort S\n m0    Concatenate sort(S) with reverse(sort(S))\n   ẇ@  Sublist exists? Check if S is contained in the previous result\n</code></pre>\n"},{"answer_id":108710,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108710#108710","body":"<h2>Haskell, <s>54</s> 50 bytes</h2>\n\n<pre><code>t a=or[and(zipWith(&lt;=)`f`tail$a)|f&lt;-[(=&lt;&lt;),(&lt;*&gt;)]]\n</code></pre>\n\n<p>Usage example: <code>t \"defggh\"</code> -> <code>True</code>. <a href=\"https://tio.run/nexus/haskell#BcFBCoAgEADAryziQaN@sPaNDiK4YOpCmcieor/bzBQg9wxPLZmX@8FSDTobcxTiS5P9Mm7eOES7Glx2G8K8iRs46IObgAYBlc5cSlUwfw\" rel=\"nofollow noreferrer\" title=\"Haskell – TIO Nexus\">Try it online!</a>.</p>\n\n<p>Maybe using <code>sort</code> like may other answers is shorter although it requires <code>import Data.List</code>. Here's a different approach:</p>\n\n<p>For every function <code>f</code> from <code>[(=&lt;&lt;),(&lt;*&gt;)]</code>, calculate <code>and(zipWith(&lt;=)`f`tail$a)</code> and require any of the results to be <code>True</code>. The functions are</p>\n\n<pre><code>((=&lt;&lt;) (zipWith(&lt;=)) tail) a\n((&lt;*&gt;) (zipWith(&lt;=)) tail) a\n</code></pre>\n\n<p>which both perform comparisons of neighbor elements of the input list <code>a</code> with <code>&lt;=</code>, but one with the arguments flipped resulting in a <code>&gt;=</code>. <code>and</code> checks if all comparisons are <code>True</code>.   </p>\n"},{"answer_id":108682,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108682#108682","body":"<h1>JavaScript (ES6) <s>74</s> <s>62</s> <s>50</s> <s>47</s> 43 bytes</h1>\n<pre><code>([...a],b=a+'')=&gt;b==a.sort()|b==a.reverse()\n</code></pre>\n<p>After some golfing and bugfixing, this answer ended up being pretty much the same as ETHProduction's, so please check his answer out and give it a <code>+1</code>.</p>\n"},{"answer_id":108714,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108714#108714","body":"<h1>Pyth, 5 bytes</h1>\n\n<pre><code>}SQ,_\n</code></pre>\n\n<h3>Explanation:</h3>\n\n<pre><code>}SQ,_\n}SQ      Check if the sorted input is a member ...\n   ,_QQ  ... of [reversed input, input]\n</code></pre>\n"},{"answer_id":108708,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108708#108708","body":"<h1><a href=\"http://perl6.org/\">Perl 6</a>, 25 bytes</h1>\n\n<pre><code>{[le] .comb or[ge] .comb}\n</code></pre>\n\n<h3>How it works:</h3>\n\n<ul>\n<li><code>.comb</code> splits the input into a sequence of characters.</li>\n<li><code>le</code> and <code>ge</code> are the <em>\"less or equal\"</em> and <em>\"greater or equal\"</em> string comparison operators.</li>\n<li><code>[ ]</code> around an infix operator, reduces (\"folds\") the argument list with that operator. (It's smart enough to return True if the input has only zero or one characters.)</li>\n<li><code>or</code> returns True if the expressions on either side of it is true.</li>\n</ul>\n"},{"answer_id":108713,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108713#108713","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, 46 bytes</h1>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.List\nf s=sort s`elem`[s,reverse s]\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/haskell#TYtBCsIwEEX3nuIzK4XgDVrQVlceQC2FBjqFgEnTzCB4@pgsBDfvwee/7Hxck6K3ao83J7pbII3USSZ@sZ8GMYnfnIQhY/bWBTSIyQXFHt5GLBjodO76y5UMPR/3wrAWaGIu2mjEAW37a/6Tjgzow1I1M8/1mr8\" rel=\"nofollow noreferrer\" title=\"Haskell – TIO Nexus\">Try it online!</a> Usage: <code>f \"somestring\"</code>, returns <code>True</code> or <code>False</code>.</p>\n\n<p>Not as interesting as <a href=\"https://codegolf.stackexchange.com/a/108710/56433\">nimi's approach</a>, but some bytes shorter.</p>\n\n<p>Given a string <code>s</code>, we check whether <code>s</code> sorted is euqal to the original or reversed string.</p>\n"},{"answer_id":108701,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108701#108701","body":"<h1>Bash + coreutils, 59 bytes</h1>\n\n<pre><code>f()(sed 's/\\(.\\)/\\1\\\n/g'&lt;&lt;&lt;$s|grep .|sort -c$1)\ns=$1\nf||f r\n</code></pre>\n\n<p>The input string is passed as an argument.</p>\n\n<p>The output is returned in the exit code (0 for truthy, 1 for falsy, as usual), as allowed by <a href=\"http://meta.codegolf.stackexchange.com/questions/2447/default-for-code-golf-input-output-methods/5330#5330\">PPCG I/O methods</a>.</p>\n"},{"answer_id":108704,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108704#108704","body":"<h1><a href=\"https://github.com/lmendo/MATL\">MATL</a>, 7 bytes</h1>\n\n<pre><code>dZSuz2&lt;\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/matl#@58SFVxaZWTz/7@6o5Ozi6ubOgA\" title=\"MATL – TIO Nexus\">Try it online!</a> Or <a href=\"https://tio.run/nexus/matl#S/ifEhVcWmVk898l5L@6o5Ozi6ubOpd6VGQEkMzLBxIlRampQKoQiEHSzkC6MrUYSKakpqaoAwA\">verify all test cases</a>.</p>\n\n<pre><code>d     % Implicitly input string. Push array of consecutive differences of code points\nZS    % Sign. Transforms each entry into 1, 0 or -1\nu     % Unique\nz     % Number of nonzeros\n2&lt;    % Is it less than 2? Implicit display\n</code></pre>\n"},{"answer_id":108703,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108703#108703","body":"<h2>Pyke, 5 bytes</h2>\n<pre><code>SD_]{\n</code></pre>\n<p><a href=\"http://pyke.catbus.co.uk/?code=SD_%5D%7B&amp;input=abcd\" rel=\"nofollow noreferrer\">Try it here!</a></p>\n<pre><code>S     -   sorted(input)\n   ]  -  [^, v]\n D    -    ^\n  _   -   reverse(^)\n    { - input in ^\n</code></pre>\n"},{"answer_id":108692,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108692#108692","body":"<h1><a href=\"https://docs.python.org/2/\">Python 2</a>, <s>53</s> <s>44</s> <s>40</s> 39 bytes</h1>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:`sorted(a)`[2::5]in(a,a[::-1])\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/python2#S7ON@Z@TmJuUkqiQaJVQnF9UkpqikaiZEG1kZWUam5mnkaiTGG1lpWsYq/k/Lb9IIVMhMw@ICkpLNDStuBQKijLzShQyddQVdO0U1HXSNDI1/0crOTo5u7i6KekoRUVGAMm8fCBRUpSaCqQKgRgk7QykK1OLlWK5AA\" title=\"Python 2 – TIO Nexus&quot;/ZgIyGm9eSaOZk25@MkQogyyNDjXbkesIWVg4CiZP8Wga2DOHAuw1dDuQdtgGOugDsfu1J@VVbfrRRiToGTvRYv0f3fir1/V2PwA &quot;Python 2 – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108690,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108690#108690","body":"<h1>MATL, 8 bytes</h1>\n<pre><code>tPvGSXma\n</code></pre>\n<p><a href=\"https://tio.run/nexus/matl#@18SUOYeHJGb@P@/uqOTi7OLOgA\" rel=\"nofollow noreferrer\"><strong>Try it Online!</strong></a></p>\n<p><strong>Explanation</strong></p>\n<pre><code>        % Implicitly grab the input as a string\ntP      % Create a copy that is reversed\nv       % Vertically concatenate these\nGS      % Grab the input again and sort it\nXm      % Check if each row of the normal and reversed matrix is equal to the sorted one\na       % Check if either row matched\n        % Implicitly display the result\n</code></pre>\n"},{"answer_id":108687,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108687#108687","body":"<h1>MATLAB / Octave, 38 bytes</h1>\n<pre><code>@(x)any(all([x;flip(x)]'==sort(x)',1))\n</code></pre>\n<p><a href=\"http://ideone.com/613pjC\" rel=\"nofollow noreferrer\">Online demo</a></p>\n"},{"answer_id":108688,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108688#108688","body":"<h2><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, 36 bytes</h2>\n\n<p>Byte count assumes ISO 8859-1 encoding.</p>\n\n<pre><code>$\n¶$_¶$_\nO^#`\\G.\nOr`.\\G\n(.+)\\D*\\b\\1$\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#U9VwT/ivwnVom0o8CHP5xyknxLjrcfkXJejFuHNp6GlrxrhoxSTFGKr8/@/o5Ozi6sYVFRnBlZfPVVKUmspVyAUSdOaqTC2GsJwcAQ\" rel=\"nofollow noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":108683,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108683#108683","body":"<h1>JavaScript (ES6), 43 bytes</h1>\n\n<pre><code>([...s],q=s+\"\")=&gt;q==s.sort()|q==s.reverse()\n</code></pre>\n"},{"answer_id":108681,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108681#108681","body":"<h1>TI-Basic, 66 + 78 = 144 bytes</h1>\n\n<pre><code>Input Str1\nFor(I,1,length(Str1\ninString(Str2,sub(Str1,I,1-&gt;L1(I\nEnd\nL1-&gt;L2\nAns-&gt;L3\nSortA(L2\nSortD(L3\nL1=L2 or L1=L3\n</code></pre>\n\n<p>And in <code>Str2</code> you must have this (+78 bytes):</p>\n\n<pre><code>`ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\n</code></pre>\n"},{"answer_id":108680,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108680#108680","body":"<h1><a href=\"https://github.com/PowerShell/PowerShell\" rel=\"nofollow noreferrer\">PowerShell</a>, 61 bytes</h1>\n\n\n\n<pre class=\"lang-powershell prettyprint-override\"><code>param($a)$a-in-join(($b=[char[]]$a)|sort),-join($b|sort -des)\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/powershell#@1@QWJSYq6GSqKmSqJuZp5uVn5mnoaGSZBudnJFYFB0bC5SpKc4vKtHUgcipJIG5CropqcWa////r0wtBgA\" rel=\"nofollow noreferrer\" title=\"PowerShell – TIO Nexus\">Try it online!</a></p>\n\n<p>Takes input <code>$a</code>, then checks whether it's <code>-in</code> a two-element array. The array is formed by taking <code>$a</code>, casting it as a <code>char</code>-array, storing that in <code>$b</code> for later, piping it to <code>sort-object</code> which sorts lexically. The other element is <code>$b</code> sorted in <code>-des</code>cending order.</p>\n"},{"answer_id":108679,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108679#108679","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 5 <a href=\"https://github.com/DennisMitchell/jelly/wiki/Code-page\" rel=\"nofollow noreferrer\">bytes</a></h1>\n\n<pre><code>,Ue@Ṣ\n</code></pre>\n\n<p><strong><a href=\"https://tio.run/nexus/jelly#@68TmurwcOei////lxSlpgIA\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></strong></p>\n\n<h1>How?</h1>\n\n<pre><code>,Ue@Ṣ - Main link: string\n,     - pair string with\n U    - reverse(string)\n    Ṣ - sorted(string)\n  e@  - exists in with reversed arguments\n</code></pre>\n"},{"answer_id":108676,"question_id":108675,"link":"https://codegolf.stackexchange.com/questions/108675/is-this-word-lexically-ordered/108676#108676","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E\" rel=\"noreferrer\">05AB1E</a>, 5 bytes</h1>\n\n<pre><code>Â)¤{å\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/05ab1e#@3@4SfPQkurDS///ryxOBQA\" rel=\"noreferrer\" title=\"05AB1E – TIO Nexus\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>Â)     # pair the input with it's reverse in a list\n  ¤{   # get a copy of the reverse and sort it\n    å  # check if the sorted copy is in the list of [input,reverse_input]\n</code></pre>\n"},{"answer_id":108307,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/108307#108307","body":"<h1>SmileBASIC, 66 bytes</h1>\n<pre><code>INPUT L$N=INSTR(@bdfh,L$)&lt;0!=VAL(POP(L$))MOD 2?&quot;light&quot;*N;&quot;dark&quot;*!N\n</code></pre>\n<p>explanation:</p>\n<pre><code>INSTR(@bdfh,L$)&lt;0 'Checks if L$ is b,d,f,h. @bdfh is a label, equivalent to the string &quot;@bdfh&quot;\n!= 'used as a logical XOR, which SB doesn't have.\nVAL(POP(L$))MOD 2 'Checks if the row is odd. Also removes the second character of L$, \n                   'which makes the first check shorter since SB evaluates right to left.\n?&quot;light&quot;*N;&quot;dark&quot;*!N 'this turned out to be shorter than using IF/THEN/ELSE.\n</code></pre>\n"},{"answer_id":103329,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/103329#103329","body":"<h1>Ruby (as function) 31 bytes</h1>\n<pre><code>-&gt;n{a,b=1,0;n.times{a=b+b=a};b}\n</code></pre>\n"},{"answer_id":106933,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/106933#106933","body":"<h1>Perl, 31 bytes</h1>\n\n<p>Just going through all the numbers until one fits:</p>\n\n<pre><code>perl -lpe '1while++$n&lt;length$_.$n;$_.=$n'\n</code></pre>\n"},{"answer_id":103385,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103385#103385","body":"<h1>C, <s>67</s> <s>65</s> 61 bytes</h1>\n<pre class=\"lang-c prettyprint-override\"><code>x;f(*v){printf(&quot;%d&quot;,(int)log10(x=-~printf(v))*-~(x%10&gt;8)+x);}\n</code></pre>\n<p><a href=\"http://melpon.org/wandbox/permlink/vNFaprC3ZB9tthpp\" rel=\"nofollow noreferrer\">Wandbox</a></p>\n"},{"answer_id":106165,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106165#106165","body":"<h1>C++ 112 Bytes</h1>\n<p>Thanks to @original.legin for helping me save bytes.</p>\n<pre><code>#include&lt;vector&gt;\n#include&lt;algorithm&gt;\nfloat a(float*b,int s){std::sort(b,b+s);return(b[s/2-(s&amp;1^1)]+b[s/2])/2;}\n</code></pre>\n<p>Usage:</p>\n<pre><code>    int main()\n    {\n        int n = 4;\n        float e[4] = {1,4,3,2};\n        std::cout&lt;&lt;a(e,n); /// Prints 2.5\n\n        n = 9;\n        float e1[9] = {1,2,3,4,5,6,7,8,9};\n        std::cout&lt;&lt;a(e1,n); /// Prints 5\n\n        n = 13;\n        float e2[13] = {1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,-5,100000,1.3,1.4};\n        std::cout&lt;&lt;a(e2,n); /// Prints 1.5\n\n        return 0;\n    }\n</code></pre>\n"},{"answer_id":106160,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106160#106160","body":"<h1><a href=\"https://github.com/DJMcMayhem/Brain-Flak\" rel=\"noreferrer\">Brain-Flak</a>, 914 + 1 = 915 bytes</h1>\n<pre><code>([]){({}[()]&lt;(([])&lt;{({}[()]&lt;([([({}&lt;(({})&lt;&gt;)&lt;&gt;&gt;)&lt;&gt;&lt;({}&lt;&gt;)&gt;]{}&lt;(())&gt;)](&lt;&gt;)){({}())&lt;&gt;}{}({}&lt;&gt;&lt;{}{}&gt;){{}&lt;&gt;(&lt;({}&lt;({}&lt;&gt;)&lt;&gt;&gt;)&lt;&gt;({}&lt;&gt;)&gt;)}{}({}&lt;&gt;)&lt;&gt;&gt;)}{}&lt;&gt;{}&gt;[()]){({}[()]&lt;({}&lt;&gt;)&lt;&gt;&gt;)}{}&lt;&gt;&gt;)}{}([]&lt;(()())&gt;(&lt;&gt;))&lt;&gt;{(({})){({}[()])&lt;&gt;}{}}{}&lt;&gt;([{}()]{}&lt;(())&gt;){((&lt;{}{}([[]]()){({}()()&lt;{}&gt;)}{}(({}){}&lt;([]){{}{}([])}{}&gt;)&gt;))}{}{(&lt;{}([[]]()()){({}()()&lt;{}&gt;)}{}({}{}&lt;([]){{}{}([])}{}&gt;)&gt;)}{}([(({}&lt;((((((()()()){}){}){}()){})[()()()])&gt;)&lt;(())&gt;)](&lt;&gt;)){({}())&lt;&gt;}{}&lt;&gt;{}{}&lt;&gt;(({})){{}{}&lt;&gt;(&lt;(())&gt;)}{}(({}&lt;&gt;)&lt;{(&lt;{}([{}])&gt;)}{}{(({})&lt;((()()()()()){})&gt;)({}(&lt;&gt;))&lt;&gt;{(({})){({}[()])&lt;&gt;}{}}{}&lt;&gt;([{}()]{})({}&lt;({}&lt;&gt;)&lt;&gt;&gt;((((()()()){}){}){}){})((()()()()()){})&lt;&gt;({}&lt;&gt;)(()()){({}[()]&lt;([([({})](&lt;()&gt;))](&lt;&gt;())){({}())&lt;&gt;}{}&lt;&gt;{}{}&lt;&gt;(({})){{}{}&lt;&gt;(&lt;(())&gt;)}{}(({})&lt;&gt;)&lt;&gt;{(&lt;{}([{}])&gt;)}{}({}&lt;&gt;)&lt;&gt;({}&lt;&gt;&lt;({}&lt;&gt;)&gt;)&gt;)}{}({}(&lt;&gt;))&lt;&gt;([()]{()&lt;(({})){({}[()])&lt;&gt;}{}&gt;}{}&lt;&gt;&lt;{}{}&gt;)&lt;&gt;(({}{}[(())])){{}{}(((&lt;{}&gt;)))}{}{}{(&lt;{}&lt;&gt;([{}])&gt;&lt;&gt;)}{}&lt;&gt;}{}&gt;){(&lt;{}(((((()()()()())){}{})){}{})&gt;)}{}\n</code></pre>\n<p>Requires the <code>-A</code> flag to run.</p>\n<p><a href=\"https://tio.run/nexus/brain-flak#lVNbasQwDLyKP6WPfDR9QMAYeg6jkxifPdVo5H2RQrubbCxbI81MtKd00yFjdlGrgqjew@7fMX17TK3NL9wVW02bxYlqUxOPo4qHtU1/IqUOXzUdWEugiGSZrKIrO7YnVg5C@wdaz@fEdNBV9I/uDguaNxSJBEA6mN35emZwk97NZDEXVz5ZG4WQDW@YaBpavJE/B@AJvoIDcgmOSGhpfJQFJi8uO3fN83/1FyaFMkrOINNTASxLpmMa9@lRXZ1X96ao/Wcb9eldXgjB9dpjvXG5efY4Y9AosBda/fzfajmfr3oXSc7jGrl1lIoFRIZovVLO/jnKpIBjb21JRWKavFIYzOGgWU6i5szynxDs7n6FEwpQ/kbyeX6Vj7If5e0oe9k@y7aXo2zvvndu3z8\" rel=\"noreferrer\" title=\"Brain-Flak – TIO Nexus\">Try it online!</a></p>\n<h1>Explanation</h1>\n<p>The backbone of this algorithm is a bubble sort I wrote a while ago.</p>\n<pre><code>([]){({}[()]&lt;(([])&lt;{({}[()]&lt;([([({}&lt;(({})&lt;&gt;)&lt;&gt;&gt;)&lt;&gt;&lt;({}&lt;&gt;)&gt;]{}&lt;(())&gt;)](&lt;&gt;)){({}())&lt;&gt;}{}({}&lt;&gt;&lt;{}{}&gt;){{}&lt;&gt;(&lt;({}&lt;({}&lt;&gt;)&lt;&gt;&gt;)&lt;&gt;({}&lt;&gt;)&gt;)}{}({}&lt;&gt;)&lt;&gt;&gt;)}{}&lt;&gt;{}&gt;[()]){({}[()]&lt;({}&lt;&gt;)&lt;&gt;&gt;)}{}&lt;&gt;&gt;)}{}\n</code></pre>\n<p>I don't remember how this works so don't ask me.  But I do know it sorts the stack and even works for negatives</p>\n<p>After everything has been sorted I find 2 times the median with the following chunk</p>\n<pre><code>([]&lt;(()())&gt;(&lt;&gt;))&lt;&gt;{(({})){({}[()])&lt;&gt;}{}}{}&lt;&gt;([{}()]{}&lt;(())&gt;)  #Stack height modulo 2\n{((&lt;{}{}          #If odd\n ([[]]())         #Push negative stack height +1\n {                #Until zero \n  ({}()()&lt;{}&gt;)    #add 2 to the stack height and pop one\n }{}              #Get rid of garbage\n (({}){}&lt;         #Pickup and double the top value\n ([]){{}{}([])}{} #Remove everything on the stack\n &gt;)               #Put it back down\n&gt;))}{}            #End if\n{(&lt;{}                     #If even\n  ([[]]()())              #Push -sh + 2\n  {({}()()&lt;{}&gt;)}{}        #Remove one value for every 2 in that value\n  ({}{}&lt;([]){{}{}([])}{}&gt;)#Add the top two and remove everything under them\n&gt;)}{}                     #End if\n</code></pre>\n<p>Now all that is left is to make convert to ASCII</p>\n<pre><code>([(({}&lt;((((((()()()){}){}){}()){})[()()()])&gt;)&lt;(())&gt;)](&lt;&gt;)){({}())&lt;&gt;}{}&lt;&gt;{}{}&lt;&gt;(({})){{}{}&lt;&gt;(&lt;(())&gt;)}{}(({}&lt;&gt;)&lt;\n{(&lt;{}([{}])&gt;)}{}  #Absolute value (put &quot;/2&quot; beneath everything)\n\n{                 #Until the residue is zero \n(({})&lt;            #|Convert to base 10\n((()()()()()){})  #|\n&gt;)                #|...\n({}(&lt;&gt;))&lt;&gt;{(({})){({}[()])&lt;&gt;}{}}{}&lt;&gt;([{}()]{})\n({}&lt;({}&lt;&gt;)&lt;&gt;&gt;((((()()()){}){}){}){})((()()()()()){})&lt;&gt;({}&lt;&gt;)\n                  #|\n(()()){({}[()]&lt;([([({})](&lt;()&gt;))](&lt;&gt;())){({}())&lt;&gt;}{}&lt;&gt;{}{}&lt;&gt;(({})){{}{}&lt;&gt;(&lt;(())&gt;)}{}(({})&lt;&gt;)&lt;&gt;{(&lt;{}([{}])&gt;)}{}({}&lt;&gt;)&lt;&gt;({}&lt;&gt;&lt;({}&lt;&gt;)&gt;)&gt;)}{}({}(&lt;&gt;))&lt;&gt;([()]{()&lt;(({})){({}[()])&lt;&gt;}{}&gt;}{}&lt;&gt;&lt;{}{}&gt;)&lt;&gt;(({}{}[(())])){{}{}(((&lt;{}&gt;)))}{}{}{(&lt;{}&lt;&gt;([{}])&gt;&lt;&gt;)}{}&lt;&gt;\n}{}               #|\n&gt;)\n{(&lt;{}(((((()()()()())){}{})){}{})&gt;)}{}  #If it was negative put a minus sign\n</code></pre>\n"},{"answer_id":106407,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106407#106407","body":"<h1>Racket, 95 bytes</h1>\n\n<p>Using the trusty old <code>match</code> syntax. The pattern <code>(list _ m ... _)</code> matches the middle of a list (that is, it omits the first and last element).</p>\n\n<pre class=\"lang-rkt prettyprint-override\"><code>(λ(l)(let f([l(sort l &lt;)])(match l[(list x)x][(list x y)(/(+ x y)2)][(list _ m ... _)(f m)])))\n</code></pre>\n\n<h2>Ungolfed</h2>\n\n<pre class=\"lang-rkt prettyprint-override\"><code>(λ (l)\n  (let f ([l (sort l &lt;)])\n    (match l\n      [(list x) x]\n      [(list x y) (/ (+ x y) 2)]\n      [(list _ m ... _) (f m)])))\n</code></pre>\n"},{"answer_id":106405,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106405#106405","body":"<h1>Japt, 20 bytes</h1>\n\n<pre><code>n gV=0|½*Ul)+Ug~V)/2\n</code></pre>\n\n<p><a href=\"http://ethproductions.github.io/japt/?v=1.4.3&amp;code=biBnVj0wfL0qVWwpK1VnflYpLzI=&amp;input=WzEgNCA5IDE2IDI1IDM2XQ==\" rel=\"nofollow noreferrer\">Test it online!</a> Japt really lacks any built-ins necessary to create a really short answer for this challenge...</p>\n\n<h3>Explanation</h3>\n\n<pre><code>n gV=0|½*Ul)+Ug~V)/2  // Implicit: U = input list\nn                     // Sort U.\n   V=0|½*Ul)          // Set variable V to floor(U.length / 2).\n  g                   // Get the item at index V in U.\n            +Ug~V     // Add to that the item at index -V - 1 in U.\n                 )/2  // Divide by 2 to give the median.\n                      // Implicit: output result of last expression\n</code></pre>\n"},{"answer_id":106207,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106207#106207","body":"<h1>C#, 126 bytes</h1>\n\n<pre><code>using System.Linq;float m(float[] a){var x=a.Length;return a.OrderBy(g=&gt;g).Skip(x/2-(x%2==0?1:0)).Take(x%2==0?2:1).Average();}\n</code></pre>\n\n<p>Pretty straightforward, here with LINQ to order the values, skip half the list, take one or two values depending on even/odd and average them. </p>\n"},{"answer_id":106393,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106393#106393","body":"<p>Ruby <strike>50</strike> 48 Bytes</p>\n\n<p><em>-2 bytes thanks to @Conor O'Brien</em></p>\n\n\n\n<pre class=\"lang-rb prettyprint-override\"><code>-&gt;(l){l.sort!;e=l.length;(l[~-e/2]+l[e/2])/2.0}\n</code></pre>\n"},{"answer_id":106153,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106153#106153","body":"<h1><a href=\"https://docs.python.org/2/\" rel=\"noreferrer\">Python 2</a>, 48 bytes</h1>\n\n<p>An unnamed function which returns the result. -1 byte thanks to xnor.</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>lambda l:l.sort()or(l[len(l)/2]+l[~len(l)/2])/2.\n</code></pre>\n\n<p>The first step is obviously to sort the array, using <code>l.sort()</code>. However, we can only have one statement in a lambda, so we utilise the fact that the sort function returns <code>None</code> by adding an <code>or</code> - as <code>None</code> is falsy in Python, this tells it to evaluate and return the next part of the statement.</p>\n\n<p>Now we have the sorted list, we need to find either the middle, or the middle two, values.</p>\n\n<p>Using a conditional to check the length's parity would be too verbose, so instead we get the indexes <code>len(l)/2</code> and <code>~len(l)/2</code>:</p>\n\n<ul>\n<li>The first is <strong>floor(length / 2)</strong>, which gets the middle element if the length is odd, or the left item in the central pair if the length is even.</li>\n<li>The second is the binary inversion of the list length's, evaluating to <strong>-1 - floor(length / 2)</strong>. Due Python's negative indexing, this essentially does the same as the first index, but backwards from the end of the array.</li>\n</ul>\n\n<p>If the list is of odd length, these indexes will point to the same value. If it is of even length, then they will point to the central two items.</p>\n\n<p>Now that we have these two indexes, we find these values in the list, sum them, and divide them by 2. The trailing decimal place in <code>/2.</code> makes sure that it is float division rather than integer division.</p>\n\n<p>The result is implicitly returned, as this is a lambda function.</p>\n\n<p><a href=\"https://tio.run/nexus/python2#@5@mYKuQk5iblJKokGOVo1ecX1SioZlfpJETnZOap5GjqW8Uq50TXQfnALHe/4KizLwSjTSNzLyCUqByTc3/0YY6JjpGOsax/wE\" rel=\"noreferrer\"><strong>Try it online!</strong></a></p>\n"},{"answer_id":106281,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106281#106281","body":"<h1>Pari/GP - 37 <s> 39 </s> Bytes</h1>\n\n<p>Let <em>a</em> be a rowvector containing the values.</p>\n\n<pre><code>b=vecsort(a);n=#b+1;(b[n\\2]+b[n-n\\2])/2  \\\\ 39 byte              \n\nn=1+#b=vecsort(a);(b[n\\2]+b[n-n\\2])/2    \\\\ obfuscated but only 37 byte\n</code></pre>\n\n<p>Since Pari/GP is interactive, no additional command is needed to display the result.</p>\n\n<p><hr>\nFor the <strong><em>\"try-it-online\"</em></strong> link a line before and after is added. To get printed, the median-result in stored in variable <em>w</em>               </p>\n\n<pre><code>a=vector(8,r,random(999))           \nn=1+#b=vecsort(a);w=(b[n\\2]+b[n-n\\2])/2      \nprint(a);print(b);print(w)       \n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/pari-gp#@59oW5aaXJJfpGGhU6RTlJiXkp@rYWlpqanJlWtrqK2cBJIuzi8q0UjUtC631UiKzo0xitUGUroghqa@EVdBUWYeWBrCSIIxyjX//wcA\" rel=\"nofollow noreferrer\" title=\"Pari/GP – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":106280,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106280#106280","body":"<h2>CJAM - 21</h2>\n\n<pre><code>q~]$__,2/=\\_,(2/=+2d/\n</code></pre>\n\n<ul>\n<li><code>q~]</code> reads input to array</li>\n<li><code>$__</code> sorts it and makes 2 copies</li>\n<li><code>,</code> gets length of array</li>\n<li><code>2/</code> divides that by 2 rounded down</li>\n<li><code>=</code> finds the number at that index</li>\n<li><code>/_</code> puts original array at top of stack and copies it</li>\n<li><code>,(</code> gets length of array - 1</li>\n<li><code>2/</code> divides that by 2 rounded down</li>\n<li><code>=</code> finds the number at that index</li>\n<li><code>+</code> adds the two array elements extracted <code>2d/</code> divides them by 2\nas a double (so no rounding)</li>\n</ul>\n\n<p>If the number of array elements N is odd, floor(N/2) = floor((N-1)/2). If N is even the two center elements are selected and the mean is found. </p>\n\n<p>Longer but working alternative strategies:</p>\n\n<pre><code>q~]$__,2/)&lt;_,@W%&lt;&amp;_:+\\,d/\nq~]$:A,2/_(A,2%$A=@A=+2d/\\;\nq~]$_Vf*_,2/.5t_W%.+.*:+\n</code></pre>\n"},{"answer_id":106332,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106332#106332","body":"<h1>C#, 75 bytes</h1>\n<pre><code>a=&gt;{Array.Sort(a);int m=a.Length;return m%2&gt;0?a[m/2]:(a[m/2-1]+a[m/2])/2;};\n</code></pre>\n<p>An anonymous function which computes the median.</p>\n<p>Full program with ungolfed method and test cases:</p>\n<pre><code>using System;\n\npublic class Program\n{\n    public static void Main()\n    {\n        Func&lt;double[],double&gt; f =\n        a =&gt;\n        {\n            Array.Sort(a);  // built-in sort function for arrays\n            int m = a.Length;   // stores the number of elements from the array\n            return m % 2 &gt; 0 ? a[m/2] : ( a[m/2-1] + a[m/2] ) / 2;\n            // if the array has an odd number of elements, the central number will be returned\n            // otherwise, the average of the two central elements\n        };\n\n        // test cases:\n        Console.WriteLine(f(new double[]{1,2,3,4,5,6,7,8,9}));  // 5\n        Console.WriteLine(f(new double[]{1,4,3,2}));    // 2.5\n        Console.WriteLine(f(new double[]{1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,-5,100000,1.3,1.4}));  // 1.5\n    }\n}\n</code></pre>\n"},{"answer_id":106216,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106216#106216","body":"<h1>T-SQL, <s>101</s> 67</h1>\n<pre><code>DECLARE @ table(i real)\nINSERT @ values(1),(3),(20),(4)\n\nSELECT top 1PERCENTILE_CONT(.5)WITHIN GROUP(ORDER BY i)OVER()FROM @\n</code></pre>\n<p><strong><a href=\"https://data.stackexchange.com/stackoverflow/query/613438/compute-the-median\" rel=\"nofollow noreferrer\">Try it out</a></strong></p>\n"},{"answer_id":106308,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106308#106308","body":"<h1>Swift, 93 bytes</h1>\n<pre><code>let m:([Double])-&gt;Double={{c,s in c%2==0 ?(s[c/2-1]+s[c/2])/2:s[c/2]}($0.count,$0.sorted())}\n</code></pre>\n<p>This takes about 10 seconds to compile on my machine but it works. It declares the constant <code>m</code> of type <code>[Double] -&gt; Double</code>.</p>\n"},{"answer_id":106305,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106305#106305","body":"<h1>Haxe, 104 bytes</h1>\n\n<p>Not amazing, what with the <code>function</code> keywords and a mandatory sorting function …</p>\n\n<pre><code>function f(l,?a)return(l[(a={l[0]+=.0;l.sort(function(x,y)return x&gt;y?1:-1);l.length;})&gt;&gt;1]+l[a-1&gt;&gt;1])/2;\n</code></pre>\n\n<p>With some whitespace:</p>\n\n<pre><code>function f(l, ?a)\n  return (\n      l[(a = {\n          l[0] += .0;\n          l.sort(\n               function(x, y) return x &gt; y ? 1 : -1\n             );\n          l.length;\n        }) &gt;&gt; 1]\n      + l[a - 1 &gt;&gt; 1]\n    ) / 2;\n</code></pre>\n\n<p>I used <code>l[0]+=.0;</code> to let Haxe know the type of <code>l</code>. The alternative would be <code>l:Array&lt;Float&gt;</code> in the arguments. Then <code>l</code> is sorted, its length is stored in <code>a</code>, and then we basically do <code>(l[a / 2] + l[(a - 1) / 2]) / 2</code>.</p>\n"},{"answer_id":106158,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106158#106158","body":"<h1>Python3 - <s>31</s> 30 bytes</h1>\n<p><em>Saved a byte thanks to @Dennis!</em></p>\n<p>I wasn't planning on a builtin answer, but I found <a href=\"https://docs.python.org/3/library/statistics.html\" rel=\"noreferrer\">this module</a> and thought it was really cool cuz I had no idea it existed.</p>\n<pre><code>from statistics import*;median\n</code></pre>\n<p><a href=\"http://vihan.org/p/tio/?l=python3&amp;p=KyjKzCvRiI/PzC3ILyqJj9dQLy5JLMksLslMLlbX1MtNTclMzNNILUvM0cjMKygt0dAEgv/RhnqmOoSwLpAyAAEgzxiITWIB\" rel=\"noreferrer\">Try it online here</a>.</p>\n"},{"answer_id":106152,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106152#106152","body":"<h1>Matlab/Octave, 6 bytes</h1>\n<p>A boring built-in:</p>\n<pre><code>median\n</code></pre>\n<p><a href=\"https://tio.run/nexus/octave#@5@bmpKZmKcRbahjomOsYxSr@f8/AA\" rel=\"nofollow noreferrer\" title=\"Octave – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":106269,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106269#106269","body":"<h1>TI-Basic, 2 bytes</h1>\n<pre><code>median(Ans\n</code></pre>\n<p>Very straightforward.</p>\n"},{"answer_id":106264,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106264#106264","body":"<h1>Vim, 62 bytes</h1>\n\n<p>I originally did this in V using only text manipulation until the end, but got frustrated with handling [X] and [X,Y], so here's the easy version.  They're about the same length.</p>\n\n<pre><code>c$&#15;:let m=sort(&#18;\")[(len(&#18;\")-1)/2:len(&#18;\")/2]\n&#18;=(m[0]+m[-1])/2.0\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/v#@5@swm@Vk1qikGtbnF9UoiGkpBmtkZOaB2LoGmrqG1lBOfpGsVxCthq50Qax2rnRuoaxQBE9g///ow31THUIYV0gZQACQJ4xEJvEAgA\" rel=\"nofollow noreferrer\" title=\"V – TIO Nexus\">Try it online!</a></p>\n\n<p>Unprintables:</p>\n\n<pre><code>c$^O:let m=sort(^R\")[(len(^R\")-1)/2:len(^R\")/2]\n^R=(m[0]+m[-1])/2.0\n</code></pre>\n\n<p>Honorable mention:</p>\n\n<ul>\n<li><code>^O</code> takes you out of insert mode for one command (the let command).</li>\n<li><code>^R\"</code> inserts the text that was yanked (in this case the list)</li>\n</ul>\n"},{"answer_id":106218,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106218#106218","body":"<h1>Java 7, 99 bytes</h1>\n\n<p>Golfed:</p>\n\n<pre><code>float m(Float[]a){java.util.Arrays.sort(a);int l=a.length;return l%2&gt;0?a[l/2]:(a[l/2-1]+a[l/2])/2;}\n</code></pre>\n\n<p>Ungolfed:</p>\n\n<pre><code>float m(Float[] a)\n{\n    java.util.Arrays.sort(a);\n    int l = a.length;\n    return l % 2 &gt; 0 ? a[l / 2] : (a[l / 2 - 1] + a[l / 2]) / 2;\n}\n</code></pre>\n\n<p><a href=\"https://ideone.com/bEhZOY\" rel=\"nofollow noreferrer\">Try it online</a></p>\n"},{"answer_id":106235,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106235#106235","body":"<h2>Clojure, 65 bytes</h2>\n\n<pre><code>#(/(apply +(take 2(drop(-(count %)1)(sort(for[c % i[0 1]]c)))))2)\n</code></pre>\n\n<p>An other approach I tried:</p>\n\n<pre><code>#(apply +(map *(for[i(range)](get{-2 0.5 -1 1 0 0.5}(-(* i 2)(count %))0))(sort %)))\n</code></pre>\n"},{"answer_id":106232,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106232#106232","body":"<h2>Common Lisp, 89</h2>\n\n<pre><code>(lambda(s &amp;aux(m(1-(length s)))(s(sort s'&lt;)))(/(+(nth(floor m 2)s)(nth(ceiling m 2)s))2))\n</code></pre>\n\n<p>I compute the mean of elements at position <code>(floor middle)</code> and <code>(ceiling middle)</code>, where <code>middle</code> is the zero-based index for the middle element of the sorted list. It is possible for <code>middle</code> to be a whole number, like <code>1</code> for an input list of size 3 such as <code>(10 20 30)</code>, or a fraction for lists with an even numbers of elements, like <code>3/2</code> for <code>(10 20 30 40)</code>. In both cases, we compute the expected median value.</p>\n\n<pre><code>(lambda (list &amp;aux\n             (m (1-(length list)))\n             (list (sort list #'&lt;)))\n  (/ (+ (nth (floor m 2) list)\n        (nth (ceiling m 2) list))\n     2))\n</code></pre>\n"},{"answer_id":106219,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106219#106219","body":"<h1>R, 6 bytes</h1>\n\n<pre><code>median\n</code></pre>\n\n<p>Not surprising that R, a statistical programming language, has this built-in.</p>\n"},{"answer_id":106217,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106217#106217","body":"<h2><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"noreferrer\">Jelly</a>, 9 bytes</h2>\n\n<pre><code>L‘HịṢµ÷LS\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/jelly#AR4A4f//TOKAmEjhu4vhuaLCtcO3TFP///9bMSw0LDMsMl0\" rel=\"noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n\n<h3>Explanation</h3>\n\n<p>I'm still getting the hang of Jelly... I wasn't able to find built-ins for either the median or the mean of a list, but it's very convenient for this challenge that Jelly allows non-integer indices into lists, in which case it will return a pair of the two closest values. That means we can work with half the input length as an index, and get a pair of values when we need to average it.</p>\n\n<pre><code>L          Get the length of the input.\n ‘         Increment it.\n  H        Halve it. This gives us the index of the median for an odd-length list\n           (Jelly uses 1-based indexing), and a half-integer between the two indices\n           we need to average for even-length lists.\n   ịṢ      Use this as an index into the sorted input. As explained above this will\n           either give us the median (in case of an odd-length list) or a pair of\n           values we'll now need to average.\n     µ     Starts a monadic chain which is then applied to this median or pair...\n      ÷L     Divide by the length. L treats atomic values like singleton lists.\n        S    Sum. This also treats atomic values like singleton lists. Hence this\n             monadic chain leaves a single value unchanged but will return the\n             mean of a pair.\n</code></pre>\n"},{"answer_id":106162,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106162#106162","body":"<h1>JavaScript, <strike>57</strike> 52 bytes</h1>\n\n<pre><code>v=&gt;(v.sort((a,b)=&gt;a-b)[(x=v.length)&gt;&gt;1]+v[--x&gt;&gt;1])/2\n</code></pre>\n\n<p>Sort the array numerically.  If the array is an even length, find the 2 middle numbers and average them.  If the array is odd, find the middle number twice and divide by 2.</p>\n"},{"answer_id":106176,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106176#106176","body":"<h2>Racket 113 bytes</h2>\n\n<pre><code>(let*((L(sort L &gt;))(n(length L))(r list-ref))(if(odd? n)(r L(floor(/ n 2)))(/(+(r L(-(/ n 2)1))(r L(/ n 2)))2)))\n</code></pre>\n\n<p>Ungolfed:</p>\n\n<pre><code>(define (median L)\n  (let* ((L (sort L &gt;))\n         (n (length L))\n         (lr list-ref))\n    (if (odd? n)\n        (lr L (floor (/ n 2)))\n        (/(+ (lr L (sub1(/ n 2)))\n             (lr L (/ n 2)))\n          2))))\n</code></pre>\n\n<p>Testing: </p>\n\n<pre><code>(median '(1 2 3))\n(median '(1 2 3 4))\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>2\n2 1/2\n</code></pre>\n"},{"answer_id":106167,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106167#106167","body":"\n\n<h1><a href=\"https://perl6.org\" rel=\"nofollow noreferrer\">Perl 6</a>, 31 bytes</h1>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>*.sort[{($/=$_/2),$/-.5}].sum/2\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/perl6#hY7BTsMwDIbveQofoiXp3ASydoBKCw/BrVTT1Aap0kqnJUWgaU/EW/BixSkHjrNk2b9/f7In7@Bjq9uCTdS9OB8KxoYvWLVj56CcE@3HU6jPkpuS74xVyE2q80uj/TQYOxfsbTzBoX93Xio4MwCCn7t92EMJ65/vwYhawKPUyZOqQDTCaH889EEKFKr4W@fu8@ja4LqIEJBWAl59QhQQBsRFxQ19BtB7iK/J5YbCf5jaHbvM9S1a3GCGOW7xDu/xoYG0gpyRkZFhF2l1HOgcr2VK5SYGqQ1ltuDk/AI\" rel=\"nofollow noreferrer\" title=\"Perl 6 – TIO Nexus\">Try it</a></p>\n\n<h2>Expanded:</h2>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>*\\     # WhateverCode lambda ( this is the parameter )\n\n.sort\\ # sort it\n\n[{     # index into the sorted list using a code ref to calculate the positions\n\n  (\n    $/ = $_ / 2 # the count of elements divided by 2 stored in ｢$/｣\n  ),            # that was the first index\n\n  $/ - .5       # subtract 1/2 to get the second index\n\n                # indexing operations round down to nearest Int\n                # so both are effectively the same index if given\n                # an odd length array\n\n}]\\\n\n.sum / 2        # get the average of the two values\n</code></pre>\n"},{"answer_id":106164,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106164#106164","body":"<h1>JavaScript, 273 Bytes</h1>\n\n<pre><code>function m(l){a=(function(){i=l;o=[];while(i.length){p1=i[0];p2=0;for(a=0;a&lt;i.length;a++)if(i[a]&lt;p1){p1=i[a];p2=a}o.push(p1);i[p2]=i[i.length-1];i.pop()}return o})();return a.length%2==1?l[Math.round(l.length/2)-1]:(l[Math.round(l.length/2)-1]+l[Math.round(l.length/2)])/2}\n</code></pre>\n"},{"answer_id":106163,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106163#106163","body":"<h1><a href=\"https://github.com/Mego/Seriously\" rel=\"noreferrer\">Actually</a>, 1 byte</h1>\n\n<pre><code>║\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/actually#@/9o6sT//6MN9Ux1CGFdIGUAAkCeMRCbxAIA\" rel=\"noreferrer\" title=\"Actually – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":106159,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106159#106159","body":"<h1><a href=\"https://www.gnu.org/software/octave/\" rel=\"noreferrer\">Octave</a>, 38 bytes</h1>\n<pre class=\"lang-matlab prettyprint-override\"><code>@(x)mean(([1;1]*sort(x))(end/2+[0 1]))\n</code></pre>\n<p>This defines an anonymous function. Input is a row vector.</p>\n<p><a href=\"https://tio.run/nexus/octave#@@@gUaGZm5qYp6ERbWhtGKtVnF9UAhTS1EjNS9E30o42UDCM1dT8n2abmFdszZUGVKVjpGOsY6JjqmOmY65joWMZqwkRNgEKG0E5eqY6hLAukDIAASDPGIhNYjX/AwA\" rel=\"noreferrer\" title=\"Octave – TIO Nexus\">Try it online!</a></p>\n<h3>Explanation</h3>\n<pre><code>            sort(x)                 % Sort input x, of length k\n      [1;1]*                        % Matrix-multiply by column vector of two ones\n                                    % This vertically concatenates the sort(x) with \n                                    % itself. In column-major order, this effectively \n                                    % repeats each entry of sort(x)\n     (             )(end/2+[0 1])   % Select the entry at position end/2 and the next.\n                                    % Entries are indexed in column-major order. Since\n                                    % the array has 2*k elements, this picks the k-th \n                                    % and (k+1)-th. Because entries were repeated, for\n                                    % odd k this takes the original (k+1)/2-th entry\n                                    % (1-based indexing) twice. For even k this takes\n                                    % the original (k/2)-th and (k/2+1)-th entries\nmean(                            )  % Mean of the two selected entries\n</code></pre>\n"},{"answer_id":106156,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106156#106156","body":"<h1>J, 19 bytes</h1>\n\n<pre><code>&lt;.@-:@#{(/:-:@+\\:)~\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>        (        )~   apply monadic argument twice to dyadic function \n         /:           /:~ = sort the list upwards\n               \\:     \\:~ = sort the list downwards\n           -:@+       half of sum of both lists, element-wise\n&lt;.@-:@#               floor of half of length of list\n       {              get that element from the list of sums\n</code></pre>\n"},{"answer_id":106157,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106157#106157","body":"<h1>Pyth - 11 bytes</h1>\n<p>Finds the average of the middle item taken both backwards and forwards.</p>\n<pre><code>.O@R/lQ2_BS\n</code></pre>\n<p><a href=\"http://pyth.herokuapp.com/?code=.O%40R%2FlQ2_BS&amp;test_suite=1&amp;test_suite_input=%5B1%2C2%2C3%2C4%2C5%2C6%2C7%2C8%2C9%5D%0A%5B1%2C4%2C3%2C2%5D%0A%5B1.5%2C1.5%2C1.5%2C1.5%2C1.5%2C1.5%2C1.5%2C1.5%2C1.5%2C-5%2C100000%2C1.3%2C1.4%5D&amp;debug=0\" rel=\"noreferrer\">Test Suite</a>.</p>\n"},{"answer_id":106150,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106150#106150","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 4 bytes</h1>\n\n<pre><code>.5Xq\n</code></pre>\n\n<p>This finds the 0.5-quantile, which is the median.</p>\n\n<p><a href=\"https://tio.run/nexus/matl#@69nGlH4/3@0oZ6pDiGsC6QMQADIMwZik1gA\" rel=\"nofollow noreferrer\" title=\"MATL – TIO Nexus\">Try it online!</a></p>\n"},{"answer_id":106151,"question_id":106149,"link":"https://codegolf.stackexchange.com/questions/106149/compute-the-median/106151#106151","body":"<h1>Mathematica, 6 bytes</h1>\n<pre><code>Median\n</code></pre>\n<p>As soon as I figure out <a href=\"https://github.com/LegionMammal978/Mthmtca\" rel=\"nofollow noreferrer\">Mthmtca</a>, I'm posting a solution in it.</p>\n"},{"answer_id":103396,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103396#103396","body":"<h1><a href=\"https://www.haskell.org/\" rel=\"nofollow noreferrer\">Haskell</a>, <s>61</s> 60 bytes</h1>\n\n<pre class=\"lang-hs prettyprint-override\"><code>e=length\nl%n|s&lt;-show$l+1,n&gt;e s=s|m&lt;-n+1=(l+1)%m\nc s=s++e s%2\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/haskell#y03MzLPNzCtJLUpMLlFI/p9qm5Oal16SwZWjmldTbKNbnJFfrpKjbaiTZ5eqUGxbXJNro5unbWirARTTVM3lSgYJamsD5VSN/v9PpD0AAA\" rel=\"nofollow noreferrer\" title=\"Haskell – TIO Nexus\">Try it online!</a></p>\n\n<p>Recursive solution. Usage: </p>\n\n<pre><code>Prelude&gt; c \"aaaaaaaaa\"\n\"aaaaaaaaa11\"\n</code></pre>\n"},{"answer_id":104527,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/104527#104527","body":"<h1><a href=\"https://github.com/DennisMitchell/jelly\" rel=\"nofollow noreferrer\">Jelly</a>, 12 bytes</h1>\n\n<p>Many thanks to Dennis for his help in writing this answer. Golfing suggestions welcome. <a href=\"https://tio.run/nexus/jelly#@@9ifWizjy2Xz@F2Q2Vrh////ycmJaekpqVnZGZl5@Tm5RcUFhWXlJaVV1RWUUsGAA\" rel=\"nofollow noreferrer\" title=\"Jelly – TIO Nexus\">Try it online!</a></p>\n\n<pre><code>D;³L=\nLÇ1#;@\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>LÇ1#;@  Main link. Argument: s\n          Runs the helper link until a suitable x is found.\nL       Yields the length of s.\n Ç1#    Calls the helper link until one match is found.\n    ;@  Appends the matching x to s.\n\nD;³L=  Helper link. Argument: x\n         Appends x to s and checks if its length is equal to x.\nD      Convert x from integer to decimal.\n ;³    Append to our original string.\n   L=  Check if the length of this new string is equal to x.\n</code></pre>\n"},{"answer_id":104287,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/104287#104287","body":"<h1>C# / CS Script <s>99</s> <s>87</s> 79 bytes</h1>\n<p>Saved a few bytes switching to a lambda.\nAnd a few more moving the try/catch out of the for loop.</p>\n<pre class=\"lang-c# prettyprint-override\"><code>F=a=&gt;{int i=0,l;try{for(;;)l=(a+(a+a.Length).Length)[++i];}catch{}return a+i;};\n</code></pre>\n<p><a href=\"https://dotnetfiddle.net/08CLkk\" rel=\"nofollow noreferrer\">Try it here</a></p>\n<p>Expanded:</p>\n<pre class=\"lang-c# prettyprint-override\"><code>F =&gt; a\n{\n    // 'i' is for traversing the string\n    // 'l' is just a placeholder\n    int i = 0, l;\n\n    // wrap the loop in a try/catch\n    try\n    {\n        // loop forever\n        for (;;)\n            // assign to 'l' the char at position ++i\n            // throws an IndexOutOfRangeException when it falls off the end\n            l = (a + (a + a.Length).Length)[++i];\n    }\n    // empty catch block\n    catch {}\n\n    // returns a string concat of the input a and index i\n    return a + i;\n}\n</code></pre>\n"},{"answer_id":104282,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/104282#104282","body":"<h2>awk, 27 bytes</h2>\n\n<pre><code>$0=$0length($0length($0NF))\n</code></pre>\n\n<p>Test it:    </p>\n\n<pre><code>$ awk -F '' '$0=$0length($0length($0NF))' file\n7aaaaaa8\n8aaaaaaa9\n9aaaaaaaa11\n97aaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa99\n98aaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa10aaaaaaaa101\n</code></pre>\n"},{"answer_id":104325,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/104325#104325","body":"<h2>awk, 37 bytes</h2>\n\n<pre><code>{FS=\"\";r=$0;$0=r NF;$0=r NF;$0=r NF}1\n</code></pre>\n\n<p>That will work in any awk that splits lines into characters when FS is NULL e.g. GNU awk and most others. WIth other awks you'd have to use the <code>length()</code> function instead of <code>NF</code> to calculate the number of characters in the record, e.g. <code>awk '{r=$0;$0=r length;$0=r length;$0=r length}1' file</code>.</p>\n\n<p>Breakdown:</p>\n\n<pre><code>FS=\"\"    # split the record at every character so NF is a count of characters in the record\nr=$0     # save the original record\n$0=r NF  # append the original length to the original record and cause awk to recalculate NF\n$0=r NF  # append the new length to the original record and cause awk to recalculate NF again\n$0=r NF  # append the final length to the original record for output\n1        # a true condition invoking awks default action of printing the current record\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>$ awk '{FS=\"\";r=$0;$0=r NF;$0=r NF;$0=r NF}1' file\naaa4\n1\naaaaaaaa9\naaaaaaaaa11\na13\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa101\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa102\n</code></pre>\n"},{"answer_id":104298,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/104298#104298","body":"<h1>ForceLang, 83 bytes</h1>\n\n<pre><code>set s io.readln()\nlabel 1\nset n 1+n\nset t s+n\nif t.len=n\n io.write t\n exit()\ngoto 1\n</code></pre>\n"},{"answer_id":104284,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/104284#104284","body":"<h1>&gt;&lt;&gt; (Fish) 35 bytes</h1>\n<pre><code>i:1+?!v:o\nln;v9l&lt;  &gt;\n*9+&gt;:&amp;)?!^1l&amp;a\n</code></pre>\n<p>Takes input onto the stack, checks the length against values 9,99,999... and if the length is larger than add 1 to the stack length.</p>\n"},{"answer_id":104172,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/104172#104172","body":"<h1>Scala, 75 bytes</h1>\n<pre><code>def a(b:String,c:Int=0):String=if((b+c).length&gt;c)a(b,c+1)else b+c\n</code></pre>\n"},{"answer_id":103653,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103653#103653","body":"<p><strong>Under review</strong></p>\n\n<p><strong>Powershell V2.0, 64 bytes</strong></p>\n\n<pre><code>$s=$args[0]\n$s+[string]($s.length+([string]($s.length)).length)\n</code></pre>\n\n<p><strong>Example</strong></p>\n\n<pre><code>PS C:\\Users\\***\\Downloads\\golf&gt; .\\str-length.ps1 'This is my strin3333333333333333333333333333333333333333333333333333\n33333333333333333333333333333333333333333g'\nThis is my strin333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333g113\n</code></pre>\n"},{"answer_id":103598,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103598#103598","body":"<h1><a href=\"http://github.com/mbuettner/labyrinth\" rel=\"nofollow noreferrer\">Labyrinth</a>, <strike>48</strike> <strike>45</strike> 41 bytes</h1>\n\n<pre><code>)\"   10/{:@!\n.,;: _ { _ ;\n   })\"}) 10-9!@\n</code></pre>\n\n<p><a href=\"http://labyrinth.tryitonline.net/#code=KSIgICAxMC97OkAhCi4sOzogXyB7IF8gOwogICB9KSJ9KSAxMC05IUA&amp;input=YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWE\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<p>Saved 4 bytes thanked to @Martin Ender</p>\n"},{"answer_id":103596,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103596#103596","body":"<h2>bash, 47 bytes</h2>\n\n<pre><code> for((n=-1;${#s} != $n;));{ s=$1$[++n];};echo $s\n</code></pre>\n\n<p>Save this as a script, and pass the input string as an argument.</p>\n\n<p>It's a brute force implementation: try each number in turn until you find one which works.</p>\n"},{"answer_id":103580,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103580#103580","body":"<h1>Wolfram, 56</h1>\n<pre><code>#&lt;&gt;ToString@Nest[l+IntegerLength@#&amp;,l=StringLength@#,2]&amp;\n</code></pre>\n<p>Given <code>l = StringLength[x]</code> it appends <code>l + IntegerLength[l + IntegerLength[l]]</code> to <code>x</code>.</p>\n"},{"answer_id":103575,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103575#103575","body":"<h1>PHP, 42 bytes</h1>\n<pre class=\"lang-php prettyprint-override\"><code>while(++$n&lt;strlen($a=$argv[1].$n));echo$a;\n</code></pre>\n<p>Run with <code>-r</code>. Test <a href=\"http://sandbox.onlinephpfunctions.com/code/0b48cf43d8f9bd339f5c94f23dbf26a57541d861\" rel=\"nofollow noreferrer\">at OnlinePHPfunctions</a>.</p>\n"},{"answer_id":103443,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103443#103443","body":"<h2>R, 49 bytes</h2>\n<pre><code>cat(a&lt;-scan(,&quot;&quot;),(t&lt;-nchar(a))+nchar(t+1),sep='')\n</code></pre>\n<p>Pretty straightforward solution.</p>\n"},{"answer_id":103390,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103390#103390","body":"<h2>JavaScript (ES6), 32 bytes</h2>\n\n<pre class=\"lang-js prettyprint-override\"><code>f=(s,n=0)=&gt;(s+n)[n]?f(s,n+1):s+n\n</code></pre>\n\n<h3>How it works</h3>\n\n<pre class=\"lang-js prettyprint-override\"><code>f = (s, n = 0) =&gt;   // given a string 's' and starting with n = 0:\n  (s + n)[n] ?      // if the Nth character of (s + n) exists:\n    f(s, n + 1)     //   try again with n + 1\n  :                 // else\n    s + n           //   return s + n\n</code></pre>\n\n<p>Starting with <code>N=0</code>, we test the Nth character (0-based) of the string made of the concatenation of the original input string and the decimal representation of <code>N</code>. We increment <code>N</code> until this character doesn't exist anymore.</p>\n\n<p>Example:</p>\n\n<pre><code>N =  0 : abcdefghi0\n         ^\nN =  1 : abcdefghi1\n          ^\nN =  2 : abcdefghi2\n           ^\n...\nN =  8 : abcdefghi8\n                 ^\nN =  9 : abcdefghi9\n                  ^\nN = 10 : abcdefghi10\n                   ^\nN = 11 : abcdefghi11    -&gt; success\n                    ^\n</code></pre>\n\n<h3>Test cases</h3>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=(s,n=0)=&gt;(s+n)[n]?f(s,n+1):s+n\r\n\r\nconsole.log(f(\"aaa\"));       // -&gt; aaa4\r\nconsole.log(f(\"\"));          // -&gt; 1\r\nconsole.log(f(\"aaaaaaaa\"));  // -&gt; aaaaaaaa9\r\nconsole.log(f(\"aaaaaaaaa\")); // -&gt; aaaaaaaaa11\r\nconsole.log(f(\"a1\"));        // -&gt; a13</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":103548,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103548#103548","body":"<p><strong>Clojure, 72 bytes</strong></p>\n\n<pre><code>(defn f([s](f s 1))([s n](if(=(count(str s n))n)(str s n)(f s(inc n)))))\n</code></pre>\n"},{"answer_id":103535,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103535#103535","body":"<h2>Python, 39 bytes</h2>\n\n\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:eval('a+str(len('*3+'a))))))')\n</code></pre>\n\n<p>Longer form:</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>lambda a:a+str(len(a+str(len(a+str(len(a))))))\n</code></pre>\n\n<p>Iteratively in Python 2 (41 bytes):</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>x=a=input();exec\"x=a+`len(x)`;\"*3;print x\n</code></pre>\n\n<p>Starting with <code>x</code> as the input string <code>a</code>, applies the transformation <code>x -&gt; a + str(len(x))</code> three times. I'm still not clear why three applications are needed to always reach the fixed point.</p>\n"},{"answer_id":103470,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103470#103470","body":"<h1>Brainfuck, 258 bytes</h1>\n\n<pre><code>,&gt;+&lt;----------[++++++++++&gt;+[&gt;+&lt;-],----------]&lt;[&lt;]&gt;[.&gt;]&gt;&gt;&gt;++++++++++&lt;&lt;[-&gt;+&gt;-[&gt;+&gt;&gt;]&gt;[+[-&lt;+&gt;]&gt;+&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-]&gt;&gt;&gt;++++++++++&lt;[-&gt;-[&gt;+&gt;&gt;]&gt;[+[-&lt;+&gt;]&gt;+&gt;&gt;]&lt;&lt;&lt;&lt;&lt;]&gt;[-]&gt;&gt;[&gt;++++++[-&lt;++++++++&gt;]&lt;.&lt;&lt;+&gt;+&gt;[-]]&lt;[&lt;[-&gt;-&lt;]++++++[-&gt;++++++++&lt;]&gt;.[-]]&lt;&lt;++++++[-&lt;++++++++&gt;]&lt;.[-]&lt;&lt;[-&lt;+&gt;]\n</code></pre>\n\n<p>The input must be terminated by a linefeed (LF). Only works for inputs with a length lesser than 256 (including the LF). </p>\n\n<p><a href=\"http://brainfuck.tryitonline.net/#code=LD4rPC0tLS0tLS0tLS1bKysrKysrKysrKz4rWz4rPC1dLC0tLS0tLS0tLS1dPFs8XT5bLj5dPj4-KysrKysrKysrKzw8Wy0-Kz4tWz4rPj5dPlsrWy08Kz5dPis-Pl08PDw8PDxdPj5bLV0-Pj4rKysrKysrKysrPFstPi1bPis-Pl0-WytbLTwrPl0-Kz4-XTw8PDw8XT5bLV0-Pls-KysrKysrWy08KysrKysrKys-XTwuPDwrPis-Wy1dXTxbPFstPi08XSsrKysrK1stPisrKysrKysrPF0-LlstXV08PCsrKysrK1stPCsrKysrKysrPl08LlstXTw8Wy08Kz5d&amp;input=YWtkamduYm12bmRhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYW9namRuZXJ1NWpnYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhMTI1NDc4OTY1MmFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWIK\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n\n<h2>Explanation</h2>\n\n<pre><code># read first char and add one to cell #1\n# the cell after the input will contain the length\n,&gt;+&lt;\n# subtract 10 to check for LF\n----------\n# while the input is not 10 (LF)\n[\n# restore the input to its original value\n++++++++++\n# add one to the length\n&gt;+\n# cut and paste the length to the next cell, then read the input\n[&gt;+&lt;-],\n# subtract 10 to check for LF\n----------\n]\n# for input abc, the tape here would be: a b c *0* 4\n# rewind to the beginning of the input\n&lt;[&lt;]&gt;\n# print the input string\n[.&gt;]&gt;\n# convert the length to ascii chars and output them\n&gt;&gt;++++++++++&lt;&lt;[-&gt;+&gt;-[&gt;+&gt;&gt;]&gt;[+[-&lt;+&gt;]&gt;+&gt;&gt;]&lt;&lt;&lt;&lt;&lt;&lt;]&gt;&gt;[-]&gt;&gt;&gt;++++++++++&lt;[-&gt;-[&gt;+&gt;&gt;]&gt;[+[-\n&lt;+&gt;]&gt;+&gt;&gt;]&lt;&lt;&lt;&lt;&lt;]&gt;[-]&gt;&gt;[&gt;++++++[-&lt;++++++++&gt;]&lt;.&lt;&lt;+&gt;+&gt;[-]]&lt;[&lt;[-&gt;-&lt;]++++++[-&gt;++++++++\n&lt;]&gt;.[-]]&lt;&lt;++++++[-&lt;++++++++&gt;]&lt;.[-]&lt;&lt;[-&lt;+&gt;]\n</code></pre>\n\n<p><em>Note: I used code from this <a href=\"https://stackoverflow.com/a/13946554/1899794\">SO answer</a> to convert the length to ascii output; I hope this is acceptable on PPCG. This is my first Codegolf submission, and my second BF program. Feedback is welcomed.</em></p>\n"},{"answer_id":103495,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103495#103495","body":"<h1><a href=\"http://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, 11 bytes</h1>\n\n<pre><code>[¹¾JDg¾Q#¼\\\n</code></pre>\n\n<p>Pretty straightforward bruteforce:</p>\n\n<pre><code>            Implicit i = 0\n[           while true\n ¹¾J        Concatenate input and i -&gt; str\n    Dg¾Q#   Break if length(str) == i\n         ¼\\ Else, i += 1\n</code></pre>\n\n<p><a href=\"http://05ab1e.tryitonline.net/#code=W8K5wr5KRGfCvlEjwrxc&amp;input=YWFhYWFhYWFh\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":103493,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103493#103493","body":"\n<h1><a href=\"https://perl6.org\" rel=\"nofollow noreferrer\">Perl 6</a>, <s> 46 </s> 35 bytes</h1>\n<pre class=\"lang-perl6 prettyprint-override\"><code>{$_~(.chars,*.chars+.chars...{$^a==$^b})[*-1]}\n</code></pre>\n\n<pre class=\"lang-perl6 prettyprint-override\"><code>{$_~(.chars,*.chars+.chars...*)[2]}\n</code></pre>\n<p><a href=\"https://tio.run/nexus/perl6#VVFBboMwELzziomKCiSOBUlVlSCSXnrovbeqihB1U1QCETZRURS@TteYCHraWc94dtaupcD5kaeRVRN6E1JFlnVscJ@WnwJxd7H3rcvT76SSbG7qwhTO@dx7X31cO5I/K7opEcO1gDXiLR4YIV@jgOEOL8eTaiBVlRUHIp40EWpJ2EsCDZ0kcHRHde30XC8L/J4NjdJfMcujjKc8KbAwc6n9KqtbiOUW9h4uNj@ice2sONVqmYvCY9ick7wWrl3W6nYIDxcypxWMklYYr6Bt8Voo7HaUycHvlJrNJl00WBhj7TGOmJgMI9p/tDYaW1oFyCT08w/hKfggYOCHTP/QtfsD\" rel=\"nofollow noreferrer\" title=\"Perl 6 – TIO Nexus\">Try it</a></p>\n<h2>Expanded:</h2>\n<pre class=\"lang-perl6 prettyprint-override\"><code>{   # bare block lambda with implicit parameter ｢$_｣\n\n  $_  # the input\n\n  ~   # concatenated with\n\n  (  # sequence generator\n\n    .chars,  # the number of chars in ｢$_｣ (seed the generator)\n\n\n    *\\      # Whatever lambda input (represents previous value)\n    .chars  # number of chars in that\n    +       # plus\n    .chars  # the number of chars in ｢$_｣\n\n\n    ...     # keep doing that until\n\n    *       # indefinitely\n\n  )[2] # get the value at index 2 of the sequence\n}\n</code></pre>\n"},{"answer_id":103397,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103397#103397","body":"<h1>Ruby, <strike>62</strike> <strike>58</strike> 56 bytes</h1>\n<pre><code>s=gets.chomp;p s+&quot;#{(s+&quot;#{(s+&quot;#{s.size}&quot;).size}&quot;).size}&quot;\n</code></pre>\n<p>Tested in <code>irb</code>.</p>\n<p>There's probably a better way to do this, but this was the first thing I came up with. Any help in golfing would be appreciated.</p>\n<p><b>edit:</b> I realized my use of parentheses was excessive.</p>\n"},{"answer_id":103457,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103457#103457","body":"<h1>Factor, 55 bytes</h1>\n<p>It's a walk in the park! I came up with this in my head as soon as I read the question.</p>\n<pre><code>[ dup length dup log10 ⌈ + &gt;integer 10 &gt;base append ]\n</code></pre>\n"},{"answer_id":103460,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103460#103460","body":"<h1>C, 75 bytes</h1>\n<p>Yes, there's another C answer but this (the same method as my Factor answer) is shorter:</p>\n<pre><code>i,z;f(char*s){i=strlen(s);z=1+log10(i);sprintf(realloc(s,i+z)+i,&quot;%d&quot;,i+z);}\n</code></pre>\n<p>Ungolfed:</p>\n<pre><code>i, z;\n\ng (char* s){\n  i = strlen(s);\n  z = 1 + log10(i);\n  s = realloc(s, i + z);\n  sprintf(s + i, &quot;%d&quot;, i + z);\n}\n</code></pre>\n<p><code>ceil(log10(n)</code> is the number of digits in base 10 <code>n</code>, but <code>1+</code> is shorter than <code>ceil()</code>.</p>\n<p>Then, resize the string so we don't get a segfault, and format the number after the string part.</p>\n"},{"answer_id":103444,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103444#103444","body":"<h1><a href=\"http://github.com/JCumin/Brachylog\" rel=\"nofollow noreferrer\">Brachylog</a>, 13 bytes</h1>\n<pre><code>l&lt;L$@:?rc.lL,\n</code></pre>\n<p><a href=\"http://brachylog.tryitonline.net/#code=bDxMJEA6P3JjLmxMLA&amp;input=ImFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhIg&amp;args=Wg\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n<h3>Explanation</h3>\n<p>Basically a description of the problem. It will try every value of <code>L</code> bigger than the length of the input until it finds one for which, when concatenated to the input, is the length of that concatenation.</p>\n<pre><code>l&lt;L              length(Input) &lt; L\n  L$@            Convert L to a string\n     :?rc.       The Output is the concatenation of the Input with L as string\n         .lL,    The length of the Output is L itself\n</code></pre>\n"},{"answer_id":103435,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103435#103435","body":"<h1>Mathematica, 57 bytes</h1>\n\n<pre><code>#&lt;&gt;ToString[(a=Length@#)+(i=IntegerLength)[a+i@a]~Max~1]&amp;\n</code></pre>\n\n<p>Unnamed function taking an array of characters as input and returning a string. Uses the fact that if <code>a</code> is the length of the input, then the number to append to the input is <code>a</code> plus the number of digits in (<code>a</code> + the length of <code>a</code>), rather than just <code>a</code> plus the number of digits of <code>a</code>. Unfortunately it wouldn't give the right answer for the empty-string input without the <code>~Max~1</code> special case.</p>\n"},{"answer_id":103426,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103426#103426","body":"<h1>LaTeX, 108/171</h1>\n\n<pre><code>\\newcounter{c}\\def\\s#1#2]{\\stepcounter{c}\\def\\t{#2}\\ifx\\empty\\t\\arabic{c}\\else#1\\s#2]\\fi}\\def\\q[#1]{\\s#10]}\n</code></pre>\n\n<p><code>\\q[] //1</code></p>\n"},{"answer_id":103404,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103404#103404","body":"<h1>Ruby, 51 bytes (program)</h1>\n\n<h1>Ruby, 49 bytes (function)</h1>\n\n<p>Program (last newline is not necessary and thus unscored):</p>\n\n<pre><code>x=gets.strip\ni=0\ni+=1 until(y=x+i.to_s).size==i\np y\n</code></pre>\n\n<p>Function (last newline is scored):</p>\n\n<pre><code>def f x\ni=0\ni+=1 until(y=x+i.to_s).size==i\ny\nend\n</code></pre>\n"},{"answer_id":103402,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103402#103402","body":"<h2>Haskell, 46 bytes</h2>\n\n<pre><code>f s=[l|i&lt;-[0..],l&lt;-[s++show i],length l==i]!!0\n</code></pre>\n\n<p>Usage example: <code>f \"aaaaaaaa\"</code> -> <code>\"aaaaaaaa9\"</code>.</p>\n\n<p>Simply try all numbers starting with 0 and take the first that fits.</p>\n"},{"answer_id":103398,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103398#103398","body":"<h1>Pyth - 7 bytes</h1>\n<pre><code>+Qfql+Q\n</code></pre>\n<p><a href=\"http://pyth.herokuapp.com/?code=%2BQfql%2BQ&amp;input=%22Aaaaaaaa%22&amp;debug=0\" rel=\"nofollow noreferrer\">Try it online here</a>.</p>\n"},{"answer_id":103379,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103379#103379","body":"<h1><a href=\"http://github.com/lmendo/MATL\" rel=\"nofollow noreferrer\">MATL</a>, 11 bytes</h1>\n\n<pre><code>`G@Vhtn@&gt;]&amp;\n</code></pre>\n\n<p><a href=\"http://matl.tryitonline.net/#code=YEdAVmh0bkA-XSY&amp;input=J2FhYWFhYWFhYSc\" rel=\"nofollow noreferrer\">Try it online!</a> Or <a href=\"http://matl.tryitonline.net/#code=YFhLCmBLQFZodG5APl0mClhETiR4VA&amp;input=J2FhYScKJycKJ2FhYWFhYWFhJwonYWFhYWFhYWFhJwonYTEnCidhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYScKJ2FhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYSc\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n\n<pre><code>`      % Do...while\n  G    %   Push input\n  @    %   Push iteration index (1-based)\n  V    %   Convert number to string\n  h    %   Concatenate horizontally\n  t    %   Duplicate\n  n    %   Get length of concatenated string\n  @    %   Push iteration index\n  &gt;    %   True if length of concatenated string exceeds iteration index\n]      % End. Run next iteration if top of stack is true; else exit loop\n&amp;      % Specifiy that next function (implicit display) takes only one input\n       % Implicitly display top of the stack. This is the concatenated string\n       % that had a length equal to the iteration index\n</code></pre>\n"},{"answer_id":103391,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103391#103391","body":"<h2><a href=\"https://github.com/m-ender/retina\" rel=\"nofollow noreferrer\">Retina</a>, 22 bytes</h2>\n\n<pre><code>\\G`\n.\nx\n+r`\\d*$\n$._\nx\n\n</code></pre>\n\n<p><a href=\"https://tio.run/nexus/retina#U9VwT/gf457ApcdVwaVdlBCToqXCpaIXD@T9/8@VmJgIwmAAZyCxkJk0ArS3gR5W0MWOUTAKRsEAgtFMPgpGwWguHwWjYBQMcQAA\" rel=\"nofollow noreferrer\" title=\"Retina – TIO Nexus\">Try it online!</a></p>\n\n<p>Ah well, if it wasn't for digits appearing in the input, this would be merely 11 bytes:</p>\n\n<pre><code>+r`\\d*$\n$._\n</code></pre>\n"},{"answer_id":103387,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103387#103387","body":"<h1>Python 2, <s>54</s> <s>48</s> 46 bytes</h1>\n<p>Simple solution. Recursion ended up being shorter.</p>\n<pre class=\"lang-python prettyprint-override\"><code>f=lambda s,n=0:f(s,n+1)if(s+`n`)[n:]else s+`n`\n</code></pre>\n<p><a href=\"https://tio.run/nexus/python2#@59mm5OYm5SSqFCsk2drYJWmAaS1DTUzgQzthLwEzeg8q9jUnOJUBTD3f7FtUWJ5fGZeQWmJhiZXeUZmDlDGiouzoCgzr0QhTSO1LDFHo1hTk4sTReV/JSUupcTERAgJBkjMRCUA\" rel=\"nofollow noreferrer\"><strong>Try it online</strong></a></p>\n"},{"answer_id":103386,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103386#103386","body":"<h1>C#, 77 bytes</h1>\n\n<pre><code>n=&gt;{int a=n.Length;int c=(a+1).ToString().Length-1;return(n+(n.Length+1+c));}\n</code></pre>\n"},{"answer_id":103382,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103382#103382","body":"<h2>Pyke, 8 bytes (<a href=\"https://github.com/muddyfish/PYKE/commit/894a88e818e5e86643765030ce5565246630671f\" rel=\"nofollow noreferrer\">old version</a>)</h2>\n<pre><code>.f+liq)+\n</code></pre>\n<p>Explanation:</p>\n<pre><code>.f    )  -  first where (i++)\n  +      -    input + i\n   l     -    len(^)\n    iq   -   ^ == i\n       + - input + ^\n</code></pre>\n<p><a href=\"http://pyke.catbus.co.uk/?code=.fDQ%2Blq%29%2B&amp;input=aaaaaaaaa\" rel=\"nofollow noreferrer\">Try it here!</a> (New version, 9 bytes)</p>\n"},{"answer_id":103384,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103384#103384","body":"<h2>Lua 5.2, 32 Bytes</h2>\n\n<pre><code>a=arg[1]print(a..#a+#(''..#a+1))\n</code></pre>\n\n<p>Where the variable <em>a</em> is the input string.</p>\n"},{"answer_id":103380,"question_id":103377,"link":"https://codegolf.stackexchange.com/questions/103377/appending-string-lengths/103380#103380","body":"<h2>JavaScript (ES6), 37 bytes</h2>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>f=(s,t=s,u=s+t.length)=&gt;t==u?t:f(s,u)</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;input oninput=o.textContent=f(this.value)&gt;&lt;pre id=o&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":102463,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/102463#102463","body":"<h1><a href=\"https://github.com/tkaden4/Cylon\" rel=\"nofollow noreferrer\">Cylon</a> (Non-Competing), 12 bytes</h1>\n<p>The language is in development, Im just putting this up here.</p>\n<pre>\n1:øÌ[:ì+Á])r\n</pre>\n<p>An explanation:</p>\n<pre>\n1    ;pushes a 1 to the stack\n:    ;duplicates the top of the stack\nø    ;reads a number from stdin, pushing it to the stack\nÌ    ;non-pushing loop, doesn't push counter to the stack, but deletes it\n[    ;start of function, to be pushed to the stack\n  :  ;duplicate top of stack\n  ì  ;rotate the stack, moving the copy to the back\n  +  ;replaces top two objects on the stack with their sum\n  Á  ;push the result to the shadowing stack (non-consuming)\n]    ;end of function\n)    ;switch to shadowed stack\nr    ;standard library call, reverses a stack\n     ;stack implicitly printed\n</pre>\n"},{"answer_id":100163,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/100163#100163","body":"<h1>Python, 75 bytes</h1>\n\n<pre><code>a=[1,1]\nwhile True:\n    a.append(a[-1]+a[-2])\n    a.pop(0)\n    print(a[-2])\n</code></pre>\n\n<p>Yes, I know, way too big, but I don't know golfing languages that well.</p>\n"},{"answer_id":69796,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/69796#69796","body":"<h1><a href=\"https://rawgit.com/cyoce/detour/master/interp.html\" rel=\"nofollow\">Detour</a> (non-competing), 8 bytes</h1>\n\n\n\n<pre class=\"lang-none prettyprint-override\"><code>[$&lt;&lt;]!S.\n</code></pre>\n\n<p><a href=\"https://rawgit.com/cyoce/detour/master/interp.html?hex=WyQ8PF0hUy4%3D\" rel=\"nofollow\">Try it online!</a></p>\n\n<p>This one is shorter than the word \"fibonacci\"</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[$&lt;&lt;]!S.\nFibonacci\n</code></pre>\n\n<p>explanation:\n</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[   ]     # while n &gt; 0\n $&lt;&lt;       # replace n with [n-1, n-2]\n     !S.  # invert, output\n</code></pre>\n\n<p><br><br><br>Just for fun, here's one that will always take exactly 19 ticks to terminate, whether given 0 or 1474. On my really old macbook, it on average terminates after 7ms.</p>\n\n<hr>\n\n<h1><a href=\"https://rawgit.com/cyoce/detour/master/interp.html\" rel=\"nofollow\">Detour</a>, <s>30</s> 28 bytes</h1>\n\n<pre class=\"lang-none prettyprint-override\"><code>$Q{G&lt;!d}seQ\n.{5Vg&gt;d}se-$G_c!\n</code></pre>\n\n<p><a href=\"https://rawgit.com/cyoce/detour/master/interp.html?hex=JFF7RzwhZH1zZVEKLns1Vmc+ZH1zZS0kR19jIQ%3D%3D\" rel=\"nofollow\">Try it online!</a>\nThis is the way of expressing <code>(((1+sqrt(5))/2)^n-((1-sqrt(5))/2)^n)/sqrt(5)</code></p>\n\n<p><br><br><br>Old way:</p>\n\n<hr>\n\n<h1><a href=\"https://rawgit.com/cyoce/detour/master/interp.html\" rel=\"nofollow\">Detour</a> (non-competing), <s>10</s> 9 bytes</h1>\n\n<pre class=\"lang-none prettyprint-override\"><code>&lt;Q&gt;S.\n;$&lt;\n</code></pre>\n\n<p><a href=\"https://rawgit.com/cyoce/detour/master/interp.html?hex=PFE+Uy4KOyQ8\" rel=\"nofollow\">Try it online!</a></p>\n\n<p><br>\nThis is non-competing: I just pushed the required version of the language about 10 minutes ago.</p>\n\n<p>Detour works like befunge, fish etc. except for one crucial difference: where those languages redirect the instruction pointer, detour redirects data.</p>\n\n<p>Input is pushed in at the beginning of the middle line (in this case the first). <code>&lt;</code> decrements a number, <code>&gt;</code> increments it. <code>Q</code> sends it down if a number is greater than 0, forward otherwise.</p>\n\n<p>the line <code>;$&lt;</code> is the same as <code>$&lt;;</code> because edges wrap. What it does is take the number it is given, then push that number and 1 less than that number to the input. This is how detour does recursion.</p>\n\n<p><code>S</code> reduces with addition, and <code>.</code> outputs the result.</p>\n\n<p>For a better explanation, visit the site and it will give a visual representation of all the numbers.</p>\n"},{"answer_id":99897,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/99897#99897","body":"<h1>&gt;&lt;&gt; Fish 26 bytes</h1>\n<pre><code>d&quot;darkthgil&quot;ii+2%?!rooooo;\n</code></pre>\n<p>A spin on the already posted fish code by <a href=\"https://codegolf.stackexchange.com/a/63912/62009\">sp3000</a>.</p>\n<p>It uses the same based checking with mod but with a few changes.</p>\n<p>Using 1 line allows us to save 6 bytes (1 for the new line, 2 for directional instructions and 3 for the jump instructions)</p>\n<p>Lose 1 byte to placing a [CR] onto the stack but it allows us to use 5 prints on both answers.</p>\n<p>Lose 1 byte to reversing the stack [r] when needed for an answer.</p>\n<p>Lastly putting both answers on the stack in 1 string allows us to save 2 bytes not having to use [&quot;] twice.</p>\n"},{"answer_id":99832,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/99832#99832","body":"<h1><a href=\"http://www.ostracodfiles.com/prismatic/main.html\" rel=\"nofollow noreferrer\">Prismatic</a>, 113 bytes (can be smaller)</h1>\n\n<pre><code>right wideness wideness left forward up vertex longness backward right vertex tallness forward down vertex vertex\n</code></pre>\n\n<p>Inspired by Brainfuck, Cubix and Hexagony.</p>\n"},{"answer_id":98700,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/98700#98700","body":"<h1>Java 8 29 bytes</h1>\n\n<p>Using Java 8 lambdas. This is a valid statement if there exists a function interface with a method that returns an int and takes an int as a parameter. Also the variable that stores the lambda must be declared as a member (static or non static) of the class it is in so that it can be used recursively.</p>\n\n<pre><code>f=n-&gt;n&lt;2?0:f.f(n-1)+f.f(n-2);\n</code></pre>\n\n<h2>Ungolfed:</h2>\n\n<pre><code>@FunctionalInterface interface F\n{\n    int f(int n);\n}\n\npublic class Main\n{\n    static F f;\n\n    public static void main(String[] args)\n    {\n        f=n-&gt;n&lt;2?0:f.f(n-1)+f.f(n-2);\n    }\n}\n</code></pre>\n"},{"answer_id":27023,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/27023#27023","body":"<h1>(M)AWK - <strike>104</strike> <strike>103</strike> <strike>100</strike> <strike>98</strike> <strike>97</strike> 87</h1>\n<pre><code>BEGIN{for(n=2;n&lt;1e6;){if(n in L)p=L[n]\nelse print p=n\nfor(N=p+n++;N in L;)N+=p\nL[N]=p}}\n</code></pre>\n<hr />\n<p>Old:</p>\n<p>The 'x' file:</p>\n<pre><code>BEGIN{for(n=2;n&lt;1e6;){if(n in L){p=L[n]\ndel L[n]}else print p=n\nfor(N=p+n++;N in L;)N+=p\nL[N]=p}}\n</code></pre>\n<p>The size:</p>\n<pre><code>$ wc -c x\n97 x\n</code></pre>\n<p>The run (counting output lines instead of wasting space here) on a Thinkpad T60/T5500@1.6GHz in powersave mode (1 GHz clock, Debian6):</p>\n<pre><code>$ time mawk -f x | wc -l\n78498\n\nreal    0m3.894s\nuser    0m3.820s\nsys     0m0.072s\n</code></pre>\n<p>But since this won't be the shortest solution, speed is no matter.</p>\n<p>The algorithm is a reorganized sieve method.\nI have not seen this method elsewhere up to now and the local name is &quot;floating sieve of erathosthenes&quot; (FSOE) until I know better.</p>\n"},{"answer_id":96174,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/96174#96174","body":"<h1>MATL, 5 bytes</h1>\n\n<pre><code>1e6Zq\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>1e6   % push 10000 to stack\n   Zq % primes up to top-of-stack number\n</code></pre>\n"},{"answer_id":96119,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/96119#96119","body":"<h2>Stata, 21 bytes</h2>\n<pre><code>primes 1000000, clear\n</code></pre>\n<p>This is (obviously) a built-in command...</p>\n"},{"answer_id":96109,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/96109#96109","body":"<h1>Vim, 34 bytes</h1>\n\n<p><code>6@=9&lt;CR&gt;o&lt;Tab&gt;0&lt;Esc&gt;V{g&lt;C-A&gt;dj=:g/\\v^(&lt;Tab&gt;&lt;Tab&gt;+)\\1+&lt;/d&lt;CR&gt;</code></p>\n\n<p>This is a direct adaptation of my top solution to <a href=\"https://www.vimgolf.com/challenges/4d1c27940e3d7832db000010\" rel=\"nofollow\">Prime Numbers</a>. The difference is... here I have to go up to a million. This forces a cool tactic to put <code>999999</code> into the readahead, but it also makes this solution impossible to run. You won't even get past the setup making the number array, because you'd need to fill more than half a terabyte of RAM (without overhead). And if you ever got to the regex algorithm... well, it sucks. You'd never finish.</p>\n\n<p>This solution requires <code>:set autoindent noexpandtab</code>, which you might have set already, might not. It also requires computer hardware that doesn't exist.</p>\n\n<ul>\n<li><code>6@=9&lt;CR&gt;</code>: Cool trick to write <code>999999</code> in 5 bytes. Integer 9 gets evaluated into the expression register as text. That \"macro\" is run 6 times.</li>\n<li><code>o&lt;Tab&gt;0&lt;Esc&gt;</code>: Make N (999,999) lines of zeroes, with stair-step indent. This is kind of like what happens when you paste in insert mode without doing <code>:set paste</code>.</li>\n<li><code>V{g&lt;C-A&gt;</code>: Visual increment to turn the <code>0</code>s into a list of numbers 1-999,999. Conveniently leaves cursor on top.</li>\n<li><code>dj</code>: Remove the blank (zero) and 1 lines.</li>\n<li><code>=:</code>: Vim users rarely think of the <code>:</code> command as an operator, but it is one (a charwise operator, surprisingly). Runs the <code>=</code> out to where the <code>:</code> command would move the cursor (top to bottom in this case).</li>\n<li><code>\\v^(&lt;Tab&gt;&lt;Tab&gt;+)\\1+&lt;</code>: Regex that matches a composite number of tabs. If you haven't, watch the <a href=\"http://vimcasts.org/episodes/vimgolf-prime-numbers/\" rel=\"nofollow\">VimCast episode</a>, which covers an old version of this solution. The <code>:g//d</code> will delete those lines. The cursor will end on the last remaining line, which will act as the operator for <code>=</code> to remove all indent.</li>\n</ul>\n\n<h1>Vim, 36 bytes (actually runs)</h1>\n\n<ul>\n<li><code>6@=9&lt;CR&gt;O0&lt;Esc&gt;V{g&lt;C-A&gt;:%norm~V$EkdYo@0D@.&lt;C-O&gt;@.&lt;CR&gt;d</code></li>\n</ul>\n\n<p>This <code>:normal</code> macro is a proper sieve of Eratosthenes that cleans up after itself. I actually ran this out to 1,000,000. Took 10-15 minutes. The algorithm is quite good, but the data structure (array of lines in Vim) comes with a big toll. I <a href=\"http://udioica.blogspot.com/2013/11/prime-numbers.html\" rel=\"nofollow\">wrote about it</a> in more detail a long time ago.</p>\n"},{"answer_id":92976,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/92976#92976","body":"<h1>Ruby</h1>\n\n<h2>Ungolfed, 60 bytes</h2>\n\n<pre><code>def fib(prev,nxt)\n  x = prev + nxt\n  puts x\n  fib(nxt,x)\nend\n</code></pre>\n\n<h2>Golfed, 33 bytes</h2>\n\n<pre><code>def f(a,b)x=a+b;puts x;f(b,x)end\n</code></pre>\n\n<p>Pretty simple to call, use <code>f(first, next)</code>.</p>\n"},{"answer_id":75731,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/75731#75731","body":"<h1><a href=\"https://github.com/ETHproductions/cubix\" rel=\"nofollow noreferrer\">Cubix</a>, 10 bytes</h1>\n<p>Non competing answer because the language is newer than the question.</p>\n<p>Cubix is a new 2 dimensional language by @ETHproductions were the code is wrapped onto a cube sized to fit.</p>\n<pre><code>;.o.ON/+!)\n</code></pre>\n<p><a href=\"https://ethproductions.github.io/cubix\" rel=\"nofollow noreferrer\">Try it online</a></p>\n<p>This wraps onto a 2 x 2 cube in the following manner</p>\n<pre><code>    ; .\n    o .\nO N / + ! ) . .\n. . . . . . . .\n    . .\n    . .\n</code></pre>\n<ul>\n<li><code>O</code> output the value of the TOS</li>\n<li><code>N</code> push newline onto stack</li>\n<li><code>/</code> reflect north</li>\n<li><code>o</code> output the character of the TOS</li>\n<li><code>;</code> pop TOS</li>\n<li><code>/</code> reflect east after going around the cube</li>\n<li><code>+</code> add top 2 values of the stack</li>\n<li><code>!</code> skip next command if TOS is 0</li>\n<li><code>)</code> increment the TOS by 1.  This kicks off the sequence essentially.</li>\n</ul>\n<p>This is an endless loop that prints the sequence with a newline separator.  It take advantage of the fact that most commands don't pop the values from the stack.<br>\nIf the separator is ignored then this can be done with 5 bytes <code>.O+!)</code></p>\n"},{"answer_id":90655,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/90655#90655","body":"<h2>C#, <s>83</s> 76 bytes</h2>\n\n<pre><code>n=&gt;{for(n=0;n&lt;121;)System.Console.Write(System.DateTime.Now.Year-n+++\" \");};\n</code></pre>\n"},{"answer_id":90641,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/90641#90641","body":"<h1>Python 3, 54</h1>\n\n<pre><code>import time\nprint(*range(time.gmtime()[0],0,-1)[:121])\n</code></pre>\n"},{"answer_id":89600,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89600#89600","body":"<h1>SQLite, <strike>82</strike> 80 bytes</h1>\n\n<pre><code>with b(y)as(select strftime('%Y')union select y-1 from b limit 121)select*from b\n</code></pre>\n\n<p><a href=\"http://www.sqlfiddle.com/#!5/9eecb7/2795\" rel=\"nofollow\">SQLFiddle</a></p>\n\n<p>(For ANSI SQL, replace the <code>strftime()</code> with <code>extract(year from current_date)</code>.)</p>\n\n<p>(2 bytes saved thanks to @MickyT)</p>\n"},{"answer_id":90004,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/90004#90004","body":"<h1>LaTeX, 129 bytes</h1>\n\n<p>Or, if I'm allowed to skip the document class definition &amp; setup, and just count the package import and for loop code: <strong>79 bytes</strong>.</p>\n\n<pre><code>\\documentclass{book}\\usepackage{tikz}\\begin{document}\\foreach \\n in {0,...,120}{\\pgfmathint{\\year\\n}\\pgfmathresult}\\end{document}\n</code></pre>\n\n<p>Ungolfed:</p>\n\n<pre><code>\\documentclass{book}\n\\usepackage{tikz}\n\\begin{document}\n\\foreach \\n in {0,...,120}\n{\n\\pgfmathint{\\year-\\n}\\pgfmathresult}\n\n\\end{document} \n</code></pre>\n\n<p>Output (w/ free page number :) ):</p>\n\n<p><a href=\"https://i.stack.imgur.com/Nc3Da.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Nc3Da.png\" alt=\"enter image description here\"></a></p>\n"},{"answer_id":89665,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89665#89665","body":"<h1>Ruby, <del>47</del> <del>40</del> 39 bytes</h1>\n\n<pre><code>p [*0..Time.new.year].last(121).reverse\n</code></pre>\n\n<p>Thanks to @Value Ink for 7 bytes!</p>\n\n<p>Ideone link: <a href=\"https://ideone.com/yRovUl\" rel=\"nofollow\">https://ideone.com/yRovUl</a></p>\n"},{"answer_id":65017,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/65017#65017","body":"<h1><a href=\"https://github.com/mbuettner/hexagony\" rel=\"noreferrer\">Hexagony</a>, <del>18</del> <del>14</del> 12</h1>\n\n<p>Thanks Martin for 6 bytes!</p>\n\n<pre><code>1=\"/}.!+/M8;\n</code></pre>\n\n<p>Expanded:</p>\n\n<pre><code>  1 = \"\n / } . !\n+ / M 8 ;\n . . . .\n  . . .\n</code></pre>\n\n<p><a href=\"http://hexagony.tryitonline.net/#code=MT0iL30uISsvTTg7&amp;input=\" rel=\"noreferrer\">Try it online</a></p>\n\n<hr>\n\n<p>Old, answer. This is being left in because the images and explanation might be helpful to new Hexagony users.</p>\n\n<pre><code>!).={!/\"*10;$.[+{]\n</code></pre>\n\n<p>Expanded:</p>\n\n<pre><code>  ! ) .\n = { ! /\n\" * 1 0 ;\n $ . [ +\n  { ] .\n</code></pre>\n\n<p>This prints the Fibonacci sequence separated by newlines.</p>\n\n<p><a href=\"http://hexagony.tryitonline.net/#code=ISkuPXshLyIqMTA7JC5bK3td&amp;input=\" rel=\"noreferrer\">Try it online!</a> Be careful though, the online interpreter doesn't really like infinite output.</p>\n\n<h3>Explanation</h3>\n\n<p>There are two \"subroutines\" to this program, each is run by one of the two utilised IPs. The first routine prints newlines, and the second does the Fibonacci calculation and output.</p>\n\n<p>The first subroutine starts on the first line and moves left to right the entire time. It first prints the value at the memory pointer (initialized to zero), and then increments the value at the memory pointer by <code>1</code>. After the no-op, the IP jumps to the third line which first switches to another memory cell, then prints a newline. Since a newline has a positive value (its value is 10), the code will always jump to the fifth line, next. The fifth line returns the memory pointer to our Fibonacci number and then switches to the other subroutine. When we get back from this subroutine, the IP will jump back to the third line, after executing a no-op.</p>\n\n<p>The second subroutine begins at the top right corner and begins moving Southeast. After a no-op, we are bounced to travel West along the second line. This line prints the current Fibonacci number, before moving the memory pointer to the next location. Then the IP jumps to the fourth line, where it computes the next Fibonacci number using the previous two. It then gives control back to the first subroutine, but when it regains control of the program, it continues until it meets a jump, where it bounces over the mirror that was originally used to point it West, as it returns to the second line.</p>\n\n<hr>\n\n<p>Preliminary Pretty Pictures!</p>\n\n<p>The left side of the image is the program, the right hand side represents the memory. The blue box is the first IP, and both IPs are pointing at the next instruction to be executed.</p>\n\n<p><a href=\"https://i.stack.imgur.com/tiqRU.gif\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/tiqRU.gif\" alt=\"enter image description here\"></a></p>\n\n<p>Note: Pictures may only appear pretty to people who have similarly limited skill with image editing programs :P I will add at least 2 more iterations so that the use of the <code>*</code> operator becomes more clear.</p>\n\n<p>Note 2: I only saw <a href=\"https://codegolf.stackexchange.com/a/62716/31625\">alephalpha's answer</a> after writing most of this, I figured it was still valuable because of the separation, but the actual Fibonacci parts of our programs are very similar. In addition, this is the smallest Hexagony program that I have seen making use of more than one IP, so I thought it might be good to keep anyway :P</p>\n"},{"answer_id":89673,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89673#89673","body":"<h2>PHP, <strike>40</strike> <strike>35</strike> 33 bytes</h2>\n\n<pre><code>while($i&lt;121)echo date(Y)-$i++._;\n</code></pre>\n\n<p>I'm just going to pretend that error reporting is always disabled for code golfing... :)</p>\n\n<p>[Edit 1: Saved 5 bytes via manatwork]</p>\n\n<p>[Edit 2: Saved 2 bytes via Titus]</p>\n"},{"answer_id":89688,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89688#89688","body":"<h1>Coffeescript, 29 bytes</h1>\n<p><code>-&gt;a=Date()[11..14];[a..a-120]</code></p>\n"},{"answer_id":89655,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89655#89655","body":"<h2>Vim, <s>32</s> 29 keystrokes</h2>\n\n<p>Thanks to <a href=\"https://codegolf.stackexchange.com/users/4372/daniero\">@daniero</a> for some help on saving some keystrokes and making the output a little neater.</p>\n\n<pre><code>\"=strftime('%Y')&lt;Enter&gt;pqqYp&lt;Ctrl-x&gt;q118@q\n</code></pre>\n\n<ul>\n<li><code>&lt;Enter&gt;</code> is <kbd>Enter</kbd></li>\n<li><code>&lt;Ctrl-x&gt;</code> is <kbd>Ctrl</kbd> + <kbd>X</kbd></li>\n</ul>\n\n<h3>Explanation:</h3>\n\n<pre><code>\"                                          # Put into the register {\n =strftime('%Y')                           #   This year in YYYY form\n                &lt;Enter&gt;                    # }\n                       p                   # Paste the register\n                        qq                 # Record macro q {\n                          Y                #   Yank (copy) the current line\n                           p               #   Paste\n                            &lt;Ctrl-x&gt;       #   Decrment number at cursor\n                                    q      # }\n                                     118@q # Do macro q 118 times\n</code></pre>\n\n<h3>Output format:</h3>\n\n<p>Each number is on a separate line like below.</p>\n\n<pre><code>2016\n2015\n.\n.\n.\n1898\n1897\n</code></pre>\n"},{"answer_id":89657,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/89657#89657","body":"<h1>Java, 71 chars</h1>\n\n<p>Single number: (Binet formula, considering 1.62 as the golden ratio))</p>\n\n<pre><code>int f(int n){return(Math.pow(1.62,n)-(Math.pow(-1.62,-n))/Math.sqrt(5)}\n</code></pre>\n\n<p>I know this isn't surprisingly short, however Math is beautiful and this formula is even more!</p>\n"},{"answer_id":89606,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89606#89606","body":"<h2>Javascript: <s>68</s> <s>82</s> 59 bytes</h2>\n\n<p><code>i=121;while(i--){x[i]=Date().substr(11,4)-i;}console.log(x)</code></p>\n"},{"answer_id":89531,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89531#89531","body":"<h2>C, <s>87</s> <s>85</s> <s>76</s> <s>74</s> 65 bytes</h2>\n\n<pre><code>main(int i,char**v){for(i=0;i&lt;121;printf(\"%d,\",atoi(v[1])-i++));}\n</code></pre>\n\n<p>Ungolfed:</p>\n\n<pre><code>main(int i,char**v){\n    for(i = 0; i &lt; 121; printf(\"%d,\", atoi(v[1])-i++));\n}\n</code></pre>\n\n<p>My first code golf - Any pointers would be well received. Would be nice if I could cut out the argc/argv junk, but I'm not <em>that</em> skilled a C programmer. Improvements welcome.</p>\n\n<p><strong>EDIT</strong>: The current year is obtained from the commandline - specifically by a group of automated, well trained drinking birds.</p>\n\n<p><strong>EDIT 2</strong>: 85 bytes Thanks to Easterly Irk (removed spaces around arg function parameters)</p>\n\n<p><strong>EDIT 3</strong>: 76 bytes Thanks to anatolyg for pointing out the obvious (removed verbose argc/argv param names)</p>\n\n<p><strong>EDIT 4</strong>: 74 bytes Thanks to Yay295 (char**v, changed year delimiter)</p>\n\n<p><strong>EDIT 5</strong>: 65 bytes thanks to Yay295 and matt (re-used the variable i, removed variable x, changed while to for loop, updated printf to include atoi() read and i++)</p>\n"},{"answer_id":89519,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89519#89519","body":"<h2>JavaScript, <s>55</s> <s>52</s> <s>50</s> 49 bytes</h2>\n<pre><code>for(a=d=s=Date().substr(11,4);d--&gt;s-120;)a+=&quot; &quot;+d\n</code></pre>\n<p>+9 bytes to <code>alert</code> the data (not necessary if you run this in a console).</p>\n<pre><code>for(a=d=s=Date().substr(11,4);d--&gt;s-120;)a+=&quot; &quot;+d;alert(a)\n</code></pre>\n<p>-4 bytes if the delimiter isn't necessary.</p>\n<pre><code>for(a=d=s=Date().substr(11,4);d--&gt;s-120;)a+=d\n</code></pre>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>for (a = d = s = Date().substr(11, 4); d --&gt; s - 120; )\n    a += \" \" + d;\nconsole.log(a);</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"},{"answer_id":89614,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89614#89614","body":"<h1>jq, 46 characters</h1>\n\n<p>(45 characters code + 1 character command line option)</p>\n\n<pre><code>now|strftime(\"%Y\")|tonumber|range(.;.-121;-1)\n</code></pre>\n\n<p>Sample run:</p>\n\n<pre><code>bash-4.3$ jq -n 'now|strftime(\"%Y\")|tonumber|range(.;.-121;-1)' | head\n2016\n2015\n2014\n2013\n2012\n2011\n2010\n2009\n2008\n2007\n</code></pre>\n\n<p><a href=\"https://jqplay.org/jq?q=now|strftime(%22%25Y%22)|tonumber|range(.%3b.-121%3b-1)&amp;j=null\" rel=\"nofollow\">On-line test</a></p>\n"},{"answer_id":89601,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89601#89601","body":"<h2>Python 2, 113 bytes</h2>\n<pre><code>import datetime\ntheYear = datetime.datetime.now()\nfor i in range(theYear.year, theYear.year-121, -1):\n   print i,','\n</code></pre>\n"},{"answer_id":89603,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89603#89603","body":"<h1>C# - DotNet core - 133 bytes</h1>\n\n<h2>Golfed</h2>\n\n<pre><code>class Program{static void Main(){int x=0,y=System.DateTime.Now.Year;while(x&lt;121){System.Console.Write($\"{y-x++}\"+(x&lt;121?\", \":\"\"));}}}\n</code></pre>\n\n<h2>Ungolfed</h2>\n\n<pre><code>class Program\n{\n    static void Main()\n    {\n        int x=0, y=System.DateTime.Now.Year;\n\n        while(x&lt;121)\n        {\n            System.Console.Write($\"{y-x++}\" + (x &lt; 121 ? \", \" : \"\"));\n        }\n    }\n}\n</code></pre>\n\n<h2>Output:</h2>\n\n<p><a href=\"https://i.stack.imgur.com/lKKaC.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/lKKaC.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>I'm sure this can be improved. I don't particularly like the if statement to display or hide the trailing comma.</p>\n"},{"answer_id":89599,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89599#89599","body":"<h1>Haskell 125 bytes</h1>\n\n<p>The imports take up a large part of the byte count</p>\n\n<pre><code>import Data.Time.Clock\nimport Data.Time.Calendar\nmain=fmap((\\(x,_,_)-&gt;[x-120..x]).toGregorian.utctDay)getCurrentTime&gt;&gt;=print\n</code></pre>\n"},{"answer_id":89508,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89508#89508","body":"<h1><a href=\"https://github.com/lmendo/MATL\" rel=\"noreferrer\">MATL</a>, 10 bytes</h1>\n<pre><code>1&amp;Z'0:120-\n</code></pre>\n<p><a href=\"http://matl.tryitonline.net/#code=MSZaJzA6MTIwLQ&amp;input=\" rel=\"noreferrer\"><strong>Try it online!</strong></a></p>\n<pre><code>1&amp;Z'      % Push first component of &quot;clock&quot; vector, which is year\n0:120     % Literal vector [0, 1, 2, ..., 120]\n-         % Subtract element-wise. Implicitly display\n</code></pre>\n"},{"answer_id":89583,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89583#89583","body":"<h1>Bash on OS X, 23</h1>\n\n<pre class=\"lang-bash prettyprint-override\"><code>jot 121 `date +%Y` - -1\n</code></pre>\n<p>This will also work on Linux if you have BSD <code>jot</code> installed (e.g. <code>sudo apt-get install athena-jot</code>.</p>\n"},{"answer_id":89568,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89568#89568","body":"<h2>Batch, 67 bytes</h2>\n\n<pre><code>@set/ay=%date:~-4%,z=y-120\n@for /l %%i in (%y%,-1,%z%)do @echo %%i\n</code></pre>\n"},{"answer_id":89504,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89504#89504","body":"<h2>R, <s>47</s> 39 bytes</h2>\n\n<pre><code>as.double(substr(Sys.Date(),1,4))-0:120\n</code></pre>\n\n<p>If only someone invented a UTF-8 implementation of R with conveniently abbreviated frequently used system functions...</p>\n\n<p>UPD: shaved off 7 (!) bytes owing to <a href=\"https://codegolf.stackexchange.com/users/6741/plannapus\">plannapus</a>, who suggested subrtacting a <code>0:120</code> vector rather than counting from <code>a</code> to <code>(a-120)</code> and 1 byte grâce à <a href=\"https://codegolf.stackexchange.com/users/58162/user5957401\">user5957401</a>, who noticed that <code>double</code> would work as well as <code>numeric</code>. Old version:</p>\n\n<pre><code>a=as.numeric(format(Sys.Date(),\"%Y\"));a:(a-120)\n</code></pre>\n"},{"answer_id":89502,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89502#89502","body":"<h1>BASH + coreutils, <s>35</s> 33 bytes</h1>\n<pre><code>x=`date +%Y`;seq $x -1 $((x-120))\n</code></pre>\n"},{"answer_id":89564,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89564#89564","body":"<h1>Nim, 60 bytes</h1>\n\n<pre class=\"lang-nim prettyprint-override\"><code>import times\nfor a in 0..120:echo getTime().getGmTime.year-a\n</code></pre>\n\n<p>Outputs each year on a new line. We use the <code>getTime</code> to get the current UNIX time, then convert it to UTC with <code>getGmTime</code>, get the <code>year</code> minus the counter variable, and <code>echo</code> it.</p>\n"},{"answer_id":89555,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89555#89555","body":"<h1>k, 27 bytes</h1>\n\n<p>Output as specified</p>\n\n<pre><code>1@\", \"/:$(`year$.z.d)-!121;\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>k)1@\", \"/:$(`year$.z.d)-!121;\n2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 1987, 1986, 1985, 1984, 1983, 1982, 1981, 1980, 1979, 1978, 1977, 1976, 1975, 1974, 1973, 1972, 1971, 1970, 1969, 1968, 1967, 1966, 1965, 1964, 1963, 1962, 1961, 1960, 1959, 1958, 1957, 1956, 1955, 1954, 1953, 1952, 1951, 1950, 1949, 1948, 1947, 1946, 1945, 1944, 1943, 1942, 1941, 1940, 1939, 1938, 1937, 1936, 1935, 1934, 1933, 1932, 1931, 1930, 1929, 1928, 1927, 1926, 1925, 1924, 1923, 1922, 1921, 1920, 1919, 1918, 1917, 1916, 1915, 1914, 1913, 1912, 1911, 1910, 1909, 1908, 1907, 1906, 1905, 1904, 1903, 1902, 1901, 1900, 1899, 1898, 1897, 1896\n</code></pre>\n\n<p>It can be shortened more by not formatting the output and merely returning the list of integers:</p>\n\n<pre><code>(`year$.z.d)-!121\n</code></pre>\n"},{"answer_id":89561,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89561#89561","body":"<h1>PostgreSQL, 57 bytes</h1>\n\n<p>Who needs a <code>FROM</code> :-).  Probably shouldn't work, but it does, try it at <a href=\"http://sqlfiddle.com/#!15/9eecb7db59d16c80417c72d1e1f4fbf1/10620/0\" rel=\"nofollow\">sqlfiddle</a>  </p>\n\n<pre><code>select date_part('y',current_date)-generate_series(0,120)\n</code></pre>\n"},{"answer_id":89560,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89560#89560","body":"<h2><a href=\"https://github.com/timopomer/ListSharp\" rel=\"nofollow\">ListSharp</a>, 71 bytes</h2>\n\n<pre><code>NUMB a=&lt;c#DateTime.Now.Yearc#&gt;\n[FOREACH NUMB IN a TO a-120 AS y]\nSHOW=y\n</code></pre>\n\n<p>Uses embedded c# code, <em>new feature!!</em></p>\n"},{"answer_id":89544,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89544#89544","body":"<h1>HP50g RPL, 97 bytes</h1>\n\n<pre><code>120 'S' STO DATE -&gt;STR 6 9 SUB OBJ-&gt; 'Y' STO {} S WHILE 0 &gt;= REPEAT Y S - + 'S' DECR END REVLIST\n</code></pre>\n\n<p>Ungolfed:</p>\n\n<pre><code>120\n'span' STO     @ Store the span of years to cover.\nDATE           @ Get the date as number 11.082016. \n→STR           @ Convert to string \"11.082016\".\n               @ (Number format must allow all these decimal places.)\n6 9 SUB        @ \"11.082016\" Substring for the year.\n               @       ^  ^\n               @  123456789\nOBJ→           @ Convert string to number.\n'year' STO     @ Store as the year to start at.\n{} span        @ Start empty list to collect the years.\n               @ Leave loop counter on the stack.\nWHILE 0 ≥      @ Loop until the counter goes negative.\nREPEAT\n  year span -  @ E.g. on first iteration: 2016 - 120 = 1896.\n  +            @ Append the year to the list on the stack.\n  'span' DECR  @ Decrement loop counter and leave on stack.\nEND\nREVLIST        @ Put list in reverse chronological order.\n</code></pre>\n\n<p>Showing a list of 2016 down to 1896:</p>\n\n<p><a href=\"https://i.stack.imgur.com/IGhgJ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/IGhgJ.png\" alt=\"2016 to 1896\"></a></p>\n"},{"answer_id":89557,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89557#89557","body":"<h1>MATLAB, 18 bytes</h1>\n<p>Assuming the output format doesn't matter (aside form descending order), the following program prints the last 121 years starting with the current one.</p>\n<pre><code>year(date)-(0:120)\n</code></pre>\n<p>It requires MATLAB version r2014a or higher. Earlier versions didn't include the <code>year</code> function.</p>\n"},{"answer_id":89517,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89517#89517","body":"<h1>CJam, <s>14</s> <s>12</s> 11 bytes</h1>\n\n<p><em>Saved 2 bytes thanks to Sp3000 and 1 byte thanks to Martin Ender</em></p>\n\n<pre><code>et0=121,f-p\n</code></pre>\n\n<p><a href=\"http://cjam.aditsu.net/#code=et0%3D%20%20%20%20%20%20%20%20%20e%23%20Push%20the%20current%20year%0A%20%20%20%20121%2C%20%20%20%20%20e%23%20Push%20the%20range%200%2C%201%2C%20...%2C%20120%0A%20%20%20%20%20%20%20%20f-%20%20%20e%23%20For%20each%20item%20in%20the%20range%2C%20subtract%20it%20from%20current%20year%0A%20%20%20%20%20%20%20%20%20%20p%20%20e%23%20Print%20the%20array\" rel=\"nofollow\">Try it online!</a></p>\n\n<p><strong>Explanation</strong></p>\n\n<pre><code>et0=         e# Push the current year\n    121,     e# Push the range 0, 1, ..., 120\n        f-   e# For each item in the range, subtract it from current year\n          p  e# Print the array\n</code></pre>\n"},{"answer_id":89497,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89497#89497","body":"<h2>Python 2, <s>64 62</s> 54 bytes</h2>\n\n<pre><code>import time\nn=time.gmtime()[0]\nexec'print n;n-=1;'*121\n</code></pre>\n\n<p>@KarlKastor thanks for 8 bytes!</p>\n"},{"answer_id":89510,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89510#89510","body":"<h1><a href=\"http://github.com/VTCAKAVSMoACE/Vitsy\" rel=\"nofollow\">Vitsy</a> + *sh <s>+ JavaScript</s>, <s>33</s> <s>26</s> <s>21</s> 18 bytes</h1>\n\n<p>Vitsy doesn't have native time/date retrieval, so I had to use shell and eval for this one.</p>\n\n<p>Thanks to @Caleb for helping me shear off another 3 bytes!</p>\n\n<pre><code>'Y%+ etad',Dca*-HZ\n\n'Y%+ etad'               Push the string 'date +\"%Y\"' to the stack.\n          ,              Execute through shell. \n           Dca*-         Dupe n, push n - 120.\n                H        Pop x, y, push range(x, y) to the stack.\n                 Z       Output all stack as characters.\n</code></pre>\n\n<p>You can't try this one online, because it uses both shell AND eval.</p>\n\n<p>Output is as character codes.</p>\n"},{"answer_id":89521,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89521#89521","body":"<h1>Python 2, 67 bytes</h1>\n<pre><code>from datetime import*;for i in range(121):print date.today().year-i\n</code></pre>\n<p>Thanks to Sp3000 for removing one byte</p>\n"},{"answer_id":89534,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89534#89534","body":"<h1>Processing, <s>51</s> <s>42</s> 41 bytes</h1>\n\n<pre><code>for(int i=0;i&lt;121;)print(year()-i+++\" \");\n</code></pre>\n\n<h1>Ungolfed</h1>\n\n<pre><code>for(int i = 0; i &lt; 121;)\n    print(year() - i++ + \" \");\n</code></pre>\n\n<p>Processing is just a wrapper for Java if you didn't know, and takes most of the boilerplate away, so the obvious solution is also super short compared to a Java version.  Also opens a window for drawing graphics, but having that doesn't appear to disqualify me :)</p>\n"},{"answer_id":89533,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89533#89533","body":"<h3>VBA, 54 bytes</h3>\n\n<p>In the <em>immediate pane</em>:</p>\n\n<pre><code>For i=0 To 120:?Year(Date)-i &amp;IIf(i=120,\"\",\", \");:Next\n</code></pre>\n\n<hr>\n\n<p>In an actual <code>Sub</code> procedure (the VBE adds whitespace and changes <code>?</code> to <code>Print</code>, but the code is per language specs without the whitespace and using the <code>?</code> shorthand nonetheless):</p>\n\n<pre><code>Sub A()\nFor i = 0 To 120: Print Year(Date) - i &amp; IIf(i = 120, \"\", \", \");: Next\nEnd Sub\n</code></pre>\n\n<p>That's 88 characters per Notepad++, with <code>i</code> being an undeclared, implicit <code>Variant</code> local variable.</p>\n\n<p>Both produce the output exactly as specified in the question, comma-separated and with a space between each year:</p>\n\n<pre><code>2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1990, 1989, 1988, 1987, 1986, 1985, 1984, 1983, 1982, 1981, 1980, 1979, 1978, 1977, 1976, 1975, 1974, 1973, 1972, 1971, 1970, 1969, 1968, 1967, 1966, 1965, 1964, 1963, 1962, 1961, 1960, 1959, 1958, 1957, 1956, 1955, 1954, 1953, 1952, 1951, 1950, 1949, 1948, 1947, 1946, 1945, 1944, 1943, 1942, 1941, 1940, 1939, 1938, 1937, 1936, 1935, 1934, 1933, 1932, 1931, 1930, 1929, 1928, 1927, 1926, 1925, 1924, 1923, 1922, 1921, 1920, 1919, 1918, 1917, 1916, 1915, 1914, 1913, 1912, 1911, 1910, 1909, 1908, 1907, 1906, 1905, 1904, 1903, 1902, 1901, 1900, 1899, 1898, 1897, 1896\n</code></pre>\n\n<hr>\n\n<p>If the commas aren't a requirement (as some other answers seem to presume), then the <code>IIf</code> part can be dropped, cutting the <em>immediate pane</em> code down to <strong>33 bytes</strong>:</p>\n\n<pre><code>For i=0 To 120:?Year(Date)-i:Next\n</code></pre>\n"},{"answer_id":89506,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89506#89506","body":"<h1>php, <strike>73 66 58</strike> 42 bytes</h1>\n\n<pre><code>&lt;?=implode(', ',range($j=date(Y),$j-120));\n</code></pre>\n\n<h2>Output:</h2>\n\n<blockquote>\n  <p>2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008, 2007, 2006,\n  2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998, 1997, 1996, 1995,\n  1994, 1993, 1992, 1991, 1990, 1989, 1988, 1987, 1986, 1985, 1984,\n  1983, 1982, 1981, 1980, 1979, 1978, 1977, 1976, 1975, 1974, 1973,\n  1972, 1971, 1970, 1969, 1968, 1967, 1966, 1965, 1964, 1963, 1962,\n  1961, 1960, 1959, 1958, 1957, 1956, 1955, 1954, 1953, 1952, 1951,\n  1950, 1949, 1948, 1947, 1946, 1945, 1944, 1943, 1942, 1941, 1940,\n  1939, 1938, 1937, 1936, 1935, 1934, 1933, 1932, 1931, 1930, 1929,\n  1928, 1927, 1926, 1925, 1924, 1923, 1922, 1921, 1920, 1919, 1918,\n  1917, 1916, 1915, 1914, 1913, 1912, 1911, 1910, 1909, 1908, 1907,\n  1906, 1905, 1904, 1903, 1902, 1901, 1900, 1899, 1898, 1897, 1896</p>\n</blockquote>\n\n<p>If we don't need to separate with <code>,</code>, then <strike>58 57</strike> 41 bytes:</p>\n\n<pre><code>&lt;?=implode(' ',range($j=date(Y),$j-120));\n</code></pre>\n\n<p>Thanks to insertusernamehere for saving 16 bytes</p>\n"},{"answer_id":89527,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89527#89527","body":"<h1>Oracle SQL 11.2, 111 bytes</h1>\n\n\n\n<pre class=\"lang-sql prettyprint-override\"><code>SELECT LISTAGG(TO_CHAR(SYSDATE,'YYYY')-LEVEL+1,', ')WITHIN GROUP(ORDER BY LEVEL)FROM DUAL CONNECT BY LEVEL&lt;122;\n</code></pre>\n"},{"answer_id":89522,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89522#89522","body":"<h2>Pyke, 6 bytes</h2>\n<pre><code>wC7m-\n</code></pre>\n<p><a href=\"http://pyke.catbus.co.uk/?code=w%C2%99C7m-\" rel=\"noreferrer\">Try it here!</a></p>\n<pre><code>w     - 121\n   m- - for i in range(^):\n C7   -  current_year-i\n</code></pre>\n<p>(After <code>w</code>, the codepoint for 153 is present but it isn't printable)</p>\n"},{"answer_id":89515,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89515#89515","body":"<h2>Python 2, 62 bytes</h2>\n\n<pre><code>import time\nfor n in range(121):print int(time.ctime()[-4:])-n\n</code></pre>\n\n<p>And at 64 bytes:</p>\n\n<pre><code>for n in range(121):print int(__import__(\"time\").ctime()[-4:])-n\n</code></pre>\n"},{"answer_id":89496,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89496#89496","body":"<h1><a href=\"http://goo.gl/9KrKoM\" rel=\"nofollow noreferrer\">Dyalog APL</a>, <s>11</s> 10 <a href=\"https://codegolf.meta.stackexchange.com/a/9429/43319\">bytes</a></h1>\n\n<pre class=\"lang-apl prettyprint-override\"><code>120↑⌽⍳⊃⎕ts\n</code></pre>\n<p><code>120↑</code> take 120 elements</p>\n<p><code>⌽</code> of the reversed</p>\n<p><code>⍳</code> indices until</p>\n<p><code>⊃</code> the first element of</p>\n<p><code>⎕TS</code> TimeStamp in the format [YYYY, M, D, h, m, s, t]</p>\n<p><a href=\"http://tryapl.org/?a=120%u2191%u233D%u2373%u2283%u2395ts&amp;run\" rel=\"nofollow noreferrer\">TryAPL online!</a></p>\n<hr />\n<p>Old version:</p>\n<pre class=\"lang-apl prettyprint-override\"><code>(⊃⎕TS)-⍳120\n</code></pre>\n<p><code>⊃⎕TS</code> first element of [YYYY, M, D, h, m, s, t]</p>\n<p><code>-</code> minus</p>\n<p><code>⍳120</code> [0, 1, 2, ..., 118, 119]</p>\n<p>Requires <code>⎕IO←0</code>, which is default on many systems.</p>\n<p><a href=\"http://tryapl.org/?a=%u2395IO%u21900%20%u22C4%20%28%u2283%u2395TS%29-%u2373120&amp;run\" rel=\"nofollow noreferrer\">TryAPL online!</a></p>\n"},{"answer_id":89516,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89516#89516","body":"<h1>Java <s>75</s> 74 bytes</h1>\n<pre><code>public void possible(){\n  for(int i=0;i&lt;120;){\n    System.out.println(new Date().getYear()-i++);\n  }\n}\n</code></pre>\n<p>Golfed :</p>\n<pre><code>void p(){for(int i=0;i&lt;120;)System.out.println(new Date().getYear()-i++);}\n</code></pre>\n<p>1 byte off. Thanks to @LeakyNun</p>\n"},{"answer_id":89514,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89514#89514","body":"<h1>R, 34 bytes</h1>\n<pre><code>(format(Sys.Date(),&quot;%Y&quot;):0)[1:121]\n</code></pre>\n<p>See <a href=\"http://www.r-fiddle.org/#/fiddle?id=oVuj9wYz&amp;version=1\" rel=\"noreferrer\">here</a> on an online interpreter.</p>\n<p><strong>Edit</strong> Could be reduced to 33 bytes by using <code>substr</code>.</p>\n<pre><code>(substr(Sys.Date(),1,4):0)[1:121]\n</code></pre>\n<p>but technically this solution will only work until the 9999-12-31.</p>\n"},{"answer_id":89500,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89500#89500","body":"<h1>Pyth, <s>11</s> <s>9</s> 8 bytes</h1>\n<pre><code>-L.d3C\\y\n</code></pre>\n<p>Works by mapping over the range <code>[0...120]</code> and subtracting every number from the current year. The range is built implicitly by using <code>121</code> as the map argument. To avoid a separating whitespace between <code>.d3</code> and <code>121</code> we get this number by converting <code>y</code> to it's codepoint.<br />\nThanks to @FryAmTheEggman for coming up with this approach!</p>\n<p><a href=\"http://pyth.herokuapp.com/?code=-L.d3C%5Cy&amp;debug=0\" rel=\"noreferrer\">Try it here!</a></p>\n<p><em><strong>Old 9-byte solution:</strong></em></p>\n<pre><code>_&gt;121S.d3\n</code></pre>\n<p><a href=\"http://pyth.herokuapp.com/?code=_%3E121S.d3&amp;debug=0\" rel=\"noreferrer\">Try it here!</a></p>\n<p>Builds the range <code>[1...&lt;current year&gt;]</code> and only takes the last 121 elements of it.</p>\n"},{"answer_id":89499,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89499#89499","body":"<h1>PowerShell, <strike>26</strike> 24 bytes</h1>\n\n<p>@TimmyD improved version:</p>\n\n<pre><code>0..120|%{(date).Year-$_}\n</code></pre>\n\n<p>Was:</p>\n\n<pre><code>($d=(date).year)..($d-120)\n</code></pre>\n\n<p>where <code>date</code> runs <code>Get-Date</code></p>\n"},{"answer_id":89512,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89512#89512","body":"<p><strong>Mathematica/Wolfram Language, 28 bytes</strong> </p>\n\n<pre><code>Date[][[1]]-#&amp;/@Range[0,120]\n</code></pre>\n"},{"answer_id":89509,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89509#89509","body":"<h3>Ruby, <strike>39</strike> 36 bytes</h3>\n\n<pre><code>t=Time.new.year;t.downto(t-120).to_a\n</code></pre>\n\n<p>Old:</p>\n\n<pre><code>t=Time.new.year;(t-120..t).to_a.reverse\n</code></pre>\n\n<p>Should be obvious.</p>\n"},{"answer_id":89498,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89498#89498","body":"<h1><a href=\"http://github.com/Adriandmen/05AB1E\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>8</s> 7 bytes</h1>\n<p>Code:</p>\n<pre><code>žg120Ý-\n</code></pre>\n<p>Explanation:</p>\n<pre><code>žg         # Get the current year.\n  120Ý     # Create the list [0, 1, ..., 119, 120].\n      -    # Substract, which leaves [year - 0, year - 1, ..., year - 120].\n</code></pre>\n<p>Uses the <strong>CP-1252</strong> encoding. <a href=\"http://05ab1e.tryitonline.net/#code=xb5nMTIww50t&amp;input=\" rel=\"nofollow noreferrer\">Try it online!</a>.</p>\n"},{"answer_id":89501,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89501#89501","body":"<h2>Perl, 33 bytes</h2>\n\n<pre class=\"lang-pl prettyprint-override\"><code>say+(gmtime)[5]-$_+1900for 0..120\n</code></pre>\n\n<p>Run with <code>-M5.010</code> or <code>-E</code> : </p>\n\n<pre><code>perl -E 'say+(gmtime)[5]-$_+1900for 0..120'\n</code></pre>\n"},{"answer_id":89507,"question_id":89494,"link":"https://codegolf.stackexchange.com/questions/89494/list-of-possible-birth-years-of-living-humans/89507#89507","body":"<h1><a href=\"https://angularjs.org/\" rel=\"nofollow noreferrer\">AngularJS</a> + <a href=\"https://lodash.com/\" rel=\"nofollow noreferrer\">Lodash</a>, 274 bytes</h1>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>angular.module('x',[]).controller('x',['$scope',function(x){x.x=_.range(9,new Date().getFullYear()+1).slice(-121).reverse()}])</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=//goo.gl/M5LvGe&gt;&lt;/script&gt;&lt;script src=//goo.gl/opljJl&gt;&lt;/script&gt;&lt;select ng-app=x ng-controller=x multiple&gt;&lt;option ng-repeat=\"x in x\"&gt;{{x}}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Output</p>\n\n<p><a href=\"https://i.stack.imgur.com/JXRPu.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/JXRPu.png\" alt=\"enter image description here\"></a></p>\n"},{"answer_id":76228,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/76228#76228","body":"<h1><a href=\"https://github.com/cyoce/Cy\" rel=\"nofollow\">Cy</a>, <s>33</s> <s>31</s> 30 bytes (non-competing)</h1>\n\n<p>\nThis is going for the function option (takes N, outputs <code>F(N)</code>)</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>0 1 :&gt;i {1 - $&amp;+ times} &amp;if :&lt;\n</code></pre>\n\n<p>Ungolfed/explanation:</p>\n\n<pre class=\"lang-rb prettyprint-override\"><code>0 1       # first two fibs are 0, 1\n:&gt;i       # read input as integer (let's call it N)\n{\n  1 -    \n    {&amp;+}      # add the last two values\n  times     # repeat N-1 times ^\n} &amp;if     # if N is non-zero ^\n:&lt;        # output the last calculated value (if N is 0, that would be 0)\n</code></pre>\n"},{"answer_id":86447,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/86447#86447","body":"<h1><a href=\"https://github.com/DennisMitchell/sesos\" rel=\"nofollow\">Sesos</a>, 11 bytes (non-competing)</h1>\n\n<p>Not in-place, linear memory.</p>\n\n<p>Hexdump:</p>\n\n<pre><code>0000000: ae8583 ef6bc7 045fe7 b907                         ....k.._...\n\nSize   : 11 byte(s)\n</code></pre>\n\n<p><a href=\"http://sesos.tryitonline.net/#code=c2V0IG51bWluCnNldCBudW1vdXQKYWRkIDEscndkIDEsZ2V0ICAgIDtzZXR1cCB0YXBlCmptcAogIGZ3ZCAxCiAgam1wLHN1YiAxLGZ3ZCAxLGFkZCAxLGZ3ZCAxLGFkZCAxLHJ3ZCAyLGpuegogIHJ3ZCAxCiAgc3ViIDEKICBqbXAsc3ViIDEsZndkIDEsYWRkIDEscndkIDEsam56CiAgZndkIDEKam56CmZ3ZCAyCnB1dA&amp;input=MTI&amp;debug=on\" rel=\"nofollow\">Try it online!</a></p>\n\n<h2>Assembler</h2>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>set numin\nset numout\nadd 1,rwd 1,get    ;setup tape\njmp\n  fwd 1\n  jmp,sub 1,fwd 1,add 1,fwd 1,add 1,rwd 2,jnz\n  rwd 1\n  sub 1\n  jmp,sub 1,fwd 1,add 1,rwd 1,jnz\n  fwd 1\njnz\nfwd 2\nput\n</code></pre>\n"},{"answer_id":74051,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/74051#74051","body":"<h1>Perl 5, 23 bytes</h1>\n<p>22 bytes, plus 1 for <code>-nE</code> instead of <code>-e</code>.</p>\n<pre><code>say$.-=$b+=$.*=-1;redo\n</code></pre>\n<p><a href=\"http://c2.com/cgi/wiki?PerlGolf\" rel=\"nofollow noreferrer\">Hat tip.</a></p>\n"},{"answer_id":64156,"question_id":63772,"link":"https://codegolf.stackexchange.com/questions/63772/determine-the-color-of-a-chess-square/64156#64156","body":"<h2>Batch, <s>147</s> <s>127</s> 126 bytes</h2>\n\n<pre><code>@set/pi=\n@set/aj=%i:~1%%%2\n@goto %i:~,1%\n:a\n:c\n:e\n:g\n@set/aj=1-j\n:b\n:d\n:f\n:h\n@if %j%==0 (echo dark)else echo light\n</code></pre>\n\n<p>Uses <code>goto</code> as a form of <code>switch</code> to increment the row number on alternate columns.</p>\n\n<p>Edit: Saved 15 bytes by reducing the column modulo two up front and then using <code>1-j</code> to flip between dark and light on alternate columns. Saved 2 bytes by removing some unnecessary <code>()</code>s. Saved <s>3</s> 4 bytes by removing some unnecessary spaces.</p>\n"},{"answer_id":87107,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/87107#87107","body":"<h1>J, 9 bytes</h1>\n\n<pre><code>+/@:!&amp;i.-\n</code></pre>\n\n<p>Gets the <em>n</em><sup>th</sup> Fibonacci number by finding the sums of the binomial coefficients C(<em>n-i</em>-1, <em>i</em>) for <em>i</em> from 0 to <em>n</em>-1.</p>\n\n<p>Also, a short way using <strong>12 bytes</strong> to generate the first <em>n</em> Fibonacci numbers is</p>\n\n<pre><code>+/@(!|.)\\@i.\n</code></pre>\n\n<p>It uses the same method as above but works by operating on prefixes of the range <code>[0, 1, ..., n-1]</code>.</p>\n\n<h3>Usage</h3>\n\n<pre><code>   f =: +/@:!&amp;i.-\n   f 10\n55\n   f 17\n1597\n</code></pre>\n\n<h3>Explanation</h3>\n\n<pre><code>+/@:!&amp;i.- Input: n\n        - Negate n\n     &amp;i.  Form the ranges [n-1, n-2, ..., 0] and [0, 1, ..., n-1] \n    !     Find the binomial coefficient between each pair of values\n+/@:      Sum those binomial coefficients and return\n</code></pre>\n"},{"answer_id":86559,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/86559#86559","body":"<h1>Maple, 27 bytes</h1>\n<pre><code>ifelse(n&lt;3,1,f(n-1)+f(n-2))\n</code></pre>\n<p>Usage:</p>\n<pre><code>&gt; f := n -&gt; ifelse(n&lt;3,1,f(n-1)+f(n-2));\n&gt; f(2);\n  1\n&gt; f(3);\n  2\n</code></pre>\n"},{"answer_id":81031,"question_id":85,"link":"https://codegolf.stackexchange.com/questions/85/fibonacci-function-or-sequence/81031#81031","body":"<h1>Julia, 20 bytes</h1>\n\n<pre class=\"lang-julia prettyprint-override\"><code>!n=n&gt;1?!~-n+!~-~-n:n\n</code></pre>\n<p>Straightforward implementation of the recursive definition. No match for the <a href=\"https://codegolf.stackexchange.com/a/75665\">matrix approach</a>, but a lovely opportunity to abuse Julia's ability to <a href=\"https://codegolf.stackexchange.com/a/81028\">redefine operators</a>.</p>\n<p><a href=\"http://julia.tryitonline.net/#code=IW49bj4xPyF-LW4rIX4tfi1uOm4KCnByaW50KCEyMCk&amp;input=\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"},{"answer_id":80877,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/80877#80877","body":"<h1>Pyth, 9 bytes</h1>\n\n<pre><code>V^T6IP_NN\n</code></pre>\n\n<p><a href=\"https://pyth.herokuapp.com/\" rel=\"nofollow\">Try it online!</a></p>\n\n<p>Explanation:</p>\n\n<pre><code>V   : Iterate over all numbers from 0 to ...  \n^T6 : 10^6\nI   : If ...  \nP_N : number is prime ...  \nN   : print number\n</code></pre>\n"},{"answer_id":80707,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/80707#80707","body":"<h1>Java 107 Bytes, 26 minutes, naive approach</h1>\n\n<pre><code>y-&gt;{int i=1,j,n,r=0;for(j=2,n=1000000;(r+=++i&gt;=j?1:0)!=n;j+=j%i==0?i=1:0)System.out.print(i&gt;=j?j+\"\\n\":\"\");}\n</code></pre>\n\n<p>ungolfed</p>\n\n<pre><code>                y-&gt;{\n                int i=1,j,n,r=0;\n                for(j=2,n=1000000; \n                    (r+=((++i&gt;=j)?1:0))!=n; \n                    j+=((j%i==0)?i=1:0)) {\n                    System.out.print(i&gt;=j?j+\"\\n\":\"\");\n                }\n                }\n</code></pre>\n\n<p>Worstcase Runtime is <code>O(n)</code> divisons for primes as it tests everything in <code>[2,i[</code> and looks if anything divides <code>i</code> and prints it if it's divisorless or continues if a divisor is found. <code>n*O(n)</code> would make it <code>O(n^2)</code>, but due to distribution of divisors and primes, it is something along <code>O(n^2/log(n))+O(n*log(n))</code> divisons. In practice this takes something along 26 minutes apparently.</p>\n\n<h1>Java ungolfed 1601 Bytes, adaptive wheel sieve, 1.6 seconds</h1>\n\n<pre><code>public class Sieve {\n    ArrayList&lt;Integer&gt; primes = new ArrayList&lt;&gt;();\n    ArrayList&lt;Integer&gt; candidates = new ArrayList&lt;&gt;();\n    int target = Integer.MAX_VALUE;\n    int product = 1;\n    int nextEvolve = 0;\n    int multiplier = 1;\n    int iteration = 0;\n    boolean evolve = true;\n    Sieve(int n) {\n        this.candidates.add(1);\n        this.target = n;\n    }\n    int next() {\n        final int toTest = this.product*this.multiplier+this.candidates.get(this.iteration);\n        //System.out.println(\"try: \"+toTest+\" p:\"+this.product+\" m:\"+this.multiplier+\" i:\"+this.iteration);\n        for(int i = this.nextEvolve; i &lt; this.primes.size() &amp;&amp; toTest/this.primes.get(i)&gt;=this.primes.get(i); ++i) {\n            if(toTest%this.primes.get(i)==0) {\n                ++this.iteration;\n                if((this.iteration%=this.candidates.size())==0) {\n                    ++this.multiplier;\n                }\n                return this.next();\n            }\n        }\n        this.primes.add(toTest);\n        ++this.iteration;\n        if((this.iteration%=this.candidates.size())==0) {\n            ++this.multiplier;\n            if(this.evolve &amp;&amp; this.multiplier%this.primes.get(this.nextEvolve)==0) {\n                if(this.target/this.product&lt;toTest) {\n                    this.evolve = false;\n                }else {\n                    final int size = this.candidates.size();\n                    for(int i = 1; i &lt; this.primes.get(this.nextEvolve); i++) {\n                        for(int j = 0; j &lt; size; j++) {\n                            if((i*this.product+this.candidates.get(j))%this.primes.get(this.nextEvolve)!=0) {\n                                this.candidates.add(i*this.product+this.candidates.get(j));\n                            }\n                        }\n                    }\n                    this.product*=this.primes.get(this.nextEvolve);\n                    this.multiplier=this.multiplier/this.primes.get(this.nextEvolve);\n                    ++this.nextEvolve;\n                }\n            }\n        }\n        return toTest;\n    }\n    public static void main(String[] args) {\n        try {\n            System.in.read();\n        } catch (final IOException e) {\n            e.printStackTrace();\n        }\n        final Sieve s = new Sieve(1_000_000);\n        for(int prime = s.next(); prime &lt; 1_000_000; prime = s.next()) {\n            System.out.println(prime);\n        }\n    }\n}\n</code></pre>\n\n<h1>Java golfed 883 Bytes, 16 seconds</h1>\n\n<pre><code>class S{ArrayList&lt;Integer&gt; p=new ArrayList&lt;&gt;(),c=new ArrayList&lt;&gt;();int t,q,n,m,i;boolean e=true;S(int n){this.c.add(1);this.t=n;q=m=1;n=i=0;}int next(){int toTest=this.q*this.m+this.c.get(this.i);for(int i=this.n;i&lt;this.p.size();++i)if(toTest%this.p.get(i)==0){++this.i;if((this.i%=this.c.size())==0)++this.m;return this.next();}this.p.add(toTest);++this.i;if((this.i%=this.c.size())==0){++this.m;if(this.e &amp;&amp; this.m%this.p.get(this.n)==0){if(this.t/this.q&lt;toTest) this.e=false;else{int size=this.c.size();for(int i=1;i&lt;this.p.get(this.n);i++)for(int j=0;j&lt;size;j++)if((i*this.q+this.c.get(j))%this.p.get(this.n)!=0)this.c.add(i*this.q+this.c.get(j));this.q*=this.p.get(this.n);this.m=this.m/this.p.get(this.n);++this.n;}}}return toTest;}public static void main(String[] args){S s=new S(1_000_000);for(int prime=s.next();prime&lt;1_000_000;prime=s.next()){System.out.println(prime);}}}\n</code></pre>\n"},{"answer_id":13030,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/13030#13030","body":"<h2>APL, 15</h2>\n\n<pre><code>p~,p∘.×p←1↓⍳1e6\n</code></pre>\n\n<p>My interpreter ran into memory problems, but it works in theory.</p>\n"},{"answer_id":80739,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/80739#80739","body":"<h1>Pyth, 9 bytes</h1>\n<pre><code>V^T6IP_NN\n</code></pre>\n<p>Explanation:</p>\n<pre><code>V starts a for loop from 0 to the next number, keeping N as the value\nT = 10 and so ^T6 = 10^6 = 1000000\nI is if, P_N checks if N is prime and returns True or False based on the result.\nThe final N is just to print it.\n</code></pre>\n<p>I'm new to Pyth so it's likely not the best solution. Any suggestions are welcome!</p>\n"},{"answer_id":76506,"question_id":5977,"link":"https://codegolf.stackexchange.com/questions/5977/list-of-primes-under-a-million/76506#76506","body":"<h1>Javascript es6 66 bytes</h1>\n<p>I was surprised to not see JS in here so I thought I'd put in a word for her</p>\n<pre><code>//takes about 19 minutes to run on my work pc\nfor(i=2,l=[];i&lt;1e6;++i)l.every(a=&gt;i/a%1)&amp;&amp;l.push(console.log(i)|i)\n</code></pre>\n"},{"answer_id":60626,"question_id":60610,"link":"https://codegolf.stackexchange.com/questions/60610/non-unique-duplicate-elements/60626#60626","body":"<h1>Python 3 - <s>33</s> 30 bytes</h1>\n<p><code>{_ for _ in d if d.count(_)&gt;1}</code></p>\n<p>Repl output, <code>d</code> as input.</p>\n"}]