[{"answer_id":240693,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240693#240693","body":"<h1><a href=\"https://github.com/ETHproductions/japt\" rel=\"nofollow noreferrer\">Japt</a>, <s>25</s> 12 <a href=\"https://en.wikipedia.org/wiki/ISO/IEC_8859-1\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<p><a href=\"https://codegolf.stackexchange.com/a/256309/58974\">emanresu's solution</a> made me realise that, although I had the right method, my approach to it was <em>all</em> wrong - I honestly don't know <em>what</em> I was thinking!-  so please upvote them if you're upvoting this.</p>\n<pre><code>Ë¶Ô?ßDÔV:V±D\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=y7bUP99E1FY6VrFE&amp;input=WzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdCi1R\" rel=\"nofollow noreferrer\">Try it</a></p>\n<pre><code>Ë¶Ô?ßDÔV:V±D     :Implicit input of array U, with second input variable V defaulting to 0\nË                :Map each D in U\n ¶               :  Is D strictly equal to\n  Ô              :  Its reverse, if it's an array, or maximum, if it's an integer (see more detailed explanation below)\n   ?             :  If true\n    ß            :    Recursive call with arguments\n     DÔ          :    U = D reversed (because reversing an array in JS mutates the original), and\n       V         :    Current value of V\n        :        :  Else\n         V±D     :    Increment V by D\n</code></pre>\n<hr />\n<p>To (try to) explain how the <code>Ô</code> (which is a shortcut for the <code>w</code> method, without any arguments) allows us to differentiate between arrays &amp; numbers by testing for strict equality:</p>\n<p>While it's true that in JavaScript 2 arrays containing the exact same elements are <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubyg&amp;code=WzEsIDIsIDNdID09PSBbMSwgMiwgM10&amp;footer=KSQ\" rel=\"nofollow noreferrer\">not strictly equal</a> as they are 2 distinct objects, an array assigned to a variable is, of course, <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubygo&amp;code=VSA9IFsxLCAyLCAzXSwKVSA9PT0gVQ&amp;footer=KSQ\" rel=\"nofollow noreferrer\">equal to itself</a>. Add to that that the <code>reverse</code> method for arrays (<code>w</code> in Japt) <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubyhb&amp;code=VSA9IFsxLCAyLCAzXSwKVS53KCk&amp;footer=XS5xKFIpKSQ\" rel=\"nofollow noreferrer\">mutates the original array</a> and that explains how an array assigned to a variable (<code>D</code> in this case) can be <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubygo&amp;code=VSA9IFsxLCAyLCAzXSwKVSA9PT0gVS53KCk&amp;footer=KSkk\" rel=\"nofollow noreferrer\">strictly equal to its reverse</a>.</p>\n<p>As to why a number does not equal its maximum, that's down to a peculiarity of Japt. Firstly, when applied to a number, Japt's <code>w</code> method <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubygo&amp;code=VSA9IDgsClUudyg0LCAxMik&amp;footer=KSkk\" rel=\"nofollow noreferrer\">returns the maximum</a> of that number and the arguments passed to the method, <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubygo&amp;code=VSA9IDgsCnR5cGVvZiBVLncoNCwgMTIp&amp;footer=KSkk\" rel=\"nofollow noreferrer\">as a <code>Number</code></a>. However, if <em>no</em> arguments are passed to the <code>w</code> method then the number it's applied to is <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubygo&amp;code=VSA9IDgsClUudygp&amp;footer=KSkk\" rel=\"nofollow noreferrer\">returned as excpected</a> but, <a href=\"https://github.com/ETHproductions/japt/blob/master/src/japt-interpreter.js#L220\" rel=\"nofollow noreferrer\">for some reason</a>, Japt <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubygo&amp;code=VSA9IDgsCnR5cGVvZiBVLncoKQ&amp;footer=KSkk\" rel=\"nofollow noreferrer\">converts the returned value to an <code>Object</code></a> and a <code>Number</code> cannot be <a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;header=JE8ubygo&amp;code=VSA9IDgsClUgPT09IFUudygp&amp;footer=KSkk\" rel=\"nofollow noreferrer\">strictly equal to</a> an <code>Object</code></p>\n<hr />\n<h2>Original, 25 bytes</h2>\n<p>Preserving this version as Conor O'Brien awarded it an unexpected boubty.</p>\n<pre><code>W=Uv)?[W¶Ô?ßWÔ:V±W]cßUV:U\n</code></pre>\n<p><a href=\"https://petershaggynoble.github.io/Japt-Interpreter/?v=1.4.6&amp;code=Vz1Vdik/W1e21D/fV9Q6VrFXXWPfVVY6VQ&amp;input=WzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdCi1R\" rel=\"nofollow noreferrer\">Try it</a></p>\n"},{"answer_id":256309,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/256309#256309","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 37 bytes</h1>\n<pre class=\"lang-javascript prettyprint-override\"><code>f=(v,a=0)=&gt;v.map(z=&gt;z.at?f(z,a):a+=z)\n</code></pre>\n<p><a href=\"https://ato.pxeger.com/run?1=bVFLDoIwEI1bT-HGpI1PtKBYNdWDNF00Cm5QTPwsuIobF3ooPY0DWIJCmsmk896b7-1xSLfR_f68nOOhfPVjxa6waszV6urt7ZFlapV59ryOWQbLF3agMl6S353bJj2c0iTyknTHYqYN58veaNTTpvuHyAqSDUzAR1DhAgHCFs731XikwgTTBlcLg69V7HqsmbtNQVHfOGvvmZC8BWIY-pJgAgkdGuoJ_u9A0BKC2p8WZIk51Qrg50VmRCaNEC2DwBUod-R8bawiuRgXUL445015I3fYDw\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<p>Port of several of the other answers.</p>\n"},{"answer_id":242238,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/242238#242238","body":"<h1><a href=\"https://github.com/dloscutoff/Esolangs/tree/master/tinylisp\" rel=\"nofollow noreferrer\">tinylisp</a>, <s>116</s> <s>108</s> 96 bytes</h1>\n<pre><code>(d S(q((L A)(i L(i(a(h L)1)(c(a(h L)A)(S(t L)(a(h L)A)))(c(S(h L)A)(S(t L)A)))L\n(d f(q((L)(S L 0\n</code></pre>\n<p><a href=\"https://tio.run/##XYyxCsMwDER3f8WNpy1O0tC1uzZ/QWkpNZSSUC/9ekU2ptAgJO7diSv5/X3lz2rGOxI3UnERZigzr3xCJQpvXXqSWFz8WGqY/sPqavC@R@tzG4rBWDGiT2jIKDhs6H8jJrCe2W1xjOCMM7gITs62Aw\" rel=\"nofollow noreferrer\" title=\"tinylisp – Try It Online\">Try it online!</a></p>\n<p>-8 bytes by removing <code>(load library</code> thanks to chunes <a href=\"https://chat.stackexchange.com/transcript/message/60327802#60327802\">in chat</a>. -12 bytes thanks to some <a href=\"https://codegolf.stackexchange.com/a/242255/67312\">type abuse</a>.</p>\n"},{"answer_id":240666,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240666#240666","body":"<h1><a href=\"https://github.com/Adriandmen/05AB1E/wiki/Commands\" rel=\"nofollow noreferrer\">05AB1E</a>, <s>30</s> 29 <a href=\"https://github.com/Adriandmen/05AB1E/wiki/Codepage\" rel=\"nofollow noreferrer\">bytes</a></h1>\n<pre><code>0U&quot;εdiXćy+š¬ëXD¬šUy®.V}sU&quot;©.V\n</code></pre>\n<p><a href=\"https://tio.run/##yy9OTMpM/f/fIFTp3NaUzIgj7ZXaRxceWnN4dYTLoTVHF4ZWHlqnF1ZbHKp0aKVe2P//0YY6RjrGOtEgwiRWJzoWyDXUiTbRsdCJNovVMQXyY//r6ubl6@YkVlUCAA\" rel=\"nofollow noreferrer\">Try it online</a> or <a href=\"https://tio.run/##yy9OTMpM/V9Waa@k8KhtkoKSfeV/g1Clc1tTMiOOtFdqH114aM3h1REuh9YcXRhaeWidXlhtcajSoZV6Yf91/kdHx@ooRFuACEMdIx1jCAMKQZxoIAnFEDkMAaAunWgQYQIUjAVygWpMdCx0os1idUyBfIgpOjAVUGugdGzsf13dvHzdnMSqSgA\" rel=\"nofollow noreferrer\">verify all test cases</a>.</p>\n<p><strong>Explanation:</strong></p>\n<p>Unfortunately 05AB1E lacks recursive methods. We can however mimic this behavior by using <code>&quot;recursive_function_here®.V&quot;©.V</code>. One big disadvantage about this however, is that the variables will always be in the scope of the full program, rather than this recursive function. So instead, we use and modify a list as variable.</p>\n\n<pre class=\"lang-python prettyprint-override\"><code>0U         # Start with X=[0] (or actually X=0, but it behaves as [0])\n  &quot;...&quot;    # Push a string with the recursive function explained below\n       ©   # Store this string in variable `®` (without popping)\n        .V # Evaluate it as 05AB1E code\n           # (after which the result is output implicitly)\n\nε          # Map each item `y` to:\n di        #  If `y` is a (non-negative) integer:\n   X       #   Push list X\n    ć      #   Extract its head; pop and push remainder-list and first item\n           #   separated to the stack\n     y+    #   Add the current integer `y` to this head\n       š   #   Prepend it back to the remainder-list\n        ¬  #   Push this prepended head again (without popping the list)\n  ë        #  Else (`y` is an inner list instead):\n   X       #   Push `X`\n    D      #   Push `X` again by duplicating\n     ¬š    #   In this second `X`, prepend its own head\n       U   #   Pop and replace `X` with this modified list\n   y       #   Push the current list `y`\n    ®.V    #   Do a recursive call with it\n  }        #  After the if-else statement:\n   s       #   Swap so the (potentially modified) `X` is at the top of the stack\n    U      #   Pop and replace `X` with this modified list\n</code></pre>\n"},{"answer_id":240625,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240625#240625","body":"<h1><a href=\"https://www.r-project.org/\" rel=\"nofollow noreferrer\">R</a>, <s>111</s> <s>107</s> <s>103</s> 98 bytes</h1>\n<p><em>Edit: -5 bytes each thanks to pajonk and Giuseppe</em></p>\n\n<pre class=\"lang-r prettyprint-override\"><code>`~`=function(x,t=0)`if`(length(x),`if`(is.list(y&lt;-el(x)),c(list(y~t),x[-1]~t),c(y+t,x[-1]~y+t)),x)\n</code></pre>\n<p><a href=\"https://tio.run/##ZU5BDoIwELz7ChIv3bgYWxBqIn7EGDENKglBQ5cELnwdS1uNymlnZ3Zmpxm1utTnZ9XqbMyHPLu2taLyUbMOKdtAXl5zVhX1je6sA7RrqddVqYn1@7CoDAuomCMGAuyOIT9NQLF@RX41yJx1MJLimb2FhaaGfZ4zIwAsSAkny7kurJ44naMb8D/nvsT60rdPYORuJxB7HxjaR8YoHUgAt4aHYBmEh8C7I0ycKpFz5NuPX@LOV4hQ@CiRGr@J4XzeKrWtpGv1Ve3dyG4/eJ4hAcYX\" rel=\"nofollow noreferrer\" title=\"R – Try It Online\">Try it online!</a></p>\n"},{"answer_id":240656,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240656#240656","body":"<h1><a href=\"https://www.ruby-lang.org/\" rel=\"nofollow noreferrer\">Ruby</a>, 39 bytes</h1>\n\n<pre class=\"lang-ruby prettyprint-override\"><code>f=-&gt;d,t=0{d.map{|x|x*0==0?t+=x:f[x,t]}}\n</code></pre>\n<p><a href=\"https://tio.run/##XU/RasMwDHz3V5jubbuWOGk7b@DtQ1Q9dGvCBmsoqQseSb49kxMnlGFk6U7nk9zcPn6HoXLrtxO8y9rT5ny8tF3owmPmXPbun1x4rSjAc98PRMTQxAyliWysbQIGOYpIGBTYL2Q6U0MU2GKXmiRsiti@h/PrfxIhcp7jfq7gaC08CxTZFha0Z5mFfFkKZGFkmd2os3gR3wJ5dH0WnciNWXbD7Jg@lvK06ehmspGNv50zs@JNefz8ajtfXj2a8nr78Z3SwVUUGVb6omMRc5Cr@a69Xj20wblJ3B/qQ71SWqleDX8\" rel=\"nofollow noreferrer\" title=\"Ruby – Try It Online\">Try it online!</a></p>\n<p>Ruby has the same operator <code>*</code> for Integer and Array which takes the same right operand type(number).<br />\nIf we multiply a number by 0 we get 0, if an Array we get an empty Array.</p>\n"},{"answer_id":240655,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240655#240655","body":"<h1><a href=\"https://nodejs.org\" rel=\"nofollow noreferrer\">JavaScript (Node.js)</a>, 52 bytes</h1>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>f=([h,...t],v=0)=&gt;h?[h+0&gt;h?f(h,v):v+=h,...f(t,v)]:[]\n</code></pre>\n<p><a href=\"https://tio.run/##bVDRDoIwDHz3K3wc4QQGihODfsjSB6PiNEaMkP3@LCgEhSxN095de93tYA/V8XV91otHeTo7V@RCGwRBUBNsHnn5zuy18SNOhTCwXmb9vCUUouaSMk3uWD6q8n4O7uVFFEKT523nYTjXNPtDVA@pESYRI@lxiQTpBOf7BjxWYYnViKsl4Rs9e9gbz55ScDemLqY9M9JYYAZxyYIlFHRK7Anx70HQCpLtr1qywoZ3JYibJWsms0bKiUPQLfj8UZcHZ7XDZdRCzcd1mdwb\" rel=\"nofollow noreferrer\" title=\"JavaScript (Node.js) – Try It Online\">Try it online!</a></p>\n"},{"answer_id":240634,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240634#240634","body":"<h1><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"noreferrer\">Wolfram Language (Mathematica)</a>, 39 bytes</h1>\n<pre><code>a_~f~b___:=Join[{f@@a},0&amp;@@a+f@b]\n_f={}\n</code></pre>\n<p><a href=\"https://tio.run/##y00syUjNTSzJTE78/z8xvi6tLik@Pt7K1is/My@6Os3BIbFWx0ANSGmnOSTFcsWn2VbX/g8oyswriVbWtQPKK8eq1QUnJ@bVVXNV1@pwVVuACEMdIx1jCAMKQZxqIAnFEDkMAaAunWoQYQIUrAVygWpMdCx0qs1qdUyBfIgpOjAVUGugdC1X7X8A\" rel=\"noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input <code>[list...]</code>. Inputting <code>[list]</code> works, but returns inside an extra layer of <code>{}</code>.</p>\n<pre><code>a_~f~b___:=                         when input is nonempty:\n                 f@@a                 recurse on first element\n                                      (do nothing if it's an integer)\n           Join[{    },      f@b]     followed by recursion on remainder\n                           a+           with first element added\n                       0&amp;@@             (or 0 if it's a list)\n_f={}                               otherwise return empty list\n</code></pre>\n<hr />\n<h3><a href=\"https://www.wolfram.com/wolframscript/\" rel=\"noreferrer\">Wolfram Language (Mathematica)</a>, 40 bytes</h3>\n<pre><code>f=#/.{a_,b___}:&gt;Join[{f@a},0&amp;@@a+f@{b}]&amp;\n</code></pre>\n<p><a href=\"https://tio.run/##ZU1NC8IwDL33bxR6MX5PGYKjZ0@CxzFKNiz2sArSW8j@em1pPUnIS97LSzJjeD1nDG7CGO1VbjeEBkZjDF@629v5nqxGhp3SGldW08iDiveP86GX685qOajlMaFfSBCDoDbDHg5wLE2NTChhzTL7E9IWUIYmiZxo8jTQAp0ZTomXK/Bz1De1suD4BQ\" rel=\"noreferrer\" title=\"Wolfram Language (Mathematica) – Try It Online\">Try it online!</a></p>\n<p>Input <code>[list]</code>.</p>\n"},{"answer_id":240632,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240632#240632","body":"<h1><a href=\"https://github.com/somebody1234/Charcoal\" rel=\"nofollow noreferrer\">Charcoal</a>, 51 bytes</h1>\n<pre><code>⊞υ⊞Ｏθ⁰Ｆυ«≔⊟ιηＦＬι«≔§ικζ¿⁼ζ⁺ζ⟦⟧⊞υ⊞Ｏζη«≧⁺ζη§≔ικη»»»⭆¹θ\n</code></pre>\n<p><a href=\"https://tio.run/##bY7LSgQxEEXX3V@RZQVKsHUUYVazcCEoNroMWYQx0wmGfuQh0jLfHivRBhdCSFF1b91TR6P8cVIu5z4FAwlZqc@z9ipOHhZkl5zv29PkGSTOvtrmEIIdRuinGSxHZkhtqvyoxyEaGlbb5jvEh/FNf4JF9k72tdgbe2JwvyTlAqxEdKlWITnt/nvHWkB1Vbuga37zpOYfxosdTISSQvm/F238v/hNOrf0zm3v7RjhNVIZKAs6ZAsxchaiwyu8RlG@nUQhqe1Q7PAOxa3EG@qlzBcf7hs\" rel=\"nofollow noreferrer\" title=\"Charcoal – Try It Online\">Try it online!</a> Link is to verbose version of code. Explanation:</p>\n<pre><code>⊞υ⊞Ｏθ⁰\n</code></pre>\n<p>Temporarily push the initial accumulator to the list and push that list to the list of lists.</p>\n<pre><code>Ｆυ«\n</code></pre>\n<p>Loop over all of the lists.</p>\n<pre><code>≔⊟ιη\n</code></pre>\n<p>Remove the accumulator from the list.</p>\n<pre><code>ＦＬι«\n</code></pre>\n<p>Loop over the elements of the list.</p>\n<pre><code>≔§ικζ\n</code></pre>\n<p>Get the current element.</p>\n<pre><code>¿⁼ζ⁺ζ⟦⟧\n</code></pre>\n<p>Check whether it's a list. Adding an empty list to a list produces the original list, but adding it to an integer vectorises therefore producing the empty list rather than an integer.</p>\n<pre><code>⊞υ⊞Ｏζη\n</code></pre>\n<p>If it's a sublist then temporarily push the accumulator to the sublist and push the sublist to the list of lists.</p>\n<pre><code>«≧⁺ζη§≔ικη\n</code></pre>\n<p>Otherwise add the value to the accumulator and replace the value with the total.</p>\n<pre><code>»»»⭆¹θ\n</code></pre>\n<p>Pretty-print the result as the default output format doesn't handle ragged lists very well.</p>\n"},{"answer_id":240629,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240629#240629","body":"<h1><a href=\"https://github.com/dloscutoff/pip\" rel=\"nofollow noreferrer\">Pip</a> <code>-xp</code>, 27 bytes</h1>\n<pre><code>b|:0FdacPB:xNd?b+:d(fdb)c|l\n</code></pre>\n<p>Recursive main program, takes the list as a command-line argument. <a href=\"https://ato.pxeger.com/run?1=m724ILNgebSSbkWBUuyCpaUlaboWu5NqrAzcUhKTA5ysKvxS7JO0rVI00lKSNJNrciAqoApvakQrRRtaG1kbW0eDCJNY6-hYINfQOtrE2sI62izW2hTIj4WbDAA\" rel=\"nofollow noreferrer\">Attempt This Online!</a></p>\n<h3>Explanation</h3>\n<pre><code>b|:0FdacPB:xNd?b+:d(fdb)c|l\n                             a (1st arg) is the input list; b (2nd arg) is the starting\n                             number for the scan\n                             When the function is called as the main program, b is not\n                             specified, so it is nil\nb|:0                         If b is falsey (nil or 0), set it to 0 instead\n                             c and d are also local variables which are nil b/c 3rd and\n                             4th arguments are not given\n    Fda                      For each element d in the input list:\n           xNd                 Does d contain x (empty string)?\n              ?                If so, it's an integer:\n               b+:d              Add it to b in-place\n                               If not, it's a list of integers:\n                   (f  )         Make a recursive call\n                     d           using d as the new list\n                      b          and the current value of b as the new starting point\n       cPB:                    Take that result and push it onto the end of c\n                               (Pushing an element to a nil variable makes it a list)\n                        c    After the loop, return c...\n                         |   except if c is falsey, it's still nil...\n                          l  so return empty list instead\n</code></pre>\n"},{"answer_id":240620,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240620#240620","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"noreferrer\">BQN</a>, 34 bytes<sup><a href=\"https://github.com/mlochbaum/BQN/blob/master/commentary/sbcs.bqn\" rel=\"noreferrer\">SBCS</a></sup></h1>\n<pre class=\"lang-none prettyprint-override\"><code>{×≠𝕩?(⊑𝕩)𝕤{=𝕨?𝕩∾˜⋈𝔽𝕨;𝕨+0∾𝕩}𝕊1↓𝕩;𝕩}\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RuKGkHvDl+KJoPCdlak/KOKKkfCdlakp8J2VpHs98J2VqD/wnZWp4oi+y5zii4jwnZS98J2VqDvwnZWoKzDiiL7wnZWpffCdlYox4oaT8J2VqTvwnZWpfQoKCj7ii4jiiJhG4oiY4oCiSnPCqOKfqCJbOF0iCiJbMSwyLDNdIgoiWzEsMSwxLDEsMV0iCiJbWzFdLFsxXSxbMV1dIgoiWzEsWzFdLFsxXSxbMV1dIgoiWzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdIgoiW1sxLDIsMyw0XSxbMSwyLDNdLFsxLDIsM11dIuKfqQ==\" rel=\"noreferrer\">Run online!</a></p>\n<pre><code>{×≠𝕩?(⊑𝕩)𝕤{=𝕨?𝕩∾˜⋈𝔽𝕨;𝕨+0∾𝕩}𝕊1↓𝕩;𝕩} # Function taking a nested list as 𝕩\n ×≠𝕩?                          ;𝕩  # If the list is empty, return it\n                            1↓𝕩    # Tail of 𝕩\n                           𝕊       # Recursive call on the tail\n                                   # If that fails, return the tail (for the base case)\n      ⊑𝕩                           # The first element of the list\n        𝕤{      ...      }         # Call the inner function with parameters\n                                   #  - 𝕩: result of recursive call\n                                   #  - 𝕨: first element\n                                   #  - 𝔽: a reference to the outer function\n          =𝕨?&lt;list&gt;;&lt;int&gt;          #   Conditional, the rank of 𝕨 is 0 for ints and 1 for lists\n                 𝔽𝕨                #   If 𝕨 is a list, call 𝔽 on that \n             𝕩∾˜⋈                  #   And insert the result in the front of 𝕩\n                      0∾𝕩          #   If 𝕨 is an integer, prepend 0 to the list 𝕩\n                    𝕨+             #   And add 𝕨 to each integer in the resulting nested list\n</code></pre>\n<p>I tried to handle the base case with <code>⎊</code> (Catch) instead of an explicit conditional, but couldn't get it to work properly. See <a href=\"https://codegolf.stackexchange.com/revisions/240620/2\">the revision history</a> for my failed attempts.</p>\n"},{"answer_id":240615,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240615#240615","body":"<h1><a href=\"https://www.python.org\" rel=\"noreferrer\">Python</a>, <sup><s>57</s> <s>54</s></sup> 53 bytes</h1>\n<pre>f=lambda x,a=0:[i*0==0and(a:=a+i)or f(i,a)for i in x]</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m72soLIkIz9vwYKlpSVpuhY3TdNscxJzk1ISFSp0Em0NrKIztQxsbQ0S81I0Eq1sE7UzNfOLFNI0MnUSNdOArEyFzDyFilioZuuCosy8Eo00jWhDHQUjHQVjHYVoCGUSC2TGggWBUtEmOgoWQMoMKGIKEo3V1IQYAXMHAA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Thanks to @ovs for -3 bytes.</p>\n<h1><a href=\"https://github.com/pxeger/whython\" rel=\"noreferrer\">Whython</a>, 42 bytes</h1>\n<pre>f=lambda x,a=0:[(a:=a+i)?f(i,a)for i in x]</pre>\n<p><a href=\"https://ato.pxeger.com/run?1=m728PKOyJCM_b8GCpaUlaboWN7XSbHMSc5NSEhUqdBJtDayiNRKtbBO1MzXt0zQydRI10_KLFDIVMvMUKmKhOqwLijLzSjTSNKINdRSMdBSMdRSiIZRJLJAZCxYESkWb6ChYACkzoIgpSDRWUxNiBMxyAA\" rel=\"noreferrer\">Attempt This Online!</a></p>\n<p>Uses the <code>?</code> operator to catch <code>TypeError: unsupported operand type(s) for +: 'int' and 'list'</code> and recurse in that case.</p>\n"},{"answer_id":240616,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240616#240616","body":"<h1><a href=\"https://mlochbaum.github.io/BQN/\" rel=\"nofollow noreferrer\">BQN</a>, 44 bytes<sup><a href=\"https://github.com/mlochbaum/BQN/blob/master/commentary/sbcs.bqn\" rel=\"nofollow noreferrer\">SBCS</a></sup></h1>\n<pre class=\"lang-none prettyprint-override\"><code>0⊸{0=≠𝕩?𝕩;×≡⊑𝕩?(⋈𝕨𝕊⊑𝕩)∾𝕨𝕊1↓𝕩;a∾(a←𝕨+⊑𝕩)𝕊1↓𝕩}\n</code></pre>\n<p><a href=\"https://mlochbaum.github.io/BQN/try.html#code=RiDihpAgMOKKuHswPeKJoPCdlak/8J2VqTvDl+KJoeKKkfCdlak/KOKLiPCdlajwnZWK4oqR8J2VqSniiL7wnZWo8J2VijHihpPwnZWpO2HiiL4oYeKGkPCdlagr4oqR8J2VqSnwnZWKMeKGk/Cdlal9Cgo+KOKLiCBGKcKo4p+o4oCiSnMiW10iCuKAokpzIls4XSIK4oCiSnMiWzEsMiwzXSIK4oCiSnMiWzEsMSwxLDEsMV0iCuKAokpzIltbMV0sWzFdLFsxXV0iCuKAokpzIlsxLFsxXSxbMV0sWzFdXSIK4oCiSnMiWzEsMiwzLFsyLDMsNF0sW10sMiwxLFs0LDgsWzZdLDVdLDJdIgrigKJKcyJbWzEsMiwzLDRdLFsxLDIsM10sWzEsMiwzXV0i4p+p\" rel=\"nofollow noreferrer\">Run online!</a></p>\n"},{"answer_id":240613,"question_id":240612,"link":"https://codegolf.stackexchange.com/questions/240612/scan-a-ragged-list/240613#240613","body":"<h1>Python3, 74 bytes:</h1>\n<pre><code>f=lambda x,h=0:x and[int==type(x[0])and(h:=h+x[0])or f(x[0],h)]+f(x[1:],h)\n</code></pre>\n<p><a href=\"https://tio.run/##dY5NCsMgEIX3PUWWSmYRmx@C4EmGWaSkYqFNRLJITm9H2yySUkSc9703M/ptcfNU9z7EaM1zeN3GoVjBmUqvxTCN@JgWY5bN38WKFUlGwmnjyqzmUNjMwUkqU6l0qqMP3CesQAVXqKGBFjqS8nLimE0CJJYKsIEesCNoWR/iB9H/TjqR7zlQVLznc0/pf87@@eTkJfvLqfgG\" rel=\"nofollow noreferrer\">Try it online!</a></p>\n"}]