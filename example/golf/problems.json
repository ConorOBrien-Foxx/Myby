[
    {
        "id": "cgse50240",
        "name": "xor-multiplication",
        "tests": [
            { "x": 0, "y": 1, "result": 0 },
            { "x": 1, "y": 2, "result": 2 },
            { "x": 9, "y": 0, "result": 0 },
            { "x": 6, "y": 1, "result": 6 },
            { "x": 3, "y": 3, "result": 5 },
            { "x": 2, "y": 5, "result": 10 },
            { "x": 7, "y": 9, "result": 63 },
            { "x": 13, "y": 11, "result": 127 },
            { "x": 5, "y": 17, "result": 85 },
            { "x": 14, "y": 13, "result": 70 },
            { "x": 19, "y": 1, "result": 19 },
            { "x": 63, "y": 63, "result": 1365 }
        ]
    },
    {
        "id": "cgse252082",
        "name": "reconstruct-matrix-from-its-diagonals",
        "tests": [
            { "x": [[5]], "result": [[5]] },
            { "x": [[0],[1,69],[13]], "result": [[1, 0], [13, 69]] },
            {
                "x": [[25], [0, 1], [6, 23, 10], [420, 9], [67]],
                "result": [[6, 0, 25], [420, 23, 1], [67, 9, 10]]
            },
            {
                "x": [
                    [5], [4, 10], [3, 9, 15], [2, 8, 14, 20], [1, 7, 13, 19, 25],
                    [6, 12, 18, 24], [11, 17, 23], [16, 22], [21]
                ],
                "result": [
                    [1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15],
                    [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]
                ]
            }
        ]
    },
    {
        "id": "cgse142071",
        "name": "find-the-sum-of-the-divisors-of-n",
        "tests": [
            { "x": 7, "result": 8 },
            { "x": 15, "result": 24 },
            { "x": 20, "result": 42 },
            { "x": 1, "result": 1 },
            { "x": 5, "result": 6 }
        ]
    },
    {
        "id": "cgse85",
        "name": "fibonacci-function-or-sequence",
        "tests": [
            { "x": 1, "result": 1 },
            { "x": 2, "result": 1 },
            { "x": 3, "result": 2 },
            { "x": 4, "result": 3 },
            { "x": 5, "result": 5 },
            { "x": 6, "result": 8 },
            { "x": 7, "result": 13 },
            { "x": 8, "result": 21 }
        ]
    },
    {
        "id": "cgse38325",
        "name": "minimum-excluded-number",
        "tests": [
            {"x":[1],"result":0},
            {"x":[0],"result":1},
            {"x":[2,0],"result":1},
            {"x":[3,1,0,1,3,3],"result":2},
            {"x":[],"result":0},
            {"x":[1,2,3],"result":0},
            {"x":[5,4,1,5,4,8,2,1,5,4,0,7,7],"result":3},
            {"x":[3,2,1,0],"result":4},
            {"x":[0,0,1,1,2,2,3],"result":4},
            {"x":[1,0,7,6,3,11,15,1,9,2,3,1,5,2,3,4,6,8,1,18],"result":10}
        ]
    },
    {
        "id": "cgse106149",
        "name": "compute-the-median",
        "tests": [
            {"x":[1,2,3,4,5,6,7,8,9], "result":5},
            {"x":[1,4,3,2], "result": 2.5},
            {"x":[1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,-5,100000,1.3,1.4], "result": 1.5},
            {"x":[1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,-5,100000,1.3,1.4], "result": 1.5}
        ]
    },
    {
        "id": "cgse251594",
        "name": "find-the-nth-mersenne-prime",
        "tests": [
            {"x":1, "result":3},
            {"x":2, "result":7},
            {"x":3, "result":31},
            {"x":4, "result":127},
            {"x":5, "result":8191}
        ]
    },
    {
        "id": "cgse130454",
        "name": "product-of-divisors",
        "tests": [
            {"x":1, "result":1},
            {"x":2, "result":2},
            {"x":3, "result":3},
            {"x":4, "result":8},
            {"x":5, "result":5},
            {"x":6, "result":36},
            {"x":7, "result":7},
            {"x":8, "result":64},
            {"x":9, "result":27},
            {"x":10, "result":100},
            {"x":12, "result":1728},
            {"x":14, "result":196},
            {"x":24, "result":331776},
            {"x":25, "result":125},
            {"x":28, "result":21952},
            {"x":30, "result":810000} 
        ]
    },
    {
        "id": "cgse208982",
        "name": "antisymmetry-of-a-matrix",
        "tests": [
            {"x":[[0,2,-1],[-2,0,0],[1,0,0]], "result":true},
            {"x":[[0,-2],[2,0]], "result":true},
            {"x":[[1,1,1],[1,1,1],[1,1,1]], "result":false},
            {"x":[[0,0,1],[0,0,0],[-1,0,0]], "result":true}
        ]
    },
    {
        "id": "cgse5977",
        "name": "list-of-primes-under-a-million",
        "tests": []
    },
    {
        "id": "cgse1744",
        "name": "mathematical-combination",
        "tests": [
            {"x":"5,2", "result":10},
            {"x":"14,10", "result":1001},
            {"x":"10,1", "result":10},
            {"x":"10,2", "result":45},
            {"x":"0,0", "result":1},
            {"x":"5,3", "result":10}
        ]
    },
    {
        "id": "cgse185674",
        "name": "pwas-eht-tirsf-dna-tasl-setterl-fo-hace-dorw",
        "tests": [
            {
                "x":"swap the first and last letters of each word",
                "result":"pwas eht tirsf dna tasl setterl fo hace dorw"
            },
            {
                "x": "hello world",
                "result": "oellh dorlw"
            },
            {
                "x": "test cases",
                "result": "test sasec"
            },
            {
                "x": "programming puzzles and code golf",
                "result": "grogramminp suzzlep dna eodc folg"
            },
            {
                "x": "in a green meadow",
                "result": "ni a nreeg weadom"
            },
            {
                "x": "yay racecar",
                "result": "yay racecar"
            }
        ]
    },
    {
        "id": "cgse252189",
        "name": "carryless-factors",
        "tests": [
            {"x":2,"result":[1,2]},
            {"x":4,"result":[1,2,4]},
            {"x":5,"result":[1,3,5]},
            {"x":6,"result":[1,2,3,6]},
            {"x":25,"result":[1,25]},
            {"x":39,"result":[1,3,5,11,29,39]},
            {"x":42,"result":[1,2,7,14,21,42]},
            {"x":100,"result":[1,2,4,25,50,100]}
        ],
        "note": "Too long for x=574,5040,848640."
    },
    {
        "id": "cgse240612",
        "name": "scan-a-ragged-list",
        "tests": [
            {"x":[], "result":[]},
            {"x":[8], "result":[8]},
            {"x":[1,2,3], "result":[1,3,6]},
            {"x":[1,1,1,1,1], "result":[1,2,3,4,5]},
            {"x":[[1],[1],[1]], "result":[[1],[1],[1]]},
            {"x":[1,[1],[1],[1]], "result":[1,[2],[2],[2]]},
            {
                "x":[1,2,3,[2,3,4],[],2,1,[4,8,[6],5],2],
                "result":[1,3,6,[8,11,15],[],8,9,[13,21,[27],26],11]
            },
            {
                "x":[[1,2,3,4],[1,2,3],[1,2,3]],
                "result":[[1,3,6,10],[1,3,6],[1,3,6]]
            }
        ]
    },
    {
        "id": "cgse136713",
        "name": "find-the-first-duplicated-element",
        "tests": [
            {"x":[2, 3, 3, 1, 5, 2], "result":3},
            {"x":[2, 4, 3, 5, 1], "result":null}
        ]
    },
    {
        "id": "cgse252758",
        "name": "number-to-string-in-aaaaa-way",
        "tests": [
            {"x":[4,3,2,1,3], "result":["d","c","b","a","c"]},
            {"x":[8,6,4,5], "result":["A","h","f","d","e"]},
            {"x":[3,4,2], "result":["A","A","c","d","b"]},
            {"x":[9,9,9,9,1], "result":["i","i","i","i","a"]}
        ]
    },
    {
        "id": "cgse103377",
        "name": "appending-string-lengths",
        "tests": [
            {"x":"aaa", "result":"aaa4"},
            {"x":"aaaaaaaa", "result":"aaaaaaaa9"},
            {"x":"aaaaaaaaa", "result":"aaaaaaaaa11"},
            {"x":"a1", "result":"a13"},
            {
                "x":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "result":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa101"
            },
            {
                "x":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "result":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa102"
            }
        ],
        "note": "Alternative 6b: #+=+@+HG"
    },
    {
        "id": "cgse167818",
        "name": "concatenating-n-with-n-1",
        "tests": [
            {"x":1, "result": [1]},
            {"x":2, "result": [1, 12]},
            {"x":3, "result": [1, 12, 23]},
            {"x":10, "result": [1, 12, 23, 34, 45, 56, 67, 78, 89, 910]}
        ]
    },
    {
        "id": "cgse252442",
        "name": "repeat-values-in-array",
        "tests": [
            {"y":[1,2,3], "x":[1,2,3], "result":[1,2,2,3,3,3]},
            {"y":[5,1,1,0], "x":[6,0,0,6], "result":[6,6,6,6,6,0,0]},
            {"y":[0,0], "x":[100,100], "result":[]}
        ]
    },
    {
        "id": "cgse224000",
        "name": "are-all-the-items-the-same",
        "tests": [
            {"x":[1, 1, 1, 1, 1, 1, 1], "result":true},
            {"x":[1, 2, 3, 4], "result":false},
            {"x":[6, 9, 6, 9, 6], "result":false},
            {"x":[6], "result":true},
            {"x":[7, 7], "result":true},
            {"x":[4, 2, 0], "result":false}
        ]
    },
    {
        "id": "cgse150563",
        "name": "modulus-summation",
        "tests": [
            {"x":2, "result":0},
            {"x":14, "result":31},
            {"x":15, "result":36},
            {"x":300, "result":15691}
        ]
    },
    {
        "id": "cgse241357",
        "name": "implement-an-argwhere-function",
        "tests": [
            {
                "x":[1, 2, 0, 0, 3, 0, 0, 0, 4],
                "f":"#=0",
                "result":[2, 3, 5, 6, 7]
            },
            {
                "x":[4, 3, 5, 7, 11, 13, 17],
                "f":"0=#%2",
                "result":[0]
            },
            {
                "x":[8, 9, 10, 11, 12, 13],
                "f":"20 < # + 10",
                "result":[3, 4, 5]
            },
            {
                "x":[5, -5, 2, -2, 0],
                "f":"# < 0",
                "result":[1, 3]
            },
            {
                "x":[5, 2, 0],
                "f":"# < 0",
                "result":[]
            }
        ]
    },
    {
        "id": "cgse241267",
        "name": "remove-odd-indices-and-double-the-even-indices",
        "tests": [
            {"x":"abcdef", "result":"bbddff"},
            {"x":"umbrella", "result":"mmrrllaa"},
            {"x":"looooooooong text", "result":"ooooooooooggttxx"},
            {"x":"abc", "result":"bb"},
            {"x":"xkcd", "result":"kkdd"},
            {"x":"Hello, World!", "result":"eell,,WWrrdd"},
            {"x":"D", "result":""},
            {"x":"KK", "result":"KK"},
            {"x":"Hi", "result":"ii"},
            {"x":"odd_length!", "result":"dd__eegghh"},
            {"x":"", "result":""}
        ]
    },
    {
        "id": "cgse64315",
        "name": "separate-a-list-into-even-indexed-and-odd-indexed-parts",
        "tests": [
            {"x":[0, 1, 2, 3, 4], "result":[0, 2, 4, 1, 3]},
            {
                "x":[110, 22, 3330, 4444, 55555, 6],
                "result":[110, 3330, 55555, 22, 4444, 6]
            }
        ],
        "note": "Alternative 7b: ({ % 2)G&.!"
    },
    {
        "id": "cgse146402",
        "name": "count-the-changes-in-an-array",
        "tests": [
            {"x":[],"result":0},
            {"x":[0],"result":0},
            {"x":[0,1],"result":1},
            {"x":[0,0],"result":0},
            {"x":[1,2,3,17],"result":3},
            {"x":[1,1,1,2,2,3],"result":2},
            {"x":[-3,3,3,-3,0],"result":3},
            {"x":[1,1,1,2,2,5,5,5,5,17,3],"result":4}
        ],
        "alternatives": [
            {"bytes":5,     "code": "+\\ 2 ~:\\\\. #"},
            {"bytes":6.5,   "code": "( 2 -\\\\. # ) +@- 0"}
        ]
    },
    {
        "id": "cgse55051",
        "name": "twisting-words",
        "tests": [
            {
                "x":"Programming Puzzles & Code Golf",
                "y":4,
                "result":"Prog\nmmar\ning \nzzuP\nles \noC &\nde G\n flo"
            },
            {
                "x":"Hello, World!",
                "y":5,
                "result":"Hello\nroW ,\nld!  "
            }
        ]
    },
    {
        "id": "cgse63772",
        "name": "determine-the-color-of-a-chess-square",
        "tests": [
            {"x":"b1","result":"light"},
            {"x":"g6","result":"light"},
            {"x":"d4","result":"dark"}
        ]
    },
    {
        "id": "cgse108675",
        "name": "is-this-word-lexically-ordered",
        "tests": [
            {"x":"ABCDEF", "result":true},
            {"x":"ZYX", "result":true},
            {"x":"no", "result":true},
            {"x":"tree", "result":true},
            {"x":"q", "result":true},
            {"x":"ABCDC", "result":false},
            {"x":"yes", "result":false},
            {"x":"deed", "result":false}
        ],
        "note": "Alternative 6b: (# e. #`-@%) /"
    },
    {
        "id": "cgse137632",
        "name": "triangle-a-number",
        "tests": [
            {"x":[0], "result":0},
            {"x":[1], "result":1},
            {"x":[1, 2], "result":4},
            {"x":[1, 2, 3], "result":10},
            {"x":[9, 9, 9], "result":54},
            {"x":[1, 0, 0, 0, 0, 0], "result":6},
            {"x":[6, 5, 4, 3, 2, 1], "result":91}
        ]
    },
    {
        "id": "cgse203893",
        "name": "bl-lu-ur-rr-ry-yv-vi-is-si-io-on-blur-the-text",
        "tests": [
            {"x":"Ab","result":"Ab"},
            {"x":"Abc","result":"Ab bc"},
            {"x":"Abcd","result":"Ab bc cd"},
            {"x":"E?h?","result":"Eh"},
            {"x":"Blurry vision","result":"Bl lu ur rr ry yv vi is si io on"},
            {"x":"We're #1!","result":"We er re e1"},
            {"x":"I'm an example!","result":"Im ma an ne ex xa am mp pl le"},
            {"x":"This is _not_ legible","result":"Th hi is si is sn no ot tl le eg gi ib bl le"},
            {"x":"(a*b*c)+5^-x","result":"ab bc c5 5x"},
            {"x":"??a_%,1!=z#@","result":"a1 1z"}
        ]
    },
    {
        "id": "cgse165793",
        "name": "new-password-idea-word-walker",
        "tests": [
            {"x":"Once Upon A Time","result":"OpAe"},
            {"x":"There was a man","result":"Taaa"},
            {"x":"Who made a task","result":"Waak"},
            {"x":"That was neat!","result":"Taa"},
            {"x":"This is a long string to display how the generator is supposed to work","result":"Tsagnoyotoipto"}
        ],
        "note": "Alternative 12.5b: > {\\\" ! +-@>:@<:H\" /&' ' @."
    },
    {
        "id": "cgse60610",
        "name": "non-unique-duplicate-elements",
        "tests": [
            {"x":[],"result":[]},
            {"x":[-1,0,1],"result":[]},
            {"x":[1,1],"result":[1]},
            {"x":[3,0,0,1,1,0,5,3],"result":[3,0,1]},
            {"x":[-34,0,1,-34,4,8,4],"result":[-34,4]}
        ],
        "note": "Alternative 7b: /#(+\\>1)\"@="
    },
    {
        "id": "cgse253568",
        "name": "alphabet-checksum",
        "tests": [
            {"x":"helloworld", "result":"k"},
            {"x":"abcdef", "result":"p"},
            {"x":"codegolf", "result":"h"},
            {"x":"stackexchange", "result":"e"},
            {"x":"aaaaa", "result":"a"}
        ]
    },
    {
        "id": "cgse255850",
        "name": "8086-segment-address",
        "tests": [
            {"x":"0000:0000", "result":0},
            {"x":"1111:1111", "result":74273},
            {"x":"FFFF:0000", "result":1048560},
            {"x":"FFFF:0010", "result":1048576}
        ]
    },
    {
        "id": "cgse111707",
        "name": "simple-csv-dsv-importer",
        "tests": [
            {
                "x":["here is,some,sample","data,delimited,by commas"],
                "y":",",
                "result":[["here is","some","sample"],["data","delimited","by commas"]]
            },
            {
                "x":["hello;\"","\";world","\";\""],
                "y":";",
                "result":[["hello","\""],["\"","world"],["\"","\""]]
            },
            {
                "x":["to be or not","that is the question"],
                "y":" ",
                "result":[["to","be","or","not"],["that","is","the","question"]]
            }
        ]
    },
    {
        "id": "cgse255822",
        "name": "replace-0s-in-a-string-with-their-consecutive-counts",
        "tests": [
            {"x":"1234500362000440", "result":"1234523623441"},
            {"x":"123450036200044", "result":"123452362344"},
            {"x":"000000000000", "result":"12"},
            {"x":"0123456789", "result":"1123456789"},
            {"x":"1234567890", "result":"1234567891"},
            {"x":"123456789", "result":"123456789"},
            {"x":"010203004050", "result":"11121324151"}
        ],
        "note": "Alternative 11b: >@(('0'&e.{#`+)\" #C)"
    },
    {
        "id": "cgse254224",
        "name": "maximum-average-ord",
        "tests": [
            {"x":["hello","world","bye"], "result":110.4},
            {"x":["code","golf","stack","exchange"], "result":106.8},
            {"x":["!@#","$%^","&*("], "result":55.667},
            {"x":["qwertyuiop[","asdfghjkl;","zxcvbnm,"], "result":110.909}
        ],
        "float_precision": 3
    },
    {
        "id": "cgse252491",
        "name": "generate-parity-bits",
        "tests": [
            {
                "x": [1, 0, 1, 1, 0],
                "y": 1,
                "result": [1, 0, 1, 1, 0, 1]
            },
            {
                "x": [0, 1, 1, 0, 1, 0, 1],
                "y": 2,
                "result": [0, 1, 1, 0, 1, 0, 1, 0, 0]
            },
            {
                "x": [1, 0, 1, 1, 1, 0, 1, 1, 1, 0],
                "y": 3,
                "result": [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1]
            },
            {
                "x": [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1],
                "y": 4,
                "result": [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0]
            }
        ]
    },
    {
        "id": "cgse62713",
        "name": "biplex-an-important-useless-operator",
        "tests": [
            {"x":[1], "result":1},
            {"x":[2], "result":2},
            {"x":[1,2,5], "result":7},
            {"x":[4294967295], "result":4294967295},
            {"x":[2454267026,2863311530,3681400539], "result":3817748707},
            {"x":[2341103945,2969112506,1849078949,1430639189], "result":3}
        ]
    },
    {
        "id": "cgse255650",
        "name": "sum-every-second-digit-in-a-number",
        "tests": [
            {"x":10, "result":0},
            {"x":101011, "result":1},
            {"x":548915381, "result":26},
            {"x":999999, "result":27},
            {"x":2147483647, "result":29},
            {"x":999999999, "result":36}
        ],
        "alternatives": [
            {"bytes":7.5, "code":"+\\@}@^ 10&#: / 2"},
            {"bytes":8.5, "code":"} +\"\\ P @. 10&#: / 2"},
            {"bytes":8.5, "code":"} ( +\"\\@P 10&#: / 2 )"},
            {"bytes":9,   "code":"( +\\ ] *\" + # 0 1 ) 10&#:"},
            {"bytes":9.5, "code":"} ( +\"\\ (10 #: 10&*) / 2"}
        ]
    },
    {
        "id": "cgse250213",
        "name": "generate-an-arbitrary-half-of-a-string",
        "tests": [
            {"x": "aaaabbbb", "result": ["aabb"]},
            {"x": "abab", "result": ["ab", "ba"]},
            {"x": "aabbaa", "result": ["aab", "aba", "baa"]},
            {"x": "aabbaaaa", "result": ["aaba", "abaa", "baaa"]},
            {"x": "baccba", "result": ["acb", "bac", "bca", "cba"]},
            {"x": "aabbcc", "result": ["abc"]},
            {"x": "abcabc", "result": ["abc", "acb", "bac", "bca", "cab"]}
        ],
        "option": true,
        "alternatives": [
            {"bytes":11.5, "code":"# # +\\\"@(# =V #\\.)@/ %\" 2"}
        ]
    },
    {
        "id": "cgse89494",
        "name": "list-of-possible-birth-years-of-living-humans",
        "tests": []
    },
    {
        "id": "cgse253309",
        "name": "triangular-polkadot-numbers",
        "tests": [
            {"x":15, "result":[1, 4, 6, 11, 13, 15, 22, 24, 26, 28, 37, 39, 41, 43, 45]}
        ],
        "alternatives": [
            {"bytes":12, "code":"R ([++)\" R { ^ ! >:@^&2\"@R"}
        ]
    },
    {
        "id": "cgse255804",
        "name": "create-n-sublists-with-the-powers-of-two-1-2-4-8-16",
        "tests": [
            {"x":1, "result":[1]},
            {"x":2, "result":[1, [2]]},
            {"x":3, "result":[1, [2, [4]]]},
            {"x":4, "result":[1, [2, [4, [8]]]]},
            {"x":5, "result":[1, [2, [4, [8, [16]]]]]},
            {"x":6, "result":[1, [2, [4, [8, [16, [32]]]]]]},
            {"x":7, "result":[1, [2, [4, [8, [16, [32, [64]]]]]]]}
        ],
        "alternatives": [
            {"bytes":13,    "code": "([ 2 ^ <:) (({ / 2) , #)^:# <:"},
            {"bytes":14,    "code": "(;2^<:) (({/2),#)^:# <:"},
            {"bytes":14.5,  "code": "( (;2&^) (({/2),#)^:# # ) <:"},
            {"bytes":15,    "code": "(;2^<:) ((}@-/2),#)^:# <:"},
            {"bytes":16,    "code": "({ , $:@>:) # (+>1)?\n$^ 2 ^\" R"}
        ]
    },
    {
        "id": "cgse199139",
        "name": "write-some-random-english",
        "tests": [],
        "alternatives": [
            {"bytes": 10,   "code": "> ?.\" @. R { con`vow"},
            {"bytes": 12.5, "code": "> ?.\" @. #&1 0 { vow,con"}
        ]
    },
    {
        "id": "cgse198717",
        "name": "repeat-every-other-character-in-string-starting-with-second-character",
        "tests": [
            {"x":"abcde", "result":"abbcdde"},
            {"x":"za", "result":"zaa"},
            {"x":"f", "result":"f"}
        ],
        "alternatives": [
            {"bytes": 5.5,  "code": "} 2 % 3 ! #"}
        ]
    },
    {
        "id": "cgse256166",
        "name": "is-it-true-ask-pip",
        "tests": [
            {"x":"", "result":false},
            {"x":"0", "result":false},
            {"x":"000", "result":false},
            {"x":".0", "result":false},
            {"x":".00", "result":false},
            {"x":"0.", "result":false},
            {"x":"00.", "result":false},
            {"x":"0.00", "result":false},
            {"x":"0000000000000.00000000000000", "result":false},
            {"x":"a", "result":true},
            {"x":"0001", "result":true},
            {"x":"0x00", "result":true},
            {"x":" 0", "result":true},
            {"x":"0 ", "result":true},
            {"x":"+0", "result":true},
            {"x":"-0", "result":true},
            {"x":".", "result":true},
            {"x":"0.0.0", "result":true}
        ],
        "decision": true,
        "inverted": true,
        "alternatives": [
            {"bytes":10, "inverted":false, "code":"=&'.' >. -&'0' } '.'"},
            {"bytes":10, "inverted":true,  "code":"'.'&~: * '.' ).. -&'0'"},
            {"bytes":11, "inverted":true,  "code":"'.'&~: <. '.' ).. -&'0'"}
        ]
    },
    {
        "id": "cgse120925",
        "name": "whats-the-file-extension",
        "tests": [
            {"x":"hi.txt", "result": ["txt", ".txt"]},
            {"x":"carrot.meme", "result": ["meme", ".meme"]},
            {"x":"what..is..this..file", "result": ["file", ".file"]},
            {"x":".bashrc", "result": ["bashrc", ".bashrc"]},
            {"x":"T00M@n3KaPZ.h0wC[]h", "result": ["h0wC[]h", ".h0wC[]h"]},
            {"x":"agent.000", "result": ["000", ".000"]}
        ],
        "option": true
    },
    {
        "id": "cgse256147",
        "name": "find-the-prime-signature",
        "tests": [
            {"x":1, "result":[]},
            {"x":2, "result":[1]},
            {"x":3, "result":[1]},
            {"x":5, "result":[1]},
            {"x":7, "result":[1]},
            {"x":11, "result":[1]},
            {"x":4, "result":[2]},
            {"x":9, "result":[2]},
            {"x":25, "result":[2]},
            {"x":49, "result":[2]},
            {"x":121, "result":[2]},
            {"x":6, "result":[1, 1]},
            {"x":10, "result":[1, 1]},
            {"x":14, "result":[1, 1]},
            {"x":15, "result":[1, 1]},
            {"x":21, "result":[1, 1]},
            {"x":8, "result":[3]},
            {"x":27, "result":[3]},
            {"x":125, "result":[3]},
            {"x":343, "result":[3]},
            {"x":12, "result":[2, 1]},
            {"x":18, "result":[2, 1]},
            {"x":20, "result":[2, 1]},
            {"x":28, "result":[2, 1]},
            {"x":16, "result":[4]},
            {"x":81, "result":[4]},
            {"x":625, "result":[4]},
            {"x":2401, "result":[4]},
            {"x":24, "result":[3, 1]},
            {"x":40, "result":[3, 1]},
            {"x":54, "result":[3, 1]},
            {"x":56, "result":[3, 1]},
            {"x":30, "result":[1, 1, 1]},
            {"x":42, "result":[1, 1, 1]},
            {"x":66, "result":[1, 1, 1]},
            {"x":70, "result":[1, 1, 1]},
            {"x":32, "result":[5]},
            {"x":243, "result":[5]},
            {"x":3125, "result":[5]},
            {"x":36, "result":[2, 2]},
            {"x":100, "result":[2, 2]},
            {"x":196, "result":[2, 2]},
            {"x":225, "result":[2, 2]},
            {"x":12345, "result":[1, 1, 1]},
            {"x":123456, "result":[6, 1, 1]},
            {"x":1234567, "result":[1, 1]},
            {"x":5174928, "result":[5, 4, 3]},
            {"x":8388608, "result":[23]},
            {"x":9999991, "result":[1]}
        ]
    },
    {
        "id": "cgse198884",
        "name": "calculate-the-progressive-mean",
        "tests": [
            {"x":[1,2,3], "result": [2.0, 2.25, 0.25]},
            {"x":[3, 2, 1], "result": [2.0, 1.75, -0.25]},
            {"x":[10, 20, 30], "result": [20.0, 22.5, 2.5]},
            {"x":[300, 200, 100], "result": [200.0, 175.0, -25.0]},
            {"x":[10, 100, 10], "result": [40.0, 32.5, -7.5]},
            {"x":[4, 4, 9, 8, 1, 8, 6, 9, 1, 1], "result": [5.1, 2.62890625, -2.4710937499999996]},
            {"x":[1, 1, 1, 4, 4, 6, 8, 8, 9, 9], "result": [5.1, 8.5390625, 3.4390625000000004]},
            {"x":[9, 9, 8, 8, 6, 4, 4, 1, 1, 1], "result": [5.1, 1.47265625, -3.6273437499999996]}
        ],
        "float_precision": 3,
        "unordered": true
    },
    {
        "id": "cgse124242",
        "name": "what-do-you-get-when-you-multiply-6-by-9-42",
        "tests": [
            {"x":6, "y":8, "result":48},
            {"x":6, "y":9, "result":42},
            {"x":9, "y":6, "result":54},
            {"x":9, "y":5, "result":45},
            {"x":6, "y":10, "result":60},
            {"x":3, "y":0, "result":0},
            {"x":5, "y":5, "result":25}
        ],
        "alternatives": [
            {"bytes":9.5,   "code":"(6 9 = ,) { * , 42"},
            {"bytes":9.5,   "code":"42 * (6 9 = ,) ?"},
            {"bytes":10.5,  "code":"(6 9 = ,) { * -\" 0 12"}
        ]
    },
    {
        "id": "cgse71172",
        "name": "find-the-largest-and-the-smallest-number-in-an-array",
        "tests": [
            {"x":[1, 2, 3, 4, 5, 6, 7, 8], "result":[1, 8]},
            {"x":[5, 4, 2, 9, 1, 10, 5], "result":[1, 10]},
            {"x":[7, 8, 10, "Hello", 5, 5], "result":[5, 10]},
            {"x":[1, 2, 3, 4, "5"], "result":[1, 4]},
            {"x":[1], "result":[1, 1]},
            {"x":["1", "2", "3", "4", 5], "result":[5, 5]}
        ],
        "unordered": true,
        "alternatives": [
            {"bytes":6.5,   "code":"minmax ~:<H`:\\"}
        ]
    },
    {
        "id": "cgse115516",
        "name": "is-this-number-an-integer-power-of-2",
        "tests": [
            {"x":-2, "result":true},
            {"x":-1, "result":false},
            {"x":0, "result":false},
            {"x":1, "result":true},
            {"x":2, "result":false},
            {"x":3, "result":false},
            {"x":4, "result":true}
        ],
        "decision": true,
        "alternatives": [
            {"bytes":5.5,   "code":"# e. _2 ^\" R@+"},
            {"bytes":6.5,   "code":"1 = ( +\\ _2&#: )"}
        ]
    },
    {
        "id": "cgse117879",
        "name": "number-triangle-flip",
        "tests": [
            {"x":1, "result":1},
            {"x":2, "result":3},
            {"x":3, "result":2},
            {"x":4, "result":6},
            {"x":14, "result":12},
            {"x":990, "result":947},
            {"x":991, "result":1035}
        ],
        "extra_tests": [
            {"x":1000, "result":1026},
            {"x":1035, "result":991},
            {"x":1036, "result":1081},
            {"x":12345, "result":12305}
        ],
        "alternatives": [
            {"bytes":7,     "code":"(* ^ -\"@P ^\"@^) R #"},
            {"bytes":8.5,   "code":"(* ^ -\"@P ^\"@^) >:@^ #"},
            {"bytes":8.5,   "code":"(* 1 + ^ -\"@P ^\"@^) ^ #"},
            {"bytes":9.5,   "code":"1 + (* ^ -\"@P ^\"@^) ^ #"}
        ]
    },
    {
        "id": "cgse255765",
        "name": "replace-all-vowels-with-repeated-aeiou",
        "tests": [
            {
                "x":     "Code Golf! I love Code Golf. It is the best.",
                "result":"Cade Gilf! O luva Cedi Golf. Ut as the bist."
            },
            {
                "x":     "This is a test! This is example number two.",
                "result":"Thas es i tost! Thus as eximplo numbar twe."
            }
        ]
    },
    {
        "id": "cgse122703",
        "name": "print-invisible-text",
        "tests": [
            {"x":"Hello, World!", "result":"             "},
            {"x":"Hi", "result": "  "},
            {
                "x":"   Don't\nForget about\nExisting\nWhitespace!   ",
                "result": "                                             "
            },
            {"x":"", "result":""},
            {"x":"             ", "result":"             "},
            {"x":"\n", "result":" "}
        ]
    },
    {
        "id": "cgse95780",
        "name": "draw-an-asterisk-triangle",
        "tests": [
            {"x":1, "result":"*"},
            {"x":2, "result":"*\n**"},
            {"x":5, "result":"*\n**\n***\n****\n*****"}
        ],
        "alternatives": [
            {"bytes":6.5, "code":"lf * ( #\\. '*'&* )"}
        ]
    },
    {
        "id": "cgse144816",
        "name": "given-an-int-input-n-print-out-nreversedn",
        "tests": [
            {"x":5, "result":25},
            {"x":12, "result":252},
            {"x":11, "result":121},
            {"x":659, "result":630004}
        ]
    },
    {
        "id": "dcmc000001",
        "name": "increment-away-from-zero",
        "tests": [
            {"x":0, "result":[1, -1]},
            {"x":1, "result":[2]},
            {"x":2, "result":[3]},
            {"x":9932842, "result":[9932843]},
            {"x":-1, "result":[-2]},
            {"x":-2, "result":[-3]},
            {"x":-8262922, "result":[-8262923]}
        ],
        "option": true
    },
    {
        "id": "dcmc000002",
        "name": "abbreviate-a-username",
        "tests": [
            {"x":"AdmBorkBork", "result":"Ad...rk"},
            {"x":"Quintec", "result":"Qu...ec"},
            {"x":"Mego", "result":"Me...go"},
            {"x":"n_n", "result":"n_..._n"},
            {"x":"$1.35", "result":"$1...35"},
            {"x":" z", "result":" z... z"},
            {"x":"hallelujah", "result":"ha...ah"}
        ]
    },
    {
        "id": "dcmc000003",
        "name": "ultrafactorial",
        "tests": [
            {"x":0, "result":1},
            {"x":1, "result":1},
            {"x":2, "result":4},
            {"x":3, "result":46656}
        ],
        "note": [
            "Test case omitted due to being large:",
            {"x":4, "result":1333735776850284124449081472843776}
        ]
    },
    {
        "id": "dcmc000004",
        "name": "enumerate-semiprimes",
        "tests": [
            {"x":0, "result":[]},
            {"x":4, "result":[]},
            {"x":5, "result":[4]},
            {"x":20, "result":[4, 6, 9, 10, 14, 15]},
            {"x":200, "result":[4, 6, 9, 10, 14, 15, 21, 22, 25, 26, 33, 34, 35, 38, 39, 46, 49, 51, 55, 57, 58, 62, 65, 69, 74, 77, 82, 85, 86, 87, 91, 93, 94, 95, 106, 111, 115, 118, 119, 121, 122, 123, 129, 133, 134, 141, 142, 143, 145, 146, 155, 158, 159, 161, 166, 169, 177, 178, 183, 185, 187, 194]}
        ]
    }
]